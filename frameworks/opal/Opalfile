# Custom build action
build_process = proc {
  puts "running the build process!"
  File.open(js_build_path, 'w') do |out|
    # pre
    out.puts "var opal = {};"
    out.puts "(function(global, exports) {"
    
    # runtime
    out.puts read_file("runtime/opal.js")
    
    # post
    out.puts "})(window, opal);"
    
    # core library - use all ruby sources in core dir but ensure kernel and 
    # module and first in line as most other things rely on them
    rb_sources = [file('lib/kernel.rb'), file('lib/module.rb')]
    rb_sources.concat(Dir.glob(File.join(framework_root, 'lib/**/*.rb'))).uniq!
    
    rb_sources.each do |rb|
      builder = Vienna::CherryKit::RubyBuilder.new(rb, nil, nil)
      out.puts "// #{rb}"
      out.puts "#{builder.build!}.apply(opal.top_self);"
    end
  end
}


config :all,
  
  :build_process => proc {
    puts "doing output"
    sources.unshift file('lib/kernel.rb')
    sources.unshift file('lib/module.rb')
    sources.uniq!
    
    # executable_file.puts
  },
  
  :build_ruby => proc {
    Vienna::CherryKit::RubyBuilder.build entry, dst_path
  },
  # default is just the normal "lib" folder
  :sources => ['lib/**/*.rb']

config :spec,
  # we require the spec lib also
  :require => 'spec',
  # we want our default lib folder, plus all the specs in spec folder
  :sources => ['lib/**/*.rb', 'spec/**/*.rb'],
  
  :wow => proc {
    
  },
  
  :tom => 100,
  
  :tommy => proc {
    
  }
