rb_define_method(rb_cObject,'CGContextSaveGState',function(self,_,ctx){
});
rb_define_method(rb_cObject,'CGContextRestoreGState',function(self,_,ctx){
});
rb_define_method(rb_cObject,'CGContextScaleCTM',function(self,_,ctx,sx,sy){
});
rb_define_method(rb_cObject,'CGContextTranslateCTM',function(self,_,ctx,sy,sy){
});
rb_define_method(rb_cObject,'CGContextRotateCTM',function(self,_,ctx,angle){
});
rb_define_method(rb_cObject,'CGContextConcatCTM',function(self,_,ctx,transform){
});
rb_define_method(rb_cObject,'CGContextGetCTM',function(self,_,ctx){
});
rb_define_method(rb_cObject,'CGContextSetLineWidth',function(self,_,ctx,width){
});
rb_define_method(rb_cObject,'CGContextSetLineCap',function(self,_,ctx,cap){
});
rb_define_method(rb_cObject,'CGContextSetLineJoin',function(self,_,ctx,join){
});
rb_define_method(rb_cObject,'CGContextSetMiterLimit',function(self,_,ctx,limit){
});
rb_define_method(rb_cObject,'CGContextSetLineDash',function(self,_,ctx,phase){
});
rb_define_method(rb_cObject,'CGContextSetFlatness',function(self,_,ctx,flatness){
});
rb_define_method(rb_cObject,'CGContextSetAlpha',function(self,_,ctx,alpha){
});
rb_define_method(rb_cObject,'CGContextSetBlendMode',function(self,_,ctx,mode){
});
rb_define_method(rb_cObject,'CGContextBeginPath',function(self,_,ctx){
});
rb_define_method(rb_cObject,'CGContextMoveToPoint',function(self,_,ctx,x,y){
});
rb_define_method(rb_cObject,'CGContextAddLineToPoint',function(self,_,ctx,x,y){
});
rb_define_method(rb_cObject,'CGContextAddCurveToPoint',function(self,_,ctx,cp1x,cp1y,cp2x,cp2y,x,y){
});
rb_define_method(rb_cObject,'CGContextAddQuadCurveToPoint',function(self,_,ctx,cpx,cpy,x,y){
});
rb_define_method(rb_cObject,'CGContextClosePath',function(self,_,ctx){
});
rb_define_method(rb_cObject,'CGContextAddRect',function(self,_,ctx,rect){
});
rb_define_method(rb_cObject,'CGContextAddRects',function(self,_,ctx,rects){
});
rb_define_method(rb_cObject,'CGContextAddLines',function(self,_,ctx,points){
});
rb_define_method(rb_cObject,'CGContextAddEllipseInRect',function(self,_,ctx,rect){
});
rb_define_method(rb_cObject,'CGContextAddArc',function(self,_,ctx,x,y,radius,start_angle,end_angle,clockwise){
});
rb_define_method(rb_cObject,'CGContextAddArcToPoint',function(self,_,c,x1,y1,x2,y2,radius){
});
rb_define_method(rb_cObject,'CGContextAddPath',function(self,_,ctx,path){
});
rb_define_method(rb_cObject,'CGContextReplacePathWithStrokedPath',function(self,_,ctx){
});
rb_define_method(rb_cObject,'CGContextIsPathEmpty',function(self,_,context){
});
rb_define_method(rb_cObject,'CGContextGetPathCurrentPoint',function(self,_,context){
});
rb_define_method(rb_cObject,'CGContextGetPathBoundingBox',function(self,_,ctx){
});
rb_define_method(rb_cObject,'CGContextSetFillColor',function(self,_,ctx,color){
ctx.fillStyle = rb_funcall(color,'rgb_string');});
rb_define_method(rb_cObject,'CGContextSetStrokeColor',function(self,_,ctx,color){
ctx.strokeStyle = rb_funcall(color,'rgb_string');});
