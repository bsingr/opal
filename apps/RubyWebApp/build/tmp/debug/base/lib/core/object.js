
VN.cBasicObjectAlloc=function(self,_cmd){var obj=new RObject(self,VN.OBJECT);return obj;};cBasicObject.$define_alloc_func(VN.cBasicObjectAlloc);cBasicObject.$def_s('alloc',VN.cBasicObjectAlloc);cBasicObject.$def('==',function(self,_cmd,obj){return(self==obj)?true:false;});cBasicObject.$def('equal?',function(self,_cmd,obj){return(self==obj)?true:false;});cBasicObject.$def('!',function(self,_cmd,obj){});cBasicObject.$def('!=',function(self,_cmd,obj){return(self==obj)?false:true;});cBasicObject.$define_private_method('singleton_method_added',function(){return nil;});cBasicObject.$define_private_method('singleton_method_removed',function(){return nil;});cBasicObject.$define_private_method('singleton_method_undefined',function(){return nil;});cBasicObject.$def('puts',function(self,_cmd,val){console.log(val);});cBasicObject.$def('===',function(self,_cmd,other){return self==other;});cBasicObject.$def('class',function(self,_cmd){return RClass.real(self.$klass);});cBasicObject.$def('respond_to?',function(self,_cmd,selector){var method_name=rb_funcall(selector,'to_s');var method=self.$klass.$search_method(method_name);if(!method)return false;return true});cBasicObject.$def('instance_of?',function(self,_cmd,klass){return self.$klass==klass?true:false;});cBasicObject.$def('kind_of?',function(self,_cmd,klass){return self.$klass==klass?true:false;});cBasicObject.$def('is_a?',function(self,_cmd,klass){return self.$klass==klass?true:false;});mKernel=RModule.define("Kernel");RModule.include(cObject,mKernel);cClass.$define_private_method('inherited',function(){return nil;});cModule.$define_private_method('included',function(){return nil;});cModule.$define_private_method('extended',function(){return nil;});cModule.$define_private_method('method_added',function(){return nil;});cModule.$define_private_method('method_removed',function(){return nil;});cModule.$define_private_method('method_undefined',function(){return nil;});var cNilClass=RClass.define('NilClass',cObject);var cBoolean=RClass.define('Boolean',cObject);var cArray=RClass.define('Array',cObject);var cString=RClass.define('String',cObject);var rb_cSymbol=RClass.define('Symbol',cObject);var cNumber=RClass.define('Number',cObject);var cProc=RClass.define('Proc',cObject);var cRange=RClass.define('Range',cObject);