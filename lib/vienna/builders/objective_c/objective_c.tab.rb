#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.6
# from Racc grammer file "".
#

require 'racc/parser.rb'

# stuff that will come before the definition of ObjectiveCParser
require 'strscan'
module Vienna
  class ObjectiveCParser < Racc::Parser

module_eval(<<'...end objective_c.rb.y/module_eval...', 'objective_c.rb.y', 663)
	# inside the class definition of ObjectiveCParser
	
	attr_reader :result
	
	def next_token
	  
	  scanner = current_scanner()
	  return [false, false] if scanner.nil?
	  
	  case
      #
      # Pre-processor macros
      #
      when scanner.scan(/(#include|#import)/)
        pp_directive = scanner.scan_until(/.*/).strip!
        re = /[\<|\"](.*)\/(.*\.h)[\>|\"]/
        md = re.match(pp_directive)
        if md
          import_file(md[2], md[1])
        else
          re = /\"(.*\.h)\"/
          md = re.match(pp_directive)
          if md
            import_file(md[1], nil)
          else
            puts "Should throw error: malformed import declaration"
          end
        end
        return next_token()
      
      when scanner.scan(/#define/)
        pp_directive = scanner.scan_until(/.*/).strip!
        # puts " # Define Directive: #{pp_directive}"
        return next_token()
        
      when scanner.scan(/#undef/)
        pp_directive = scanner.scan_until(/.*/).strip!
        # puts " # Undef Directive: #{pp_directive}" 
      
      when scanner.scan(/\n/)
        @parsing_stack.last.current_line += 1
        return next_token()
      when scanner.scan(/[ \t\v\f]/)
        return next_token()
      when scanner.scan(/[\t ]+/)
        return next_token()
        
      #
      # Plain good old C key words
      #
      when scanner.scan(/\/\*/)
        # multi-line comment. scan input until end of multi line comment is found
        match = scanner.scan_until(/\*\//)
        @parsing_stack.last.current_line += match.scan(/\n/).size
        return next_token()
      when scanner.scan(/\/\//)
        #single line comment. scan all input (does not include new line char, so skips)
        scanner.scan_until(/.*/)
        return next_token()
      when scanner.scan(/auto(?!([a-zA-Z_]|[0-9]))/)
        return make_token(:AUTO, :AUTO)
      when scanner.scan(/break(?!([a-zA-Z_]|[0-9]))/)
        return make_token(:BREAK, :BREAK)
      when scanner.scan(/case(?!([a-zA-Z_]|[0-9]))/)
        return make_token(:CASE, :CASE)
      when scanner.scan(/char(?!([a-zA-Z_]|[0-9]))/)
        return make_token(:CHAR, "char")
      when scanner.scan(/const(?!([a-zA-Z_]|[0-9]))/)
        return make_token(:CONST, :CONST)
      when scanner.scan(/continue(?!([a-zA-Z_]|[0-9]))/)
        return make_token(:CONTINUE, :CONTINUE)
      when scanner.scan(/default(?!([a-zA-Z_]|[0-9]))/)
        return make_token(:DEFAULT, :DEFAULT)
      when scanner.scan(/do(?!([a-zA-Z_]|[0-9]))/)
        return make_token(:DO, :DO)
      when scanner.scan(/double(?!([a-zA-Z_]|[0-9]))/)
        return make_token(:DOUBLE, :DOUBLE)
      when scanner.scan(/else(?!([a-zA-Z_]|[0-9]))/)
        return make_token(:ELSE, :ELSE)
      when scanner.scan(/enum(?!([a-zA-Z_]|[0-9]))/)
        return make_token(:ENUM, :ENUM)
      when scanner.scan(/extern(?!([a-zA-Z_]|[0-9]))/)
        return make_token(:EXTERN, :EXTERN)
      when scanner.scan(/float(?!([a-zA-Z_]|[0-9]))/)
        return make_token(:FLOAT, "float")
      when scanner.scan(/for(?!([a-zA-Z_]|[0-9]))/)
        return make_token(:FOR, :FOR)
      when scanner.scan(/goto(?!([a-zA-Z_]|[0-9]))/)
        return make_token(:GOTO, :GOTO)
      when scanner.scan(/if(?!([a-zA-Z_]|[0-9]))/)
        return make_token(:IF, :IF)
      when scanner.scan(/int(?!([a-zA-Z_]|[0-9]))/)
	      return make_token(:INT, "int")
      when scanner.scan(/long(?!([a-zA-Z_]|[0-9]))/)
        return make_token(:LONG, :LONG)
      when scanner.scan(/register(?!([a-zA-Z_]|[0-9]))/)
        return make_token(:REGISTER, :REGISTER)
      when scanner.scan(/return(?!([a-zA-Z_]|[0-9]))/)
        return make_token(:RETURN, :RETURN)
      when scanner.scan(/short(?!([a-zA-Z_]|[0-9]))/)
        return make_token(:SHORT, :SHORT)
      when scanner.scan(/signed(?!([a-zA-Z_]|[0-9]))/)
        return make_token(:SIGNED, :SIGNED)
      when scanner.scan(/sizeof(?!([a-zA-Z_]|[0-9]))/)
        return make_token(:SIZEOF, :SIZEOF)
      when scanner.scan(/static(?!([a-zA-Z_]|[0-9]))/)
        return make_token(:STATIC, :STATIC)
      when scanner.scan(/struct(?!([a-zA-Z_]|[0-9]))/)
        return make_token(:STRUCT, :STRUCT)
      when scanner.scan(/switch(?!([a-zA-Z_]|[0-9]))/)
        return make_token(:SWITCH, :SWITCH)
      when scanner.scan(/typedef(?!([a-zA-Z_]|[0-9]))/)
        return make_token(:TYPEDEF, :TYPEDEF)
      when scanner.scan(/union(?!([a-zA-Z_]|[0-9]))/)
        return make_token(:UNION, :UNION)
      when scanner.scan(/unsigned(?!([a-zA-Z_]|[0-9]))/)
        return make_token(:UNSIGNED, :UNSIGNED)
      when scanner.scan(/void(?!([a-zA-Z_]|[0-9]))/)
        return make_token(:VOID, :VOID)
      when scanner.scan(/volatile(?!([a-zA-Z_]|[0-9]))/)
        return make_token(:VOLATILE, :VOLATILE)
      when scanner.scan(/while(?!([a-zA-Z_]|[0-9]))/)
        return make_token(:WHILE, :WHILE)
        
      #  
      # Objective-C 1.0
      # 
      when scanner.scan(/@interface/)
        return make_token(:AT_INTERFACE, :AT_INTERFACE)
      when scanner.scan(/@implementation/)
        return make_token(:AT_IMPLEMENTATION, :AT_IMPLEMENTATION)
      when scanner.scan(/@end/)
        return make_token(:AT_END, :AT_END)
      when scanner.scan(/@class/)
        return make_token(:AT_CLASS, :AT_CLASS)
      when scanner.scan(/@protocol/)
        return make_token(:AT_PROTOCOL, :AT_PROTOCOL)
      when scanner.scan(/@selector/)
        return make_token(:AT_SELECTOR, :AT_SELECTOR)
      when scanner.scan(/@encode/)
        return make_token(:AT_ENCODE, :AT_ENCODE)
      when scanner.scan(/@try/)
        return make_token(:AT_TRY, :AT_TRY)
      when scanner.scan(/@catch/)
        return make_token(:AT_CATCH, :AT_CATCH)
      when scanner.scan(/@protected/)
        return make_token(:AT_PROTECTED, :AT_PROTECTED)
      when scanner.scan(/@private/)
        return make_token(:AT_PRIVATE, :AT_PRIVATE)
      when scanner.scan(/@public/)
        return make_token(:AT_PUBLIC, :AT_PUBLIC)

      when match = scanner.scan(/@\"(\\.|[^\\"])*\"/)
        return make_token(:AT_STRING_LITERAL, match)
      
      # when scanner.scan(/self/)
      #         return make_token(:IDENTIFIER, "self")
        # return make_token(:IDENTIFIER, "self"]
           
      #
      # Objective-C 2.0
      #
      when scanner.scan(/@property/)
        return make_token(:AT_PROPERTY, :AT_PROPERTY)
      when scanner.scan(/@synthesize/)
        return make_token(:AT_SYNTHESIZE, :AT_SYNTHESIZE)
      when scanner.scan(/@optional/)
        return make_token(:AT_OPTIONAL, :AT_OPTIONAL)
      when scanner.scan(/@required/)
        return make_token(:AT_REQUIRED, :AT_REQUIRED)
      
      #
      # C constants, identifiers and string literals
      #
      when match = scanner.scan(/[a-zA-Z_]([a-zA-Z_]|[0-9])*/)
        return (lookup_type(match) == nil) ? make_token(:IDENTIFIER, match) : make_token(:TYPE_NAME, match)
      when match = scanner.scan(/[a-zA-Z_]([a-zA-Z_])*/)
        return (lookup_type(match) == nil) ? make_token(:IDENTIFIER, match) : make_token(:TYPE_NAME, match)
      when match = scanner.scan(/0[xX][a-fA-F0-9]+(u|U|l|L)?/)
        return make_token(:CONSTANT, match)
      when match = scanner.scan(/0[0-9]+(u|U|l|L)?/)
        return make_token(:CONSTANT, match)
      when match = scanner.scan(/[0-9]+(u|U|l|L)?/) # {D}+{IS}?
        return make_token(:CONSTANT, match)
      #when match = scanner.scan(//) # L?'(\\.|[^\\'])+'
      #  return make_token(:CONSTANT, match]
      #when match = scanner.scan(//) # {D}+{E}{FS}?
      #  return make_token(:CONSTANT, match]
      #when match = scanner.scan(//) # {D}*"."{D}+({E})?{FS}?
      #  return make_token(:CONSTANT, match]
      #when match = scanner.scan(//) # {D}+"."{D}*({E})?{FS}?
      #  return make_token(:CONSTANT, match]
      #when match = scanner.scan(//) # L?\"(\\.|[^\\"])*\"
      #  return make_token(:STRING_LITERAL, match]
      
      #
      # C operators, assignments and other syntactical bits and pieces
      #  
      when scanner.scan(/\.\.\./)
       return make_token(:ELLIPSIS, :ELLIPSES)
      when scanner.scan(/>>=/)
       return make_token(:RIGHT_ASSIGN, :RIGHT_ASSIGN)
      when scanner.scan(/<<=/)
       return make_token(:LEFT_ASSIGN, :LEFT_ASSIGN)
      when scanner.scan(/\+=/)
       return make_token(:ADD_ASSIGN, :ADD_ASSIGN)
      when scanner.scan(/-=/)
       return make_token(:SUB_ASSIGN, :SUB_ASSIGN)
      when scanner.scan(/\*=/)
       return make_token(:MUL_ASSIGN, :MUL_ASSIGN)
      when scanner.scan(/\/=/)
       return make_token(:DIV_ASSIGN, :DIV_ASSIGN)
      when scanner.scan(/%=/)
       return make_token(:MOD_ASSIGN, :MOD_ASSIGN)
      when scanner.scan(/&=/)
       return make_token(:AND_ASSIGN, :AND_ASSIGN)
      when scanner.scan(/\^=/)
       return make_token(:XOR_ASSIGN, :XOR_ASSIGN)
      when scanner.scan(/\|=/)
       return make_token(:OR_ASSIGN, :OR_ASSIGN)
      when scanner.scan(/>>/)
       return make_token(:RIGHT_OP, :RIGHT_OP)
      when scanner.scan(/<</)
       return make_token(:LEFT_OP, :LEFT_OP)
      when scanner.scan(/\+\+/)
       return make_token(:INC_OP, :INC_OP)
      when scanner.scan(/--/)
       return make_token(:DEC_OP, :DEC_OP)
      when scanner.scan(/->/)
       return make_token(:PTR_OP, :PTR_OP)
      when scanner.scan(/&&/)
       return make_token(:AND_OP, :AND_OP)
      when scanner.scan(/\|\|/)
       return make_token(:OR_OP, :OR_OP)
      when scanner.scan(/<=/)
       return make_token(:LE_OP, :LE_OP)
      when scanner.scan(/>=/)
       return make_token(:GE_OP, :GE_OP)
      when scanner.scan(/\=\=/)
       return make_token(:EQ_OP, :EQ_OP)
      when scanner.scan(/\!\=/)
       return make_token(:NE_OP, :NE_OP)
      when scanner.scan(/;/)
        return make_token(';', ';')
      when scanner.scan(/\{/)
        return make_token('{', '{')
      when scanner.scan(/\}/)
        return make_token('}', '}')
      when scanner.scan(/,/)
        return make_token(',', ',')
      when scanner.scan(/:/)
        return make_token(':', ':')
      when scanner.scan(/\=/)
        return make_token('=', '=')   
      when scanner.scan(/\(/)
        return make_token('(', '(')
      when scanner.scan(/\)/)
        return make_token(')', ')')
      when scanner.scan(/\[/)
        return make_token('[', '[')
      when scanner.scan(/\]/)
        return make_token(']', ']')
      when scanner.scan(/\./)
        return make_token('.', '.')
      when scanner.scan(/\&/)
        return make_token('&', '&')
      when scanner.scan(/\!/)
        return make_token('!', '!')
      when scanner.scan(/\~/)
        return make_token('~', '~')
      when scanner.scan(/\-/)
        return make_token('-', '-')
      when scanner.scan(/\+/)
        return make_token('+', '+')
      when scanner.scan(/\*/)
        return make_token('*', '*')
      when scanner.scan(/\//)
        return make_token('/', '/')
      when scanner.scan(/\%/)
        return make_token('%', '%')
      when scanner.scan(/\</)
        return make_token('<', '<')
      when scanner.scan(/\>/)
        return make_token('>', '>')
      when scanner.scan(/\^/)
        return make_token('^', '^')
      when scanner.scan(/\|/)
        return make_token('|', '|')
      when scanner.scan(/\?/)
        return make_token('?', '?')
      
      else
        puts "Error: unkown token: #{scanner.peek(5)}"
      
      #when scanner.scan(/.*/)
	      #puts "wow"
	      # throw error: bad character
    end
	end
  
...end objective_c.rb.y/module_eval...
##### State transition tables begin ###

clist = [
'191,56,37,56,37,455,176,56,183,56,366,156,158,161,164,168,171,109,112',
'394,355,153,56,56,162,165,169,58,175,58,180,148,104,58,367,58,344,109',
'112,85,402,444,403,367,294,109,112,475,58,58,44,4,11,4,11,56,56,27,31',
'34,39,45,48,49,2,4,11,19,25,29,33,346,347,336,337,338,339,340,341,342',
'343,58,58,222,278,41,280,101,298,299,56,43,47,43,47,37,182,150,225,56',
'102,470,24,24,106,43,47,56,151,5,13,18,26,30,506,352,58,414,56,109,112',
'176,108,183,106,58,156,158,161,164,168,171,106,58,110,113,153,413,360',
'162,165,169,44,175,58,180,148,469,52,27,31,34,39,45,48,49,2,4,11,19',
'25,29,33,69,303,44,306,480,302,109,112,53,27,31,34,39,45,48,49,2,4,11',
'19,25,29,33,70,304,305,301,436,355,543,500,60,549,249,43,47,41,41,5',
'13,18,26,30,106,287,110,113,37,182,150,498,247,543,500,24,24,481,43',
'47,491,151,5,13,18,26,30,191,85,219,355,310,482,176,498,183,489,287',
'156,158,161,164,168,171,245,487,218,311,153,488,465,202,165,169,106',
'175,44,180,148,468,283,284,360,27,31,34,39,45,48,49,2,4,11,19,25,29',
'33,44,457,283,284,355,109,112,27,31,34,39,45,48,49,2,4,11,19,25,29,33',
'355,213,215,186,502,190,192,193,196,199,201,203,204,43,47,292,289,5',
'13,18,26,30,318,319,320,182,150,197,200,464,290,291,292,289,43,47,483',
'151,5,13,18,26,30,191,85,120,60,290,291,176,466,183,41,360,156,158,161',
'164,168,171,459,262,37,222,153,41,130,202,165,169,24,175,124,180,148',
'37,104,472,499,500,292,289,355,24,501,133,548,109,112,109,112,467,486',
'44,360,290,291,109,112,498,27,31,34,39,45,48,49,2,4,11,19,25,29,33,451',
'213,215,186,41,190,192,193,196,199,201,203,204,41,37,499,500,80,138',
'81,355,496,24,37,503,182,150,197,200,355,402,24,403,547,43,47,498,151',
'5,13,18,26,30,191,85,354,283,284,355,176,393,183,123,444,156,158,161',
'164,168,171,267,124,355,124,153,226,504,202,165,169,106,175,552,180',
'148,360,278,222,280,41,297,281,280,298,299,282,37,109,112,37,37,355',
'355,44,24,550,437,24,109,112,27,31,34,39,45,48,49,2,4,11,19,25,29,33',
'428,213,215,186,300,190,192,193,196,199,201,203,204,115,463,484,116',
'360,485,134,359,307,135,360,308,182,150,197,200,80,297,81,280,424,43',
'47,309,151,5,13,18,26,30,191,85,318,319,320,241,176,129,183,321,322',
'156,158,161,164,168,171,106,259,110,113,153,321,322,202,165,169,114',
'175,124,180,148,355,490,222,222,41,41,318,319,320,266,85,251,109,112',
'37,37,399,270,44,269,270,226,24,24,494,27,31,34,39,45,48,49,2,4,11,19',
'25,29,33,495,213,215,186,410,190,192,193,196,199,201,203,204,283,284',
'283,284,321,322,473,474,264,130,85,392,182,150,197,200,505,268,389,100',
'379,43,47,365,151,5,13,18,26,30,191,85,365,375,514,99,176,378,183,514',
'519,156,158,161,164,168,171,106,520,85,219,153,373,372,202,165,169,130',
'175,44,180,148,365,528,529,362,27,31,34,39,45,48,49,2,4,11,19,25,29',
'33,44,119,357,273,274,351,350,27,31,34,39,45,48,49,2,4,11,19,25,29,33',
'349,213,215,186,539,190,192,193,196,199,201,203,204,43,47,348,541,5',
'13,18,26,30,335,333,332,182,150,197,200,355,355,546,327,287,43,47,324',
'151,5,13,18,26,30,191,85,328,288,317,309,176,222,183,41,360,156,158',
'161,164,168,171,553,553,37,556,153,59,558,202,165,169,24,175,44,180',
'148,308,307,51,300,27,31,34,39,45,48,49,2,4,11,19,25,29,33,44,563,564',
',,,,27,31,34,39,45,48,49,2,4,11,19,25,29,33,,213,215,186,,190,192,193',
'196,199,201,203,204,43,47,,,5,13,18,26,30,,,,182,150,197,200,,,,,,43',
'47,,151,5,13,18,26,30,191,85,331,,,,176,222,183,41,,156,158,161,164',
'168,171,,,37,222,153,41,,202,165,169,24,175,,180,148,37,,,,,,,,24,,',
',,,,,,,44,,50,3,7,14,20,27,31,34,39,45,48,49,2,4,11,19,25,29,33,,213',
'215,186,,190,192,193,196,199,201,203,204,,,,,15,22,28,,36,,,,182,150',
'197,200,,,,,,43,47,,151,5,13,18,26,30,191,85,,,,,176,222,183,41,,156',
'158,161,164,168,171,,,37,,153,,,202,165,169,24,175,44,180,148,,,,,27',
'31,34,39,45,48,49,2,4,11,19,25,29,33,44,,,,,,,27,31,34,39,45,48,49,2',
'4,11,19,25,29,33,,213,215,186,,190,192,193,196,199,201,203,204,43,47',
',,5,13,18,26,30,,,,182,150,197,200,,,,,,43,47,,151,5,13,18,26,30,191',
'85,,,,,176,,183,,,156,158,161,164,168,171,,,,,153,,,202,165,169,,175',
'44,180,148,,,,,27,31,34,39,45,48,49,2,4,11,19,25,29,33,44,,,,,,,27,31',
'34,39,45,48,49,2,4,11,19,25,29,33,,213,215,186,,190,192,193,196,199',
'201,203,204,43,47,,,5,13,18,26,30,,,,182,150,197,200,,,,,,43,47,,151',
'5,13,18,26,30,191,85,448,,,,176,,183,,,156,158,161,164,168,171,,,,,153',
',,202,165,169,,175,44,180,148,,,,,27,31,34,39,45,48,49,2,4,11,19,25',
'29,33,44,,,,,,,27,31,34,39,45,48,49,2,4,11,19,25,29,33,,213,215,186',
',190,192,193,196,199,201,203,204,43,47,,,5,13,18,26,30,,,,182,150,197',
'200,,,,,,43,47,,151,5,13,18,26,30,191,85,,,,,176,,183,,,156,158,161',
'164,168,171,,,,,153,,,202,165,169,,175,44,180,148,,,,,27,31,34,39,45',
'48,49,2,4,11,19,25,29,33,44,,,,,,,27,31,34,39,45,48,49,2,4,11,19,25',
'29,33,,213,215,186,,190,192,193,196,199,201,203,204,43,47,,,5,13,18',
'26,30,,,,182,150,197,200,,,,,,43,47,,151,5,13,18,26,30,191,85,,,,,176',
',183,,,156,158,161,164,168,171,,,,,153,,,202,165,169,,175,44,180,148',
',,,,27,31,34,39,45,48,49,2,4,11,19,25,29,33,44,,,,,,,27,31,34,39,45',
'48,49,2,4,11,19,25,29,33,,213,215,186,,190,192,193,196,199,201,203,204',
'43,47,,,5,13,18,26,30,,,,182,150,197,200,,,,,,43,47,,151,5,13,18,26',
'30,191,85,,,,,176,,183,,,156,158,161,164,168,171,,,,,153,,,202,165,169',
',175,44,180,148,,,,,27,31,34,39,45,48,49,2,4,11,19,25,29,33,44,,,,,',
',27,31,34,39,45,48,49,2,4,11,19,25,29,33,,213,215,186,,190,192,193,196',
'199,201,203,204,43,47,,,5,13,18,26,30,,,,182,150,197,200,,,,,,43,47',
',151,5,13,18,26,30,191,85,,,,,176,,183,,,156,158,161,164,168,171,,,',
',153,,,202,165,169,,175,,180,148,,,,,,,,,,,,,,,,,,,44,,,,,,,27,31,34',
'39,45,48,49,2,4,11,19,25,29,33,,213,215,186,,190,192,193,196,199,201',
'203,204,,,,,,,,,,,,,182,150,197,200,,,,,,43,47,,151,5,13,18,26,30,191',
'85,194,,,,176,,183,,,156,158,161,164,168,171,,,,,153,,,202,165,169,',
'175,,180,148,,,,,,,,,,,,,,,,,,,44,,50,3,7,14,20,27,31,34,39,45,48,49',
'2,4,11,19,25,29,33,,213,215,186,,190,192,193,196,199,201,203,204,,,',
',15,22,28,,36,,,,182,150,197,200,,,,,,43,47,,151,5,13,18,26,30,191,',
',,,,176,,183,,,156,158,161,164,168,171,,,,,153,,,162,165,169,,175,,180',
'148,,,,,,,,,,,,,,,,,,,44,,50,3,7,14,20,27,31,34,39,45,48,49,2,4,11,19',
'25,29,33,,,,,,,,,,,,,,,,,,15,22,28,,36,,,230,182,150,,,,,,,,43,47,,151',
'5,13,18,26,30,191,,,,,,176,,183,,,156,158,161,164,168,171,,,,,153,,',
'162,165,169,,175,44,180,148,,,,,27,31,34,39,45,48,49,2,4,11,19,25,29',
'33,44,,,,,,,27,31,34,39,45,48,49,2,4,11,19,25,29,33,,96,97,98,,,,,,91',
'92,,,43,47,,,5,13,18,26,30,,,,182,150,,,,,,,,43,47,,151,5,13,18,26,30',
'191,85,,,,,176,,183,,,156,158,161,164,168,171,,,,,153,,,202,165,169',
',175,,180,148,,,,,,,,,,,,,,,,,,,44,,,,,,,27,31,34,39,45,48,49,2,4,11',
'19,25,29,33,,213,215,186,,190,192,193,196,199,201,203,204,,,,,,,,,,',
',,182,150,197,200,,,,,,43,47,,151,5,13,18,26,30,255,,,,,176,,183,,,156',
'158,161,164,168,171,,,,,153,255,516,162,165,169,176,175,183,180,148',
'156,158,161,164,168,171,,,,,153,,,162,165,169,,175,44,180,148,,,,,27',
'31,34,39,45,48,49,2,4,11,19,25,29,33,44,,,,,,,27,31,34,39,45,48,49,2',
'4,11,19,25,29,33,,,,,182,150,,,,,,,,43,47,,151,5,13,18,26,30,,374,,182',
'150,,,,,,,,43,47,,151,5,13,18,26,30,255,,,,,176,,183,,,156,158,161,164',
'168,171,,,,,153,,,162,165,169,,175,44,180,148,,,,,27,31,34,39,45,48',
'49,2,4,11,19,25,29,33,44,,,,,,,27,31,34,39,45,48,49,2,4,11,19,25,29',
'33,85,96,97,98,,,,,,91,92,,,43,47,,,5,13,18,26,30,,,,182,150,,,,,,,',
'43,47,,151,5,13,18,26,30,,,,,,,44,,50,3,7,14,20,27,31,34,39,45,48,49',
'2,4,11,19,25,29,33,85,,,,,,,,,,,,,,,,,15,22,28,,36,,,,,,,,,,,,,43,47',
',,5,13,18,26,30,,,,,,,44,,50,3,7,14,20,27,31,34,39,45,48,49,2,4,11,19',
'25,29,33,492,,,,,176,,183,,,156,158,161,164,168,171,,15,22,28,153,36',
',162,165,169,,175,,180,148,,,,43,47,,,5,13,18,26,30,,,,,,,44,,,,,,,27',
'31,34,39,45,48,49,2,4,11,19,25,29,33,85,,,,,,,,,,,,,,,,,,,,,,,,,182',
'150,,,,,,,,43,47,,151,5,13,18,26,30,,,,,,,44,,50,3,7,14,20,27,31,34',
'39,45,48,49,2,4,11,19,25,29,33,85,,,,119,,,,,,,,,,,,,15,22,28,,36,,',
',,,,,,,,,,43,47,,,5,13,18,26,30,,,,,,,44,,50,3,7,14,20,27,31,34,39,45',
'48,49,2,4,11,19,25,29,33,371,,,,,,,,,,,,,,,,,15,22,28,,36,,,,,,,,,,',
',,43,47,,,5,13,18,26,30,,,,,,44,,,,,,,27,31,34,39,45,48,49,2,4,11,19',
'25,29,33,,,,,,,,,,,,,,,,,,,,,,,96,97,98,,,,,,91,92,,,43,47,,,5,13,18',
'26,30,544,,,,176,,183,,,156,158,161,164,168,171,,,,,153,,242,162,165',
'169,,175,,180,148,,,,,,,,,,,,,,,,,,,44,,,,,,,27,31,34,39,45,48,49,2',
'4,11,19,25,29,33,44,,,,,,,27,31,34,39,45,48,49,2,4,11,19,25,29,33,,',
',,182,150,,,,,,,,43,47,41,151,5,13,18,26,30,96,97,98,37,,,,,91,92,,24',
'43,47,,,5,13,18,26,30,,,,,,,,,,,,,,,,,44,,50,3,7,14,20,27,31,34,39,45',
'48,49,2,4,11,19,25,29,33,,,,,,176,,183,,,156,158,161,164,168,171,,15',
'22,28,153,36,,162,165,169,,175,,180,148,,,,43,47,,,5,13,18,26,30,,,',
',,,44,,,,,,,27,31,34,39,45,48,49,2,4,11,19,25,29,33,,,,,,,,,,,,,,,,',
',,,,,,,,,182,150,,,,,,,,43,47,,151,5,13,18,26,30,176,,183,,,156,158',
'161,164,168,171,,,,,153,,,162,165,169,176,175,183,180,148,156,158,161',
'164,168,171,,,,,153,,,162,165,169,,175,44,180,148,,,,,27,31,34,39,45',
'48,49,2,4,11,19,25,29,33,44,,,,,,,27,31,34,39,45,48,49,2,4,11,19,25',
'29,33,,,,,182,150,,,,,,,,43,47,,151,5,13,18,26,30,,,,182,150,,,,,,,',
'43,47,,151,5,13,18,26,30,176,,183,,,156,158,161,164,168,171,,,,,153',
',,162,165,169,,175,44,180,148,,,,,27,31,34,39,45,48,49,2,4,11,19,25',
'29,33,44,,,,,,,27,31,34,39,45,48,49,2,4,11,19,25,29,33,,96,97,98,,,',
',,91,92,,,43,47,,,5,13,18,26,30,,,,182,150,,,,,,,,43,47,,151,5,13,18',
'26,30,176,,183,146,,156,158,161,164,168,171,,,,,153,,,162,165,169,176',
'175,183,180,148,156,158,161,164,168,171,,,,,153,,,162,165,169,,175,44',
'180,148,,,,,27,31,34,39,45,48,49,2,4,11,19,25,29,33,44,,,,,,,27,31,34',
'39,45,48,49,2,4,11,19,25,29,33,,,,,182,150,,,,,,,,43,47,,151,5,13,18',
'26,30,,,,182,150,,,,,,,,43,47,,151,5,13,18,26,30,176,,183,478,,156,158',
'161,164,168,171,,,,,153,,,162,165,169,176,175,183,180,148,156,158,161',
'164,168,171,,,,,153,,,162,165,169,,175,44,180,148,,,,,27,31,34,39,45',
'48,49,2,4,11,19,25,29,33,44,,,,,,,27,31,34,39,45,48,49,2,4,11,19,25',
'29,33,,,,,182,150,,,,,,,,43,47,,151,5,13,18,26,30,,,,182,150,,,,,,,',
'43,47,,151,5,13,18,26,30,176,,183,,,156,158,161,164,168,171,,,,,153',
',,162,165,169,176,175,183,180,148,156,158,161,164,168,171,,,,,153,,',
'162,165,169,,175,44,180,148,,,,,27,31,34,39,45,48,49,2,4,11,19,25,29',
'33,44,,,,,,,27,31,34,39,45,48,49,2,4,11,19,25,29,33,,,,,182,150,,,,',
',,,43,47,,151,5,13,18,26,30,,,,182,150,,,,,,,,43,47,,151,5,13,18,26',
'30,176,,183,,,156,158,161,164,168,171,,,,,153,,,162,165,169,176,175',
'183,180,148,156,158,161,164,168,171,,,,,153,,,162,165,169,,175,44,180',
'148,,,,,27,31,34,39,45,48,49,2,4,11,19,25,29,33,44,,,,,,,27,31,34,39',
'45,48,49,2,4,11,19,25,29,33,,,,,182,150,,,,,,,,43,47,,151,5,13,18,26',
'30,,,,182,150,,,,,,,,43,47,,151,5,13,18,26,30,176,,183,,,156,158,161',
'164,168,171,,,,,153,,,162,165,169,176,175,183,180,148,156,158,161,164',
'168,171,,,,,153,,,162,165,169,,175,44,180,148,,,,,27,31,34,39,45,48',
'49,2,4,11,19,25,29,33,44,,,,,,,27,31,34,39,45,48,49,2,4,11,19,25,29',
'33,,,,,182,150,,,,,,,,43,47,,151,5,13,18,26,30,,,,182,150,,,,,,,,43',
'47,,151,5,13,18,26,30,176,,183,,,156,158,161,164,168,171,,,,,153,,,162',
'165,169,176,175,183,180,148,156,158,161,164,168,171,,,,,153,,,162,165',
'169,,175,44,180,148,,,,,27,31,34,39,45,48,49,2,4,11,19,25,29,33,44,',
',,,,,27,31,34,39,45,48,49,2,4,11,19,25,29,33,,,,,182,150,,,,,,,,43,47',
',151,5,13,18,26,30,,,,182,150,,,,,,,,43,47,,151,5,13,18,26,30,176,,183',
',,156,158,161,164,168,171,,,,,153,,,162,165,169,176,175,183,180,148',
'156,158,161,164,168,171,,,,,153,,,162,165,169,,175,44,180,148,,,,,27',
'31,34,39,45,48,49,2,4,11,19,25,29,33,44,,,,,,,27,31,34,39,45,48,49,2',
'4,11,19,25,29,33,,,,,182,150,,,,,,,,43,47,,151,5,13,18,26,30,,,,182',
'150,,,,,,,,43,47,,151,5,13,18,26,30,176,,183,,,156,158,161,164,168,171',
',,,,153,,,162,165,169,176,175,183,180,148,156,158,161,164,168,171,,',
',,153,,,162,165,169,,175,44,180,148,,,,,27,31,34,39,45,48,49,2,4,11',
'19,25,29,33,44,,,,,,,27,31,34,39,45,48,49,2,4,11,19,25,29,33,,,,,182',
'150,,,,,,,,43,47,,151,5,13,18,26,30,,,,182,150,,,,,,,,43,47,,151,5,13',
'18,26,30,176,427,183,,,156,158,161,164,168,171,,,,,153,,,162,165,169',
'176,175,183,180,148,156,158,161,164,168,171,,,,,153,,,162,165,169,,175',
'44,180,148,,,,,27,31,34,39,45,48,49,2,4,11,19,25,29,33,44,,,,,,,27,31',
'34,39,45,48,49,2,4,11,19,25,29,33,,,,,182,150,,,,,,,,43,47,,151,5,13',
'18,26,30,,,,182,150,,,,,,,,43,47,,151,5,13,18,26,30,176,,183,,,156,158',
'161,164,168,171,,,,,153,,,162,165,169,176,175,183,180,148,156,158,161',
'164,168,171,,,,,153,,,162,165,169,,175,44,180,148,,,,,27,31,34,39,45',
'48,49,2,4,11,19,25,29,33,44,,,,,,,27,31,34,39,45,48,49,2,4,11,19,25',
'29,33,,,,,182,150,,,,,,,,43,47,,151,5,13,18,26,30,,,,182,150,,,,,,,',
'43,47,,151,5,13,18,26,30,176,,183,,,156,158,161,164,168,171,,,,,153',
',,162,165,169,,175,,180,148,,,,,,,,,,,,,,,,,,,44,,,,,,,27,31,34,39,45',
'48,49,2,4,11,19,25,29,33,297,407,280,,,,,,,,37,,,,,,,,,,,,,,,182,150',
',,,,,,,43,47,,151,5,13,18,26,30,,44,,50,3,7,14,20,27,31,34,39,45,48',
'49,2,4,11,19,25,29,33,176,,183,,,156,158,161,164,168,171,,,,,153,,,162',
'165,169,,175,,180,148,,,,,,,,,43,47,,,5,13,18,26,30,,44,,,,,,,27,31',
'34,39,45,48,49,2,4,11,19,25,29,33,,,,,,,,,,,,,,,,,,,,,,,,,,182,150,',
',,,,,,43,47,,151,5,13,18,26,30,176,,183,,,156,158,161,164,168,171,,',
',,153,,,162,165,169,176,175,183,180,148,156,158,161,164,168,171,,,,',
'153,,,162,165,169,,175,44,180,148,,,,,27,31,34,39,45,48,49,2,4,11,19',
'25,29,33,44,,,,,,,27,31,34,39,45,48,49,2,4,11,19,25,29,33,,,,,182,150',
',,,,,,,43,47,,151,5,13,18,26,30,,,,182,150,,,,,,,,43,47,,151,5,13,18',
'26,30,176,,183,,,156,158,161,164,168,171,,,,,153,,,162,165,169,176,175',
'183,180,148,156,158,161,164,168,171,,,,,153,,,162,165,169,,175,44,180',
'148,,,,,27,31,34,39,45,48,49,2,4,11,19,25,29,33,44,,,,,,,27,31,34,39',
'45,48,49,2,4,11,19,25,29,33,,,,,182,150,,,,,,,,43,47,,151,5,13,18,26',
'30,,,,182,150,,,,,,,,43,47,,151,5,13,18,26,30,176,,183,,,156,158,161',
'164,168,171,,,,,153,,,162,165,169,176,175,183,180,148,156,158,161,164',
'168,171,,,,,153,,,162,165,169,,175,44,180,148,,,,,27,31,34,39,45,48',
'49,2,4,11,19,25,29,33,44,,,,,,,27,31,34,39,45,48,49,2,4,11,19,25,29',
'33,,,,,182,150,,,,,,,,43,47,,151,5,13,18,26,30,,,,182,150,,,,,,,,43',
'47,,151,5,13,18,26,30,176,,183,,,156,158,161,164,168,171,,,,,153,,,162',
'165,169,176,175,183,180,148,156,158,161,164,168,171,,,,,153,,,162,165',
'169,,175,44,180,148,,,,,27,31,34,39,45,48,49,2,4,11,19,25,29,33,44,',
',,,,,27,31,34,39,45,48,49,2,4,11,19,25,29,33,,,,,182,150,,,,,,,,43,47',
',151,5,13,18,26,30,,,,182,150,,,,,,,,43,47,,151,5,13,18,26,30,176,,183',
'408,,156,158,161,164,168,171,,,,,153,,,162,165,169,,175,,180,148,,,',
',,,,,,,,,,,,,,,44,,,,,,,27,31,34,39,45,48,49,2,4,11,19,25,29,33,278',
'407,280,,,,,,,,37,,,,,,,,24,,,,,,,182,150,,,,,,,,43,47,,151,5,13,18',
'26,30,,44,,50,3,7,14,20,27,31,34,39,45,48,49,2,4,11,19,25,29,33,176',
',183,,,156,158,161,164,168,171,,,,,153,,,162,165,169,,175,,180,148,',
',,,,,,,43,47,,,5,13,18,26,30,,44,,,,,,,27,31,34,39,45,48,49,2,4,11,19',
'25,29,33,,,,,,,,,,,,,,,,,,,,,,,,,,182,150,,,,,,,,43,47,,151,5,13,18',
'26,30,176,,183,,,156,158,161,164,168,171,,,,,153,,,162,165,169,176,175',
'183,180,148,156,158,161,164,168,171,,,,,153,,,162,165,169,,175,44,180',
'148,,,,,27,31,34,39,45,48,49,2,4,11,19,25,29,33,44,,,,,,,27,31,34,39',
'45,48,49,2,4,11,19,25,29,33,,,,,182,150,,,,,,,,43,47,,151,5,13,18,26',
'30,,,,182,150,,,,,,,,43,47,,151,5,13,18,26,30,176,,183,,,156,158,161',
'164,168,171,,,,,153,,,162,165,169,176,175,183,180,148,156,158,161,164',
'168,171,,,,,153,,,162,165,169,,175,44,180,148,,,,,27,31,34,39,45,48',
'49,2,4,11,19,25,29,33,44,,,,,,,27,31,34,39,45,48,49,2,4,11,19,25,29',
'33,,,,,182,150,,,,,,,,43,47,,151,5,13,18,26,30,,,,182,150,,,,,,,,43',
'47,,151,5,13,18,26,30,176,,183,,,156,158,161,164,168,171,,,,,153,,,162',
'165,169,176,175,183,180,148,156,158,161,164,168,171,,,,,153,,,162,165',
'169,,175,44,180,148,,,,,27,31,34,39,45,48,49,2,4,11,19,25,29,33,44,',
',,,,,27,31,34,39,45,48,49,2,4,11,19,25,29,33,,,,,182,150,,,,,,,,43,47',
',151,5,13,18,26,30,,,,182,150,,,,,,,,43,47,,151,5,13,18,26,30,176,,183',
',,156,158,161,164,168,171,,,,,153,,,162,165,169,,175,44,180,148,,,,',
'27,31,34,39,45,48,49,2,4,11,19,25,29,33,44,,,,,,,27,31,34,39,45,48,49',
'2,4,11,19,25,29,33,,96,97,98,,,,,,91,92,,,43,47,,,5,13,18,26,30,,,,182',
'150,,,,,,,,43,47,,151,5,13,18,26,30,176,537,183,,,156,158,161,164,168',
'171,,,,,153,,,162,165,169,,175,,180,148,,,,,,,,,,,,,,,,,,,44,,,,,,,27',
'31,34,39,45,48,49,2,4,11,19,25,29,33,41,,,,,,,,,,37,,,,,,,,24,,,,,,',
'182,150,,,,,,,,43,47,,151,5,13,18,26,30,,44,,50,3,7,14,20,27,31,34,39',
'45,48,49,2,4,11,19,25,29,33,,,,,,286,,183,,,156,158,161,164,168,171',
',15,22,28,153,36,,162,165,169,,175,,180,148,,,,43,47,,,5,13,18,26,30',
',,,,,,44,,,,,,,27,31,34,39,45,48,49,2,4,11,19,25,29,33,,,,,,,,,,,,,',
',,,,,,,,,,,,182,150,,,,,,,,43,47,,151,5,13,18,26,30,176,,183,,,156,158',
'161,164,168,171,,,,,153,,,162,165,169,286,175,183,180,148,156,158,161',
'164,168,171,,,,,153,,,162,165,169,,175,326,180,148,,,,,27,31,34,39,45',
'48,49,2,4,11,19,25,29,33,44,,,,,,,27,31,34,39,45,48,49,2,4,11,19,25',
'29,33,,,,,182,150,,,,,,,,43,47,,151,5,13,18,26,30,,,,182,150,,,,,,,',
'43,47,,151,5,13,18,26,30,176,,183,,,156,158,161,164,168,171,,,,,153',
',,162,165,169,314,175,183,180,148,156,158,161,164,168,171,,,,,153,,',
'162,165,169,,175,44,180,148,,,,,27,31,34,39,45,48,49,2,4,11,19,25,29',
'33,44,,,,,,,27,31,34,39,45,48,49,2,4,11,19,25,29,33,,,,,182,150,,,,',
',,,43,47,,151,5,13,18,26,30,,,,182,150,,,,,,,,43,47,,151,5,13,18,26',
'30,176,,183,,,156,158,161,164,168,171,,,,,153,,,162,165,169,,175,477',
'180,148,,,,,,,,,,,,,,,,,,,44,,,,,,,27,31,34,39,45,48,49,2,4,11,19,25',
'29,33,,44,,50,3,7,14,20,27,31,34,39,45,48,49,2,4,11,19,25,29,33,,,,182',
'150,144,,,,,,,43,47,,151,5,13,18,26,30,,143,,,,,-211,,,,,,,43,47,,,5',
'13,18,26,30,,,,,,44,,50,3,7,14,20,27,31,34,39,45,48,49,2,4,11,19,25',
'29,33,44,,50,3,7,14,20,27,31,34,39,45,48,49,2,4,11,19,25,29,33,,-209',
',,,,,,,,,,,43,47,,,5,13,18,26,30,,,,,,,,,,,,,43,47,,,5,13,18,26,30,44',
',50,3,7,14,20,27,31,34,39,45,48,49,2,4,11,19,25,29,33,44,,,,,,,27,31',
'34,39,45,48,49,2,4,11,19,25,29,33,,,,,,,,,,,,,,43,47,,,5,13,18,26,30',
',,,,,,,,,,,,43,47,,,5,13,18,26,30,382,384,386,387,388,381,44,,,,,,,27',
'31,34,39,45,48,49,2,4,11,19,25,29,33,44,,,,,,,27,31,34,39,45,48,49,2',
'4,11,19,25,29,33,,,,,,,,,,,,,,43,47,,,5,13,18,26,30,382,384,386,387',
'388,381,,,,,,,43,47,,,5,13,18,26,30,382,384,386,387,388,381,44,,,,,',
',27,31,34,39,45,48,49,2,4,11,19,25,29,33,44,,50,3,7,14,20,27,31,34,39',
'45,48,49,2,4,11,19,25,29,33,,,,,,,,,,,,,,43,47,,,5,13,18,26,30,382,384',
'386,387,388,381,,,,,,,43,47,,,5,13,18,26,30,44,,50,3,7,14,20,27,31,34',
'39,45,48,49,2,4,11,19,25,29,33,401,44,,50,3,7,14,20,27,31,34,39,45,48',
'49,2,4,11,19,25,29,33,,,,,,,,,,,,,43,47,,,5,13,18,26,30,,,,,,,,,,,,',
',43,47,,,5,13,18,26,30,44,,50,3,7,14,20,27,31,34,39,45,48,49,2,4,11',
'19,25,29,33,44,,50,3,7,14,20,27,31,34,39,45,48,49,2,4,11,19,25,29,33',
',,,,,,,,,,,,,43,47,,,5,13,18,26,30,,,,,,,,,,,,,43,47,,,5,13,18,26,30' ]
        racc_action_table = arr = Array.new(7403, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'452,102,37,36,76,348,452,135,452,28,227,452,452,452,452,452,452,110',
'110,263,325,452,22,120,452,452,452,102,452,36,452,452,57,135,227,28',
'198,113,113,153,276,325,276,263,153,57,57,395,22,120,452,37,37,76,76',
'101,469,452,452,452,452,452,452,452,452,452,452,452,452,452,452,198',
'198,198,198,198,198,198,198,198,198,101,469,360,277,360,277,55,155,155',
'100,37,37,76,76,360,452,452,91,15,55,377,277,360,110,452,452,219,452',
'452,452,452,452,452,452,204,100,288,51,107,107,204,57,204,113,15,204',
'204,204,204,204,204,57,219,57,57,204,288,376,204,204,204,91,204,51,204',
'204,373,12,91,91,91,91,91,91,91,91,91,91,91,91,91,91,33,159,204,159',
'405,159,105,105,12,204,204,204,204,204,204,204,204,204,204,204,204,204',
'204,33,159,159,159,315,535,518,518,21,535,107,91,91,38,21,91,91,91,91',
'91,107,315,107,107,21,204,204,518,106,515,515,38,21,406,204,204,435',
'204,204,204,204,204,204,549,549,88,429,170,409,549,515,549,429,435,549',
'549,549,549,549,549,105,425,88,170,549,425,365,549,549,549,105,549,106',
'549,549,370,417,417,370,106,106,106,106,106,106,106,106,106,106,106',
'106,106,106,549,353,418,418,353,122,122,549,549,549,549,549,549,549',
'549,549,549,549,549,549,549,447,549,549,549,447,549,549,549,549,549',
'549,549,549,106,106,152,152,106,106,106,106,106,441,441,441,549,549',
'549,549,364,152,152,421,421,549,549,413,549,549,549,549,549,549,548',
'548,64,86,421,421,548,368,548,86,368,548,548,548,548,548,548,356,122',
'86,513,548,513,69,548,548,548,86,548,122,548,548,513,65,385,446,446',
'422,422,534,513,446,70,534,261,261,65,65,369,420,548,369,422,422,128',
'128,446,548,548,548,548,548,548,548,548,548,548,548,548,548,548,334',
'548,548,548,116,548,548,548,548,548,548,548,548,41,116,445,445,77,79',
'77,449,445,116,41,449,548,548,548,548,533,404,41,404,533,548,548,445',
'548,548,548,548,548,548,546,546,208,419,419,208,546,261,546,65,326,546',
'546,546,546,546,546,128,261,450,65,546,92,450,546,546,546,128,546,538',
'546,546,538,142,246,142,246,154,145,154,423,423,145,142,67,67,246,154',
'536,316,546,142,536,316,246,121,121,546,546,546,546,546,546,546,546',
'546,546,546,546,546,546,304,546,546,546,430,546,546,546,546,546,546',
'546,546,61,363,415,61,363,415,73,220,431,73,220,432,546,546,546,546',
'42,296,42,296,302,546,546,434,546,546,546,546,546,546,537,537,178,178',
'178,103,537,67,537,412,412,537,537,537,537,537,537,67,121,67,67,537',
'411,411,537,537,537,59,537,121,537,537,433,433,234,233,234,233,442,442',
'442,126,126,111,248,248,234,233,271,271,537,131,131,124,234,233,443',
'537,537,537,537,537,537,537,537,537,537,537,537,537,537,444,537,537',
'537,281,537,537,537,537,537,537,537,537,416,416,147,147,179,179,390',
'390,125,270,266,258,537,537,537,537,451,130,252,54,250,537,537,465,537',
'537,537,537,537,537,350,350,247,244,472,53,350,248,350,475,476,350,350',
'350,350,350,350,248,479,486,240,350,239,238,350,350,350,133,350,96,350',
'350,225,498,499,223,96,96,96,96,96,96,96,96,96,96,96,96,96,96,350,217',
'215,139,141,203,202,350,350,350,350,350,350,350,350,350,350,350,350',
'350,350,201,350,350,350,512,350,350,350,350,350,350,350,350,96,96,199',
'514,96,96,96,96,96,196,192,190,350,350,350,350,526,527,530,186,149,350',
'350,182,350,350,350,350,350,350,187,187,187,150,177,166,187,232,187',
'232,540,187,187,187,187,187,187,541,542,232,543,187,16,547,187,187,187',
'232,187,97,187,187,163,160,5,157,97,97,97,97,97,97,97,97,97,97,97,97',
'97,97,187,562,563,,,,,187,187,187,187,187,187,187,187,187,187,187,187',
'187,187,,187,187,187,,187,187,187,187,187,187,187,187,97,97,,,97,97',
'97,97,97,,,,187,187,187,187,,,,,,187,187,,187,187,187,187,187,187,189',
'189,189,,,,189,510,189,510,,189,189,189,189,189,189,,,510,89,189,89',
',189,189,189,510,189,,189,189,89,,,,,,,,89,,,,,,,,,,189,,189,189,189',
'189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,,189',
'189,189,,189,189,189,189,189,189,189,189,,,,,189,189,189,,189,,,,189',
'189,189,189,,,,,,189,189,,189,189,189,189,189,189,193,193,,,,,193,224',
'193,224,,193,193,193,193,193,193,,,224,,193,,,193,193,193,224,193,95',
'193,193,,,,,95,95,95,95,95,95,95,95,95,95,95,95,95,95,193,,,,,,,193',
'193,193,193,193,193,193,193,193,193,193,193,193,193,,193,193,193,,193',
'193,193,193,193,193,193,193,95,95,,,95,95,95,95,95,,,,193,193,193,193',
',,,,,193,193,,193,193,193,193,193,193,550,550,,,,,550,,550,,,550,550',
'550,550,550,550,,,,,550,,,550,550,550,,550,98,550,550,,,,,98,98,98,98',
'98,98,98,98,98,98,98,98,98,98,550,,,,,,,550,550,550,550,550,550,550',
'550,550,550,550,550,550,550,,550,550,550,,550,550,550,550,550,550,550',
'550,98,98,,,98,98,98,98,98,,,,550,550,550,550,,,,,,550,550,,550,550',
'550,550,550,550,330,330,330,,,,330,,330,,,330,330,330,330,330,330,,',
',,330,,,330,330,330,,330,93,330,330,,,,,93,93,93,93,93,93,93,93,93,93',
'93,93,93,93,330,,,,,,,330,330,330,330,330,330,330,330,330,330,330,330',
'330,330,,330,330,330,,330,330,330,330,330,330,330,330,93,93,,,93,93',
'93,93,93,,,,330,330,330,330,,,,,,330,330,,330,330,330,330,330,330,504',
'504,,,,,504,,504,,,504,504,504,504,504,504,,,,,504,,,504,504,504,,504',
'464,504,504,,,,,464,464,464,464,464,464,464,464,464,464,464,464,464',
'464,504,,,,,,,504,504,504,504,504,504,504,504,504,504,504,504,504,504',
',504,504,504,,504,504,504,504,504,504,504,504,464,464,,,464,464,464',
'464,464,,,,504,504,504,504,,,,,,504,504,,504,504,504,504,504,504,503',
'503,,,,,503,,503,,,503,503,503,503,503,503,,,,,503,,,503,503,503,,503',
'470,503,503,,,,,470,470,470,470,470,470,470,470,470,470,470,470,470',
'470,503,,,,,,,503,503,503,503,503,503,503,503,503,503,503,503,503,503',
',503,503,503,,503,503,503,503,503,503,503,503,470,470,,,470,470,470',
'470,470,,,,503,503,503,503,,,,,,503,503,,503,503,503,503,503,503,502',
'502,,,,,502,,502,,,502,502,502,502,502,502,,,,,502,,,502,502,502,,502',
'324,502,502,,,,,324,324,324,324,324,324,324,324,324,324,324,324,324',
'324,502,,,,,,,502,502,502,502,502,502,502,502,502,502,502,502,502,502',
',502,502,502,,502,502,502,502,502,502,502,502,324,324,,,324,324,324',
'324,324,,,,502,502,502,502,,,,,,502,502,,502,502,502,502,502,502,357',
'357,,,,,357,,357,,,357,357,357,357,357,357,,,,,357,,,357,357,357,,357',
',357,357,,,,,,,,,,,,,,,,,,,357,,,,,,,357,357,357,357,357,357,357,357',
'357,357,357,357,357,357,,357,357,357,,357,357,357,357,357,357,357,357',
',,,,,,,,,,,,357,357,357,357,,,,,,357,357,,357,357,357,357,357,357,85',
'85,85,,,,85,,85,,,85,85,85,85,85,85,,,,,85,,,85,85,85,,85,,85,85,,,',
',,,,,,,,,,,,,,,85,,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85',
'85,85,,85,85,85,,85,85,85,85,85,85,85,85,,,,,85,85,85,,85,,,,85,85,85',
'85,,,,,,85,85,,85,85,85,85,85,85,335,,,,,,335,,335,,,335,335,335,335',
'335,335,,,,,335,,,335,335,335,,335,,335,335,,,,,,,,,,,,,,,,,,,335,,335',
'335,335,335,335,335,335,335,335,335,335,335,335,335,335,335,335,335',
'335,,,,,,,,,,,,,,,,,,335,335,335,,335,,,94,335,335,,,,,,,,335,335,,335',
'335,335,335,335,335,453,,,,,,453,,453,,,453,453,453,453,453,453,,,,',
'453,,,453,453,453,,453,94,453,453,,,,,94,94,94,94,94,94,94,94,94,94',
'94,94,94,94,453,,,,,,,453,453,453,453,453,453,453,453,453,453,453,453',
'453,453,,94,94,94,,,,,,94,94,,,94,94,,,94,94,94,94,94,,,,453,453,,,',
',,,,453,453,,453,453,453,453,453,453,459,459,,,,,459,,459,,,459,459',
'459,459,459,459,,,,,459,,,459,459,459,,459,,459,459,,,,,,,,,,,,,,,,',
',,459,,,,,,,459,459,459,459,459,459,459,459,459,459,459,459,459,459',
',459,459,459,,459,459,459,459,459,459,459,459,,,,,,,,,,,,,459,459,459',
'459,,,,,,459,459,,459,459,459,459,459,459,255,,,,,255,,255,,,255,255',
'255,255,255,255,,,,,255,474,474,255,255,255,474,255,474,255,255,474',
'474,474,474,474,474,,,,,474,,,474,474,474,,474,255,474,474,,,,,255,255',
'255,255,255,255,255,255,255,255,255,255,255,255,474,,,,,,,474,474,474',
'474,474,474,474,474,474,474,474,474,474,474,,,,,255,255,,,,,,,,255,255',
',255,255,255,255,255,255,,243,,474,474,,,,,,,,474,474,,474,474,474,474',
'474,474,119,,,,,119,,119,,,119,119,119,119,119,119,,,,,119,,,119,119',
'119,,119,243,119,119,,,,,243,243,243,243,243,243,243,243,243,243,243',
'243,243,243,119,,,,,,,119,119,119,119,119,119,119,119,119,119,119,119',
'119,119,46,243,243,243,,,,,,243,243,,,243,243,,,243,243,243,243,243',
',,,119,119,,,,,,,,119,119,,119,119,119,119,119,119,,,,,,,46,,46,46,46',
'46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,118,,,,,,,,,,,,,,,,',
'46,46,46,,46,,,,,,,,,,,,,46,46,,,46,46,46,46,46,,,,,,,118,,118,118,118',
'118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,436',
',,,,436,,436,,,436,436,436,436,436,436,,118,118,118,436,118,,436,436',
'436,,436,,436,436,,,,118,118,,,118,118,118,118,118,,,,,,,436,,,,,,,436',
'436,436,436,436,436,436,436,436,436,436,436,436,436,83,,,,,,,,,,,,,',
',,,,,,,,,,,436,436,,,,,,,,436,436,,436,436,436,436,436,436,,,,,,,83',
',83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,63,,,,63,',
',,,,,,,,,,,83,83,83,,83,,,,,,,,,,,,,83,83,,,83,83,83,83,83,,,,,,,63',
',63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,235,,,,,,',
',,,,,,,,,,63,63,63,,63,,,,,,,,,,,,,63,63,,,63,63,63,63,63,,,,,,235,',
',,,,,235,235,235,235,235,235,235,235,235,235,235,235,235,235,,,,,,,',
',,,,,,,,,,,,,,,235,235,235,,,,,,235,235,,,235,235,,,235,235,235,235',
'235,524,,,,524,,524,,,524,524,524,524,524,524,,,,,524,,104,524,524,524',
',524,,524,524,,,,,,,,,,,,,,,,,,,524,,,,,,,524,524,524,524,524,524,524',
'524,524,524,524,524,524,524,104,,,,,,,104,104,104,104,104,104,104,104',
'104,104,104,104,104,104,,,,,524,524,,,,,,,,524,524,0,524,524,524,524',
'524,524,104,104,104,0,,,,,104,104,,0,104,104,,,104,104,104,104,104,',
',,,,,,,,,,,,,,,0,,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,,,,,,333,,333',
',,333,333,333,333,333,333,,0,0,0,333,0,,333,333,333,,333,,333,333,,',
',0,0,,,0,0,0,0,0,,,,,,,333,,,,,,,333,333,333,333,333,333,333,333,333',
'333,333,333,333,333,,,,,,,,,,,,,,,,,,,,,,,,,,333,333,,,,,,,,333,333',
',333,333,333,333,333,333,332,,332,,,332,332,332,332,332,332,,,,,332',
',,332,332,332,355,332,355,332,332,355,355,355,355,355,355,,,,,355,,',
'355,355,355,,355,332,355,355,,,,,332,332,332,332,332,332,332,332,332',
'332,332,332,332,332,355,,,,,,,355,355,355,355,355,355,355,355,355,355',
'355,355,355,355,,,,,332,332,,,,,,,,332,332,,332,332,332,332,332,332',
',,,355,355,,,,,,,,355,355,,355,355,355,355,355,355,327,,327,,,327,327',
'327,327,327,327,,,,,327,,,327,327,327,,327,52,327,327,,,,,52,52,52,52',
'52,52,52,52,52,52,52,52,52,52,327,,,,,,,327,327,327,327,327,327,327',
'327,327,327,327,327,327,327,,52,52,52,,,,,,52,52,,,52,52,,,52,52,52',
'52,52,,,,327,327,,,,,,,,327,327,,327,327,327,327,327,327,81,,81,81,',
'81,81,81,81,81,81,,,,,81,,,81,81,81,362,81,362,81,81,362,362,362,362',
'362,362,,,,,362,,,362,362,362,,362,81,362,362,,,,,81,81,81,81,81,81',
'81,81,81,81,81,81,81,81,362,,,,,,,362,362,362,362,362,362,362,362,362',
'362,362,362,362,362,,,,,81,81,,,,,,,,81,81,,81,81,81,81,81,81,,,,362',
'362,,,,,,,,362,362,,362,362,362,362,362,362,403,,403,403,,403,403,403',
'403,403,403,,,,,403,,,403,403,403,322,403,322,403,403,322,322,322,322',
'322,322,,,,,322,,,322,322,322,,322,403,322,322,,,,,403,403,403,403,403',
'403,403,403,403,403,403,403,403,403,322,,,,,,,322,322,322,322,322,322',
'322,322,322,322,322,322,322,322,,,,,403,403,,,,,,,,403,403,,403,403',
'403,403,403,403,,,,322,322,,,,,,,,322,322,,322,322,322,322,322,322,321',
',321,,,321,321,321,321,321,321,,,,,321,,,321,321,321,320,321,320,321',
'321,320,320,320,320,320,320,,,,,320,,,320,320,320,,320,321,320,320,',
',,,321,321,321,321,321,321,321,321,321,321,321,321,321,321,320,,,,,',
',320,320,320,320,320,320,320,320,320,320,320,320,320,320,,,,,321,321',
',,,,,,,321,321,,321,321,321,321,321,321,,,,320,320,,,,,,,,320,320,,320',
'320,320,320,320,320,319,,319,,,319,319,319,319,319,319,,,,,319,,,319',
'319,319,318,319,318,319,319,318,318,318,318,318,318,,,,,318,,,318,318',
'318,,318,319,318,318,,,,,319,319,319,319,319,319,319,319,319,319,319',
'319,319,319,318,,,,,,,318,318,318,318,318,318,318,318,318,318,318,318',
'318,318,,,,,319,319,,,,,,,,319,319,,319,319,319,319,319,319,,,,318,318',
',,,,,,,318,318,,318,318,318,318,318,318,487,,487,,,487,487,487,487,487',
'487,,,,,487,,,487,487,487,314,487,314,487,487,314,314,314,314,314,314',
',,,,314,,,314,314,314,,314,487,314,314,,,,,487,487,487,487,487,487,487',
'487,487,487,487,487,487,487,314,,,,,,,314,314,314,314,314,314,314,314',
'314,314,314,314,314,314,,,,,487,487,,,,,,,,487,487,,487,487,487,487',
'487,487,,,,314,314,,,,,,,,314,314,,314,314,314,314,314,314,311,,311',
',,311,311,311,311,311,311,,,,,311,,,311,311,311,310,311,310,311,311',
'310,310,310,310,310,310,,,,,310,,,310,310,310,,310,311,310,310,,,,,311',
'311,311,311,311,311,311,311,311,311,311,311,311,311,310,,,,,,,310,310',
'310,310,310,310,310,310,310,310,310,310,310,310,,,,,311,311,,,,,,,,311',
'311,,311,311,311,311,311,311,,,,310,310,,,,,,,,310,310,,310,310,310',
'310,310,310,309,,309,,,309,309,309,309,309,309,,,,,309,,,309,309,309',
'308,309,308,309,309,308,308,308,308,308,308,,,,,308,,,308,308,308,,308',
'309,308,308,,,,,309,309,309,309,309,309,309,309,309,309,309,309,309',
'309,308,,,,,,,308,308,308,308,308,308,308,308,308,308,308,308,308,308',
',,,,309,309,,,,,,,,309,309,,309,309,309,309,309,309,,,,308,308,,,,,',
',,308,308,,308,308,308,308,308,308,307,,307,,,307,307,307,307,307,307',
',,,,307,,,307,307,307,306,307,306,307,307,306,306,306,306,306,306,,',
',,306,,,306,306,306,,306,307,306,306,,,,,307,307,307,307,307,307,307',
'307,307,307,307,307,307,307,306,,,,,,,306,306,306,306,306,306,306,306',
'306,306,306,306,306,306,,,,,307,307,,,,,,,,307,307,,307,307,307,307',
'307,307,,,,306,306,,,,,,,,306,306,,306,306,306,306,306,306,303,303,303',
',,303,303,303,303,303,303,,,,,303,,,303,303,303,300,303,300,303,303',
'300,300,300,300,300,300,,,,,300,,,300,300,300,,300,303,300,300,,,,,303',
'303,303,303,303,303,303,303,303,303,303,303,303,303,300,,,,,,,300,300',
'300,300,300,300,300,300,300,300,300,300,300,300,,,,,303,303,,,,,,,,303',
'303,,303,303,303,303,303,303,,,,300,300,,,,,,,,300,300,,300,300,300',
'300,300,300,172,,172,,,172,172,172,172,172,172,,,,,172,,,172,172,172',
'299,172,299,172,172,299,299,299,299,299,299,,,,,299,,,299,299,299,,299',
'172,299,299,,,,,172,172,172,172,172,172,172,172,172,172,172,172,172',
'172,299,,,,,,,299,299,299,299,299,299,299,299,299,299,299,299,299,299',
',,,,172,172,,,,,,,,172,172,,172,172,172,172,172,172,,,,299,299,,,,,',
',,299,299,,299,299,299,299,299,299,298,,298,,,298,298,298,298,298,298',
',,,,298,,,298,298,298,,298,,298,298,,,,,,,,,,,,,,,,,,,298,,,,,,,298',
'298,298,298,298,298,298,298,298,298,298,298,298,298,297,297,297,,,,',
',,,297,,,,,,,,,,,,,,,298,298,,,,,,,,298,298,,298,298,298,298,298,298',
',297,,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297',
'297,297,297,292,,292,,,292,292,292,292,292,292,,,,,292,,,292,292,292',
',292,,292,292,,,,,,,,,297,297,,,297,297,297,297,297,,292,,,,,,,292,292',
'292,292,292,292,292,292,292,292,292,292,292,292,,,,,,,,,,,,,,,,,,,,',
',,,,,292,292,,,,,,,,292,292,,292,292,292,292,292,292,291,,291,,,291',
'291,291,291,291,291,,,,,291,,,291,291,291,290,291,290,291,291,290,290',
'290,290,290,290,,,,,290,,,290,290,290,,290,291,290,290,,,,,291,291,291',
'291,291,291,291,291,291,291,291,291,291,291,290,,,,,,,290,290,290,290',
'290,290,290,290,290,290,290,290,290,290,,,,,291,291,,,,,,,,291,291,',
'291,291,291,291,291,291,,,,290,290,,,,,,,,290,290,,290,290,290,290,290',
'290,492,,492,,,492,492,492,492,492,492,,,,,492,,,492,492,492,345,492',
'345,492,492,345,345,345,345,345,345,,,,,345,,,345,345,345,,345,492,345',
'345,,,,,492,492,492,492,492,492,492,492,492,492,492,492,492,492,345',
',,,,,,345,345,345,345,345,345,345,345,345,345,345,345,345,345,,,,,492',
'492,,,,,,,,492,492,,492,492,492,492,492,492,,,,345,345,,,,,,,,345,345',
',345,345,345,345,345,345,289,,289,,,289,289,289,289,289,289,,,,,289',
',,289,289,289,286,289,286,289,289,286,286,286,286,286,286,,,,,286,,',
'286,286,286,,286,289,286,286,,,,,289,289,289,289,289,289,289,289,289',
'289,289,289,289,289,286,,,,,,,286,286,286,286,286,286,286,286,286,286',
'286,286,286,286,,,,,289,289,,,,,,,,289,289,,289,289,289,289,289,289',
',,,286,286,,,,,,,,286,286,,286,286,286,286,286,286,284,,284,,,284,284',
'284,284,284,284,,,,,284,,,284,284,284,283,284,283,284,284,283,283,283',
'283,283,283,,,,,283,,,283,283,283,,283,284,283,283,,,,,284,284,284,284',
'284,284,284,284,284,284,284,284,284,284,283,,,,,,,283,283,283,283,283',
'283,283,283,283,283,283,283,283,283,,,,,284,284,,,,,,,,284,284,,284',
'284,284,284,284,284,,,,283,283,,,,,,,,283,283,,283,283,283,283,283,283',
'280,,280,280,,280,280,280,280,280,280,,,,,280,,,280,280,280,,280,,280',
'280,,,,,,,,,,,,,,,,,,,280,,,,,,,280,280,280,280,280,280,280,280,280',
'280,280,280,280,280,278,278,278,,,,,,,,278,,,,,,,,278,,,,,,,280,280',
',,,,,,,280,280,,280,280,280,280,280,280,,278,,278,278,278,278,278,278',
'278,278,278,278,278,278,278,278,278,278,278,278,278,268,,268,,,268,268',
'268,268,268,268,,,,,268,,,268,268,268,,268,,268,268,,,,,,,,,278,278',
',,278,278,278,278,278,,268,,,,,,,268,268,268,268,268,268,268,268,268',
'268,268,268,268,268,,,,,,,,,,,,,,,,,,,,,,,,,,268,268,,,,,,,,268,268',
',268,268,268,268,268,268,495,,495,,,495,495,495,495,495,495,,,,,495',
',,495,495,495,497,495,497,495,495,497,497,497,497,497,497,,,,,497,,',
'497,497,497,,497,495,497,497,,,,,495,495,495,495,495,495,495,495,495',
'495,495,495,495,495,497,,,,,,,497,497,497,497,497,497,497,497,497,497',
'497,497,497,497,,,,,495,495,,,,,,,,495,495,,495,495,495,495,495,495',
',,,497,497,,,,,,,,497,497,,497,497,497,497,497,497,505,,505,,,505,505',
'505,505,505,505,,,,,505,,,505,505,505,222,505,222,505,505,222,222,222',
'222,222,222,,,,,222,,,222,222,222,,222,505,222,222,,,,,505,505,505,505',
'505,505,505,505,505,505,505,505,505,505,222,,,,,,,222,222,222,222,222',
'222,222,222,222,222,222,222,222,222,,,,,505,505,,,,,,,,505,505,,505',
'505,505,505,505,505,,,,222,222,,,,,,,,222,222,,222,222,222,222,222,222',
'213,,213,,,213,213,213,213,213,213,,,,,213,,,213,213,213,506,213,506',
'213,213,506,506,506,506,506,506,,,,,506,,,506,506,506,,506,213,506,506',
',,,,213,213,213,213,213,213,213,213,213,213,213,213,213,213,506,,,,',
',,506,506,506,506,506,506,506,506,506,506,506,506,506,506,,,,,213,213',
',,,,,,,213,213,,213,213,213,213,213,213,,,,506,506,,,,,,,,506,506,,506',
'506,506,506,506,506,507,,507,,,507,507,507,507,507,507,,,,,507,,,507',
'507,507,,507,99,507,507,,,,,99,99,99,99,99,99,99,99,99,99,99,99,99,99',
'507,,,,,,,507,507,507,507,507,507,507,507,507,507,507,507,507,507,,99',
'99,99,,,,,,99,99,,,99,99,,,99,99,99,99,99,,,,507,507,,,,,,,,507,507',
',507,507,507,507,507,507,508,508,508,,,508,508,508,508,508,508,,,,,508',
',,508,508,508,,508,,508,508,,,,,,,,,,,,,,,,,,,508,,,,,,,508,508,508',
'508,508,508,508,508,508,508,508,508,508,508,23,,,,,,,,,,23,,,,,,,,23',
',,,,,,508,508,,,,,,,,508,508,,508,508,508,508,508,508,,23,,23,23,23',
'23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,,,,,,148,,148,,,148',
'148,148,148,148,148,,23,23,23,148,23,,148,148,148,,148,,148,148,,,,23',
'23,,,23,23,23,23,23,,,,,,,148,,,,,,,148,148,148,148,148,148,148,148',
'148,148,148,148,148,148,,,,,,,,,,,,,,,,,,,,,,,,,,148,148,,,,,,,,148',
'148,,148,148,148,148,148,148,183,,183,,,183,183,183,183,183,183,,,,',
'183,,,183,183,183,180,183,180,183,183,180,180,180,180,180,180,,,,,180',
',,180,180,180,,180,183,180,180,,,,,183,183,183,183,183,183,183,183,183',
'183,183,183,183,183,180,,,,,,,180,180,180,180,180,180,180,180,180,180',
'180,180,180,180,,,,,183,183,,,,,,,,183,183,,183,183,183,183,183,183',
',,,180,180,,,,,,,,180,180,,180,180,180,180,180,180,176,,176,,,176,176',
'176,176,176,176,,,,,176,,,176,176,176,175,176,175,176,176,175,175,175',
'175,175,175,,,,,175,,,175,175,175,,175,176,175,175,,,,,176,176,176,176',
'176,176,176,176,176,176,176,176,176,176,175,,,,,,,175,175,175,175,175',
'175,175,175,175,175,175,175,175,175,,,,,176,176,,,,,,,,176,176,,176',
'176,176,176,176,176,,,,175,175,,,,,,,,175,175,,175,175,175,175,175,175',
'490,,490,,,490,490,490,490,490,490,,,,,490,,,490,490,490,,490,402,490',
'490,,,,,,,,,,,,,,,,,,,490,,,,,,,490,490,490,490,490,490,490,490,490',
'490,490,490,490,490,,402,,402,402,402,402,402,402,402,402,402,402,402',
'402,402,402,402,402,402,402,402,,,,490,490,80,,,,,,,490,490,,490,490',
'490,490,490,490,,80,,,,,206,,,,,,,402,402,,,402,402,402,402,402,,,,',
',80,,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,206,,206',
'206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206',
'206,,205,,,,,,,,,,,,80,80,,,80,80,80,80,80,,,,,,,,,,,,,206,206,,,206',
'206,206,206,206,205,,205,205,205,205,205,205,205,205,205,205,205,205',
'205,205,205,205,205,205,205,553,,,,,,,553,553,553,553,553,553,553,553',
'553,553,553,553,553,553,,,,,,,,,,,,,,205,205,,,205,205,205,205,205,',
',,,,,,,,,,,553,553,,,553,553,553,553,553,553,553,553,553,553,553,251',
',,,,,,251,251,251,251,251,251,251,251,251,251,251,251,251,251,264,,',
',,,,264,264,264,264,264,264,264,264,264,264,264,264,264,264,,,,,,,,',
',,,,,251,251,,,251,251,251,251,251,251,251,251,251,251,251,,,,,,,264',
'264,,,264,264,264,264,264,264,264,264,264,264,264,383,,,,,,,383,383',
'383,383,383,383,383,383,383,383,383,383,383,383,40,,40,40,40,40,40,40',
'40,40,40,40,40,40,40,40,40,40,40,40,40,,,,,,,,,,,,,,383,383,,,383,383',
'383,383,383,383,383,383,383,383,383,,,,,,,40,40,,,40,40,40,40,40,273',
',273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273',
'273,273,273,32,,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32',
'32,,,,,,,,,,,,,273,273,,,273,273,273,273,273,,,,,,,,,,,,,,32,32,,,32',
'32,32,32,32,35,,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35',
'35,294,,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294',
'294,294,294,294,,,,,,,,,,,,,,35,35,,,35,35,35,35,35,,,,,,,,,,,,,294',
'294,,,294,294,294,294,294' ]
        racc_action_check = arr = Array.new(7403, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
  3044,   nil,   nil,   nil,   nil,   812,   nil,   nil,   nil,   nil,
   nil,   nil,   145,   nil,   nil,    73,   821,   nil,   nil,   nil,
   nil,   192,    -4,  6301,   nil,   nil,   nil,   nil,   -17,   nil,
   nil,   nil,  7202,   160,   nil,  7266,   -23,   -16,   191,   nil,
  7116,   419,   549,   nil,   nil,   nil,  2482,   nil,   nil,   nil,
   nil,    92,  3330,   687,   668,    79,   nil,    29,   nil,   598,
   nil,   539,   nil,  2762,   337,   373,   nil,   485,   nil,   340,
   382,   nil,   nil,   545,   nil,   nil,   -14,   423,   nil,   423,
  6828,  3459,   nil,  2692,   nil,  1823,   344,   nil,   226,   927,
   nil,    90,   453,  1232,  2030,  1004,   662,   776,  1118,  6107,
    64,    29,   -25,   574,  2964,   153,   206,   103,   nil,   nil,
     1,   606,   nil,    21,   nil,   nil,   410,   nil,  2552,  2412,
    -3,   496,   268,   nil,   598,   655,   610,   nil,   381,   nil,
   665,   618,   nil,   686,   nil,   -19,   nil,   nil,   nil,   733,
   nil,   730,   482,   nil,   nil,   490,   nil,   623,  6371,   763,
   794,   nil,   294,    36,   486,    50,   nil,   821,   nil,   156,
   809,   nil,   nil,   807,   nil,   nil,   764,   nil,   nil,   nil,
   208,   nil,  4620,   nil,   nil,  6629,  6608,   792,   555,   643,
  6500,   nil,   784,  6479,   nil,   nil,   780,   797,   nil,   911,
   772,   nil,   771,  1025,   nil,   nil,   770,   nil,    29,   745,
   nil,   754,   735,   738,   113,  6913,  6849,   nil,   457,   nil,
   nil,   nil,   nil,  5999,   nil,   731,   nil,   729,   nil,    81,
   546,   nil,  5891,   714,  1028,   691,   nil,     8,   nil,   nil,
   nil,   nil,   800,   600,   599,  2831,   nil,   nil,   699,   685,
   700,   nil,   nil,  2391,   686,   nil,   485,   661,   599,   nil,
   673,  7004,   671,   nil,   nil,  2278,   nil,   nil,   657,   nil,
   nil,   371,   nil,    17,  7025,   nil,   662,   nil,  5633,   nil,
   638,   615,   nil,  7180,   nil,   nil,    32,    76,  5568,   nil,
  5503,   620,   nil,  5395,  5374,   nil,  5266,   nil,   111,  5245,
  5008,  4987,  4879,   nil,  7287,   nil,   550,  4814,  4749,  4641,
  4512,   nil,   535,  4491,   502,   nil,  4383,  4362,  4254,  4233,
  4125,  4104,   nil,   nil,  3996,   181,   501,   nil,  3867,  3846,
  3738,  3717,  3609,   nil,  1574,    15,   441,  3351,   nil,   nil,
  1253,   nil,  3222,  3114,   335,  1937,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,  5137,   nil,   nil,     3,   nil,
   683,   nil,   nil,   278,   nil,  3243,   354,  1709,   nil,   nil,
    77,   nil,  3480,   540,   320,   247,   nil,   nil,   348,   389,
   259,   nil,   nil,   139,   nil,   nil,   133,    92,   nil,   nil,
   nil,   nil,   nil,  7095,   nil,   368,   nil,   nil,   nil,   nil,
   657,   nil,   nil,   nil,   nil,    38,   nil,   nil,   nil,   nil,
   nil,   nil,  6759,  3588,   436,   158,   210,   nil,   nil,   223,
   nil,   577,   564,   330,   nil,   537,   621,   228,   247,   426,
   383,   311,   359,   459,   nil,   242,   nil,   nil,   nil,   227,
   519,   526,   528,   598,   524,   213,  2622,   nil,   nil,   nil,
   nil,   304,   591,   618,   636,   424,   373,   295,   nil,   429,
   471,   663,    -2,  2051,   nil,   nil,   nil,   nil,   nil,  2165,
   nil,   nil,   nil,   nil,  1346,   652,   nil,   nil,   nil,    30,
  1460,   nil,   663,   nil,  2299,   668,   686,   nil,   nil,   692,
   nil,   nil,   nil,   nil,   nil,   nil,   701,  3975,   nil,   nil,
  6737,   nil,  5116,   nil,   nil,  5741,   nil,  5762,   712,   646,
   nil,   nil,  1595,  1481,  1367,  5870,  6020,  6128,  6236,   nil,
   914,   nil,   751,   357,   766,   210,   nil,   nil,   187,   nil,
   nil,   nil,   nil,   nil,  2943,   nil,   780,   781,   nil,   nil,
   710,   nil,   nil,   438,   377,   186,   500,   569,   484,   nil,
   804,   808,   809,   746,   nil,   nil,   455,   820,   341,   227,
  1139,   nil,   nil,  6934,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   841,   825,   nil ]

racc_action_default = [
  -314,  -181,  -178,  -166,  -224,  -184,  -182,  -167,  -154,  -309,
  -306,  -225,  -314,  -186,  -168,  -314,  -314,  -308,  -187,  -172,
  -169,  -314,  -314,    -1,  -230,  -193,  -188,  -173,  -314,  -194,
  -189,  -174,  -155,  -314,  -175,  -157,  -314,  -237,  -314,  -176,
  -159,  -314,  -229,  -226,  -183,  -179,  -314,  -227,  -180,  -177,
  -165,  -314,  -314,  -192,   -99,  -105,  -102,  -314,  -103,  -314,
  -152,  -314,  -161,  -163,  -133,  -314,  -307,  -314,  -156,  -314,
  -219,  -158,   -97,  -314,  -241,  -239,  -238,  -228,  -160,  -314,
  -314,  -314,  -313,  -314,  -286,  -314,  -314,  -170,  -314,  -314,
  -195,  -314,  -314,  -209,  -314,  -211,  -314,  -314,  -314,  -314,
  -314,  -314,  -314,  -314,  -314,  -314,  -314,  -314,  -144,  -110,
  -314,  -314,  -109,  -314,   565,  -153,  -314,  -311,  -314,  -314,
  -314,  -314,  -314,  -148,  -314,  -314,  -314,  -139,  -314,  -142,
  -222,  -314,  -220,  -314,  -141,  -314,  -242,  -240,  -231,  -243,
  -245,  -314,  -249,  -250,  -236,  -314,  -233,   -61,  -314,  -314,
  -314,   -18,   -66,  -314,  -252,   -69,   -42,   -71,   -47,   -36,
   -73,   -46,   -14,   -75,   -45,   -15,   -77,   -48,   -44,   -16,
   -79,   -43,  -314,   -96,   -51,  -314,  -314,  -314,   -55,   -58,
  -314,   -26,  -314,  -314,  -312,  -287,  -314,  -314,  -272,  -314,
  -314,  -290,  -314,  -314,  -282,   -94,  -314,  -278,   -48,  -314,
  -277,  -314,   -14,  -314,  -314,  -157,  -159,  -288,  -314,  -271,
  -273,   -81,  -274,  -314,  -275,  -314,  -276,  -163,  -185,  -314,
  -314,  -212,  -314,  -214,  -314,  -314,  -207,  -314,  -208,  -196,
  -191,  -210,  -314,  -314,  -314,  -314,  -100,  -101,  -314,  -314,
  -104,  -127,  -132,  -314,  -314,  -147,  -314,  -314,  -314,  -146,
  -314,  -314,  -314,  -162,  -310,  -314,  -266,  -164,  -314,  -150,
  -140,  -314,  -149,  -314,  -314,  -136,  -314,  -143,  -314,  -217,
  -314,  -314,   -98,  -314,  -234,  -248,  -255,  -254,  -314,  -247,
  -314,  -314,  -235,  -314,  -314,   -38,  -314,   -25,  -314,  -314,
  -314,  -314,  -314,   -23,  -314,  -253,  -254,  -314,  -314,  -314,
  -314,   -33,  -314,  -314,  -314,   -32,  -314,  -314,  -314,  -314,
  -314,  -314,   -39,   -40,  -314,  -314,  -314,  -232,  -314,  -314,
  -314,  -314,  -314,   -37,  -314,  -314,  -183,  -314,  -283,  -289,
  -314,  -284,  -314,  -314,  -314,  -314,   -86,   -87,   -88,   -89,
   -90,   -91,   -92,   -93,   -83,  -314,   -84,   -85,  -314,  -302,
  -314,  -303,  -304,  -314,  -291,  -314,  -314,  -314,  -171,  -199,
  -314,  -215,  -314,  -314,  -314,  -197,  -205,  -206,  -314,  -314,
  -314,  -190,  -107,  -106,  -131,  -130,  -126,  -314,  -145,  -128,
  -118,  -111,  -112,  -314,  -113,  -314,  -114,  -115,  -116,  -129,
  -314,  -269,  -134,  -151,  -138,  -314,  -137,  -223,  -221,  -218,
  -246,  -244,  -314,  -314,  -256,  -314,  -314,  -262,  -258,  -314,
  -251,   -59,   -60,   -10,   -11,  -314,   -63,   -64,   -65,   -62,
  -314,   -67,   -68,   -70,   -30,  -314,   -34,   -28,   -31,  -314,
   -72,   -74,   -76,  -314,   -78,  -314,  -314,   -17,   -52,   -53,
   -54,   -57,   -56,  -314,    -4,  -314,  -314,  -314,  -285,  -314,
  -314,  -314,  -314,  -314,   -82,  -301,  -279,  -305,   -95,  -314,
  -281,  -213,  -216,  -204,  -314,  -314,  -200,  -201,  -202,  -314,
  -314,  -117,  -314,  -267,  -314,  -314,  -314,  -264,  -260,  -314,
  -263,  -257,  -259,   -12,   -13,   -21,  -314,  -314,   -29,   -27,
  -314,   -41,  -314,   -49,   -22,  -314,   -19,  -314,  -314,  -314,
    -3,   -20,  -314,  -314,  -314,  -314,  -314,  -314,  -314,  -280,
  -314,  -198,  -314,  -314,  -120,  -124,  -268,  -270,  -135,  -265,
  -261,   -24,   -35,   -80,  -314,    -8,    -5,    -6,    -2,    -7,
  -292,  -294,  -295,  -314,  -314,  -314,  -314,  -314,  -314,  -108,
  -125,  -314,  -314,  -314,   -50,    -9,  -314,  -314,  -314,  -314,
  -314,  -297,  -203,  -314,  -121,  -122,  -123,  -293,  -296,  -300,
  -299,  -298,  -314,  -314,  -119 ]

racc_goto_table = [
   173,   167,    82,   220,   238,     9,    77,   453,   257,    75,
    89,   141,   329,   385,   315,   364,   229,   187,   334,   117,
   125,   260,   256,   258,    46,   312,   395,   244,     9,   131,
   121,   105,   250,    94,   227,   252,   177,   377,    21,   184,
    88,   128,   421,   422,    10,    63,    57,    46,   137,   224,
   244,   228,    89,   231,   232,   233,   234,    89,    83,    67,
   404,    21,    89,    65,   246,    79,   263,    66,   285,   253,
    68,    35,   275,    71,   254,   118,   125,   125,    78,   404,
   235,   248,   265,   542,   295,   243,   542,   261,   185,   380,
   107,   240,   167,   271,    35,   313,   515,   189,   122,   518,
   323,   432,   380,    35,   554,   555,    35,   445,   446,   293,
   217,    35,   441,   442,   277,   411,   412,    35,   142,   431,
   430,   330,   461,   185,   507,   508,   296,   416,   417,   418,
   419,   423,   173,   167,    35,   398,   434,   345,   363,   145,
   217,   173,   167,    76,   391,   471,   368,   369,   370,   400,
    73,    35,   435,   425,    35,   329,   205,   229,   256,   390,
   376,   260,   443,   228,   231,   229,   279,   415,   356,   524,
   244,   438,   439,   440,   239,   456,    23,   361,    16,   nil,
   nil,   nil,   460,   nil,   nil,   nil,   nil,   173,   167,    35,
   nil,   nil,   nil,    89,   185,   nil,   nil,   nil,   nil,   173,
   167,    89,   nil,   167,   167,   nil,   426,   nil,   nil,   167,
   167,   167,   167,   nil,   nil,   nil,   125,   nil,   167,   167,
   167,   380,   396,   397,    40,   420,   nil,   167,   167,   167,
   nil,   167,   nil,   nil,   nil,   409,   nil,   nil,   167,   167,
   167,   167,   167,    71,    78,    77,   nil,    40,   454,   nil,
   277,   nil,   nil,   nil,   nil,   511,    40,   nil,   458,    40,
   205,    74,   nil,   nil,    40,   nil,   nil,   nil,   nil,   296,
    40,   nil,    54,   nil,   nil,   nil,   205,   205,   nil,    64,
   nil,   173,   167,   nil,   509,    54,   nil,    40,   nil,   493,
   nil,   nil,   nil,    72,   nil,   nil,   nil,   nil,   nil,   nil,
   136,   nil,    79,   nil,    40,   nil,   nil,    40,    87,   206,
   nil,   142,   nil,   nil,   nil,   562,   142,   462,   nil,   nil,
   nil,   nil,   173,   167,   316,   nil,   nil,   530,   531,   532,
   nil,   325,   142,   476,   nil,   142,   nil,   nil,   nil,   nil,
   452,   nil,    40,   nil,    35,   nil,   nil,   nil,   nil,    35,
   nil,   nil,   353,   nil,   nil,   nil,   167,   236,   479,    87,
   nil,   nil,   551,   517,   nil,    35,   nil,   nil,    35,   nil,
   nil,   557,   512,   559,   560,   561,   nil,   256,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   522,   380,   272,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   205,   nil,   nil,   523,
   167,   525,   167,   206,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   510,   nil,   538,   nil,   nil,   540,   513,   206,
   206,   nil,   nil,   nil,   316,   nil,   nil,   nil,   nil,   nil,
   142,   nil,   521,   545,   167,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   429,   nil,   nil,   nil,   433,   nil,
   nil,   nil,   316,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    35,   nil,   447,   358,   nil,   nil,   nil,
   449,   450,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    40,   nil,   nil,
   nil,   nil,    40,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    40,   nil,
   nil,    40,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   206,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    40,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   526,   nil,   527,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   533,   534,   535,   536 ]

racc_goto_check = [
     7,    16,    11,    46,    34,    56,    73,    83,    64,    72,
    45,    12,    81,    40,    10,    44,    68,    87,    81,    11,
    38,    52,    15,    34,    63,    18,    40,    43,    56,    70,
    54,    47,    43,    49,    53,    43,    30,    44,    57,    11,
    36,    47,    22,    22,    89,    63,    37,    63,    72,    45,
    43,    45,    45,    45,    45,    45,    45,    45,    88,    37,
    79,    57,    45,    50,    45,    63,    53,    89,    16,    62,
    57,    60,    78,    57,    11,    88,    38,    38,    57,    79,
    49,    47,    11,     3,    78,    49,     3,    54,    56,    10,
    48,    36,    16,    70,    60,    16,    42,    88,    48,    42,
    16,    26,    10,    60,    41,    41,    60,     4,     4,    11,
    63,    60,    19,    19,    72,    20,    20,    60,    57,    25,
    24,    87,    69,    56,    83,    83,    72,    21,    21,    21,
    21,    23,     7,    16,    60,    71,    27,    29,    46,    74,
    63,     7,    16,    75,    64,    40,    46,    46,    46,    77,
    31,    60,    10,    14,    60,    81,    60,    68,    15,    80,
    46,    52,    10,    45,    45,    68,    63,     8,    30,     6,
    43,    18,    18,    18,    35,    81,     2,    30,     1,   nil,
   nil,   nil,    81,   nil,   nil,   nil,   nil,     7,    16,    60,
   nil,   nil,   nil,    45,    56,   nil,   nil,   nil,   nil,     7,
    16,    45,   nil,    16,    16,   nil,    15,   nil,   nil,    16,
    16,    16,    16,   nil,   nil,   nil,    38,   nil,    16,    16,
    16,    10,    11,    30,    61,    12,   nil,    16,    16,    16,
   nil,    16,   nil,   nil,   nil,    30,   nil,   nil,    16,    16,
    16,    16,    16,    57,    57,    73,   nil,    61,    15,   nil,
    72,   nil,   nil,   nil,   nil,    44,    61,   nil,    15,    61,
    60,    61,   nil,   nil,    61,   nil,   nil,   nil,   nil,    72,
    61,   nil,    32,   nil,   nil,   nil,    60,    60,   nil,    32,
   nil,     7,    16,   nil,    81,    32,   nil,    61,   nil,    18,
   nil,   nil,   nil,    32,   nil,   nil,   nil,   nil,   nil,   nil,
    61,   nil,    63,   nil,    61,   nil,   nil,    61,    32,    61,
   nil,    57,   nil,   nil,   nil,    40,    57,    30,   nil,   nil,
   nil,   nil,     7,    16,     5,   nil,   nil,    81,    81,    81,
   nil,     5,    57,    12,   nil,    57,   nil,   nil,   nil,   nil,
    56,   nil,    61,   nil,    60,   nil,   nil,   nil,   nil,    60,
   nil,   nil,     5,   nil,   nil,   nil,    16,    32,    30,    32,
   nil,   nil,    81,    64,   nil,    60,   nil,   nil,    60,   nil,
   nil,    81,    34,    81,    81,    81,   nil,    15,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    15,    10,    32,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    60,   nil,   nil,     7,
    16,     7,    16,    61,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    45,   nil,    46,   nil,   nil,    46,    45,    61,
    61,   nil,   nil,   nil,     5,   nil,   nil,   nil,   nil,   nil,
    57,   nil,    11,     7,    16,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,     5,   nil,   nil,   nil,     5,   nil,
   nil,   nil,     5,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    60,   nil,     5,    32,   nil,   nil,   nil,
     5,     5,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    61,   nil,   nil,
   nil,   nil,    61,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    61,   nil,
   nil,    61,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    61,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    61,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,     5,   nil,     5,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,     5,     5,     5,     5 ]

racc_goto_pointer = [
   nil,   178,   176,  -432,  -218,   148,  -323,   -81,  -121,   nil,
  -162,   -44,   -69,   nil,  -150,   -97,   -80,   nil,  -147,  -209,
  -168,  -162,  -256,  -169,  -187,  -189,  -208,  -175,   nil,   -61,
   -45,   114,   257,   nil,   -97,    72,   -11,    31,   -45,   nil,
  -238,  -437,  -376,   -78,  -210,   -42,   -86,   -26,    33,   -19,
    41,   nil,  -100,   -58,   -35,   nil,     5,    38,   nil,   nil,
    71,   224,   -47,    24,  -111,   nil,   nil,   nil,   -78,  -238,
   -40,  -135,   -28,   -32,    59,   106,   nil,  -124,   -70,  -217,
   -96,  -175,   nil,  -328,   nil,   nil,   nil,   -68,    12,    44,
   nil ]

racc_goto_default = [
   nil,   nil,   nil,   497,   nil,   208,   nil,   211,   nil,   181,
   149,   188,   405,   159,   nil,   195,   198,   172,   174,   178,
   179,   147,   152,   155,   157,   160,   163,   166,   170,   nil,
   nil,   nil,   237,    55,   nil,   nil,   nil,   nil,   111,   383,
   nil,   nil,   nil,   103,   nil,   154,   nil,   nil,   nil,   nil,
   nil,   126,   127,   nil,   nil,     8,    84,    86,    61,    32,
    93,    95,    62,   223,   nil,     1,     6,    12,    90,   221,
   nil,   132,    38,    42,   nil,   nil,   139,   140,   406,   276,
   nil,   207,   209,   210,   212,   214,   216,   nil,   nil,   nil,
    17 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 123, :_reduce_1,
  2, 125, :_reduce_2,
  1, 125, :_reduce_3,
  1, 126, :_reduce_none,
  3, 126, :_reduce_5,
  3, 126, :_reduce_6,
  3, 126, :_reduce_none,
  1, 128, :_reduce_none,
  2, 128, :_reduce_none,
  1, 130, :_reduce_none,
  1, 130, :_reduce_none,
  2, 130, :_reduce_none,
  2, 130, :_reduce_none,
  1, 131, :_reduce_14,
  1, 131, :_reduce_15,
  1, 131, :_reduce_16,
  3, 131, :_reduce_17,
  1, 131, :_reduce_18,
  4, 131, :_reduce_19,
  4, 131, :_reduce_20,
  4, 131, :_reduce_21,
  4, 131, :_reduce_22,
  2, 131, :_reduce_23,
  5, 131, :_reduce_24,
  2, 131, :_reduce_25,
  1, 135, :_reduce_26,
  4, 135, :_reduce_none,
  3, 135, :_reduce_28,
  4, 135, :_reduce_29,
  3, 135, :_reduce_none,
  3, 135, :_reduce_none,
  2, 135, :_reduce_none,
  2, 135, :_reduce_none,
  1, 136, :_reduce_34,
  3, 136, :_reduce_35,
  1, 138, :_reduce_36,
  2, 138, :_reduce_none,
  2, 138, :_reduce_none,
  2, 138, :_reduce_39,
  2, 138, :_reduce_none,
  4, 138, :_reduce_none,
  1, 139, :_reduce_42,
  1, 139, :_reduce_43,
  1, 139, :_reduce_44,
  1, 139, :_reduce_45,
  1, 139, :_reduce_46,
  1, 139, :_reduce_47,
  1, 140, :_reduce_48,
  4, 140, :_reduce_49,
  6, 140, :_reduce_none,
  1, 141, :_reduce_51,
  3, 141, :_reduce_52,
  3, 141, :_reduce_53,
  3, 141, :_reduce_54,
  1, 142, :_reduce_55,
  3, 142, :_reduce_56,
  3, 142, :_reduce_57,
  1, 143, :_reduce_58,
  3, 143, :_reduce_59,
  3, 143, :_reduce_60,
  1, 144, :_reduce_61,
  3, 144, :_reduce_62,
  3, 144, :_reduce_63,
  3, 144, :_reduce_64,
  3, 144, :_reduce_65,
  1, 145, :_reduce_66,
  3, 145, :_reduce_67,
  3, 145, :_reduce_68,
  1, 146, :_reduce_69,
  3, 146, :_reduce_70,
  1, 147, :_reduce_71,
  3, 147, :_reduce_72,
  1, 148, :_reduce_73,
  3, 148, :_reduce_74,
  1, 149, :_reduce_75,
  3, 149, :_reduce_76,
  1, 150, :_reduce_77,
  3, 150, :_reduce_78,
  1, 129, :_reduce_79,
  5, 129, :_reduce_80,
  1, 137, :_reduce_81,
  3, 137, :_reduce_82,
  1, 151, :_reduce_83,
  1, 151, :_reduce_84,
  1, 151, :_reduce_85,
  1, 151, :_reduce_86,
  1, 151, :_reduce_87,
  1, 151, :_reduce_88,
  1, 151, :_reduce_89,
  1, 151, :_reduce_90,
  1, 151, :_reduce_91,
  1, 151, :_reduce_92,
  1, 151, :_reduce_93,
  1, 127, :_reduce_94,
  3, 127, :_reduce_none,
  1, 152, :_reduce_96,
  1, 153, :_reduce_97,
  3, 153, :_reduce_98,
  1, 155, :_reduce_99,
  3, 155, :_reduce_100,
  1, 156, :_reduce_101,
  1, 154, :_reduce_102,
  1, 154, :_reduce_103,
  1, 157, :_reduce_104,
  1, 159, :_reduce_105,
  4, 159, :_reduce_106,
  4, 159, :_reduce_107,
  7, 159, :_reduce_108,
  1, 160, :_reduce_109,
  1, 160, :_reduce_110,
  1, 161, :_reduce_111,
  1, 161, :_reduce_112,
  1, 161, :_reduce_113,
  1, 161, :_reduce_114,
  1, 161, :_reduce_115,
  1, 161, :_reduce_116,
  2, 162, :_reduce_none,
  1, 162, :_reduce_118,
  4, 163, :_reduce_119,
  1, 164, :_reduce_120,
  3, 164, :_reduce_121,
  3, 164, :_reduce_122,
  3, 164, :_reduce_none,
  5, 165, :_reduce_124,
  6, 165, :_reduce_125,
  3, 165, :_reduce_126,
  2, 169, :_reduce_127,
  3, 169, :_reduce_128,
  3, 169, :_reduce_129,
  3, 169, :_reduce_130,
  3, 170, :_reduce_131,
  2, 170, :_reduce_132,
  1, 172, :_reduce_133,
  4, 172, :_reduce_134,
  5, 173, :_reduce_135,
  2, 174, :_reduce_136,
  3, 174, :_reduce_137,
  3, 174, :_reduce_138,
  1, 176, :_reduce_139,
  2, 176, :_reduce_140,
  3, 177, :_reduce_141,
  3, 177, :_reduce_142,
  4, 177, :_reduce_143,
  3, 177, :_reduce_144,
  5, 177, :_reduce_145,
  4, 177, :_reduce_146,
  4, 177, :_reduce_147,
  3, 177, :_reduce_148,
  4, 177, :_reduce_149,
  4, 177, :_reduce_150,
  5, 177, :_reduce_151,
  2, 178, :_reduce_152,
  3, 178, :_reduce_153,
  1, 178, :_reduce_154,
  1, 179, :_reduce_155,
  2, 179, :_reduce_156,
  1, 179, :_reduce_157,
  2, 179, :_reduce_158,
  1, 179, :_reduce_159,
  2, 179, :_reduce_160,
  1, 180, :_reduce_161,
  3, 180, :_reduce_162,
  1, 184, :_reduce_163,
  3, 184, :_reduce_164,
  1, 181, :_reduce_165,
  1, 181, :_reduce_166,
  1, 181, :_reduce_167,
  1, 181, :_reduce_168,
  1, 181, :_reduce_169,
  1, 158, :_reduce_170,
  3, 158, :_reduce_171,
  1, 182, :_reduce_172,
  1, 182, :_reduce_173,
  1, 182, :_reduce_174,
  1, 182, :_reduce_175,
  1, 182, :_reduce_176,
  1, 182, :_reduce_177,
  1, 182, :_reduce_178,
  1, 182, :_reduce_179,
  1, 182, :_reduce_180,
  1, 182, :_reduce_181,
  1, 182, :_reduce_182,
  1, 182, :_reduce_183,
  1, 182, :_reduce_184,
  4, 182, :_reduce_185,
  1, 182, :_reduce_186,
  1, 182, :_reduce_187,
  1, 182, :_reduce_188,
  1, 182, :_reduce_189,
  5, 187, :_reduce_190,
  4, 187, :_reduce_191,
  2, 187, :_reduce_192,
  1, 189, :_reduce_193,
  1, 189, :_reduce_194,
  1, 171, :_reduce_195,
  2, 171, :_reduce_196,
  1, 166, :_reduce_197,
  3, 166, :_reduce_198,
  3, 190, :_reduce_199,
  4, 190, :_reduce_none,
  4, 190, :_reduce_none,
  4, 190, :_reduce_none,
  7, 190, :_reduce_none,
  4, 190, :_reduce_none,
  3, 190, :_reduce_none,
  2, 175, :_reduce_206,
  1, 175, :_reduce_207,
  2, 167, :_reduce_208,
  1, 167, :_reduce_209,
  2, 167, :_reduce_210,
  1, 167, :_reduce_211,
  1, 168, :_reduce_212,
  3, 168, :_reduce_213,
  1, 191, :_reduce_214,
  2, 191, :_reduce_215,
  3, 191, :_reduce_216,
  4, 188, :_reduce_217,
  5, 188, :_reduce_218,
  2, 188, :_reduce_219,
  1, 192, :_reduce_220,
  3, 192, :_reduce_221,
  1, 193, :_reduce_222,
  3, 193, :_reduce_223,
  1, 183, :_reduce_224,
  1, 183, :_reduce_225,
  1, 183, :_reduce_226,
  1, 183, :_reduce_227,
  2, 185, :_reduce_228,
  1, 185, :_reduce_229,
  1, 195, :_reduce_230,
  3, 195, :_reduce_none,
  4, 195, :_reduce_none,
  3, 195, :_reduce_none,
  4, 195, :_reduce_234,
  4, 195, :_reduce_235,
  3, 195, :_reduce_236,
  1, 194, :_reduce_237,
  2, 194, :_reduce_238,
  2, 194, :_reduce_239,
  3, 194, :_reduce_240,
  1, 197, :_reduce_241,
  2, 197, :_reduce_242,
  1, 134, :_reduce_243,
  3, 134, :_reduce_244,
  1, 198, :_reduce_245,
  3, 198, :_reduce_246,
  2, 199, :_reduce_247,
  2, 199, :_reduce_248,
  1, 199, :_reduce_249,
  1, 196, :_reduce_none,
  3, 196, :_reduce_none,
  1, 132, :_reduce_none,
  2, 132, :_reduce_none,
  1, 200, :_reduce_none,
  1, 200, :_reduce_none,
  2, 200, :_reduce_none,
  3, 201, :_reduce_none,
  2, 201, :_reduce_none,
  3, 201, :_reduce_none,
  3, 201, :_reduce_none,
  4, 201, :_reduce_none,
  2, 201, :_reduce_none,
  3, 201, :_reduce_none,
  3, 201, :_reduce_none,
  4, 201, :_reduce_none,
  1, 186, :_reduce_none,
  3, 186, :_reduce_none,
  4, 186, :_reduce_none,
  1, 202, :_reduce_none,
  3, 202, :_reduce_none,
  1, 203, :_reduce_271,
  1, 203, :_reduce_272,
  1, 203, :_reduce_273,
  1, 203, :_reduce_274,
  1, 203, :_reduce_275,
  1, 203, :_reduce_276,
  1, 203, :_reduce_277,
  1, 203, :_reduce_278,
  3, 204, :_reduce_none,
  4, 204, :_reduce_none,
  3, 204, :_reduce_none,
  2, 133, :_reduce_282,
  3, 133, :_reduce_283,
  3, 133, :_reduce_284,
  4, 133, :_reduce_285,
  1, 210, :_reduce_286,
  2, 210, :_reduce_287,
  1, 209, :_reduce_288,
  2, 209, :_reduce_289,
  1, 205, :_reduce_290,
  2, 205, :_reduce_291,
  5, 206, :_reduce_292,
  7, 206, :_reduce_293,
  5, 206, :_reduce_294,
  5, 207, :_reduce_none,
  7, 207, :_reduce_none,
  6, 207, :_reduce_none,
  7, 207, :_reduce_none,
  7, 207, :_reduce_none,
  7, 207, :_reduce_none,
  3, 208, :_reduce_none,
  2, 208, :_reduce_none,
  2, 208, :_reduce_none,
  2, 208, :_reduce_304,
  3, 208, :_reduce_305,
  1, 124, :_reduce_306,
  2, 124, :_reduce_307,
  1, 211, :_reduce_308,
  1, 211, :_reduce_309,
  4, 212, :_reduce_none,
  3, 212, :_reduce_none,
  3, 212, :_reduce_none,
  2, 212, :_reduce_none ]

racc_reduce_n = 314

racc_shift_n = 565

racc_token_table = {
  false => 0,
  :error => 1,
  ";" => 2,
  "{" => 3,
  "}" => 4,
  "," => 5,
  ":" => 6,
  "=" => 7,
  "(" => 8,
  ")" => 9,
  "[" => 10,
  "]" => 11,
  "." => 12,
  "&" => 13,
  "!" => 14,
  "~" => 15,
  "-" => 16,
  "+" => 17,
  "*" => 18,
  "/" => 19,
  "%" => 20,
  "<" => 21,
  ">" => 22,
  "^" => 23,
  "|" => 24,
  "?" => 25,
  :IDENTIFIER => 26,
  :CONSTANT => 27,
  :STRING_LITERAL => 28,
  :SYSTEM_LOC => 29,
  :SIZEOF => 30,
  :PTR_OP => 31,
  :INC_OP => 32,
  :DEC_OP => 33,
  :LEFT_OP => 34,
  :RIGHT_OP => 35,
  :LE_OP => 36,
  :GE_OP => 37,
  :EQ_OP => 38,
  :NE_OP => 39,
  :AND_OP => 40,
  :OR_OP => 41,
  :MUL_ASSIGN => 42,
  :DIV_ASSIGN => 43,
  :MOD_ASSIGN => 44,
  :ADD_ASSIGN => 45,
  :SUB_ASSIGN => 46,
  :LEFT_ASSIGN => 47,
  :RIGHT_ASSIGN => 48,
  :AND_ASSIGN => 49,
  :XOR_ASSIGN => 50,
  :OR_ASSIGN => 51,
  :TYPE_NAME => 52,
  :BOOLEAN => 53,
  :TYPEDEF => 54,
  :EXTERN => 55,
  :STATIC => 56,
  :AUTO => 57,
  :REGISTER => 58,
  :CHAR => 59,
  :SHORT => 60,
  :INT => 61,
  :LONG => 62,
  :SIGNED => 63,
  :UNSIGNED => 64,
  :FLOAT => 65,
  :DOUBLE => 66,
  :CONST => 67,
  :VOLATILE => 68,
  :VOID => 69,
  :STRUCT => 70,
  :UNION => 71,
  :ENUM => 72,
  :ELLIPSIS => 73,
  :CASE => 74,
  :DEFAULT => 75,
  :IF => 76,
  :ELSE => 77,
  :SWITCH => 78,
  :WHILE => 79,
  :DO => 80,
  :FOR => 81,
  :GOTO => 82,
  :CONTINUE => 83,
  :BREAK => 84,
  :RETURN => 85,
  :DECLSPEC => 86,
  :DLLIMPORT => 87,
  :DLLEXPORT => 88,
  :IMPORT => 89,
  :AT_INTERFACE => 90,
  :AT_IMPLEMENTATION => 91,
  :AT_PROTOCOL => 92,
  :AT_END => 93,
  :AT_CLASS => 94,
  :AT_PRIVATE => 95,
  :AT_PUBLIC => 96,
  :AT_PROTECTED => 97,
  :AT_ENCODE => 98,
  :AT_SELECTOR => 99,
  :AT_TRY => 100,
  :AT_CATCH => 101,
  :AT_THROW => 102,
  :AT_PROPERTY => 103,
  :AT_SYNTHESIZE => 104,
  :AT_OPTIONAL => 105,
  :AT_REQUIRED => 106,
  :WEAK => 107,
  :STRONG => 108,
  :SELF => 109,
  :AT_STRING_LITERAL => 110,
  :ID => 111,
  :SEL => 112,
  :BOOL => 113,
  :UNICHAR => 114,
  :CLASS => 115,
  :IN => 116,
  :OUT => 117,
  :INOUT => 118,
  :BYREF => 119,
  :BYCOPY => 120,
  :ONEWAY => 121 }

racc_nt_base = 122

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\";\"",
  "\"{\"",
  "\"}\"",
  "\",\"",
  "\":\"",
  "\"=\"",
  "\"(\"",
  "\")\"",
  "\"[\"",
  "\"]\"",
  "\".\"",
  "\"&\"",
  "\"!\"",
  "\"~\"",
  "\"-\"",
  "\"+\"",
  "\"*\"",
  "\"/\"",
  "\"%\"",
  "\"<\"",
  "\">\"",
  "\"^\"",
  "\"|\"",
  "\"?\"",
  "IDENTIFIER",
  "CONSTANT",
  "STRING_LITERAL",
  "SYSTEM_LOC",
  "SIZEOF",
  "PTR_OP",
  "INC_OP",
  "DEC_OP",
  "LEFT_OP",
  "RIGHT_OP",
  "LE_OP",
  "GE_OP",
  "EQ_OP",
  "NE_OP",
  "AND_OP",
  "OR_OP",
  "MUL_ASSIGN",
  "DIV_ASSIGN",
  "MOD_ASSIGN",
  "ADD_ASSIGN",
  "SUB_ASSIGN",
  "LEFT_ASSIGN",
  "RIGHT_ASSIGN",
  "AND_ASSIGN",
  "XOR_ASSIGN",
  "OR_ASSIGN",
  "TYPE_NAME",
  "BOOLEAN",
  "TYPEDEF",
  "EXTERN",
  "STATIC",
  "AUTO",
  "REGISTER",
  "CHAR",
  "SHORT",
  "INT",
  "LONG",
  "SIGNED",
  "UNSIGNED",
  "FLOAT",
  "DOUBLE",
  "CONST",
  "VOLATILE",
  "VOID",
  "STRUCT",
  "UNION",
  "ENUM",
  "ELLIPSIS",
  "CASE",
  "DEFAULT",
  "IF",
  "ELSE",
  "SWITCH",
  "WHILE",
  "DO",
  "FOR",
  "GOTO",
  "CONTINUE",
  "BREAK",
  "RETURN",
  "DECLSPEC",
  "DLLIMPORT",
  "DLLEXPORT",
  "IMPORT",
  "AT_INTERFACE",
  "AT_IMPLEMENTATION",
  "AT_PROTOCOL",
  "AT_END",
  "AT_CLASS",
  "AT_PRIVATE",
  "AT_PUBLIC",
  "AT_PROTECTED",
  "AT_ENCODE",
  "AT_SELECTOR",
  "AT_TRY",
  "AT_CATCH",
  "AT_THROW",
  "AT_PROPERTY",
  "AT_SYNTHESIZE",
  "AT_OPTIONAL",
  "AT_REQUIRED",
  "WEAK",
  "STRONG",
  "SELF",
  "AT_STRING_LITERAL",
  "ID",
  "SEL",
  "BOOL",
  "UNICHAR",
  "CLASS",
  "IN",
  "OUT",
  "INOUT",
  "BYREF",
  "BYCOPY",
  "ONEWAY",
  "$start",
  "target",
  "translation_unit",
  "selector_component",
  "selector_with_arguments",
  "expression",
  "struct_component_expression",
  "conditional_expression",
  "selector",
  "primary_expression",
  "type_name",
  "compound_statement",
  "parameter_type_list",
  "postfix_expression",
  "argument_expression_list",
  "assignment_expression",
  "unary_expression",
  "unary_operator",
  "cast_expression",
  "multiplicative_expression",
  "additive_expression",
  "shift_expression",
  "relational_expression",
  "equality_expression",
  "and_expression",
  "exclusive_or_expression",
  "inclusive_or_expression",
  "logical_and_expression",
  "logical_or_expression",
  "assignment_operator",
  "constant_expression",
  "class_name_list",
  "class_identifier_or_type_name",
  "class_with_superclass",
  "category_name",
  "inherited_protocols",
  "protocol_list",
  "class_name_declaration",
  "class_or_instance_method_specifier",
  "do_atribute_specifier",
  "objc_declaration_specifiers",
  "selector_argument_declaration",
  "selector_with_argument_declaration",
  "method_declaration",
  "property_attributes_list",
  "specifier_qualifier_list",
  "struct_declarator_list",
  "method_declaration_list",
  "ivar_declaration_list",
  "struct_declaration_list",
  "class_implementation",
  "method_implementation_declaration",
  "method_implementation",
  "ivar_list",
  "method_implementation_list",
  "objc_declaration",
  "declaration",
  "declaration_specifiers",
  "init_declarator_list",
  "storage_class_specifier",
  "type_specifier",
  "type_qualifier",
  "init_declarator",
  "declarator",
  "initializer",
  "struct_or_union_specifier",
  "enum_specifier",
  "struct_or_union",
  "struct_declaration",
  "struct_declarator",
  "enumerator_list",
  "enumerator",
  "pointer",
  "direct_declarator",
  "identifier_list",
  "type_qualifier_list",
  "parameter_list",
  "parameter_declaration",
  "abstract_declarator",
  "direct_abstract_declarator",
  "initializer_list",
  "statement",
  "labeled_statement",
  "expression_statement",
  "selection_statement",
  "iteration_statement",
  "jump_statement",
  "statement_list",
  "declaration_list",
  "external_declaration",
  "function_definition" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'objective_c.rb.y', 45)
  def _reduce_1(val, _values, result)
     @result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 48)
  def _reduce_2(val, _values, result)
     result = make_node(':', val[0], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 49)
  def _reduce_3(val, _values, result)
     result = make_node(':', nil, nil) 
    result
  end
.,.,

# reduce 4 omitted

module_eval(<<'.,.,', 'objective_c.rb.y', 54)
  def _reduce_5(val, _values, result)
     result = make_node(':', val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 56)
  def _reduce_6(val, _values, result)
        	  val[1].right = val[2]
    	  result = make_node(',', val[0], val[1])
    	
    result
  end
.,.,

# reduce 7 omitted

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

module_eval(<<'.,.,', 'objective_c.rb.y', 75)
  def _reduce_14(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 76)
  def _reduce_15(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 77)
  def _reduce_16(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 78)
  def _reduce_17(val, _values, result)
     result = make_node('(', val[1], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 79)
  def _reduce_18(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 80)
  def _reduce_19(val, _values, result)
     result = make_node('M', val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 81)
  def _reduce_20(val, _values, result)
     result = make_node('M', val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 82)
  def _reduce_21(val, _values, result)
     result = node_set_children(val[0], val[2], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 83)
  def _reduce_22(val, _values, result)
     result = node_set_children(val[0], val[2], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 85)
  def _reduce_23(val, _values, result)
     result = make_node('b', nil, val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 86)
  def _reduce_24(val, _values, result)
     result = make_node('b', val[2], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 87)
  def _reduce_25(val, _values, result)
     result = make_node('d', val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 91)
  def _reduce_26(val, _values, result)
     result = val[0] 
    result
  end
.,.,

# reduce 27 omitted

module_eval(<<'.,.,', 'objective_c.rb.y', 93)
  def _reduce_28(val, _values, result)
     result = make_node('f', val[0], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 94)
  def _reduce_29(val, _values, result)
     result = make_node('f', val[0], val[2]) 
    result
  end
.,.,

# reduce 30 omitted

# reduce 31 omitted

# reduce 32 omitted

# reduce 33 omitted

module_eval(<<'.,.,', 'objective_c.rb.y', 103)
  def _reduce_34(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 104)
  def _reduce_35(val, _values, result)
     result = make_node(',', val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 108)
  def _reduce_36(val, _values, result)
     result = val[0] 
    result
  end
.,.,

# reduce 37 omitted

# reduce 38 omitted

module_eval(<<'.,.,', 'objective_c.rb.y', 111)
  def _reduce_39(val, _values, result)
     result = make_node(',', val[0], val[1]) 
    result
  end
.,.,

# reduce 40 omitted

# reduce 41 omitted

module_eval(<<'.,.,', 'objective_c.rb.y', 117)
  def _reduce_42(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 118)
  def _reduce_43(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 119)
  def _reduce_44(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 120)
  def _reduce_45(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 121)
  def _reduce_46(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 122)
  def _reduce_47(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 126)
  def _reduce_48(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 127)
  def _reduce_49(val, _values, result)
     result = make_node('c', val[1], val[3]) 
    result
  end
.,.,

# reduce 50 omitted

module_eval(<<'.,.,', 'objective_c.rb.y', 132)
  def _reduce_51(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 133)
  def _reduce_52(val, _values, result)
     result = make_node('*', val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 134)
  def _reduce_53(val, _values, result)
     result = make_node('/', val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 135)
  def _reduce_54(val, _values, result)
     result = make_node('%', val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 139)
  def _reduce_55(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 140)
  def _reduce_56(val, _values, result)
     result = make_node('+', val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 141)
  def _reduce_57(val, _values, result)
     result = make_node('-', val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 145)
  def _reduce_58(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 146)
  def _reduce_59(val, _values, result)
     result = make_node(:LEFT_OP, val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 147)
  def _reduce_60(val, _values, result)
     result = make_node(:RIGHT_OP, val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 151)
  def _reduce_61(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 152)
  def _reduce_62(val, _values, result)
     result = make_node('<', val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 153)
  def _reduce_63(val, _values, result)
     result = make_node('>', val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 154)
  def _reduce_64(val, _values, result)
     result = make_node(:LE_OP, val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 155)
  def _reduce_65(val, _values, result)
     result = make_node(:GE_OP, val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 159)
  def _reduce_66(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 160)
  def _reduce_67(val, _values, result)
     result = make_node(:EQ_OP, val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 161)
  def _reduce_68(val, _values, result)
     result = make_node(:NE_OP, val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 165)
  def _reduce_69(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 166)
  def _reduce_70(val, _values, result)
     result = make_node('&', val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 170)
  def _reduce_71(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 171)
  def _reduce_72(val, _values, result)
     result = make_node('^', val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 175)
  def _reduce_73(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 176)
  def _reduce_74(val, _values, result)
     result = make_node('|', val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 180)
  def _reduce_75(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 181)
  def _reduce_76(val, _values, result)
     result = make_node(:AND_OP, val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 185)
  def _reduce_77(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 186)
  def _reduce_78(val, _values, result)
     result = make_node(:OR_OP, val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 190)
  def _reduce_79(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 191)
  def _reduce_80(val, _values, result)
     result = make_node('?', val[0], make_node(',', val[2], val[4])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 195)
  def _reduce_81(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 196)
  def _reduce_82(val, _values, result)
     result = node_set_children(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 200)
  def _reduce_83(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 201)
  def _reduce_84(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 202)
  def _reduce_85(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 203)
  def _reduce_86(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 204)
  def _reduce_87(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 205)
  def _reduce_88(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 206)
  def _reduce_89(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 207)
  def _reduce_90(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 208)
  def _reduce_91(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 209)
  def _reduce_92(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 210)
  def _reduce_93(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 214)
  def _reduce_94(val, _values, result)
     result = val[0] 
    result
  end
.,.,

# reduce 95 omitted

module_eval(<<'.,.,', 'objective_c.rb.y', 219)
  def _reduce_96(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 223)
  def _reduce_97(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 224)
  def _reduce_98(val, _values, result)
     result = make_node(',', val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 228)
  def _reduce_99(val, _values, result)
     result = make_node(',', val[0], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 229)
  def _reduce_100(val, _values, result)
     result = make_node(',', val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 233)
  def _reduce_101(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 237)
  def _reduce_102(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 238)
  def _reduce_103(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 242)
  def _reduce_104(val, _values, result)
    result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 247)
  def _reduce_105(val, _values, result)
        	    result = make_node(',', val[0], make_node(',', nil, nil))
    	    register_class_name_from_declaration(val[0].left.value)
    	  
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 251)
  def _reduce_106(val, _values, result)
        	    result = make_node(',', val[0], make_node(',', val[2], nil))
    	    register_class_name_from_declaration(val[0].left.value)
    	  
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 255)
  def _reduce_107(val, _values, result)
        	    result = make_node(',', val[0], make_node(',', nil, val[2]))
    	    register_class_name_from_declaration(val[0].left.value)
    	  
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 259)
  def _reduce_108(val, _values, result)
        	    result = make_node(',', val[0], make_node(',', val[2], val[5]))
    	    register_class_name_from_declaration(val[0].left.value)
    	  
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 265)
  def _reduce_109(val, _values, result)
     result =  val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 266)
  def _reduce_110(val, _values, result)
     result =  val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 270)
  def _reduce_111(val, _values, result)
     result =  val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 271)
  def _reduce_112(val, _values, result)
     result =  val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 272)
  def _reduce_113(val, _values, result)
     result =  val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 273)
  def _reduce_114(val, _values, result)
     result =  val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 274)
  def _reduce_115(val, _values, result)
     result =  val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 275)
  def _reduce_116(val, _values, result)
     result =  val[0] 
    result
  end
.,.,

# reduce 117 omitted

module_eval(<<'.,.,', 'objective_c.rb.y', 280)
  def _reduce_118(val, _values, result)
     result =  val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 284)
  def _reduce_119(val, _values, result)
     result =  make_node(',', val[1], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 288)
  def _reduce_120(val, _values, result)
     result =  val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 289)
  def _reduce_121(val, _values, result)
     result =  make_node(':', val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 290)
  def _reduce_122(val, _values, result)
     result =  make_node(',', val[0], make_node(':', val[1], val[2])) 
    result
  end
.,.,

# reduce 123 omitted

module_eval(<<'.,.,', 'objective_c.rb.y', 296)
  def _reduce_124(val, _values, result)
        	    result = make_node('m', make_node(',', val[0], val[2]), val[4])
    	  
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 299)
  def _reduce_125(val, _values, result)
        	    result = make_node(:AT_PROPERTY, val[2], make_node(',', val[4],val[5]))
    	  
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 302)
  def _reduce_126(val, _values, result)
          	  result = make_node(:AT_PROPERTY, nil, make_node(',', val[1],val[2]))
      	
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 307)
  def _reduce_127(val, _values, result)
     result =  val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 308)
  def _reduce_128(val, _values, result)
     result =  make_node(:AT_OPTIONAL, val[1], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 309)
  def _reduce_129(val, _values, result)
     result =  make_node(:AT_REQUIRED, val[1], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 310)
  def _reduce_130(val, _values, result)
     result =  make_node(',', val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 314)
  def _reduce_131(val, _values, result)
     result =  val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 315)
  def _reduce_132(val, _values, result)
     result =  nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 319)
  def _reduce_133(val, _values, result)
     result = make_node(',', val[0], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 320)
  def _reduce_134(val, _values, result)
     result = make_node(',', val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 325)
  def _reduce_135(val, _values, result)
      	      result = make_node(',', make_node(',', val[0], val[2]), val[4])
  	    
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 330)
  def _reduce_136(val, _values, result)
     result = make_node('m', val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 331)
  def _reduce_137(val, _values, result)
     result = make_node('m', val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 332)
  def _reduce_138(val, _values, result)
     result = make_node(:AT_SYNTHESIZE, val[1], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 336)
  def _reduce_139(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 337)
  def _reduce_140(val, _values, result)
     result = make_node(',', val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 341)
  def _reduce_141(val, _values, result)
     result = node_set_children(val[0], val[1], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 342)
  def _reduce_142(val, _values, result)
     result = node_set_children(val[0], val[1], nil)	
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 343)
  def _reduce_143(val, _values, result)
     result = node_set_children(val[0], val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 344)
  def _reduce_144(val, _values, result)
     result = node_set_children(val[0], make_node(',', val[1], nil), nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 345)
  def _reduce_145(val, _values, result)
     result = node_set_children(val[0], make_node(',', val[1], val[2]), val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 346)
  def _reduce_146(val, _values, result)
     result = node_set_children(val[0], make_node(',', val[1], val[2]), nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 347)
  def _reduce_147(val, _values, result)
     result = node_set_children(val[0], make_node(',', val[1], nil), val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 348)
  def _reduce_148(val, _values, result)
     result = node_set_children(val[0], make_node(',', val[1], nil), nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 349)
  def _reduce_149(val, _values, result)
     result = node_set_children(val[0], make_node(',', val[1], val[2]), nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 350)
  def _reduce_150(val, _values, result)
     result = node_set_children(val[0], make_node(',', val[1], nil), val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 351)
  def _reduce_151(val, _values, result)
     result = node_set_children(val[0], make_node(',', val[1], val[2]), val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 355)
  def _reduce_152(val, _values, result)
     result = make_node('d', val[0], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 356)
  def _reduce_153(val, _values, result)
     result = make_node('d', val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 357)
  def _reduce_154(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 361)
  def _reduce_155(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 362)
  def _reduce_156(val, _values, result)
     result = make_node(',', val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 363)
  def _reduce_157(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 364)
  def _reduce_158(val, _values, result)
     result = make_node(',', val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 365)
  def _reduce_159(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 366)
  def _reduce_160(val, _values, result)
     result = make_node(',', val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 370)
  def _reduce_161(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 371)
  def _reduce_162(val, _values, result)
     result = make_node(',', val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 375)
  def _reduce_163(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 376)
  def _reduce_164(val, _values, result)
     result = make_node('=', val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 380)
  def _reduce_165(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 381)
  def _reduce_166(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 382)
  def _reduce_167(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 383)
  def _reduce_168(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 384)
  def _reduce_169(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 388)
  def _reduce_170(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 389)
  def _reduce_171(val, _values, result)
     result = make_node(',', val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 392)
  def _reduce_172(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 393)
  def _reduce_173(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 394)
  def _reduce_174(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 395)
  def _reduce_175(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 396)
  def _reduce_176(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 397)
  def _reduce_177(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 398)
  def _reduce_178(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 399)
  def _reduce_179(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 400)
  def _reduce_180(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 401)
  def _reduce_181(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 402)
  def _reduce_182(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 403)
  def _reduce_183(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 404)
  def _reduce_184(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 405)
  def _reduce_185(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 406)
  def _reduce_186(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 407)
  def _reduce_187(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 408)
  def _reduce_188(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 409)
  def _reduce_189(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 413)
  def _reduce_190(val, _values, result)
     result = make_node(val[0], val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 414)
  def _reduce_191(val, _values, result)
     result = make_node(val[0], nil, val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 415)
  def _reduce_192(val, _values, result)
     result = make_node(val[0], val[1], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 419)
  def _reduce_193(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 420)
  def _reduce_194(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 424)
  def _reduce_195(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 425)
  def _reduce_196(val, _values, result)
     result = make_node(',', val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 429)
  def _reduce_197(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 430)
  def _reduce_198(val, _values, result)
     result = make_node(',', val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 434)
  def _reduce_199(val, _values, result)
     result = make_node('i', val[0], val[1]) 
    result
  end
.,.,

# reduce 200 omitted

# reduce 201 omitted

# reduce 202 omitted

# reduce 203 omitted

# reduce 204 omitted

# reduce 205 omitted

module_eval(<<'.,.,', 'objective_c.rb.y', 444)
  def _reduce_206(val, _values, result)
     result = make_node(',', val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 445)
  def _reduce_207(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 449)
  def _reduce_208(val, _values, result)
     result = make_node(',', val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 450)
  def _reduce_209(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 451)
  def _reduce_210(val, _values, result)
     result = make_node(',', val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 452)
  def _reduce_211(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 456)
  def _reduce_212(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 457)
  def _reduce_213(val, _values, result)
     result = make_node(',', val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 461)
  def _reduce_214(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 462)
  def _reduce_215(val, _values, result)
     result = make_node(':', nil, val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 463)
  def _reduce_216(val, _values, result)
     result = make_node(':', val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 467)
  def _reduce_217(val, _values, result)
     result = node_set_children(val[0], nil, val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 468)
  def _reduce_218(val, _values, result)
     result = node_set_children(val[0], val[1], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 469)
  def _reduce_219(val, _values, result)
     result = node_set_children(val[0], val[1], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 473)
  def _reduce_220(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 474)
  def _reduce_221(val, _values, result)
     result = make_node(',', val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 478)
  def _reduce_222(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 479)
  def _reduce_223(val, _values, result)
     result = make_node('=', val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 483)
  def _reduce_224(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 484)
  def _reduce_225(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 485)
  def _reduce_226(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 486)
  def _reduce_227(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 490)
  def _reduce_228(val, _values, result)
     result = make_node('*', val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 491)
  def _reduce_229(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 495)
  def _reduce_230(val, _values, result)
     result = val[0] 
    result
  end
.,.,

# reduce 231 omitted

# reduce 232 omitted

# reduce 233 omitted

module_eval(<<'.,.,', 'objective_c.rb.y', 499)
  def _reduce_234(val, _values, result)
     result = make_node('f', val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 500)
  def _reduce_235(val, _values, result)
     result = make_node('f', val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 501)
  def _reduce_236(val, _values, result)
     result = make_node('f', val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 505)
  def _reduce_237(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 506)
  def _reduce_238(val, _values, result)
     result = make_node(val[0], val[1], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 507)
  def _reduce_239(val, _values, result)
     result = make_node(val[0], val[1], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 508)
  def _reduce_240(val, _values, result)
     result = make_node(val[0], val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 512)
  def _reduce_241(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 513)
  def _reduce_242(val, _values, result)
     result = make_node(',', val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 517)
  def _reduce_243(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 518)
  def _reduce_244(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 522)
  def _reduce_245(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 523)
  def _reduce_246(val, _values, result)
     result = make_node(',', val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 527)
  def _reduce_247(val, _values, result)
     result = make_node('d', val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 528)
  def _reduce_248(val, _values, result)
     result = make_node('d', val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 529)
  def _reduce_249(val, _values, result)
     result = val[0] 
    result
  end
.,.,

# reduce 250 omitted

# reduce 251 omitted

# reduce 252 omitted

# reduce 253 omitted

# reduce 254 omitted

# reduce 255 omitted

# reduce 256 omitted

# reduce 257 omitted

# reduce 258 omitted

# reduce 259 omitted

# reduce 260 omitted

# reduce 261 omitted

# reduce 262 omitted

# reduce 263 omitted

# reduce 264 omitted

# reduce 265 omitted

# reduce 266 omitted

# reduce 267 omitted

# reduce 268 omitted

# reduce 269 omitted

# reduce 270 omitted

module_eval(<<'.,.,', 'objective_c.rb.y', 572)
  def _reduce_271(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 574)
  def _reduce_272(val, _values, result)
     result = make_node('{', val[0], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 575)
  def _reduce_273(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 576)
  def _reduce_274(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 577)
  def _reduce_275(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 578)
  def _reduce_276(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 579)
  def _reduce_277(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 580)
  def _reduce_278(val, _values, result)
     result = val[0] 
    result
  end
.,.,

# reduce 279 omitted

# reduce 280 omitted

# reduce 281 omitted

module_eval(<<'.,.,', 'objective_c.rb.y', 590)
  def _reduce_282(val, _values, result)
     result = nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 591)
  def _reduce_283(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 592)
  def _reduce_284(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 593)
  def _reduce_285(val, _values, result)
     result = make_node(',', val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 597)
  def _reduce_286(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 598)
  def _reduce_287(val, _values, result)
     result = make_node(',', val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 602)
  def _reduce_288(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 603)
  def _reduce_289(val, _values, result)
     result = make_node(',', val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 607)
  def _reduce_290(val, _values, result)
     result = node_set_children(val[0], nil, nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 608)
  def _reduce_291(val, _values, result)
     result = node_set_children(val[1], val[0], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 612)
  def _reduce_292(val, _values, result)
     result = node_set_children(val[0], make_node(',', val[2], val[4]), nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 613)
  def _reduce_293(val, _values, result)
     result = node_set_children(val[0], make_node(',', val[2], val[4]), node_set_children(val[5], val[6], nil)) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 614)
  def _reduce_294(val, _values, result)
     result = node_set_children(val[0], val[2], val[4]) 
    result
  end
.,.,

# reduce 295 omitted

# reduce 296 omitted

# reduce 297 omitted

# reduce 298 omitted

# reduce 299 omitted

# reduce 300 omitted

# reduce 301 omitted

# reduce 302 omitted

# reduce 303 omitted

module_eval(<<'.,.,', 'objective_c.rb.y', 630)
  def _reduce_304(val, _values, result)
     result = node_set_children(val[0], nil, nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 631)
  def _reduce_305(val, _values, result)
     result = node_set_children(val[0], val[1], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 635)
  def _reduce_306(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 636)
  def _reduce_307(val, _values, result)
     result = make_node ',', val[0], val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 641)
  def _reduce_308(val, _values, result)
        	    result = val[0]
    	    deal_with_declaration(result)
    	  
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 645)
  def _reduce_309(val, _values, result)
        	    result = val[0]
    	    deal_with_declaration(result)
    	  
    result
  end
.,.,

# reduce 310 omitted

# reduce 311 omitted

# reduce 312 omitted

# reduce 313 omitted

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class ObjectiveCParser
  end   # module Vienna

# stuff that will come after the definition of ObjectiveCParser
