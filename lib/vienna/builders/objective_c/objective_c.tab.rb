#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.6
# from Racc grammer file "".
#

require 'racc/parser.rb'

# stuff that will come before the definition of ObjectiveCParser
require 'strscan'
module Vienna
  class ObjectiveCParser < Racc::Parser

module_eval(<<'...end objective_c.rb.y/module_eval...', 'objective_c.rb.y', 662)
	# inside the class definition of ObjectiveCParser
	
	attr_reader :result
	
	def next_token
	  
	  scanner = current_scanner()
	  return [false, false] if scanner.nil?
	  
	  case
      #
      # Pre-processor macros
      #
      when scanner.scan(/(#include|#import)/)
        pp_directive = scanner.scan_until(/.*/).strip!
        re = /[\<|\"](.*)\/(.*\.h)[\>|\"]/
        md = re.match(pp_directive)
        if md
          import_file(md[2], md[1])
        else
          re = /\"(.*\.h)\"/
          md = re.match(pp_directive)
          if md
            import_file(md[1], nil)
          else
            puts "Should throw error: malformed import declaration"
          end
        end
        return next_token()
      
      when scanner.scan(/#define/)
        pp_directive = scanner.scan_until(/.*/).strip!
        # puts " # Define Directive: #{pp_directive}"
        return next_token()
        
      when scanner.scan(/#undef/)
        pp_directive = scanner.scan_until(/.*/).strip!
        # puts " # Undef Directive: #{pp_directive}" 
      
      when scanner.scan(/\n/)
        @parsing_stack.last.current_line += 1
        return next_token()
      when scanner.scan(/[ \t\v\f]/)
        return next_token()
      when scanner.scan(/[\t ]+/)
        return next_token()
        
      #
      # Plain good old C key words
      #
      when scanner.scan(/\/\*/)
        # multi-line comment. scan input until end of multi line comment is found
        match = scanner.scan_until(/\*\//)
        @parsing_stack.last.current_line += match.scan(/\n/).size
        return next_token()
      when scanner.scan(/\/\//)
        #single line comment. scan all input (does not include new line char, so skips)
        scanner.scan_until(/.*/)
        return next_token()
      when scanner.scan(/auto(?!([a-zA-Z_]|[0-9]))/)
        return make_token(:AUTO, :AUTO)
      when scanner.scan(/break(?!([a-zA-Z_]|[0-9]))/)
        return make_token(:BREAK, :BREAK)
      when scanner.scan(/case(?!([a-zA-Z_]|[0-9]))/)
        return make_token(:CASE, :CASE)
      when scanner.scan(/char(?!([a-zA-Z_]|[0-9]))/)
        return make_token(:CHAR, "char")
      when scanner.scan(/const(?!([a-zA-Z_]|[0-9]))/)
        # return make_token(:CONST, :CONST)
        return next_token()
      when scanner.scan(/continue(?!([a-zA-Z_]|[0-9]))/)
        return make_token(:CONTINUE, :CONTINUE)
      when scanner.scan(/default(?!([a-zA-Z_]|[0-9]))/)
        return make_token(:DEFAULT, :DEFAULT)
      when scanner.scan(/do(?!([a-zA-Z_]|[0-9]))/)
        return make_token(:DO, :DO)
      when scanner.scan(/double(?!([a-zA-Z_]|[0-9]))/)
        return make_token(:DOUBLE, :DOUBLE)
      when scanner.scan(/else(?!([a-zA-Z_]|[0-9]))/)
        return make_token(:ELSE, :ELSE)
      when scanner.scan(/enum(?!([a-zA-Z_]|[0-9]))/)
        return make_token(:ENUM, :ENUM)
      when scanner.scan(/extern(?!([a-zA-Z_]|[0-9]))/)
        return make_token(:EXTERN, :EXTERN)
      when scanner.scan(/float(?!([a-zA-Z_]|[0-9]))/)
        return make_token(:FLOAT, "float")
      when scanner.scan(/for(?!([a-zA-Z_]|[0-9]))/)
        return make_token(:FOR, :FOR)
      when scanner.scan(/goto(?!([a-zA-Z_]|[0-9]))/)
        return make_token(:GOTO, :GOTO)
      when scanner.scan(/if(?!([a-zA-Z_]|[0-9]))/)
        return make_token(:IF, :IF)
      when scanner.scan(/in(?!([a-zA-Z_]|[0-9]))/)
        return make_token(:IN, :IN)
      when scanner.scan(/int(?!([a-zA-Z_]|[0-9]))/)
	      return make_token(:INT, "int")
      when scanner.scan(/long(?!([a-zA-Z_]|[0-9]))/)
        return make_token(:LONG, :LONG)
      when scanner.scan(/register(?!([a-zA-Z_]|[0-9]))/)
        return make_token(:REGISTER, :REGISTER)
      when scanner.scan(/return(?!([a-zA-Z_]|[0-9]))/)
        return make_token(:RETURN, :RETURN)
      when scanner.scan(/short(?!([a-zA-Z_]|[0-9]))/)
        return make_token(:SHORT, :SHORT)
      when scanner.scan(/signed(?!([a-zA-Z_]|[0-9]))/)
      #        return make_token(:SIGNED, :SIGNED)
          return next_token()
      when scanner.scan(/sizeof(?!([a-zA-Z_]|[0-9]))/)
        return make_token(:SIZEOF, :SIZEOF)
      when scanner.scan(/static(?!([a-zA-Z_]|[0-9]))/)
        return make_token(:STATIC, :STATIC)
      when scanner.scan(/struct(?!([a-zA-Z_]|[0-9]))/)
        return make_token(:STRUCT, :STRUCT)
      when scanner.scan(/switch(?!([a-zA-Z_]|[0-9]))/)
        return make_token(:SWITCH, :SWITCH)
      when scanner.scan(/typedef(?!([a-zA-Z_]|[0-9]))/)
        return make_token(:TYPEDEF, :TYPEDEF)
      when scanner.scan(/union(?!([a-zA-Z_]|[0-9]))/)
        return make_token(:UNION, :UNION)
      when scanner.scan(/unsigned(?!([a-zA-Z_]|[0-9]))/)
              # return make_token(:UNSIGNED, :UNSIGNED)
              return next_token()
      when scanner.scan(/void(?!([a-zA-Z_]|[0-9]))/)
        return make_token(:VOID, :VOID)
      when scanner.scan(/volatile(?!([a-zA-Z_]|[0-9]))/)
        return make_token(:VOLATILE, :VOLATILE)
      when scanner.scan(/while(?!([a-zA-Z_]|[0-9]))/)
        return make_token(:WHILE, :WHILE)
        
      #  
      # Objective-C 1.0
      # 
      when scanner.scan(/@interface/)
        return make_token(:AT_INTERFACE, :AT_INTERFACE)
      when scanner.scan(/@implementation/)
        return make_token(:AT_IMPLEMENTATION, :AT_IMPLEMENTATION)
      when scanner.scan(/@end/)
        return make_token(:AT_END, :AT_END)
      when scanner.scan(/@class/)
        return make_token(:AT_CLASS, :AT_CLASS)
      when scanner.scan(/@protocol/)
        return make_token(:AT_PROTOCOL, :AT_PROTOCOL)
      when scanner.scan(/@selector/)
        return make_token(:AT_SELECTOR, :AT_SELECTOR)
      when scanner.scan(/@encode/)
        return make_token(:AT_ENCODE, :AT_ENCODE)
      when scanner.scan(/@try/)
        return make_token(:AT_TRY, :AT_TRY)
      when scanner.scan(/@catch/)
        return make_token(:AT_CATCH, :AT_CATCH)
      when scanner.scan(/@protected/)
        return make_token(:AT_PROTECTED, :AT_PROTECTED)
      when scanner.scan(/@private/)
        return make_token(:AT_PRIVATE, :AT_PRIVATE)
      when scanner.scan(/@public/)
        return make_token(:AT_PUBLIC, :AT_PUBLIC)

      when match = scanner.scan(/@\"(\\.|[^\\"])*\"/)
        return make_token(:AT_STRING_LITERAL, match)
      
      # when scanner.scan(/self/)
      #         return make_token(:IDENTIFIER, "self")
        # return make_token(:IDENTIFIER, "self"]
           
      #
      # Objective-C 2.0
      #
      when scanner.scan(/@property/)
        return make_token(:AT_PROPERTY, :AT_PROPERTY)
      when scanner.scan(/@synthesize/)
        return make_token(:AT_SYNTHESIZE, :AT_SYNTHESIZE)
      when scanner.scan(/@optional/)
        return make_token(:AT_OPTIONAL, :AT_OPTIONAL)
      when scanner.scan(/@required/)
        return make_token(:AT_REQUIRED, :AT_REQUIRED)
      
      #
      # C constants, identifiers and string literals
      #
      when match = scanner.scan(/id(?!([a-zA-Z_]|[0-9]))/)
       return make_token(:TYPE_NAME, match)
      when match = scanner.scan(/BOOL(?!([a-zA-Z_]|[0-9]))/)
        return make_token(:TYPE_NAME, match)
      when match = scanner.scan(/[0-9]*\.[0-9]+([Ee][+-]?[0-9]+)?(f|F|l|L)?/) # {D}*"."{D}+({E})?{FS}?
       return make_token(:CONSTANT, match)
      when match = scanner.scan(/[0-9]+\.[0-9]*([Ee][+-]?[0-9]+)?(f|F|l|L)?/) # {D}+"."{D}*({E})?{FS}?
       return make_token(:CONSTANT, match)
      when match = scanner.scan(/[a-zA-Z_]([a-zA-Z_]|[0-9])*/)
        return lookup_type(match)
      when match = scanner.scan(/[a-zA-Z_]([a-zA-Z_])*/)
        return lookup_type(match)
      when match = scanner.scan(/0[xX][a-fA-F0-9]+(u|U|l|L)?/)
        return make_token(:CONSTANT, match)
      when match = scanner.scan(/0[0-9]+(u|U|l|L)?/)
        return make_token(:CONSTANT, match)
      when match = scanner.scan(/[0-9]+(u|U|l|L)?/) # {D}+{IS}?
        return make_token(:CONSTANT, match)
      #when match = scanner.scan(//) # L?'(\\.|[^\\'])+'
      #  return make_token(:CONSTANT, match]
      #when match = scanner.scan(//) # {D}+{E}{FS}?
      #  return make_token(:CONSTANT, match]
      when match = scanner.scan(/[a-zA-Z_]?\"(\\.|[^\\"])*\"/) # L?\"(\\.|[^\\"])*\"
       return make_token(:STRING_LITERAL, match)
      
      #
      # C operators, assignments and other syntactical bits and pieces
      #  
      when scanner.scan(/\.\.\./)
       return make_token(:ELLIPSIS, :ELLIPSES)
      when scanner.scan(/>>=/)
       return make_token(:RIGHT_ASSIGN, :RIGHT_ASSIGN)
      when scanner.scan(/<<=/)
       return make_token(:LEFT_ASSIGN, :LEFT_ASSIGN)
      when scanner.scan(/\+=/)
       return make_token(:ADD_ASSIGN, :ADD_ASSIGN)
      when scanner.scan(/-=/)
       return make_token(:SUB_ASSIGN, :SUB_ASSIGN)
      when scanner.scan(/\*=/)
       return make_token(:MUL_ASSIGN, :MUL_ASSIGN)
      when scanner.scan(/\/=/)
       return make_token(:DIV_ASSIGN, :DIV_ASSIGN)
      when scanner.scan(/%=/)
       return make_token(:MOD_ASSIGN, :MOD_ASSIGN)
      when scanner.scan(/&=/)
       return make_token(:AND_ASSIGN, :AND_ASSIGN)
      when scanner.scan(/\^=/)
       return make_token(:XOR_ASSIGN, :XOR_ASSIGN)
      when scanner.scan(/\|=/)
       return make_token(:OR_ASSIGN, :OR_ASSIGN)
      when scanner.scan(/>>/)
       return make_token(:RIGHT_OP, :RIGHT_OP)
      when scanner.scan(/<</)
       return make_token(:LEFT_OP, :LEFT_OP)
      when scanner.scan(/\+\+/)
       return make_token(:INC_OP, :INC_OP)
      when scanner.scan(/--/)
       return make_token(:DEC_OP, :DEC_OP)
      when scanner.scan(/->/)
       return make_token(:PTR_OP, :PTR_OP)
      when scanner.scan(/&&/)
       return make_token(:AND_OP, :AND_OP)
      when scanner.scan(/\|\|/)
       return make_token(:OR_OP, :OR_OP)
      when scanner.scan(/<=/)
       return make_token(:LE_OP, :LE_OP)
      when scanner.scan(/>=/)
       return make_token(:GE_OP, :GE_OP)
      when scanner.scan(/\=\=/)
       return make_token(:EQ_OP, :EQ_OP)
      when scanner.scan(/\!\=/)
       return make_token(:NE_OP, :NE_OP)
      when scanner.scan(/;/)
        return make_token(';', ';')
      when scanner.scan(/\{/)
        return make_token('{', '{')
      when scanner.scan(/\}/)
        return make_token('}', '}')
      when scanner.scan(/,/)
        return make_token(',', ',')
      when scanner.scan(/:/)
        return make_token(':', ':')
      when scanner.scan(/\=/)
        return make_token('=', '=')   
      when scanner.scan(/\(/)
        return make_token('(', '(')
      when scanner.scan(/\)/)
        return make_token(')', ')')
      when scanner.scan(/\[/)
        return make_token('[', '[')
      when scanner.scan(/\]/)
        return make_token(']', ']')
      when scanner.scan(/\./)
        return make_token('.', '.')
      when scanner.scan(/\&/)
        return make_token('&', '&')
      when scanner.scan(/\!/)
        return make_token('!', '!')
      when scanner.scan(/\~/)
        return make_token('~', '~')
      when scanner.scan(/\-/)
        return make_token('-', '-')
      when scanner.scan(/\+/)
        return make_token('+', '+')
      when scanner.scan(/\*/)
        return make_token('*', '*')
      when scanner.scan(/\//)
        return make_token('/', '/')
      when scanner.scan(/\%/)
        return make_token('%', '%')
      when scanner.scan(/\</)
        return make_token('<', '<')
      when scanner.scan(/\>/)
        return make_token('>', '>')
      when scanner.scan(/\^/)
        return make_token('^', '^')
      when scanner.scan(/\|/)
        return make_token('|', '|')
      when scanner.scan(/\?/)
        return make_token('?', '?')
      
      else
        abort "#{current_file.file_name}:#{current_file.current_line}:error: unknown token type: #{scanner.peek(5)}"
      
      #when scanner.scan(/.*/)
	      #puts "wow"
	      # throw error: bad character
    end
	end
  
...end objective_c.rb.y/module_eval...
##### State transition tables begin ###

clist = [
'355,110,113,356,57,110,113,353,57,38,57,38,507,177,4,184,4,57,157,159',
'162,165,169,172,110,113,395,57,154,415,59,163,166,170,59,176,59,181',
'149,110,113,105,356,59,135,356,492,136,491,414,368,110,113,59,110,113',
'367,45,5,12,5,12,53,57,28,32,35,40,46,49,50,2,5,12,20,26,30,34,250,57',
'368,57,130,57,57,54,474,356,107,59,111,114,107,470,111,114,361,57,44',
'48,44,48,70,183,151,59,226,59,445,59,59,107,44,48,509,152,6,14,19,27',
'31,192,86,59,311,71,107,177,263,184,57,109,157,159,162,165,169,172,121',
'125,312,107,154,111,114,203,166,170,472,176,45,181,149,545,545,42,59',
'28,32,35,40,46,49,50,2,5,12,20,26,30,34,45,482,25,544,544,110,113,28',
'32,35,40,46,49,50,2,5,12,20,26,30,34,356,214,216,187,551,191,193,194',
'197,200,202,204,205,44,48,220,493,6,14,19,27,31,81,483,82,183,151,198',
'201,279,484,281,219,288,44,48,437,152,6,14,19,27,31,192,86,554,361,25',
'361,177,298,184,281,288,157,159,162,165,169,172,38,394,293,290,154,4',
'471,203,166,170,102,176,125,181,149,61,105,291,292,293,290,42,356,103',
'284,285,550,110,113,110,113,38,345,45,291,292,4,110,113,25,28,32,35',
'40,46,49,50,2,5,12,20,26,30,34,489,214,216,187,490,191,193,194,197,200',
'202,204,205,347,348,337,338,339,340,341,342,343,344,485,86,183,151,198',
'201,295,293,290,282,467,44,48,283,152,6,14,19,27,31,192,86,291,292,284',
'285,177,260,184,124,466,157,159,162,165,169,172,246,125,356,125,154',
'461,549,203,166,170,107,176,131,181,149,61,501,502,134,356,356,42,503',
'552,506,284,285,110,113,110,113,38,360,45,356,361,4,500,504,25,28,32',
'35,40,46,49,50,2,5,12,20,26,30,34,488,214,216,187,42,191,193,194,197',
'200,202,204,205,356,38,501,502,438,457,4,356,498,25,452,505,183,151',
'198,201,486,465,139,487,361,44,48,500,152,6,14,19,27,31,192,86,459,284',
'285,356,177,379,184,268,445,157,159,162,165,169,172,107,227,107,469',
'154,301,361,203,166,170,308,176,45,181,149,116,322,323,117,28,32,35',
'40,46,49,50,2,5,12,20,26,30,34,45,468,355,309,361,356,429,28,32,35,40',
'46,49,50,2,5,12,20,26,30,34,310,214,216,187,242,191,193,194,197,200',
'202,204,205,44,48,299,300,6,14,19,27,31,81,425,82,183,151,198,201,403',
'403,404,404,252,44,48,227,152,6,14,19,27,31,192,86,319,320,321,298,177',
'281,184,284,285,157,159,162,165,169,172,279,496,281,497,154,270,271',
'203,166,170,38,176,45,181,149,4,322,323,25,28,32,35,40,46,49,50,2,5',
'12,20,26,30,34,45,319,320,321,319,320,321,28,32,35,40,46,49,50,2,5,12',
'20,26,30,34,265,214,216,187,411,191,193,194,197,200,202,204,205,44,48',
'322,323,6,14,19,27,31,400,271,131,183,151,198,201,299,300,267,86,269',
'44,48,86,152,6,14,19,27,31,192,86,329,475,476,477,177,115,184,393,390',
'157,159,162,165,169,172,42,101,380,366,154,366,376,203,166,170,38,176',
'45,181,149,4,516,100,25,28,32,35,40,46,49,50,2,5,12,20,26,30,34,45,516',
'521,522,86,131,220,28,32,35,40,46,49,50,2,5,12,20,26,30,34,374,214,216',
'187,373,191,193,194,197,200,202,204,205,44,48,366,530,6,14,19,27,31',
'531,363,274,183,151,198,201,120,358,275,352,351,44,48,350,152,6,14,19',
'27,31,192,86,332,541,349,543,177,336,184,334,333,157,159,162,165,169',
'172,223,304,42,307,154,303,356,203,166,170,356,176,38,181,149,548,288',
'4,328,289,25,325,318,310,305,306,302,361,555,557,558,60,560,45,309,51',
'3,8,15,21,28,32,35,40,46,49,50,2,5,12,20,26,30,34,308,214,216,187,52',
'191,193,194,197,200,202,204,205,301,555,566,567,16,23,29,,37,,,,183',
'151,198,201,,,,,,44,48,,152,6,14,19,27,31,192,86,,,,,177,,184,,,157',
'159,162,165,169,172,,,,,154,,,203,166,170,,176,45,181,149,,,,,28,32',
'35,40,46,49,50,2,5,12,20,26,30,34,45,,,,,,,28,32,35,40,46,49,50,2,5',
'12,20,26,30,34,,214,216,187,,191,193,194,197,200,202,204,205,44,48,',
',6,14,19,27,31,,,,183,151,198,201,,,,,,44,48,,152,6,14,19,27,31,192',
'86,,,,,177,,184,,,157,159,162,165,169,172,,,,,154,,,203,166,170,,176',
'45,181,149,,,,,28,32,35,40,46,49,50,2,5,12,20,26,30,34,45,,,,,,,28,32',
'35,40,46,49,50,2,5,12,20,26,30,34,,214,216,187,,191,193,194,197,200',
'202,204,205,44,48,,,6,14,19,27,31,,,,183,151,198,201,,,,,,44,48,,152',
'6,14,19,27,31,192,86,449,,,,177,,184,,,157,159,162,165,169,172,,,,,154',
',,203,166,170,,176,45,181,149,,,,,28,32,35,40,46,49,50,2,5,12,20,26',
'30,34,45,,,,,,,28,32,35,40,46,49,50,2,5,12,20,26,30,34,,214,216,187',
',191,193,194,197,200,202,204,205,44,48,,,6,14,19,27,31,,,,183,151,198',
'201,,,,,,44,48,,152,6,14,19,27,31,192,86,,,,,177,,184,,,157,159,162',
'165,169,172,,,,,154,,,203,166,170,,176,45,181,149,,,,,28,32,35,40,46',
'49,50,2,5,12,20,26,30,34,45,,,,,,,28,32,35,40,46,49,50,2,5,12,20,26',
'30,34,,214,216,187,,191,193,194,197,200,202,204,205,44,48,,,6,14,19',
'27,31,,,,183,151,198,201,,,,,,44,48,,152,6,14,19,27,31,192,86,,,,,177',
',184,,,157,159,162,165,169,172,,,,,154,,,203,166,170,,176,45,181,149',
',,,,28,32,35,40,46,49,50,2,5,12,20,26,30,34,45,,,,,,,28,32,35,40,46',
'49,50,2,5,12,20,26,30,34,,214,216,187,,191,193,194,197,200,202,204,205',
'44,48,,,6,14,19,27,31,,,,183,151,198,201,,,,,,44,48,,152,6,14,19,27',
'31,192,86,,,,,177,,184,,,157,159,162,165,169,172,223,,42,,154,,,203',
'166,170,,176,38,181,149,,,4,,223,25,42,,,,,,,,,,38,,45,,,4,,,25,28,32',
'35,40,46,49,50,2,5,12,20,26,30,34,,214,216,187,,191,193,194,197,200',
'202,204,205,,,,,,,,,,,,,183,151,198,201,,,,,,44,48,,152,6,14,19,27,31',
'192,86,,,,,177,,184,,,157,159,162,165,169,172,223,,42,,154,,,203,166',
'170,,176,38,181,149,,,4,,223,25,42,,,,,,,,,,38,,45,,,4,,,25,28,32,35',
'40,46,49,50,2,5,12,20,26,30,34,,214,216,187,,191,193,194,197,200,202',
'204,205,,,,,,,,,,,,,183,151,198,201,,,,,,44,48,,152,6,14,19,27,31,192',
'86,195,,,,177,,184,,,157,159,162,165,169,172,223,,42,,154,,,203,166',
'170,,176,38,181,149,,,4,,,25,,,,,,,,,,,,,45,,51,3,8,15,21,28,32,35,40',
'46,49,50,2,5,12,20,26,30,34,,214,216,187,,191,193,194,197,200,202,204',
'205,,,,,16,23,29,,37,,,243,183,151,198,201,,,,,,44,48,,152,6,14,19,27',
'31,192,,,,,,177,,184,,,157,159,162,165,169,172,,,,,154,,,163,166,170',
',176,45,181,149,,,,,28,32,35,40,46,49,50,2,5,12,20,26,30,34,45,,,,,',
',28,32,35,40,46,49,50,2,5,12,20,26,30,34,,97,98,99,,,,,,92,93,,,44,48',
',,6,14,19,27,31,,,,183,151,,,,,,,,44,48,,152,6,14,19,27,31,192,,,,,',
'177,,184,,,157,159,162,165,169,172,223,,42,,154,,,163,166,170,,176,38',
'181,149,,,4,,,25,,,,,,,,,,,,,45,,51,3,8,15,21,28,32,35,40,46,49,50,2',
'5,12,20,26,30,34,,,,223,,42,,,,,223,,42,,,38,,16,23,29,4,37,38,25,375',
'183,151,4,,,25,,,,44,48,,152,6,14,19,27,31,192,,,,,,177,,184,,,157,159',
'162,165,169,172,,,,,154,,,163,166,170,,176,45,181,149,,,,,28,32,35,40',
'46,49,50,2,5,12,20,26,30,34,45,,,,,,,28,32,35,40,46,49,50,2,5,12,20',
'26,30,34,,97,98,99,,,,,,92,93,,,44,48,,,6,14,19,27,31,,,,183,151,,248',
',,,,,44,48,,152,6,14,19,27,31,192,86,,,,,177,,184,,,157,159,162,165',
'169,172,,,,,154,,,203,166,170,,176,45,181,149,,,,,28,32,35,40,46,49',
'50,2,5,12,20,26,30,34,45,,,,,,,28,32,35,40,46,49,50,2,5,12,20,26,30',
'34,86,214,216,187,,191,193,194,197,200,202,204,205,44,48,,,6,14,19,27',
'31,,,,183,151,198,201,,,,,,44,48,,152,6,14,19,27,31,,,,,,,45,,51,3,8',
'15,21,28,32,35,40,46,49,50,2,5,12,20,26,30,34,256,,,,,177,,184,,,157',
'159,162,165,169,172,,16,23,29,154,37,,163,166,170,,176,,181,149,,,,44',
'48,,,6,14,19,27,31,,,,,,,45,,,,,,,28,32,35,40,46,49,50,2,5,12,20,26',
'30,34,86,,,,,,,,,,,,,,,,,,,,,,,,,183,151,,,,,,,,44,48,,152,6,14,19,27',
'31,,,,,,,45,,51,3,8,15,21,28,32,35,40,46,49,50,2,5,12,20,26,30,34,86',
',,,,,,,,,,,,,,,,16,23,29,,37,,,,,,,,,,,,,44,48,,,6,14,19,27,31,,,,,',
',45,,51,3,8,15,21,28,32,35,40,46,49,50,2,5,12,20,26,30,34,256,518,,',
',177,,184,,,157,159,162,165,169,172,,16,23,29,154,37,,163,166,170,,176',
',181,149,,,,44,48,,,6,14,19,27,31,,,,,,,45,,,,,,,28,32,35,40,46,49,50',
'2,5,12,20,26,30,34,,,,,,,,,,,,,,,,,,,,,,,,372,,183,151,,,,,,,,44,48',
',152,6,14,19,27,31,494,,,,,177,,184,,,157,159,162,165,169,172,,,,,154',
',,163,166,170,,176,45,181,149,,,,,28,32,35,40,46,49,50,2,5,12,20,26',
'30,34,45,,,,,,,28,32,35,40,46,49,50,2,5,12,20,26,30,34,86,97,98,99,120',
',,,,92,93,,,44,48,,,6,14,19,27,31,,,,183,151,,,,,,,,44,48,,152,6,14',
'19,27,31,,,,,,,45,,51,3,8,15,21,28,32,35,40,46,49,50,2,5,12,20,26,30',
'34,256,,,,,177,,184,,,157,159,162,165,169,172,,16,23,29,154,37,,163',
'166,170,,176,,181,149,,,,44,48,,,6,14,19,27,31,,,,,,,45,,,,,,,28,32',
'35,40,46,49,50,2,5,12,20,26,30,34,,,,,,,,,,,,,,,,,,,,,,,231,,,183,151',
',,,,,,,44,48,,152,6,14,19,27,31,546,,,,177,,184,,,157,159,162,165,169',
'172,,,,,154,,,163,166,170,,176,45,181,149,,,,,28,32,35,40,46,49,50,2',
'5,12,20,26,30,34,45,,,,,,,28,32,35,40,46,49,50,2,5,12,20,26,30,34,,97',
'98,99,,,,,,92,93,,42,44,48,,,6,14,19,27,31,38,,,183,151,4,,,25,,,,44',
'48,,152,6,14,19,27,31,,,,,,,,,,,,,,45,,51,3,8,15,21,28,32,35,40,46,49',
'50,2,5,12,20,26,30,34,,,,,,177,,184,,,157,159,162,165,169,172,,16,23',
'29,154,37,,163,166,170,,176,,181,149,,,,44,48,,,6,14,19,27,31,,,,,,',
'45,,,,,,,28,32,35,40,46,49,50,2,5,12,20,26,30,34,,,,,,,,,,,,,,,,,,,',
',,,,,,183,151,,,,,,,,44,48,,152,6,14,19,27,31,177,,184,,,157,159,162',
'165,169,172,,,,,154,,,163,166,170,177,176,184,181,149,157,159,162,165',
'169,172,,,,,154,,,163,166,170,,176,45,181,149,,,,,28,32,35,40,46,49',
'50,2,5,12,20,26,30,34,45,,,,,,,28,32,35,40,46,49,50,2,5,12,20,26,30',
'34,,,,,183,151,,,,,,,,44,48,,152,6,14,19,27,31,,,,183,151,,,,,,,,44',
'48,,152,6,14,19,27,31,177,,184,147,,157,159,162,165,169,172,,,,,154',
',,163,166,170,177,176,184,181,149,157,159,162,165,169,172,,,,,154,,',
'163,166,170,,176,45,181,149,,,,,28,32,35,40,46,49,50,2,5,12,20,26,30',
'34,45,,,,,,,28,32,35,40,46,49,50,2,5,12,20,26,30,34,,,,,183,151,,,,',
',,,44,48,,152,6,14,19,27,31,,,,183,151,,,,,,,,44,48,,152,6,14,19,27',
'31,177,,184,480,,157,159,162,165,169,172,,,,,154,,,163,166,170,177,176',
'184,181,149,157,159,162,165,169,172,,,,,154,,,163,166,170,,176,45,181',
'149,,,,,28,32,35,40,46,49,50,2,5,12,20,26,30,34,45,,,,,,,28,32,35,40',
'46,49,50,2,5,12,20,26,30,34,,,,,183,151,,,,,,,,44,48,,152,6,14,19,27',
'31,,,,183,151,,,,,,,,44,48,,152,6,14,19,27,31,177,,184,,,157,159,162',
'165,169,172,,,,,154,,,163,166,170,177,176,184,181,149,157,159,162,165',
'169,172,,,,,154,,,163,166,170,,176,45,181,149,,,,,28,32,35,40,46,49',
'50,2,5,12,20,26,30,34,45,,,,,,,28,32,35,40,46,49,50,2,5,12,20,26,30',
'34,,,,,183,151,,,,,,,,44,48,,152,6,14,19,27,31,,,,183,151,,,,,,,,44',
'48,,152,6,14,19,27,31,177,,184,,,157,159,162,165,169,172,,,,,154,,,163',
'166,170,177,176,184,181,149,157,159,162,165,169,172,,,,,154,,,163,166',
'170,,176,45,181,149,,,,,28,32,35,40,46,49,50,2,5,12,20,26,30,34,45,',
',,,,,28,32,35,40,46,49,50,2,5,12,20,26,30,34,,,,,183,151,,,,,,,,44,48',
',152,6,14,19,27,31,,,,183,151,,,,,,,,44,48,,152,6,14,19,27,31,177,,184',
',,157,159,162,165,169,172,,,,,154,,,163,166,170,177,176,184,181,149',
'157,159,162,165,169,172,,,,,154,,,163,166,170,,176,45,181,149,,,,,28',
'32,35,40,46,49,50,2,5,12,20,26,30,34,45,,,,,,,28,32,35,40,46,49,50,2',
'5,12,20,26,30,34,,,,,183,151,,,,,,,,44,48,,152,6,14,19,27,31,,,,183',
'151,,,,,,,,44,48,,152,6,14,19,27,31,177,,184,,,157,159,162,165,169,172',
',,,,154,,,163,166,170,177,176,184,181,149,157,159,162,165,169,172,,',
',,154,,,163,166,170,,176,45,181,149,,,,,28,32,35,40,46,49,50,2,5,12',
'20,26,30,34,45,,,,,,,28,32,35,40,46,49,50,2,5,12,20,26,30,34,,,,,183',
'151,,,,,,,,44,48,,152,6,14,19,27,31,,,,183,151,,,,,,,,44,48,,152,6,14',
'19,27,31,177,,184,,,157,159,162,165,169,172,,,,,154,,,163,166,170,177',
'176,184,181,149,157,159,162,165,169,172,,,,,154,,,163,166,170,,176,45',
'181,149,,,,,28,32,35,40,46,49,50,2,5,12,20,26,30,34,45,,,,,,,28,32,35',
'40,46,49,50,2,5,12,20,26,30,34,,,,,183,151,,,,,,,,44,48,,152,6,14,19',
'27,31,,,,183,151,,,,,,,,44,48,,152,6,14,19,27,31,177,,184,,,157,159',
'162,165,169,172,,,,,154,,,163,166,170,177,176,184,181,149,157,159,162',
'165,169,172,,,,,154,,,163,166,170,,176,45,181,149,,,,,28,32,35,40,46',
'49,50,2,5,12,20,26,30,34,45,,,,,,,28,32,35,40,46,49,50,2,5,12,20,26',
'30,34,,,,,183,151,,,,,,,,44,48,,152,6,14,19,27,31,,,,183,151,,,,,,,',
'44,48,,152,6,14,19,27,31,177,,184,,,157,159,162,165,169,172,,,,,154',
',,163,166,170,,176,45,181,149,,,,,28,32,35,40,46,49,50,2,5,12,20,26',
'30,34,45,,,,,,,28,32,35,40,46,49,50,2,5,12,20,26,30,34,,97,98,99,,,',
',,92,93,,,44,48,,,6,14,19,27,31,,,,183,151,,,,,,,,44,48,,152,6,14,19',
'27,31,177,428,184,,,157,159,162,165,169,172,,,,,154,,,163,166,170,177',
'176,184,181,149,157,159,162,165,169,172,,,,,154,,,163,166,170,,176,45',
'181,149,,,,,28,32,35,40,46,49,50,2,5,12,20,26,30,34,45,,,,,,,28,32,35',
'40,46,49,50,2,5,12,20,26,30,34,,,,,183,151,,,,,,,,44,48,,152,6,14,19',
'27,31,,,,183,151,,,,,,,,44,48,,152,6,14,19,27,31,177,,184,,,157,159',
'162,165,169,172,,,,,154,,,163,166,170,177,176,184,181,149,157,159,162',
'165,169,172,,,,,154,,,163,166,170,,176,45,181,149,,,,,28,32,35,40,46',
'49,50,2,5,12,20,26,30,34,45,,,,,,,28,32,35,40,46,49,50,2,5,12,20,26',
'30,34,,,,,183,151,,,,,,,,44,48,,152,6,14,19,27,31,,,,183,151,,,,,,,',
'44,48,,152,6,14,19,27,31,177,,184,,,157,159,162,165,169,172,,,,,154',
',,163,166,170,,176,,181,149,,,,,,,,,,,,,,,,,,,45,,,,,,,28,32,35,40,46',
'49,50,2,5,12,20,26,30,34,298,408,281,,,,,,,,38,,,,,4,,,,,,,,,,183,151',
',,,,,,,44,48,,152,6,14,19,27,31,,45,,51,3,8,15,21,28,32,35,40,46,49',
'50,2,5,12,20,26,30,34,177,,184,,,157,159,162,165,169,172,,,,,154,,,163',
'166,170,,176,,181,149,,,,,,,,,44,48,,,6,14,19,27,31,,45,,,,,,,28,32',
'35,40,46,49,50,2,5,12,20,26,30,34,,,,,,,,,,,,,,,,,,,,,,,,,,183,151,',
',,,,,,44,48,,152,6,14,19,27,31,177,,184,,,157,159,162,165,169,172,,',
',,154,,,163,166,170,177,176,184,181,149,157,159,162,165,169,172,,,,',
'154,,,163,166,170,,176,45,181,149,,,,,28,32,35,40,46,49,50,2,5,12,20',
'26,30,34,45,,,,,,,28,32,35,40,46,49,50,2,5,12,20,26,30,34,,,,,183,151',
',,,,,,,44,48,,152,6,14,19,27,31,,,,183,151,,,,,,,,44,48,,152,6,14,19',
'27,31,177,,184,,,157,159,162,165,169,172,,,,,154,,,163,166,170,177,176',
'184,181,149,157,159,162,165,169,172,,,,,154,,,163,166,170,,176,45,181',
'149,,,,,28,32,35,40,46,49,50,2,5,12,20,26,30,34,45,,,,,,,28,32,35,40',
'46,49,50,2,5,12,20,26,30,34,,,,,183,151,,,,,,,,44,48,,152,6,14,19,27',
'31,,,,183,151,,,,,,,,44,48,,152,6,14,19,27,31,177,,184,,,157,159,162',
'165,169,172,,,,,154,,,163,166,170,177,176,184,181,149,157,159,162,165',
'169,172,,,,,154,,,163,166,170,,176,45,181,149,,,,,28,32,35,40,46,49',
'50,2,5,12,20,26,30,34,45,,,,,,,28,32,35,40,46,49,50,2,5,12,20,26,30',
'34,,,,,183,151,,,,,,,,44,48,,152,6,14,19,27,31,,,,183,151,,,,,,,,44',
'48,,152,6,14,19,27,31,177,,184,,,157,159,162,165,169,172,,,,,154,,,163',
'166,170,177,176,184,181,149,157,159,162,165,169,172,,,,,154,,,163,166',
'170,,176,45,181,149,,,,,28,32,35,40,46,49,50,2,5,12,20,26,30,34,45,',
',,,,,28,32,35,40,46,49,50,2,5,12,20,26,30,34,,,,,183,151,,,,,,,,44,48',
',152,6,14,19,27,31,,,,183,151,,,,,,,,44,48,,152,6,14,19,27,31,177,,184',
'409,,157,159,162,165,169,172,,,,,154,,,163,166,170,,176,,181,149,,,',
',,,,,,,,,,,,,,,45,,,,,,,28,32,35,40,46,49,50,2,5,12,20,26,30,34,279',
'408,281,,,,,,,,38,,,,,4,,,25,,,,,,,183,151,,,,,,,,44,48,,152,6,14,19',
'27,31,,45,,51,3,8,15,21,28,32,35,40,46,49,50,2,5,12,20,26,30,34,177',
',184,,,157,159,162,165,169,172,,,,,154,,,163,166,170,,176,,181,149,',
',,,,,,,44,48,,,6,14,19,27,31,,45,,,,,,,28,32,35,40,46,49,50,2,5,12,20',
'26,30,34,,,,,,,,,,,,,,,,,,,,,,,,,,183,151,,,,,,,,44,48,,152,6,14,19',
'27,31,177,,184,,,157,159,162,165,169,172,,,,,154,,,163,166,170,177,176',
'184,181,149,157,159,162,165,169,172,,,,,154,,,163,166,170,,176,45,181',
'149,,,,,28,32,35,40,46,49,50,2,5,12,20,26,30,34,45,,,,,,,28,32,35,40',
'46,49,50,2,5,12,20,26,30,34,,,,,183,151,,,,,,,,44,48,,152,6,14,19,27',
'31,,,,183,151,,,,,,,,44,48,,152,6,14,19,27,31,177,,184,,,157,159,162',
'165,169,172,,,,,154,,,163,166,170,177,176,184,181,149,157,159,162,165',
'169,172,,,,,154,,,163,166,170,,176,45,181,149,,,,,28,32,35,40,46,49',
'50,2,5,12,20,26,30,34,45,,,,,,,28,32,35,40,46,49,50,2,5,12,20,26,30',
'34,,,,,183,151,,,,,,,,44,48,,152,6,14,19,27,31,,,,183,151,,,,,,,,44',
'48,,152,6,14,19,27,31,177,,184,,,157,159,162,165,169,172,,,,,154,,,163',
'166,170,177,176,184,181,149,157,159,162,165,169,172,,,,,154,,,163,166',
'170,,176,45,181,149,,,,,28,32,35,40,46,49,50,2,5,12,20,26,30,34,45,',
',,,,,28,32,35,40,46,49,50,2,5,12,20,26,30,34,,,,,183,151,,,,,,,,44,48',
',152,6,14,19,27,31,,,,183,151,,,,,,,,44,48,,152,6,14,19,27,31,177,,184',
',,157,159,162,165,169,172,,,,,154,,,163,166,170,,176,45,181,149,,,,',
'28,32,35,40,46,49,50,2,5,12,20,26,30,34,45,,,,,,,28,32,35,40,46,49,50',
'2,5,12,20,26,30,34,,97,98,99,,,,,,92,93,,,44,48,,,6,14,19,27,31,,,,183',
'151,,,,,,,,44,48,,152,6,14,19,27,31,177,539,184,,,157,159,162,165,169',
'172,,,,,154,,,163,166,170,287,176,184,181,149,157,159,162,165,169,172',
',,,,154,,,163,166,170,,176,45,181,149,,,,,28,32,35,40,46,49,50,2,5,12',
'20,26,30,34,45,,,,,,,28,32,35,40,46,49,50,2,5,12,20,26,30,34,,,,,183',
'151,,,,,,,42,44,48,,152,6,14,19,27,31,38,,,183,151,4,,,25,,,,44,48,',
'152,6,14,19,27,31,,,,,,,,,,,,,,45,,51,3,8,15,21,28,32,35,40,46,49,50',
'2,5,12,20,26,30,34,,,,,,177,,184,,,157,159,162,165,169,172,,16,23,29',
'154,37,,163,166,170,,176,,181,149,,,,44,48,,,6,14,19,27,31,,,,,,,327',
',,,,,,28,32,35,40,46,49,50,2,5,12,20,26,30,34,,,,,,,,,,,,,,,,,,,,,,',
',,,183,151,,,,,,,,44,48,,152,6,14,19,27,31,287,,184,,,157,159,162,165',
'169,172,,,,,154,,,163,166,170,177,176,184,181,149,157,159,162,165,169',
'172,,,,,154,,,163,166,170,,176,45,181,149,,,,,28,32,35,40,46,49,50,2',
'5,12,20,26,30,34,45,,,,,,,28,32,35,40,46,49,50,2,5,12,20,26,30,34,,',
',,183,151,,,,,,,,44,48,,152,6,14,19,27,31,,,,183,151,,,,,,,,44,48,,152',
'6,14,19,27,31,315,,184,,,157,159,162,165,169,172,,,,,154,,,163,166,170',
'177,176,184,181,149,157,159,162,165,169,172,,,,,154,,,163,166,170,,176',
'45,181,149,,,,,28,32,35,40,46,49,50,2,5,12,20,26,30,34,45,,,,,,,28,32',
'35,40,46,49,50,2,5,12,20,26,30,34,,,,,183,151,145,,,,,,,44,48,,152,6',
'14,19,27,31,,144,,183,151,479,,,,,,,44,48,,152,6,14,19,27,31,,,,,,,45',
',51,3,8,15,21,28,32,35,40,46,49,50,2,5,12,20,26,30,34,45,,51,3,8,15',
'21,28,32,35,40,46,49,50,2,5,12,20,26,30,34,,-211,,,,,,,,,,,,44,48,,',
'6,14,19,27,31,-209,,,,,,,,,,,,44,48,,,6,14,19,27,31,45,,51,3,8,15,21',
'28,32,35,40,46,49,50,2,5,12,20,26,30,34,45,,51,3,8,15,21,28,32,35,40',
'46,49,50,2,5,12,20,26,30,34,,,,,,,,,,,,,,44,48,,,6,14,19,27,31,,,,,',
',,,,,,,44,48,45,,6,14,19,27,31,28,32,35,40,46,49,50,2,5,12,20,26,30',
'34,45,,,,,,,28,32,35,40,46,49,50,2,5,12,20,26,30,34,,,,,,,,,,,,,,44',
'48,,,6,14,19,27,31,383,385,387,388,389,382,,,,,,,44,48,,,6,14,19,27',
'31,383,385,387,388,389,382,45,,,,,,,28,32,35,40,46,49,50,2,5,12,20,26',
'30,34,45,,,,,,,28,32,35,40,46,49,50,2,5,12,20,26,30,34,,,,,,,,,,,,,',
'44,48,,,6,14,19,27,31,383,385,387,388,389,382,,,,,,,44,48,,,6,14,19',
'27,31,383,385,387,388,389,382,45,,51,3,8,15,21,28,32,35,40,46,49,50',
'2,5,12,20,26,30,34,45,,51,3,8,15,21,28,32,35,40,46,49,50,2,5,12,20,26',
'30,34,,,,,,,,,,,,,,44,48,,,6,14,19,27,31,,,,,,,,,,,,,44,48,,,6,14,19',
'27,31,45,,51,3,8,15,21,28,32,35,40,46,49,50,2,5,12,20,26,30,34,402,45',
',51,3,8,15,21,28,32,35,40,46,49,50,2,5,12,20,26,30,34,,,,,,,,,,,,,44',
'48,,,6,14,19,27,31,,,,,,,,,,,,,,44,48,,,6,14,19,27,31,45,,51,3,8,15',
'21,28,32,35,40,46,49,50,2,5,12,20,26,30,34,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,44,48,,,6,14,19,27,31' ]
        racc_action_table = arr = Array.new(7283, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'454,108,108,454,29,68,68,205,37,77,220,38,452,205,77,205,38,471,205',
'205,205,205,205,205,114,114,264,23,205,289,29,205,205,205,37,205,220',
'205,205,111,111,58,430,471,74,434,434,74,430,289,264,123,123,23,58,58',
'228,205,77,77,38,38,13,121,205,205,205,205,205,205,205,205,205,205,205',
'205,205,205,108,136,228,101,68,102,52,13,386,326,108,121,108,108,68',
'371,68,68,371,16,77,77,38,38,34,205,205,136,92,101,326,102,52,114,205',
'205,454,205,205,205,205,205,205,551,551,16,171,34,111,551,123,551,103',
'58,551,551,551,551,551,551,65,123,171,58,551,58,58,551,551,551,378,551',
'92,551,551,520,517,39,103,92,92,92,92,92,92,92,92,92,92,92,92,92,92',
'551,406,39,520,517,262,262,551,551,551,551,551,551,551,551,551,551,551',
'551,551,551,537,551,551,551,537,551,551,551,551,551,551,551,551,92,92',
'89,436,92,92,92,92,92,78,407,78,551,551,551,551,278,410,278,89,436,551',
'551,316,551,551,551,551,551,551,550,550,540,377,278,540,550,155,550',
'155,316,550,550,550,550,550,550,155,262,422,422,550,155,374,550,550',
'550,56,550,262,550,550,22,66,422,422,423,423,22,536,56,418,418,536,122',
'122,66,66,22,199,550,423,423,22,106,106,22,550,550,550,550,550,550,550',
'550,550,550,550,550,550,550,426,550,550,550,426,550,550,550,550,550',
'550,550,550,199,199,199,199,199,199,199,199,199,199,414,154,550,550',
'550,550,154,153,153,146,366,550,550,146,550,550,550,550,550,550,548',
'548,153,153,419,419,548,122,548,66,365,548,548,548,548,548,548,106,122',
'535,66,548,357,535,548,548,548,106,548,70,548,548,87,447,447,71,538',
'451,87,447,538,451,420,420,249,249,129,129,87,221,548,448,221,87,447',
'448,87,548,548,548,548,548,548,548,548,548,548,548,548,548,548,421,548',
'548,548,117,548,548,548,548,548,548,548,548,317,117,446,446,317,349',
'117,450,446,117,335,450,548,548,548,548,416,364,80,416,364,548,548,446',
'548,548,548,548,548,548,539,539,354,417,417,354,539,249,539,129,327',
'539,539,539,539,539,539,249,93,129,370,539,431,370,539,539,539,432,539',
'472,539,539,62,180,180,62,472,472,472,472,472,472,472,472,472,472,472',
'472,472,472,539,369,209,433,369,209,305,539,539,539,539,539,539,539',
'539,539,539,539,539,539,539,435,539,539,539,104,539,539,539,539,539',
'539,539,539,472,472,424,424,472,472,472,472,472,43,303,43,539,539,539',
'539,405,277,405,277,112,539,539,125,539,539,539,539,539,539,351,351',
'443,443,443,297,351,297,351,148,148,351,351,351,351,351,351,143,444',
'143,445,351,132,132,351,351,351,143,351,99,351,351,143,413,413,143,99',
'99,99,99,99,99,99,99,99,99,99,99,99,99,351,442,442,442,179,179,179,351',
'351,351,351,351,351,351,351,351,351,351,351,351,351,126,351,351,351',
'282,351,351,351,351,351,351,351,351,99,99,412,412,99,99,99,99,99,272',
'272,271,351,351,351,351,156,156,127,127,131,351,351,267,351,351,351',
'351,351,351,188,188,188,391,391,396,188,60,188,259,253,188,188,188,188',
'188,188,42,55,251,467,188,248,245,188,188,188,42,188,96,188,188,42,474',
'54,42,96,96,96,96,96,96,96,96,96,96,96,96,96,96,188,477,478,481,488',
'134,241,188,188,188,188,188,188,188,188,188,188,188,188,188,188,240',
'188,188,188,239,188,188,188,188,188,188,188,188,96,96,226,500,96,96',
'96,96,96,501,224,140,188,188,188,188,218,216,142,204,203,188,188,202',
'188,188,188,188,188,188,190,190,190,514,200,516,190,197,190,193,191',
'190,190,190,190,190,190,512,160,512,160,190,160,528,190,190,190,529',
'190,512,190,190,532,150,512,187,151,512,183,178,167,160,160,160,542',
'543,544,545,17,549,190,164,190,190,190,190,190,190,190,190,190,190,190',
'190,190,190,190,190,190,190,190,161,190,190,190,6,190,190,190,190,190',
'190,190,190,158,557,564,566,190,190,190,,190,,,,190,190,190,190,,,,',
',190,190,,190,190,190,190,190,190,194,194,,,,,194,,194,,,194,194,194',
'194,194,194,,,,,194,,,194,194,194,,194,98,194,194,,,,,98,98,98,98,98',
'98,98,98,98,98,98,98,98,98,194,,,,,,,194,194,194,194,194,194,194,194',
'194,194,194,194,194,194,,194,194,194,,194,194,194,194,194,194,194,194',
'98,98,,,98,98,98,98,98,,,,194,194,194,194,,,,,,194,194,,194,194,194',
'194,194,194,552,552,,,,,552,,552,,,552,552,552,552,552,552,,,,,552,',
',552,552,552,,552,466,552,552,,,,,466,466,466,466,466,466,466,466,466',
'466,466,466,466,466,552,,,,,,,552,552,552,552,552,552,552,552,552,552',
'552,552,552,552,,552,552,552,,552,552,552,552,552,552,552,552,466,466',
',,466,466,466,466,466,,,,552,552,552,552,,,,,,552,552,,552,552,552,552',
'552,552,331,331,331,,,,331,,331,,,331,331,331,331,331,331,,,,,331,,',
'331,331,331,,331,94,331,331,,,,,94,94,94,94,94,94,94,94,94,94,94,94',
'94,94,331,,,,,,,331,331,331,331,331,331,331,331,331,331,331,331,331',
'331,,331,331,331,,331,331,331,331,331,331,331,331,94,94,,,94,94,94,94',
'94,,,,331,331,331,331,,,,,,331,331,,331,331,331,331,331,331,506,506',
',,,,506,,506,,,506,506,506,506,506,506,,,,,506,,,506,506,506,,506,97',
'506,506,,,,,97,97,97,97,97,97,97,97,97,97,97,97,97,97,506,,,,,,,506',
'506,506,506,506,506,506,506,506,506,506,506,506,506,,506,506,506,,506',
'506,506,506,506,506,506,506,97,97,,,97,97,97,97,97,,,,506,506,506,506',
',,,,,506,506,,506,506,506,506,506,506,505,505,,,,,505,,505,,,505,505',
'505,505,505,505,,,,,505,,,505,505,505,,505,325,505,505,,,,,325,325,325',
'325,325,325,325,325,325,325,325,325,325,325,505,,,,,,,505,505,505,505',
'505,505,505,505,505,505,505,505,505,505,,505,505,505,,505,505,505,505',
'505,505,505,505,325,325,,,325,325,325,325,325,,,,505,505,505,505,,,',
',,505,505,,505,505,505,505,505,505,504,504,,,,,504,,504,,,504,504,504',
'504,504,504,247,,247,,504,,,504,504,504,,504,247,504,504,,,247,,90,247',
'90,,,,,,,,,,90,,504,,,90,,,90,504,504,504,504,504,504,504,504,504,504',
'504,504,504,504,,504,504,504,,504,504,504,504,504,504,504,504,,,,,,',
',,,,,,504,504,504,504,,,,,,504,504,,504,504,504,504,504,504,358,358',
',,,,358,,358,,,358,358,358,358,358,358,225,,225,,358,,,358,358,358,',
'358,225,358,358,,,225,,361,225,361,,,,,,,,,,361,,358,,,361,,,361,358',
'358,358,358,358,358,358,358,358,358,358,358,358,358,,358,358,358,,358',
'358,358,358,358,358,358,358,,,,,,,,,,,,,358,358,358,358,,,,,,358,358',
',358,358,358,358,358,358,86,86,86,,,,86,,86,,,86,86,86,86,86,86,235',
',235,,86,,,86,86,86,,86,235,86,86,,,235,,,235,,,,,,,,,,,,,86,,86,86',
'86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,,86,86,86,,86,86',
'86,86,86,86,86,86,,,,,86,86,86,,86,,,105,86,86,86,86,,,,,,86,86,,86',
'86,86,86,86,86,453,,,,,,453,,453,,,453,453,453,453,453,453,,,,,453,',
',453,453,453,,453,105,453,453,,,,,105,105,105,105,105,105,105,105,105',
'105,105,105,105,105,453,,,,,,,453,453,453,453,453,453,453,453,453,453',
'453,453,453,453,,105,105,105,,,,,,105,105,,,105,105,,,105,105,105,105',
'105,,,,453,453,,,,,,,,453,453,,453,453,453,453,453,453,336,,,,,,336',
',336,,,336,336,336,336,336,336,234,,234,,336,,,336,336,336,,336,234',
'336,336,,,234,,,234,,,,,,,,,,,,,336,,336,336,336,336,336,336,336,336',
'336,336,336,336,336,336,336,336,336,336,336,,,,515,,515,,,,,233,,233',
',,515,,336,336,336,515,336,233,515,244,336,336,233,,,233,,,,336,336',
',336,336,336,336,336,336,455,,,,,,455,,455,,,455,455,455,455,455,455',
',,,,455,,,455,455,455,,455,244,455,455,,,,,244,244,244,244,244,244,244',
'244,244,244,244,244,244,244,455,,,,,,,455,455,455,455,455,455,455,455',
'455,455,455,455,455,455,,244,244,244,,,,,,244,244,,,244,244,,,244,244',
'244,244,244,,,,455,455,,107,,,,,,455,455,,455,455,455,455,455,455,461',
'461,,,,,461,,461,,,461,461,461,461,461,461,,,,,461,,,461,461,461,,461',
'107,461,461,,,,,107,107,107,107,107,107,107,107,107,107,107,107,107',
'107,461,,,,,,,461,461,461,461,461,461,461,461,461,461,461,461,461,461',
'119,461,461,461,,461,461,461,461,461,461,461,461,107,107,,,107,107,107',
'107,107,,,,461,461,461,461,,,,,,461,461,,461,461,461,461,461,461,,,',
',,,119,,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119',
'119,119,119,119,120,,,,,120,,120,,,120,120,120,120,120,120,,119,119',
'119,120,119,,120,120,120,,120,,120,120,,,,119,119,,,119,119,119,119',
'119,,,,,,,120,,,,,,,120,120,120,120,120,120,120,120,120,120,120,120',
'120,120,84,,,,,,,,,,,,,,,,,,,,,,,,,120,120,,,,,,,,120,120,,120,120,120',
'120,120,120,,,,,,,84,,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84',
'84,84,84,47,,,,,,,,,,,,,,,,,84,84,84,,84,,,,,,,,,,,,,84,84,,,84,84,84',
'84,84,,,,,,,47,,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47',
'47,476,476,,,,476,,476,,,476,476,476,476,476,476,,47,47,47,476,47,,476',
'476,476,,476,,476,476,,,,47,47,,,47,47,47,47,47,,,,,,,476,,,,,,,476',
'476,476,476,476,476,476,476,476,476,476,476,476,476,,,,,,,,,,,,,,,,',
',,,,,,,236,,476,476,,,,,,,,476,476,,476,476,476,476,476,476,437,,,,',
'437,,437,,,437,437,437,437,437,437,,,,,437,,,437,437,437,,437,236,437',
'437,,,,,236,236,236,236,236,236,236,236,236,236,236,236,236,236,437',
',,,,,,437,437,437,437,437,437,437,437,437,437,437,437,437,437,64,236',
'236,236,64,,,,,236,236,,,236,236,,,236,236,236,236,236,,,,437,437,,',
',,,,,437,437,,437,437,437,437,437,437,,,,,,,64,,64,64,64,64,64,64,64',
'64,64,64,64,64,64,64,64,64,64,64,64,256,,,,,256,,256,,,256,256,256,256',
'256,256,,64,64,64,256,64,,256,256,256,,256,,256,256,,,,64,64,,,64,64',
'64,64,64,,,,,,,256,,,,,,,256,256,256,256,256,256,256,256,256,256,256',
'256,256,256,,,,,,,,,,,,,,,,,,,,,,,95,,,256,256,,,,,,,,256,256,,256,256',
'256,256,256,256,526,,,,526,,526,,,526,526,526,526,526,526,,,,,526,,',
'526,526,526,,526,95,526,526,,,,,95,95,95,95,95,95,95,95,95,95,95,95',
'95,95,526,,,,,,,526,526,526,526,526,526,526,526,526,526,526,526,526',
'526,,95,95,95,,,,,,95,95,,0,95,95,,,95,95,95,95,95,0,,,526,526,0,,,0',
',,,526,526,,526,526,526,526,526,526,,,,,,,,,,,,,,0,,0,0,0,0,0,0,0,0',
'0,0,0,0,0,0,0,0,0,0,0,,,,,,334,,334,,,334,334,334,334,334,334,,0,0,0',
'334,0,,334,334,334,,334,,334,334,,,,0,0,,,0,0,0,0,0,,,,,,,334,,,,,,',
'334,334,334,334,334,334,334,334,334,334,334,334,334,334,,,,,,,,,,,,',
',,,,,,,,,,,,,334,334,,,,,,,,334,334,,334,334,334,334,334,334,173,,173',
',,173,173,173,173,173,173,,,,,173,,,173,173,173,356,173,356,173,173',
'356,356,356,356,356,356,,,,,356,,,356,356,356,,356,173,356,356,,,,,173',
'173,173,173,173,173,173,173,173,173,173,173,173,173,356,,,,,,,356,356',
'356,356,356,356,356,356,356,356,356,356,356,356,,,,,173,173,,,,,,,,173',
'173,,173,173,173,173,173,173,,,,356,356,,,,,,,,356,356,,356,356,356',
'356,356,356,82,,82,82,,82,82,82,82,82,82,,,,,82,,,82,82,82,363,82,363',
'82,82,363,363,363,363,363,363,,,,,363,,,363,363,363,,363,82,363,363',
',,,,82,82,82,82,82,82,82,82,82,82,82,82,82,82,363,,,,,,,363,363,363',
'363,363,363,363,363,363,363,363,363,363,363,,,,,82,82,,,,,,,,82,82,',
'82,82,82,82,82,82,,,,363,363,,,,,,,,363,363,,363,363,363,363,363,363',
'404,,404,404,,404,404,404,404,404,404,,,,,404,,,404,404,404,328,404',
'328,404,404,328,328,328,328,328,328,,,,,328,,,328,328,328,,328,404,328',
'328,,,,,404,404,404,404,404,404,404,404,404,404,404,404,404,404,328',
',,,,,,328,328,328,328,328,328,328,328,328,328,328,328,328,328,,,,,404',
'404,,,,,,,,404,404,,404,404,404,404,404,404,,,,328,328,,,,,,,,328,328',
',328,328,328,328,328,328,323,,323,,,323,323,323,323,323,323,,,,,323',
',,323,323,323,322,323,322,323,323,322,322,322,322,322,322,,,,,322,,',
'322,322,322,,322,323,322,322,,,,,323,323,323,323,323,323,323,323,323',
'323,323,323,323,323,322,,,,,,,322,322,322,322,322,322,322,322,322,322',
'322,322,322,322,,,,,323,323,,,,,,,,323,323,,323,323,323,323,323,323',
',,,322,322,,,,,,,,322,322,,322,322,322,322,322,322,321,,321,,,321,321',
'321,321,321,321,,,,,321,,,321,321,321,320,321,320,321,321,320,320,320',
'320,320,320,,,,,320,,,320,320,320,,320,321,320,320,,,,,321,321,321,321',
'321,321,321,321,321,321,321,321,321,321,320,,,,,,,320,320,320,320,320',
'320,320,320,320,320,320,320,320,320,,,,,321,321,,,,,,,,321,321,,321',
'321,321,321,321,321,,,,320,320,,,,,,,,320,320,,320,320,320,320,320,320',
'489,,489,,,489,489,489,489,489,489,,,,,489,,,489,489,489,319,489,319',
'489,489,319,319,319,319,319,319,,,,,319,,,319,319,319,,319,489,319,319',
',,,,489,489,489,489,489,489,489,489,489,489,489,489,489,489,319,,,,',
',,319,319,319,319,319,319,319,319,319,319,319,319,319,319,,,,,489,489',
',,,,,,,489,489,,489,489,489,489,489,489,,,,319,319,,,,,,,,319,319,,319',
'319,319,319,319,319,315,,315,,,315,315,315,315,315,315,,,,,315,,,315',
'315,315,312,315,312,315,315,312,312,312,312,312,312,,,,,312,,,312,312',
'312,,312,315,312,312,,,,,315,315,315,315,315,315,315,315,315,315,315',
'315,315,315,312,,,,,,,312,312,312,312,312,312,312,312,312,312,312,312',
'312,312,,,,,315,315,,,,,,,,315,315,,315,315,315,315,315,315,,,,312,312',
',,,,,,,312,312,,312,312,312,312,312,312,311,,311,,,311,311,311,311,311',
'311,,,,,311,,,311,311,311,310,311,310,311,311,310,310,310,310,310,310',
',,,,310,,,310,310,310,,310,311,310,310,,,,,311,311,311,311,311,311,311',
'311,311,311,311,311,311,311,310,,,,,,,310,310,310,310,310,310,310,310',
'310,310,310,310,310,310,,,,,311,311,,,,,,,,311,311,,311,311,311,311',
'311,311,,,,310,310,,,,,,,,310,310,,310,310,310,310,310,310,309,,309',
',,309,309,309,309,309,309,,,,,309,,,309,309,309,308,309,308,309,309',
'308,308,308,308,308,308,,,,,308,,,308,308,308,,308,309,308,308,,,,,309',
'309,309,309,309,309,309,309,309,309,309,309,309,309,308,,,,,,,308,308',
'308,308,308,308,308,308,308,308,308,308,308,308,,,,,309,309,,,,,,,,309',
'309,,309,309,309,309,309,309,,,,308,308,,,,,,,,308,308,,308,308,308',
'308,308,308,307,,307,,,307,307,307,307,307,307,,,,,307,,,307,307,307',
',307,100,307,307,,,,,100,100,100,100,100,100,100,100,100,100,100,100',
'100,100,307,,,,,,,307,307,307,307,307,307,307,307,307,307,307,307,307',
'307,,100,100,100,,,,,,100,100,,,100,100,,,100,100,100,100,100,,,,307',
'307,,,,,,,,307,307,,307,307,307,307,307,307,304,304,304,,,304,304,304',
'304,304,304,,,,,304,,,304,304,304,492,304,492,304,304,492,492,492,492',
'492,492,,,,,492,,,492,492,492,,492,304,492,492,,,,,304,304,304,304,304',
'304,304,304,304,304,304,304,304,304,492,,,,,,,492,492,492,492,492,492',
'492,492,492,492,492,492,492,492,,,,,304,304,,,,,,,,304,304,,304,304',
'304,304,304,304,,,,492,492,,,,,,,,492,492,,492,492,492,492,492,492,301',
',301,,,301,301,301,301,301,301,,,,,301,,,301,301,301,300,301,300,301',
'301,300,300,300,300,300,300,,,,,300,,,300,300,300,,300,301,300,300,',
',,,301,301,301,301,301,301,301,301,301,301,301,301,301,301,300,,,,,',
',300,300,300,300,300,300,300,300,300,300,300,300,300,300,,,,,301,301',
',,,,,,,301,301,,301,301,301,301,301,301,,,,300,300,,,,,,,,300,300,,300',
'300,300,300,300,300,299,,299,,,299,299,299,299,299,299,,,,,299,,,299',
'299,299,,299,,299,299,,,,,,,,,,,,,,,,,,,299,,,,,,,299,299,299,299,299',
'299,299,299,299,299,299,299,299,299,298,298,298,,,,,,,,298,,,,,298,',
',,,,,,,,299,299,,,,,,,,299,299,,299,299,299,299,299,299,,298,,298,298',
'298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298',
'293,,293,,,293,293,293,293,293,293,,,,,293,,,293,293,293,,293,,293,293',
',,,,,,,,298,298,,,298,298,298,298,298,,293,,,,,,,293,293,293,293,293',
'293,293,293,293,293,293,293,293,293,,,,,,,,,,,,,,,,,,,,,,,,,,293,293',
',,,,,,,293,293,,293,293,293,293,293,293,292,,292,,,292,292,292,292,292',
'292,,,,,292,,,292,292,292,494,292,494,292,292,494,494,494,494,494,494',
',,,,494,,,494,494,494,,494,292,494,494,,,,,292,292,292,292,292,292,292',
'292,292,292,292,292,292,292,494,,,,,,,494,494,494,494,494,494,494,494',
'494,494,494,494,494,494,,,,,292,292,,,,,,,,292,292,,292,292,292,292',
'292,292,,,,494,494,,,,,,,,494,494,,494,494,494,494,494,494,346,,346',
',,346,346,346,346,346,346,,,,,346,,,346,346,346,291,346,291,346,346',
'291,291,291,291,291,291,,,,,291,,,291,291,291,,291,346,291,291,,,,,346',
'346,346,346,346,346,346,346,346,346,346,346,346,346,291,,,,,,,291,291',
'291,291,291,291,291,291,291,291,291,291,291,291,,,,,346,346,,,,,,,,346',
'346,,346,346,346,346,346,346,,,,291,291,,,,,,,,291,291,,291,291,291',
'291,291,291,290,,290,,,290,290,290,290,290,290,,,,,290,,,290,290,290',
'287,290,287,290,290,287,287,287,287,287,287,,,,,287,,,287,287,287,,287',
'290,287,287,,,,,290,290,290,290,290,290,290,290,290,290,290,290,290',
'290,287,,,,,,,287,287,287,287,287,287,287,287,287,287,287,287,287,287',
',,,,290,290,,,,,,,,290,290,,290,290,290,290,290,290,,,,287,287,,,,,',
',,287,287,,287,287,287,287,287,287,285,,285,,,285,285,285,285,285,285',
',,,,285,,,285,285,285,284,285,284,285,285,284,284,284,284,284,284,,',
',,284,,,284,284,284,,284,285,284,284,,,,,285,285,285,285,285,285,285',
'285,285,285,285,285,285,285,284,,,,,,,284,284,284,284,284,284,284,284',
'284,284,284,284,284,284,,,,,285,285,,,,,,,,285,285,,285,285,285,285',
'285,285,,,,284,284,,,,,,,,284,284,,284,284,284,284,284,284,281,,281',
'281,,281,281,281,281,281,281,,,,,281,,,281,281,281,,281,,281,281,,,',
',,,,,,,,,,,,,,,281,,,,,,,281,281,281,281,281,281,281,281,281,281,281',
'281,281,281,279,279,279,,,,,,,,279,,,,,279,,,279,,,,,,,281,281,,,,,',
',,281,281,,281,281,281,281,281,281,,279,,279,279,279,279,279,279,279',
'279,279,279,279,279,279,279,279,279,279,279,279,269,,269,,,269,269,269',
'269,269,269,,,,,269,,,269,269,269,,269,,269,269,,,,,,,,,279,279,,,279',
'279,279,279,279,,269,,,,,,,269,269,269,269,269,269,269,269,269,269,269',
'269,269,269,,,,,,,,,,,,,,,,,,,,,,,,,,269,269,,,,,,,,269,269,,269,269',
'269,269,269,269,497,,497,,,497,497,497,497,497,497,,,,,497,,,497,497',
'497,499,497,499,497,497,499,499,499,499,499,499,,,,,499,,,499,499,499',
',499,497,499,499,,,,,497,497,497,497,497,497,497,497,497,497,497,497',
'497,497,499,,,,,,,499,499,499,499,499,499,499,499,499,499,499,499,499',
'499,,,,,497,497,,,,,,,,497,497,,497,497,497,497,497,497,,,,499,499,',
',,,,,,499,499,,499,499,499,499,499,499,507,,507,,,507,507,507,507,507',
'507,,,,,507,,,507,507,507,223,507,223,507,507,223,223,223,223,223,223',
',,,,223,,,223,223,223,,223,507,223,223,,,,,507,507,507,507,507,507,507',
'507,507,507,507,507,507,507,223,,,,,,,223,223,223,223,223,223,223,223',
'223,223,223,223,223,223,,,,,507,507,,,,,,,,507,507,,507,507,507,507',
'507,507,,,,223,223,,,,,,,,223,223,,223,223,223,223,223,223,214,,214',
',,214,214,214,214,214,214,,,,,214,,,214,214,214,508,214,508,214,214',
'508,508,508,508,508,508,,,,,508,,,508,508,508,,508,214,508,508,,,,,214',
'214,214,214,214,214,214,214,214,214,214,214,214,214,508,,,,,,,508,508',
'508,508,508,508,508,508,508,508,508,508,508,508,,,,,214,214,,,,,,,,214',
'214,,214,214,214,214,214,214,,,,508,508,,,,,,,,508,508,,508,508,508',
'508,508,508,509,,509,,,509,509,509,509,509,509,,,,,509,,,509,509,509',
',509,53,509,509,,,,,53,53,53,53,53,53,53,53,53,53,53,53,53,53,509,,',
',,,,509,509,509,509,509,509,509,509,509,509,509,509,509,509,,53,53,53',
',,,,,53,53,,,53,53,,,53,53,53,53,53,,,,509,509,,,,,,,,509,509,,509,509',
'509,509,509,509,510,510,510,,,510,510,510,510,510,510,,,,,510,,,510',
'510,510,149,510,149,510,510,149,149,149,149,149,149,,,,,149,,,149,149',
'149,,149,510,149,149,,,,,510,510,510,510,510,510,510,510,510,510,510',
'510,510,510,149,,,,,,,149,149,149,149,149,149,149,149,149,149,149,149',
'149,149,,,,,510,510,,,,,,,24,510,510,,510,510,510,510,510,510,24,,,149',
'149,24,,,24,,,,149,149,,149,149,149,149,149,149,,,,,,,,,,,,,,24,,24',
'24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,,,,,,184,,184',
',,184,184,184,184,184,184,,24,24,24,184,24,,184,184,184,,184,,184,184',
',,,24,24,,,24,24,24,24,24,,,,,,,184,,,,,,,184,184,184,184,184,184,184',
'184,184,184,184,184,184,184,,,,,,,,,,,,,,,,,,,,,,,,,,184,184,,,,,,,',
'184,184,,184,184,184,184,184,184,181,,181,,,181,181,181,181,181,181',
',,,,181,,,181,181,181,177,181,177,181,181,177,177,177,177,177,177,,',
',,177,,,177,177,177,,177,181,177,177,,,,,181,181,181,181,181,181,181',
'181,181,181,181,181,181,181,177,,,,,,,177,177,177,177,177,177,177,177',
'177,177,177,177,177,177,,,,,181,181,,,,,,,,181,181,,181,181,181,181',
'181,181,,,,177,177,,,,,,,,177,177,,177,177,177,177,177,177,176,,176',
',,176,176,176,176,176,176,,,,,176,,,176,176,176,333,176,333,176,176',
'333,333,333,333,333,333,,,,,333,,,333,333,333,,333,176,333,333,,,,,176',
'176,176,176,176,176,176,176,176,176,176,176,176,176,333,,,,,,,333,333',
'333,333,333,333,333,333,333,333,333,333,333,333,,,,,176,176,81,,,,,',
',176,176,,176,176,176,176,176,176,,81,,333,333,403,,,,,,,333,333,,333',
'333,333,333,333,333,,,,,,,81,,81,81,81,81,81,81,81,81,81,81,81,81,81',
'81,81,81,81,81,81,403,,403,403,403,403,403,403,403,403,403,403,403,403',
'403,403,403,403,403,403,403,,207,,,,,,,,,,,,81,81,,,81,81,81,81,81,206',
',,,,,,,,,,,403,403,,,403,403,403,403,403,207,,207,207,207,207,207,207',
'207,207,207,207,207,207,207,207,207,207,207,207,207,206,,206,206,206',
'206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,,,,',
',,,,,,,,,207,207,,,207,207,207,207,207,,,,,,,,,,,,,206,206,555,,206',
'206,206,206,206,555,555,555,555,555,555,555,555,555,555,555,555,555',
'555,265,,,,,,,265,265,265,265,265,265,265,265,265,265,265,265,265,265',
',,,,,,,,,,,,,555,555,,,555,555,555,555,555,555,555,555,555,555,555,',
',,,,,265,265,,,265,265,265,265,265,265,265,265,265,265,265,252,,,,,',
',252,252,252,252,252,252,252,252,252,252,252,252,252,252,384,,,,,,,384',
'384,384,384,384,384,384,384,384,384,384,384,384,384,,,,,,,,,,,,,,252',
'252,,,252,252,252,252,252,252,252,252,252,252,252,,,,,,,384,384,,,384',
'384,384,384,384,384,384,384,384,384,384,33,,33,33,33,33,33,33,33,33',
'33,33,33,33,33,33,33,33,33,33,33,295,,295,295,295,295,295,295,295,295',
'295,295,295,295,295,295,295,295,295,295,295,,,,,,,,,,,,,,33,33,,,33',
'33,33,33,33,,,,,,,,,,,,,295,295,,,295,295,295,295,295,274,,274,274,274',
'274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274',
'36,,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,,,,,,,',
',,,,,274,274,,,274,274,274,274,274,,,,,,,,,,,,,,36,36,,,36,36,36,36',
'36,41,,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,41,41,,,41,41,41,41,41' ]
        racc_action_check = arr = Array.new(7283, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
  2963,   nil,   nil,   nil,   nil,   nil,   859,   nil,   nil,   nil,
   nil,   nil,   nil,    59,   nil,   nil,    71,   853,   nil,   nil,
   nil,   nil,   265,     1,  6253,   nil,   nil,   nil,   nil,   -22,
   nil,   nil,   nil,  6996,    99,   nil,  7103,   -18,    -7,   147,
   nil,  7167,   700,   548,   nil,   nil,   nil,  2451,   nil,   nil,
   nil,   nil,    58,  6026,   722,   703,   254,   nil,    38,   nil,
   698,   nil,   493,   nil,  2704,   130,   265,   nil,   -11,   nil,
   352,   381,   nil,   nil,    42,   nil,   nil,    -9,   206,   nil,
   442,  6651,  3270,   nil,  2381,   nil,  1715,   379,   nil,   202,
  1519,   nil,    98,   455,  1124,  2865,   668,  1238,   896,   554,
  4281,    55,    57,   104,   536,  1808,   273,  2150,   -15,   nil,
   nil,    23,   559,   nil,     8,   nil,   nil,   416,   nil,  2241,
  2311,    37,   263,    35,   nil,   544,   640,   677,   nil,   379,
   nil,   674,   595,   nil,   720,   nil,    53,   nil,   nil,   nil,
   781,   nil,   784,   586,   nil,   nil,   333,   nil,   552,  6176,
   812,   833,   nil,   315,   327,   234,   639,   nil,   876,   nil,
   815,   853,   nil,   nil,   832,   nil,   nil,   805,   nil,   nil,
   nil,    99,   nil,  3141,   nil,   nil,  6560,  6452,   833,   613,
   480,  6431,   nil,   835,  6323,   nil,   nil,   832,   689,   nil,
   803,   807,   nil,   806,   917,   nil,   nil,   804,   nil,   277,
   783,   nil,   796,   789,   792,     5,  6757,  6736,   nil,   513,
   nil,   nil,   nil,   nil,  5918,   nil,   786,   nil,   784,   nil,
   -16,   396,   nil,  5810,   779,  1614,   751,   nil,    54,   nil,
   nil,   nil,   nil,  2020,  1956,  1728,  2613,   nil,   nil,   757,
   740,   742,   nil,   nil,  2036,   712,   nil,  1500,   687,   377,
   nil,   708,  6905,   699,   nil,   nil,  2774,   nil,   nil,   691,
   nil,   nil,   160,   nil,    24,  6835,   nil,   681,   nil,  5552,
   nil,   646,   666,   nil,  7081,   nil,   nil,   556,   213,  5487,
   nil,  5422,   626,   nil,  5314,  5293,   nil,  5185,   nil,    23,
  5164,  5056,  4906,  4798,   nil,  7017,   nil,   574,  4733,  4668,
  4560,  4539,   nil,   531,  4410,   493,   nil,  4302,  4194,  4173,
  4065,  4044,  3936,   nil,   nil,  3915,   219,   428,   nil,  3807,
  3678,  3657,  3549,  3528,   nil,  1352,    82,   447,  3420,   nil,
   nil,  1145,   nil,  6581,  3033,   364,  1943,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,  5035,   nil,   nil,   436,
   nil,   575,   nil,   nil,   463,   nil,  3162,   365,  1601,   nil,
   nil,  1633,   nil,  3291,   448,   350,   334,   nil,   nil,   512,
   481,    91,   nil,   nil,   250,   nil,   nil,   233,   139,   nil,
   nil,   nil,   nil,   nil,  6926,   nil,    77,   nil,   nil,   nil,
   nil,   690,   nil,   nil,   nil,   nil,   687,   nil,   nil,   nil,
   nil,   nil,   nil,  6672,  3399,   555,   163,   206,   nil,   nil,
   211,   nil,   647,   594,   323,   nil,   443,   432,   242,   319,
   357,   411,   233,   250,   511,   nil,   301,   nil,   nil,   nil,
    37,   472,   467,   492,    40,   494,   199,  2634,   nil,   nil,
   nil,   nil,   610,   561,   586,   591,   430,   377,   395,   nil,
   435,   381,     4,  1829,    -2,  2057,   nil,   nil,   nil,   nil,
   nil,  2171,   nil,   nil,   nil,   nil,  1010,   685,   nil,   nil,
   nil,    -9,   440,   nil,   698,   nil,  2521,   716,   734,   nil,
   nil,   733,   nil,   nil,   nil,   nil,   nil,   nil,   742,  3786,
   nil,   nil,  4431,   nil,  4927,   nil,   nil,  5660,   nil,  5681,
   772,   711,   nil,   nil,  1487,  1373,  1259,  5789,  5939,  6047,
  6155,   nil,   816,   nil,   799,  2013,   804,   149,   nil,   nil,
   148,   nil,   nil,   nil,   nil,   nil,  2886,   nil,   823,   827,
   nil,   nil,   760,   nil,   nil,   363,   269,   187,   380,   461,
   235,   nil,   844,   842,   845,   779,   nil,   nil,   347,   852,
   233,   119,  1031,   nil,   nil,  6814,   nil,   882,   nil,   nil,
   nil,   nil,   nil,   nil,   882,   nil,   866,   nil ]

racc_action_default = [
  -315,  -181,  -178,  -166,  -238,  -224,  -184,  -182,  -167,  -154,
  -310,  -307,  -225,  -315,  -186,  -168,  -315,  -315,  -309,  -187,
  -172,  -169,  -315,  -315,    -1,  -230,  -193,  -188,  -173,  -315,
  -194,  -189,  -174,  -155,  -315,  -175,  -157,  -315,  -237,  -315,
  -176,  -159,  -315,  -229,  -226,  -183,  -179,  -315,  -227,  -180,
  -177,  -165,  -315,  -315,  -192,   -99,  -105,  -102,  -315,  -103,
  -315,  -152,  -315,  -161,  -163,  -133,  -315,  -308,  -315,  -156,
  -315,  -219,  -158,   -97,  -315,  -242,  -240,  -239,  -228,  -160,
  -315,  -315,  -315,  -314,  -315,  -287,  -315,  -315,  -170,  -315,
  -315,  -195,  -315,  -315,  -209,  -315,  -211,  -315,  -315,  -315,
  -315,  -315,  -315,  -315,  -315,  -315,  -315,  -315,  -315,  -144,
  -110,  -315,  -315,  -109,  -315,   568,  -153,  -315,  -312,  -315,
  -315,  -315,  -315,  -315,  -148,  -315,  -315,  -315,  -139,  -315,
  -142,  -222,  -315,  -220,  -315,  -141,  -315,  -243,  -241,  -231,
  -244,  -246,  -315,  -250,  -251,  -236,  -315,  -233,   -61,  -315,
  -315,  -315,   -18,   -66,  -315,  -253,   -69,   -42,   -71,   -47,
   -36,   -73,   -46,   -14,   -75,   -45,   -15,   -77,   -48,   -44,
   -16,   -79,   -43,  -315,   -96,   -51,  -315,  -315,  -315,   -55,
   -58,  -315,   -25,  -315,  -315,  -313,  -288,  -315,  -315,  -273,
  -315,  -315,  -291,  -315,  -315,  -283,   -94,  -315,  -279,   -48,
  -315,  -278,  -315,   -14,  -315,  -315,  -157,  -159,  -289,  -315,
  -272,  -274,   -81,  -275,  -315,  -276,  -315,  -277,  -163,  -185,
  -315,  -315,  -212,  -315,  -214,  -315,  -315,  -207,  -315,  -208,
  -196,  -191,  -210,  -315,  -315,  -315,  -315,  -100,  -101,  -315,
  -315,  -104,  -127,  -132,  -315,  -315,  -147,  -315,  -315,  -315,
  -146,  -315,  -315,  -315,  -162,  -311,  -315,  -267,  -164,  -315,
  -150,  -140,  -315,  -149,  -315,  -315,  -136,  -315,  -143,  -315,
  -217,  -315,  -315,   -98,  -315,  -234,  -249,  -256,  -255,  -315,
  -248,  -315,  -315,  -235,  -315,  -315,   -38,  -315,   -31,  -315,
  -315,  -315,  -315,  -315,   -23,  -315,  -254,  -255,  -315,  -315,
  -315,  -315,   -33,  -315,  -315,  -315,   -32,  -315,  -315,  -315,
  -315,  -315,  -315,   -39,   -40,  -315,  -315,  -315,  -232,  -315,
  -315,  -315,  -315,  -315,   -37,  -315,  -315,  -183,  -315,  -284,
  -290,  -315,  -285,  -315,  -315,  -315,  -315,   -86,   -87,   -88,
   -89,   -90,   -91,   -92,   -93,   -83,  -315,   -84,   -85,  -315,
  -303,  -315,  -304,  -305,  -315,  -292,  -315,  -315,  -315,  -171,
  -199,  -315,  -215,  -315,  -315,  -315,  -197,  -205,  -206,  -315,
  -315,  -315,  -190,  -107,  -106,  -131,  -130,  -126,  -315,  -145,
  -128,  -118,  -111,  -112,  -315,  -113,  -315,  -114,  -115,  -116,
  -129,  -315,  -270,  -134,  -151,  -138,  -315,  -137,  -223,  -221,
  -218,  -247,  -245,  -315,  -315,  -257,  -315,  -315,  -263,  -259,
  -315,  -252,   -59,   -60,   -10,   -11,  -315,   -63,   -64,   -65,
   -62,  -315,   -67,   -68,   -70,   -29,  -315,   -34,   -27,   -30,
  -315,   -72,   -74,   -76,  -315,   -78,  -315,  -315,   -17,   -52,
   -53,   -54,   -57,   -56,  -315,    -4,  -315,  -315,  -315,  -286,
  -315,  -315,  -315,  -315,  -315,  -315,   -82,  -302,  -280,  -306,
   -95,  -315,  -282,  -213,  -216,  -204,  -315,  -315,  -200,  -201,
  -202,  -315,  -315,  -117,  -315,  -268,  -315,  -315,  -315,  -265,
  -261,  -315,  -264,  -258,  -260,   -12,   -13,   -21,  -315,  -315,
   -28,   -26,  -315,   -41,  -315,   -49,   -22,  -315,   -19,  -315,
  -315,  -315,    -3,   -20,  -315,  -315,  -315,  -315,  -315,  -315,
  -315,  -281,  -315,  -198,  -315,  -315,  -120,  -124,  -269,  -271,
  -135,  -266,  -262,   -24,   -35,   -80,  -315,    -8,    -5,    -6,
    -2,    -7,  -293,  -295,  -296,  -315,  -315,  -315,  -315,  -315,
  -315,  -108,  -125,  -315,  -315,  -315,   -50,    -9,  -315,  -315,
  -315,  -315,  -315,  -298,  -203,  -315,  -121,  -315,  -123,  -294,
  -297,  -300,  -301,  -299,  -315,  -122,  -315,  -119 ]

racc_goto_table = [
   174,   168,    83,   221,   239,   386,    10,   257,   258,   126,
    90,   455,   365,   261,   316,   330,    78,   188,   396,   118,
   313,   335,   122,   259,   230,    95,   276,   245,   228,   132,
    10,   142,   251,    89,   378,   253,   463,   106,   296,   185,
   405,    84,   254,    11,    76,    22,   424,   129,   432,   225,
   245,   229,    90,   232,   233,   234,   235,    90,   119,   405,
   264,   556,    90,   108,   247,   126,   126,    67,   286,    22,
    36,   123,   236,   433,   255,   565,   178,   244,    69,   262,
   190,    72,   266,   138,   241,    58,    79,   249,   517,   381,
   186,   520,   168,   272,    36,   314,   412,   413,    68,   431,
   324,   435,   381,    36,   442,   443,    36,   446,   447,   294,
   399,    36,   417,   418,   419,   420,   346,    36,   422,   423,
   426,   331,   146,    77,   401,   186,   143,    74,   508,   240,
   510,   391,   174,   168,    36,   416,   526,   473,   364,    66,
    24,   174,   168,   257,   392,    17,   369,   370,   371,   278,
   nil,    36,   436,   261,    36,   nil,   206,   nil,   330,   nil,
   377,   297,   444,   229,   232,   230,   439,   440,   441,   nil,
   245,   nil,   nil,   230,   nil,   nil,   nil,   nil,   458,   317,
   nil,   nil,   nil,   nil,   nil,   462,   326,   174,   168,    36,
   nil,   427,   nil,    90,   nil,   nil,   186,   nil,   nil,   174,
   168,    90,   nil,   168,   168,   126,   nil,   354,   357,   168,
   168,   168,   168,   nil,   nil,   nil,   nil,   362,   168,   168,
   168,   381,   397,   nil,    47,   nil,    41,   168,   168,   168,
   nil,   168,   nil,   456,   nil,   nil,   nil,   nil,   168,   168,
   168,   168,   168,   460,   nil,   421,    64,   nil,    47,   nil,
    41,    72,    79,   513,   nil,    78,   nil,   nil,   nil,    41,
   206,   nil,    41,   398,    75,    55,    80,    41,   nil,   nil,
   nil,   nil,    65,    41,   nil,   410,   206,   206,    55,   nil,
   nil,   174,   168,   nil,   495,   278,    73,   nil,   511,   317,
    41,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    88,   nil,   137,   297,   nil,   nil,    41,   564,   430,
    41,   218,   207,   434,   nil,   nil,   nil,   317,   nil,   143,
   nil,   nil,   174,   168,   143,   nil,   nil,   nil,   nil,   nil,
   448,   532,   533,   534,   nil,   450,   451,   nil,   454,   nil,
   143,   218,   453,   143,    36,    41,   nil,   nil,   nil,    36,
   237,   nil,    88,   478,   nil,   nil,   168,   464,   nil,   nil,
   nil,   nil,   nil,   257,   519,    36,   553,   280,    36,   nil,
   nil,   nil,   nil,   514,   nil,   559,   524,   561,   562,   563,
   nil,   nil,   nil,   nil,   nil,   273,   nil,   nil,   nil,   nil,
   nil,   nil,   381,   nil,   nil,   nil,   nil,   nil,   481,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   206,   nil,   nil,   nil,
   525,   168,   527,   168,   nil,   nil,   207,   nil,   nil,   nil,
   nil,   nil,   nil,   512,   nil,   540,   nil,   nil,   542,   515,
   nil,   nil,   207,   207,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   523,   547,   168,   nil,   nil,   143,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   359,
   nil,   nil,   nil,    36,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   528,
    41,   529,   nil,    80,   nil,    41,   nil,   nil,   nil,   535,
   536,   537,   538,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    41,   nil,   nil,    41,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   207,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    41 ]

racc_goto_check = [
     7,    16,    11,    46,    34,    40,    56,    15,    64,    38,
    45,    83,    44,    52,    10,    81,    73,    87,    40,    11,
    18,    81,    54,    34,    68,    49,    78,    43,    53,    70,
    56,    12,    43,    36,    44,    43,    69,    47,    78,    11,
    79,    88,    62,    89,    72,    57,    23,    47,    25,    45,
    43,    45,    45,    45,    45,    45,    45,    45,    88,    79,
    53,    41,    45,    48,    45,    38,    38,    89,    16,    57,
    60,    48,    49,    26,    11,    41,    30,    49,    57,    54,
    88,    57,    11,    72,    36,    37,    57,    47,    42,    10,
    56,    42,    16,    70,    60,    16,    20,    20,    37,    24,
    16,    27,    10,    60,    19,    19,    60,     4,     4,    11,
    71,    60,    21,    21,    21,    21,    29,    60,    22,    22,
    14,    87,    74,    75,    77,    56,    57,    31,    83,    35,
    83,    80,     7,    16,    60,     8,     6,    40,    46,    50,
     2,     7,    16,    15,    64,     1,    46,    46,    46,    72,
   nil,    60,    10,    52,    60,   nil,    60,   nil,    81,   nil,
    46,    72,    10,    45,    45,    68,    18,    18,    18,   nil,
    43,   nil,   nil,    68,   nil,   nil,   nil,   nil,    81,     5,
   nil,   nil,   nil,   nil,   nil,    81,     5,     7,    16,    60,
   nil,    15,   nil,    45,   nil,   nil,    56,   nil,   nil,     7,
    16,    45,   nil,    16,    16,    38,   nil,     5,    30,    16,
    16,    16,    16,   nil,   nil,   nil,   nil,    30,    16,    16,
    16,    10,    11,   nil,    63,   nil,    61,    16,    16,    16,
   nil,    16,   nil,    15,   nil,   nil,   nil,   nil,    16,    16,
    16,    16,    16,    15,   nil,    12,    63,   nil,    63,   nil,
    61,    57,    57,    44,   nil,    73,   nil,   nil,   nil,    61,
    60,   nil,    61,    30,    61,    32,    63,    61,   nil,   nil,
   nil,   nil,    32,    61,   nil,    30,    60,    60,    32,   nil,
   nil,     7,    16,   nil,    18,    72,    32,   nil,    81,     5,
    61,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    32,   nil,    61,    72,   nil,   nil,    61,    40,     5,
    61,    63,    61,     5,   nil,   nil,   nil,     5,   nil,    57,
   nil,   nil,     7,    16,    57,   nil,   nil,   nil,   nil,   nil,
     5,    81,    81,    81,   nil,     5,     5,   nil,     5,   nil,
    57,    63,    56,    57,    60,    61,   nil,   nil,   nil,    60,
    32,   nil,    32,    12,   nil,   nil,    16,    30,   nil,   nil,
   nil,   nil,   nil,    15,    64,    60,    81,    63,    60,   nil,
   nil,   nil,   nil,    34,   nil,    81,    15,    81,    81,    81,
   nil,   nil,   nil,   nil,   nil,    32,   nil,   nil,   nil,   nil,
   nil,   nil,    10,   nil,   nil,   nil,   nil,   nil,    30,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    60,   nil,   nil,   nil,
     7,    16,     7,    16,   nil,   nil,    61,   nil,   nil,   nil,
   nil,   nil,   nil,    45,   nil,    46,   nil,   nil,    46,    45,
   nil,   nil,    61,    61,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    11,     7,    16,   nil,   nil,    57,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    32,
   nil,   nil,   nil,    60,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     5,
    61,     5,   nil,    63,   nil,    61,   nil,   nil,   nil,     5,
     5,     5,     5,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    61,   nil,   nil,    61,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    61,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    61 ]

racc_goto_pointer = [
   nil,   145,   140,   nil,  -219,     2,  -358,   -82,  -154,   nil,
  -163,   -45,   -50,   nil,  -184,  -113,   -81,   nil,  -153,  -218,
  -188,  -178,  -181,  -255,  -209,  -261,  -237,  -211,   nil,   -83,
    -6,    90,   249,   nil,   -98,    26,   -19,    69,   -57,   nil,
  -247,  -482,  -386,   -79,  -214,   -43,   -87,   -21,     5,   -28,
   116,   nil,  -109,   -65,   -44,   nil,     6,    45,   nil,   nil,
    70,   226,   -75,   224,  -112,   nil,   nil,   nil,   -71,  -325,
   -41,  -161,     6,   -23,    41,    85,   nil,  -150,  -117,  -238,
  -125,  -173,   nil,  -325,   nil,   nil,   nil,   -69,    -6,    43,
   nil ]

racc_goto_default = [
   nil,   nil,   nil,   499,   nil,   209,   nil,   212,   nil,   182,
   150,   189,   406,   160,   nil,   196,   199,   173,   175,   179,
   180,   148,   153,   156,   158,   161,   164,   167,   171,   nil,
   nil,   nil,   238,    56,   nil,   nil,   nil,   nil,   112,   384,
   nil,   nil,   nil,   104,   nil,   155,   nil,   nil,   nil,   nil,
   nil,   127,   128,   nil,   nil,     9,    85,    87,    62,    33,
    94,    96,    63,   224,   nil,     1,     7,    13,    91,   222,
   nil,   133,    39,    43,   nil,   nil,   140,   141,   407,   277,
   nil,   208,   210,   211,   213,   215,   217,   nil,   nil,   nil,
    18 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 123, :_reduce_1,
  2, 125, :_reduce_2,
  1, 125, :_reduce_3,
  1, 126, :_reduce_none,
  3, 126, :_reduce_5,
  3, 126, :_reduce_6,
  3, 126, :_reduce_none,
  1, 128, :_reduce_none,
  2, 128, :_reduce_none,
  1, 130, :_reduce_none,
  1, 130, :_reduce_none,
  2, 130, :_reduce_none,
  2, 130, :_reduce_none,
  1, 131, :_reduce_14,
  1, 131, :_reduce_15,
  1, 131, :_reduce_16,
  3, 131, :_reduce_17,
  1, 131, :_reduce_18,
  4, 131, :_reduce_19,
  4, 131, :_reduce_20,
  4, 131, :_reduce_21,
  4, 131, :_reduce_22,
  2, 131, :_reduce_23,
  5, 131, :_reduce_24,
  1, 135, :_reduce_25,
  4, 135, :_reduce_none,
  3, 135, :_reduce_27,
  4, 135, :_reduce_28,
  3, 135, :_reduce_29,
  3, 135, :_reduce_none,
  2, 135, :_reduce_31,
  2, 135, :_reduce_32,
  2, 135, :_reduce_33,
  1, 136, :_reduce_34,
  3, 136, :_reduce_35,
  1, 138, :_reduce_36,
  2, 138, :_reduce_none,
  2, 138, :_reduce_none,
  2, 138, :_reduce_39,
  2, 138, :_reduce_none,
  4, 138, :_reduce_none,
  1, 139, :_reduce_42,
  1, 139, :_reduce_43,
  1, 139, :_reduce_44,
  1, 139, :_reduce_45,
  1, 139, :_reduce_46,
  1, 139, :_reduce_47,
  1, 140, :_reduce_48,
  4, 140, :_reduce_49,
  6, 140, :_reduce_none,
  1, 141, :_reduce_51,
  3, 141, :_reduce_52,
  3, 141, :_reduce_53,
  3, 141, :_reduce_54,
  1, 142, :_reduce_55,
  3, 142, :_reduce_56,
  3, 142, :_reduce_57,
  1, 143, :_reduce_58,
  3, 143, :_reduce_59,
  3, 143, :_reduce_60,
  1, 144, :_reduce_61,
  3, 144, :_reduce_62,
  3, 144, :_reduce_63,
  3, 144, :_reduce_64,
  3, 144, :_reduce_65,
  1, 145, :_reduce_66,
  3, 145, :_reduce_67,
  3, 145, :_reduce_68,
  1, 146, :_reduce_69,
  3, 146, :_reduce_70,
  1, 147, :_reduce_71,
  3, 147, :_reduce_72,
  1, 148, :_reduce_73,
  3, 148, :_reduce_74,
  1, 149, :_reduce_75,
  3, 149, :_reduce_76,
  1, 150, :_reduce_77,
  3, 150, :_reduce_78,
  1, 129, :_reduce_79,
  5, 129, :_reduce_80,
  1, 137, :_reduce_81,
  3, 137, :_reduce_82,
  1, 151, :_reduce_83,
  1, 151, :_reduce_84,
  1, 151, :_reduce_85,
  1, 151, :_reduce_86,
  1, 151, :_reduce_87,
  1, 151, :_reduce_88,
  1, 151, :_reduce_89,
  1, 151, :_reduce_90,
  1, 151, :_reduce_91,
  1, 151, :_reduce_92,
  1, 151, :_reduce_93,
  1, 127, :_reduce_94,
  3, 127, :_reduce_95,
  1, 152, :_reduce_96,
  1, 153, :_reduce_97,
  3, 153, :_reduce_98,
  1, 155, :_reduce_99,
  3, 155, :_reduce_100,
  1, 156, :_reduce_101,
  1, 154, :_reduce_102,
  1, 154, :_reduce_103,
  1, 157, :_reduce_104,
  1, 159, :_reduce_105,
  4, 159, :_reduce_106,
  4, 159, :_reduce_107,
  7, 159, :_reduce_108,
  1, 160, :_reduce_109,
  1, 160, :_reduce_110,
  1, 161, :_reduce_111,
  1, 161, :_reduce_112,
  1, 161, :_reduce_113,
  1, 161, :_reduce_114,
  1, 161, :_reduce_115,
  1, 161, :_reduce_116,
  2, 162, :_reduce_none,
  1, 162, :_reduce_118,
  4, 163, :_reduce_119,
  1, 164, :_reduce_120,
  3, 164, :_reduce_121,
  4, 164, :_reduce_122,
  3, 164, :_reduce_none,
  5, 165, :_reduce_124,
  6, 165, :_reduce_125,
  3, 165, :_reduce_126,
  2, 169, :_reduce_127,
  3, 169, :_reduce_128,
  3, 169, :_reduce_129,
  3, 169, :_reduce_130,
  3, 170, :_reduce_131,
  2, 170, :_reduce_132,
  1, 172, :_reduce_133,
  4, 172, :_reduce_134,
  5, 173, :_reduce_135,
  2, 174, :_reduce_136,
  3, 174, :_reduce_137,
  3, 174, :_reduce_138,
  1, 176, :_reduce_139,
  2, 176, :_reduce_140,
  3, 177, :_reduce_141,
  3, 177, :_reduce_142,
  4, 177, :_reduce_143,
  3, 177, :_reduce_144,
  5, 177, :_reduce_145,
  4, 177, :_reduce_146,
  4, 177, :_reduce_147,
  3, 177, :_reduce_148,
  4, 177, :_reduce_149,
  4, 177, :_reduce_150,
  5, 177, :_reduce_151,
  2, 178, :_reduce_152,
  3, 178, :_reduce_153,
  1, 178, :_reduce_154,
  1, 179, :_reduce_155,
  2, 179, :_reduce_156,
  1, 179, :_reduce_157,
  2, 179, :_reduce_158,
  1, 179, :_reduce_159,
  2, 179, :_reduce_160,
  1, 180, :_reduce_161,
  3, 180, :_reduce_162,
  1, 184, :_reduce_163,
  3, 184, :_reduce_164,
  1, 181, :_reduce_165,
  1, 181, :_reduce_166,
  1, 181, :_reduce_167,
  1, 181, :_reduce_168,
  1, 181, :_reduce_169,
  1, 158, :_reduce_170,
  3, 158, :_reduce_171,
  1, 182, :_reduce_172,
  1, 182, :_reduce_173,
  1, 182, :_reduce_174,
  1, 182, :_reduce_175,
  1, 182, :_reduce_176,
  1, 182, :_reduce_177,
  1, 182, :_reduce_178,
  1, 182, :_reduce_179,
  1, 182, :_reduce_180,
  1, 182, :_reduce_181,
  1, 182, :_reduce_182,
  1, 182, :_reduce_183,
  1, 182, :_reduce_184,
  4, 182, :_reduce_185,
  1, 182, :_reduce_186,
  1, 182, :_reduce_187,
  1, 182, :_reduce_188,
  1, 182, :_reduce_189,
  5, 187, :_reduce_190,
  4, 187, :_reduce_191,
  2, 187, :_reduce_192,
  1, 189, :_reduce_193,
  1, 189, :_reduce_194,
  1, 171, :_reduce_195,
  2, 171, :_reduce_196,
  1, 166, :_reduce_197,
  3, 166, :_reduce_198,
  3, 190, :_reduce_199,
  4, 190, :_reduce_none,
  4, 190, :_reduce_none,
  4, 190, :_reduce_none,
  7, 190, :_reduce_none,
  4, 190, :_reduce_none,
  3, 190, :_reduce_none,
  2, 175, :_reduce_206,
  1, 175, :_reduce_207,
  2, 167, :_reduce_208,
  1, 167, :_reduce_209,
  2, 167, :_reduce_210,
  1, 167, :_reduce_211,
  1, 168, :_reduce_212,
  3, 168, :_reduce_213,
  1, 191, :_reduce_214,
  2, 191, :_reduce_215,
  3, 191, :_reduce_216,
  4, 188, :_reduce_217,
  5, 188, :_reduce_218,
  2, 188, :_reduce_219,
  1, 192, :_reduce_220,
  3, 192, :_reduce_221,
  1, 193, :_reduce_222,
  3, 193, :_reduce_223,
  1, 183, :_reduce_224,
  1, 183, :_reduce_225,
  1, 183, :_reduce_226,
  1, 183, :_reduce_227,
  2, 185, :_reduce_228,
  1, 185, :_reduce_229,
  1, 195, :_reduce_230,
  3, 195, :_reduce_231,
  4, 195, :_reduce_none,
  3, 195, :_reduce_none,
  4, 195, :_reduce_234,
  4, 195, :_reduce_235,
  3, 195, :_reduce_236,
  1, 194, :_reduce_237,
  1, 194, :_reduce_none,
  2, 194, :_reduce_239,
  2, 194, :_reduce_240,
  3, 194, :_reduce_241,
  1, 197, :_reduce_242,
  2, 197, :_reduce_243,
  1, 134, :_reduce_244,
  3, 134, :_reduce_245,
  1, 198, :_reduce_246,
  3, 198, :_reduce_247,
  2, 199, :_reduce_248,
  2, 199, :_reduce_249,
  1, 199, :_reduce_250,
  1, 196, :_reduce_none,
  3, 196, :_reduce_none,
  1, 132, :_reduce_none,
  2, 132, :_reduce_none,
  1, 200, :_reduce_none,
  1, 200, :_reduce_none,
  2, 200, :_reduce_none,
  3, 201, :_reduce_none,
  2, 201, :_reduce_none,
  3, 201, :_reduce_none,
  3, 201, :_reduce_none,
  4, 201, :_reduce_none,
  2, 201, :_reduce_none,
  3, 201, :_reduce_none,
  3, 201, :_reduce_none,
  4, 201, :_reduce_none,
  1, 186, :_reduce_none,
  3, 186, :_reduce_none,
  4, 186, :_reduce_none,
  1, 202, :_reduce_none,
  3, 202, :_reduce_none,
  1, 203, :_reduce_272,
  1, 203, :_reduce_273,
  1, 203, :_reduce_274,
  1, 203, :_reduce_275,
  1, 203, :_reduce_276,
  1, 203, :_reduce_277,
  1, 203, :_reduce_278,
  1, 203, :_reduce_279,
  3, 204, :_reduce_none,
  4, 204, :_reduce_none,
  3, 204, :_reduce_none,
  2, 133, :_reduce_283,
  3, 133, :_reduce_284,
  3, 133, :_reduce_285,
  4, 133, :_reduce_286,
  1, 210, :_reduce_287,
  2, 210, :_reduce_288,
  1, 209, :_reduce_289,
  2, 209, :_reduce_290,
  1, 205, :_reduce_291,
  2, 205, :_reduce_292,
  5, 206, :_reduce_293,
  7, 206, :_reduce_294,
  5, 206, :_reduce_295,
  5, 207, :_reduce_296,
  7, 207, :_reduce_none,
  6, 207, :_reduce_none,
  7, 207, :_reduce_299,
  7, 207, :_reduce_300,
  7, 207, :_reduce_301,
  3, 208, :_reduce_none,
  2, 208, :_reduce_none,
  2, 208, :_reduce_none,
  2, 208, :_reduce_305,
  3, 208, :_reduce_306,
  1, 124, :_reduce_307,
  2, 124, :_reduce_308,
  1, 211, :_reduce_309,
  1, 211, :_reduce_310,
  4, 212, :_reduce_311,
  3, 212, :_reduce_312,
  3, 212, :_reduce_313,
  2, 212, :_reduce_314 ]

racc_reduce_n = 315

racc_shift_n = 568

racc_token_table = {
  false => 0,
  :error => 1,
  ";" => 2,
  "{" => 3,
  "}" => 4,
  "," => 5,
  ":" => 6,
  "=" => 7,
  "(" => 8,
  ")" => 9,
  "[" => 10,
  "]" => 11,
  "." => 12,
  "&" => 13,
  "!" => 14,
  "~" => 15,
  "-" => 16,
  "+" => 17,
  "*" => 18,
  "/" => 19,
  "%" => 20,
  "<" => 21,
  ">" => 22,
  "^" => 23,
  "|" => 24,
  "?" => 25,
  :IDENTIFIER => 26,
  :CONSTANT => 27,
  :STRING_LITERAL => 28,
  :SYSTEM_LOC => 29,
  :SIZEOF => 30,
  :PTR_OP => 31,
  :INC_OP => 32,
  :DEC_OP => 33,
  :LEFT_OP => 34,
  :RIGHT_OP => 35,
  :LE_OP => 36,
  :GE_OP => 37,
  :EQ_OP => 38,
  :NE_OP => 39,
  :AND_OP => 40,
  :OR_OP => 41,
  :MUL_ASSIGN => 42,
  :DIV_ASSIGN => 43,
  :MOD_ASSIGN => 44,
  :ADD_ASSIGN => 45,
  :SUB_ASSIGN => 46,
  :LEFT_ASSIGN => 47,
  :RIGHT_ASSIGN => 48,
  :AND_ASSIGN => 49,
  :XOR_ASSIGN => 50,
  :OR_ASSIGN => 51,
  :TYPE_NAME => 52,
  :BOOLEAN => 53,
  :TYPEDEF => 54,
  :EXTERN => 55,
  :STATIC => 56,
  :AUTO => 57,
  :REGISTER => 58,
  :CHAR => 59,
  :SHORT => 60,
  :INT => 61,
  :LONG => 62,
  :SIGNED => 63,
  :UNSIGNED => 64,
  :FLOAT => 65,
  :DOUBLE => 66,
  :CONST => 67,
  :VOLATILE => 68,
  :VOID => 69,
  :STRUCT => 70,
  :UNION => 71,
  :ENUM => 72,
  :ELLIPSIS => 73,
  :CASE => 74,
  :DEFAULT => 75,
  :IF => 76,
  :ELSE => 77,
  :SWITCH => 78,
  :WHILE => 79,
  :DO => 80,
  :FOR => 81,
  :GOTO => 82,
  :CONTINUE => 83,
  :BREAK => 84,
  :RETURN => 85,
  :DECLSPEC => 86,
  :DLLIMPORT => 87,
  :DLLEXPORT => 88,
  :IMPORT => 89,
  :AT_INTERFACE => 90,
  :AT_IMPLEMENTATION => 91,
  :AT_PROTOCOL => 92,
  :AT_END => 93,
  :AT_CLASS => 94,
  :AT_PRIVATE => 95,
  :AT_PUBLIC => 96,
  :AT_PROTECTED => 97,
  :AT_ENCODE => 98,
  :AT_SELECTOR => 99,
  :AT_TRY => 100,
  :AT_CATCH => 101,
  :AT_THROW => 102,
  :AT_PROPERTY => 103,
  :AT_SYNTHESIZE => 104,
  :AT_OPTIONAL => 105,
  :AT_REQUIRED => 106,
  :WEAK => 107,
  :STRONG => 108,
  :SELF => 109,
  :AT_STRING_LITERAL => 110,
  :ID => 111,
  :SEL => 112,
  :BOOL => 113,
  :UNICHAR => 114,
  :CLASS => 115,
  :IN => 116,
  :OUT => 117,
  :INOUT => 118,
  :BYREF => 119,
  :BYCOPY => 120,
  :ONEWAY => 121 }

racc_nt_base = 122

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\";\"",
  "\"{\"",
  "\"}\"",
  "\",\"",
  "\":\"",
  "\"=\"",
  "\"(\"",
  "\")\"",
  "\"[\"",
  "\"]\"",
  "\".\"",
  "\"&\"",
  "\"!\"",
  "\"~\"",
  "\"-\"",
  "\"+\"",
  "\"*\"",
  "\"/\"",
  "\"%\"",
  "\"<\"",
  "\">\"",
  "\"^\"",
  "\"|\"",
  "\"?\"",
  "IDENTIFIER",
  "CONSTANT",
  "STRING_LITERAL",
  "SYSTEM_LOC",
  "SIZEOF",
  "PTR_OP",
  "INC_OP",
  "DEC_OP",
  "LEFT_OP",
  "RIGHT_OP",
  "LE_OP",
  "GE_OP",
  "EQ_OP",
  "NE_OP",
  "AND_OP",
  "OR_OP",
  "MUL_ASSIGN",
  "DIV_ASSIGN",
  "MOD_ASSIGN",
  "ADD_ASSIGN",
  "SUB_ASSIGN",
  "LEFT_ASSIGN",
  "RIGHT_ASSIGN",
  "AND_ASSIGN",
  "XOR_ASSIGN",
  "OR_ASSIGN",
  "TYPE_NAME",
  "BOOLEAN",
  "TYPEDEF",
  "EXTERN",
  "STATIC",
  "AUTO",
  "REGISTER",
  "CHAR",
  "SHORT",
  "INT",
  "LONG",
  "SIGNED",
  "UNSIGNED",
  "FLOAT",
  "DOUBLE",
  "CONST",
  "VOLATILE",
  "VOID",
  "STRUCT",
  "UNION",
  "ENUM",
  "ELLIPSIS",
  "CASE",
  "DEFAULT",
  "IF",
  "ELSE",
  "SWITCH",
  "WHILE",
  "DO",
  "FOR",
  "GOTO",
  "CONTINUE",
  "BREAK",
  "RETURN",
  "DECLSPEC",
  "DLLIMPORT",
  "DLLEXPORT",
  "IMPORT",
  "AT_INTERFACE",
  "AT_IMPLEMENTATION",
  "AT_PROTOCOL",
  "AT_END",
  "AT_CLASS",
  "AT_PRIVATE",
  "AT_PUBLIC",
  "AT_PROTECTED",
  "AT_ENCODE",
  "AT_SELECTOR",
  "AT_TRY",
  "AT_CATCH",
  "AT_THROW",
  "AT_PROPERTY",
  "AT_SYNTHESIZE",
  "AT_OPTIONAL",
  "AT_REQUIRED",
  "WEAK",
  "STRONG",
  "SELF",
  "AT_STRING_LITERAL",
  "ID",
  "SEL",
  "BOOL",
  "UNICHAR",
  "CLASS",
  "IN",
  "OUT",
  "INOUT",
  "BYREF",
  "BYCOPY",
  "ONEWAY",
  "$start",
  "target",
  "translation_unit",
  "selector_component",
  "selector_with_arguments",
  "expression",
  "struct_component_expression",
  "conditional_expression",
  "selector",
  "primary_expression",
  "type_name",
  "compound_statement",
  "parameter_type_list",
  "postfix_expression",
  "argument_expression_list",
  "assignment_expression",
  "unary_expression",
  "unary_operator",
  "cast_expression",
  "multiplicative_expression",
  "additive_expression",
  "shift_expression",
  "relational_expression",
  "equality_expression",
  "and_expression",
  "exclusive_or_expression",
  "inclusive_or_expression",
  "logical_and_expression",
  "logical_or_expression",
  "assignment_operator",
  "constant_expression",
  "class_name_list",
  "class_identifier_or_type_name",
  "class_with_superclass",
  "category_name",
  "inherited_protocols",
  "protocol_list",
  "class_name_declaration",
  "class_or_instance_method_specifier",
  "do_atribute_specifier",
  "objc_declaration_specifiers",
  "selector_argument_declaration",
  "selector_with_argument_declaration",
  "method_declaration",
  "property_attributes_list",
  "specifier_qualifier_list",
  "struct_declarator_list",
  "method_declaration_list",
  "ivar_declaration_list",
  "struct_declaration_list",
  "class_implementation",
  "method_implementation_declaration",
  "method_implementation",
  "ivar_list",
  "method_implementation_list",
  "objc_declaration",
  "declaration",
  "declaration_specifiers",
  "init_declarator_list",
  "storage_class_specifier",
  "type_specifier",
  "type_qualifier",
  "init_declarator",
  "declarator",
  "initializer",
  "struct_or_union_specifier",
  "enum_specifier",
  "struct_or_union",
  "struct_declaration",
  "struct_declarator",
  "enumerator_list",
  "enumerator",
  "pointer",
  "direct_declarator",
  "identifier_list",
  "type_qualifier_list",
  "parameter_list",
  "parameter_declaration",
  "abstract_declarator",
  "direct_abstract_declarator",
  "initializer_list",
  "statement",
  "labeled_statement",
  "expression_statement",
  "selection_statement",
  "iteration_statement",
  "jump_statement",
  "statement_list",
  "declaration_list",
  "external_declaration",
  "function_definition" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'objective_c.rb.y', 45)
  def _reduce_1(val, _values, result)
     @result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 48)
  def _reduce_2(val, _values, result)
     result = make_node(':', val[0], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 49)
  def _reduce_3(val, _values, result)
     result = make_node(':', nil, nil) 
    result
  end
.,.,

# reduce 4 omitted

module_eval(<<'.,.,', 'objective_c.rb.y', 54)
  def _reduce_5(val, _values, result)
     result = make_node(':', val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 55)
  def _reduce_6(val, _values, result)
     val[1].right = val[2]
    	                                                            result = make_node(',', val[0], val[1])

    result
  end
.,.,

# reduce 7 omitted

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

module_eval(<<'.,.,', 'objective_c.rb.y', 74)
  def _reduce_14(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 75)
  def _reduce_15(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 76)
  def _reduce_16(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 77)
  def _reduce_17(val, _values, result)
     result = make_node('(', val[1], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 78)
  def _reduce_18(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 79)
  def _reduce_19(val, _values, result)
     result = make_node('M', val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 80)
  def _reduce_20(val, _values, result)
     result = make_node('M', val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 81)
  def _reduce_21(val, _values, result)
     result = node_set_children(val[0], val[2], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 82)
  def _reduce_22(val, _values, result)
     result = node_set_children(val[0], val[2], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 84)
  def _reduce_23(val, _values, result)
     result = make_node('b', nil, val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 85)
  def _reduce_24(val, _values, result)
     result = make_node('b', val[2], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 89)
  def _reduce_25(val, _values, result)
     result = val[0] 
    result
  end
.,.,

# reduce 26 omitted

module_eval(<<'.,.,', 'objective_c.rb.y', 91)
  def _reduce_27(val, _values, result)
     result = make_node('f', val[0], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 92)
  def _reduce_28(val, _values, result)
     result = make_node('f', val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 93)
  def _reduce_29(val, _values, result)
     result = node_set_children(val[1], val[0], val[2]) 
    result
  end
.,.,

# reduce 30 omitted

module_eval(<<'.,.,', 'objective_c.rb.y', 95)
  def _reduce_31(val, _values, result)
     result = make_node('d', val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 96)
  def _reduce_32(val, _values, result)
     result = node_set_children(val[1], val[0], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 97)
  def _reduce_33(val, _values, result)
     result = node_set_children(val[1], val[0], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 101)
  def _reduce_34(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 102)
  def _reduce_35(val, _values, result)
     result = make_node(',', val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 106)
  def _reduce_36(val, _values, result)
     result = val[0] 
    result
  end
.,.,

# reduce 37 omitted

# reduce 38 omitted

module_eval(<<'.,.,', 'objective_c.rb.y', 109)
  def _reduce_39(val, _values, result)
     result = make_node(',', val[0], val[1]) 
    result
  end
.,.,

# reduce 40 omitted

# reduce 41 omitted

module_eval(<<'.,.,', 'objective_c.rb.y', 115)
  def _reduce_42(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 116)
  def _reduce_43(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 117)
  def _reduce_44(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 118)
  def _reduce_45(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 119)
  def _reduce_46(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 120)
  def _reduce_47(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 124)
  def _reduce_48(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 125)
  def _reduce_49(val, _values, result)
     result = make_node('c', val[1], val[3]) 
    result
  end
.,.,

# reduce 50 omitted

module_eval(<<'.,.,', 'objective_c.rb.y', 130)
  def _reduce_51(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 131)
  def _reduce_52(val, _values, result)
     result = make_node('*', val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 132)
  def _reduce_53(val, _values, result)
     result = make_node('/', val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 133)
  def _reduce_54(val, _values, result)
     result = make_node('%', val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 137)
  def _reduce_55(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 138)
  def _reduce_56(val, _values, result)
     result = make_node('+', val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 139)
  def _reduce_57(val, _values, result)
     result = make_node('-', val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 143)
  def _reduce_58(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 144)
  def _reduce_59(val, _values, result)
     result = make_node(:LEFT_OP, val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 145)
  def _reduce_60(val, _values, result)
     result = make_node(:RIGHT_OP, val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 149)
  def _reduce_61(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 150)
  def _reduce_62(val, _values, result)
     result = make_node('<', val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 151)
  def _reduce_63(val, _values, result)
     result = make_node('>', val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 152)
  def _reduce_64(val, _values, result)
     result = make_node(:LE_OP, val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 153)
  def _reduce_65(val, _values, result)
     result = make_node(:GE_OP, val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 157)
  def _reduce_66(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 158)
  def _reduce_67(val, _values, result)
     result = make_node(:EQ_OP, val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 159)
  def _reduce_68(val, _values, result)
     result = make_node(:NE_OP, val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 163)
  def _reduce_69(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 164)
  def _reduce_70(val, _values, result)
     result = make_node('&', val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 168)
  def _reduce_71(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 169)
  def _reduce_72(val, _values, result)
     result = make_node('^', val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 173)
  def _reduce_73(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 174)
  def _reduce_74(val, _values, result)
     result = make_node('|', val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 178)
  def _reduce_75(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 179)
  def _reduce_76(val, _values, result)
     result = make_node(:AND_OP, val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 183)
  def _reduce_77(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 184)
  def _reduce_78(val, _values, result)
     result = make_node(:OR_OP, val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 188)
  def _reduce_79(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 189)
  def _reduce_80(val, _values, result)
     result = make_node('?', val[0], make_node(',', val[2], val[4])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 193)
  def _reduce_81(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 194)
  def _reduce_82(val, _values, result)
     result = node_set_children(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 198)
  def _reduce_83(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 199)
  def _reduce_84(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 200)
  def _reduce_85(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 201)
  def _reduce_86(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 202)
  def _reduce_87(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 203)
  def _reduce_88(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 204)
  def _reduce_89(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 205)
  def _reduce_90(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 206)
  def _reduce_91(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 207)
  def _reduce_92(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 208)
  def _reduce_93(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 212)
  def _reduce_94(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 213)
  def _reduce_95(val, _values, result)
     result = make_node(',', val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 217)
  def _reduce_96(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 221)
  def _reduce_97(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 222)
  def _reduce_98(val, _values, result)
     result = make_node(',', val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 226)
  def _reduce_99(val, _values, result)
     result = make_node(',', val[0], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 227)
  def _reduce_100(val, _values, result)
     result = make_node(',', val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 231)
  def _reduce_101(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 235)
  def _reduce_102(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 236)
  def _reduce_103(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 240)
  def _reduce_104(val, _values, result)
    result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 245)
  def _reduce_105(val, _values, result)
        	    result = make_node(',', val[0], make_node(',', nil, nil))
    	    register_class_name_from_declaration(val[0].left.value)
    	  
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 249)
  def _reduce_106(val, _values, result)
        	    result = make_node(',', val[0], make_node(',', val[2], nil))
    	    register_class_name_from_declaration(val[0].left.value)
    	  
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 253)
  def _reduce_107(val, _values, result)
        	    result = make_node(',', val[0], make_node(',', nil, val[2]))
    	    register_class_name_from_declaration(val[0].left.value)
    	  
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 257)
  def _reduce_108(val, _values, result)
        	    result = make_node(',', val[0], make_node(',', val[2], val[5]))
    	    register_class_name_from_declaration(val[0].left.value)
    	  
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 263)
  def _reduce_109(val, _values, result)
     result =  val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 264)
  def _reduce_110(val, _values, result)
     result =  val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 268)
  def _reduce_111(val, _values, result)
     result =  val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 269)
  def _reduce_112(val, _values, result)
     result =  val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 270)
  def _reduce_113(val, _values, result)
     result =  val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 271)
  def _reduce_114(val, _values, result)
     result =  val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 272)
  def _reduce_115(val, _values, result)
     result =  val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 273)
  def _reduce_116(val, _values, result)
     result =  val[0] 
    result
  end
.,.,

# reduce 117 omitted

module_eval(<<'.,.,', 'objective_c.rb.y', 278)
  def _reduce_118(val, _values, result)
     result =  val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 282)
  def _reduce_119(val, _values, result)
     result =  make_node(',', val[1], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 286)
  def _reduce_120(val, _values, result)
     result =  val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 287)
  def _reduce_121(val, _values, result)
     result =  make_node(':', val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 288)
  def _reduce_122(val, _values, result)
     result =  make_node(',', val[0], make_node(':', val[1], val[3])) 
    result
  end
.,.,

# reduce 123 omitted

module_eval(<<'.,.,', 'objective_c.rb.y', 294)
  def _reduce_124(val, _values, result)
        	    result = make_node('m', make_node(',', val[0], val[2]), val[4])
    	  
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 297)
  def _reduce_125(val, _values, result)
        	    result = make_node(:AT_PROPERTY, val[2], make_node(',', val[4],val[5]))
    	  
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 300)
  def _reduce_126(val, _values, result)
          	  result = make_node(:AT_PROPERTY, nil, make_node(',', val[1],val[2]))
      	
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 305)
  def _reduce_127(val, _values, result)
     result =  val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 306)
  def _reduce_128(val, _values, result)
     result =  make_node(:AT_OPTIONAL, val[1], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 307)
  def _reduce_129(val, _values, result)
     result =  make_node(:AT_REQUIRED, val[1], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 308)
  def _reduce_130(val, _values, result)
     result =  make_node(',', val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 312)
  def _reduce_131(val, _values, result)
     result =  val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 313)
  def _reduce_132(val, _values, result)
     result =  nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 317)
  def _reduce_133(val, _values, result)
     result = make_node(',', val[0], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 318)
  def _reduce_134(val, _values, result)
     result = make_node(',', val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 323)
  def _reduce_135(val, _values, result)
      	      result = make_node(',', make_node(',', val[0], val[2]), val[4])
  	    
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 328)
  def _reduce_136(val, _values, result)
     result = make_node('m', val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 329)
  def _reduce_137(val, _values, result)
     result = make_node('m', val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 330)
  def _reduce_138(val, _values, result)
     result = make_node(:AT_SYNTHESIZE, val[1], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 334)
  def _reduce_139(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 335)
  def _reduce_140(val, _values, result)
     result = make_node(',', val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 339)
  def _reduce_141(val, _values, result)
     result = node_set_children(val[0], val[1], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 340)
  def _reduce_142(val, _values, result)
     result = node_set_children(val[0], val[1], nil)	
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 341)
  def _reduce_143(val, _values, result)
     result = node_set_children(val[0], val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 342)
  def _reduce_144(val, _values, result)
     result = node_set_children(val[0], make_node(',', val[1], nil), nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 343)
  def _reduce_145(val, _values, result)
     result = node_set_children(val[0], make_node(',', val[1], val[2]), val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 344)
  def _reduce_146(val, _values, result)
     result = node_set_children(val[0], make_node(',', val[1], val[2]), nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 345)
  def _reduce_147(val, _values, result)
     result = node_set_children(val[0], make_node(',', val[1], nil), val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 346)
  def _reduce_148(val, _values, result)
     result = node_set_children(val[0], make_node(',', val[1], nil), nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 347)
  def _reduce_149(val, _values, result)
     result = node_set_children(val[0], make_node(',', val[1], val[2]), nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 348)
  def _reduce_150(val, _values, result)
     result = node_set_children(val[0], make_node(',', val[1], nil), val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 349)
  def _reduce_151(val, _values, result)
     result = node_set_children(val[0], make_node(',', val[1], val[2]), val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 353)
  def _reduce_152(val, _values, result)
     result = make_node('d', val[0], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 354)
  def _reduce_153(val, _values, result)
     result = make_node('d', val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 355)
  def _reduce_154(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 359)
  def _reduce_155(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 360)
  def _reduce_156(val, _values, result)
     result = make_node(',', val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 361)
  def _reduce_157(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 362)
  def _reduce_158(val, _values, result)
     result = make_node(',', val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 363)
  def _reduce_159(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 364)
  def _reduce_160(val, _values, result)
     result = make_node(',', val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 368)
  def _reduce_161(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 369)
  def _reduce_162(val, _values, result)
     result = make_node(',', val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 373)
  def _reduce_163(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 374)
  def _reduce_164(val, _values, result)
     result = make_node('=', val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 378)
  def _reduce_165(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 379)
  def _reduce_166(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 380)
  def _reduce_167(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 381)
  def _reduce_168(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 382)
  def _reduce_169(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 386)
  def _reduce_170(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 387)
  def _reduce_171(val, _values, result)
     result = make_node(',', val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 390)
  def _reduce_172(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 391)
  def _reduce_173(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 392)
  def _reduce_174(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 393)
  def _reduce_175(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 394)
  def _reduce_176(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 395)
  def _reduce_177(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 396)
  def _reduce_178(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 397)
  def _reduce_179(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 398)
  def _reduce_180(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 399)
  def _reduce_181(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 400)
  def _reduce_182(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 401)
  def _reduce_183(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 402)
  def _reduce_184(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 403)
  def _reduce_185(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 404)
  def _reduce_186(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 405)
  def _reduce_187(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 406)
  def _reduce_188(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 407)
  def _reduce_189(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 411)
  def _reduce_190(val, _values, result)
     result = node_set_children(val[0], val[1], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 412)
  def _reduce_191(val, _values, result)
     result = node_set_children(val[0], nil, val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 413)
  def _reduce_192(val, _values, result)
     result = node_set_children(val[0], val[1], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 417)
  def _reduce_193(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 418)
  def _reduce_194(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 422)
  def _reduce_195(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 423)
  def _reduce_196(val, _values, result)
     result = make_node(',', val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 427)
  def _reduce_197(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 428)
  def _reduce_198(val, _values, result)
     result = make_node(',', val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 432)
  def _reduce_199(val, _values, result)
     result = make_node('i', val[0], val[1]) 
    result
  end
.,.,

# reduce 200 omitted

# reduce 201 omitted

# reduce 202 omitted

# reduce 203 omitted

# reduce 204 omitted

# reduce 205 omitted

module_eval(<<'.,.,', 'objective_c.rb.y', 442)
  def _reduce_206(val, _values, result)
     result = make_node(',', val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 443)
  def _reduce_207(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 447)
  def _reduce_208(val, _values, result)
     result = make_node(',', val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 448)
  def _reduce_209(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 449)
  def _reduce_210(val, _values, result)
     result = make_node(',', val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 450)
  def _reduce_211(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 454)
  def _reduce_212(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 455)
  def _reduce_213(val, _values, result)
     result = make_node(',', val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 459)
  def _reduce_214(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 460)
  def _reduce_215(val, _values, result)
     result = make_node(':', nil, val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 461)
  def _reduce_216(val, _values, result)
     result = make_node(':', val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 465)
  def _reduce_217(val, _values, result)
     result = node_set_children(val[0], nil, val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 466)
  def _reduce_218(val, _values, result)
     result = node_set_children(val[0], val[1], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 467)
  def _reduce_219(val, _values, result)
     result = node_set_children(val[0], val[1], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 471)
  def _reduce_220(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 472)
  def _reduce_221(val, _values, result)
     result = make_node(',', val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 476)
  def _reduce_222(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 477)
  def _reduce_223(val, _values, result)
     result = make_node('=', val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 481)
  def _reduce_224(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 482)
  def _reduce_225(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 483)
  def _reduce_226(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 484)
  def _reduce_227(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 488)
  def _reduce_228(val, _values, result)
     result = make_node('*', val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 489)
  def _reduce_229(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 493)
  def _reduce_230(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 494)
  def _reduce_231(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 232 omitted

# reduce 233 omitted

module_eval(<<'.,.,', 'objective_c.rb.y', 497)
  def _reduce_234(val, _values, result)
     result = make_node('f', val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 498)
  def _reduce_235(val, _values, result)
     result = make_node('f', val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 499)
  def _reduce_236(val, _values, result)
     result = make_node('f', val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 503)
  def _reduce_237(val, _values, result)
     result = val[0] 
    result
  end
.,.,

# reduce 238 omitted

module_eval(<<'.,.,', 'objective_c.rb.y', 505)
  def _reduce_239(val, _values, result)
     result = make_node(val[0], val[1], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 506)
  def _reduce_240(val, _values, result)
     result = make_node(val[0], val[1], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 507)
  def _reduce_241(val, _values, result)
     result = make_node(val[0], val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 511)
  def _reduce_242(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 512)
  def _reduce_243(val, _values, result)
     result = make_node(',', val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 516)
  def _reduce_244(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 517)
  def _reduce_245(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 521)
  def _reduce_246(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 522)
  def _reduce_247(val, _values, result)
     result = make_node(',', val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 526)
  def _reduce_248(val, _values, result)
     result = make_node('d', val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 527)
  def _reduce_249(val, _values, result)
     result = make_node('d', val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 528)
  def _reduce_250(val, _values, result)
     result = val[0] 
    result
  end
.,.,

# reduce 251 omitted

# reduce 252 omitted

# reduce 253 omitted

# reduce 254 omitted

# reduce 255 omitted

# reduce 256 omitted

# reduce 257 omitted

# reduce 258 omitted

# reduce 259 omitted

# reduce 260 omitted

# reduce 261 omitted

# reduce 262 omitted

# reduce 263 omitted

# reduce 264 omitted

# reduce 265 omitted

# reduce 266 omitted

# reduce 267 omitted

# reduce 268 omitted

# reduce 269 omitted

# reduce 270 omitted

# reduce 271 omitted

module_eval(<<'.,.,', 'objective_c.rb.y', 571)
  def _reduce_272(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 573)
  def _reduce_273(val, _values, result)
     result = make_node('{', val[0], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 574)
  def _reduce_274(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 575)
  def _reduce_275(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 576)
  def _reduce_276(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 577)
  def _reduce_277(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 578)
  def _reduce_278(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 579)
  def _reduce_279(val, _values, result)
     result = val[0] 
    result
  end
.,.,

# reduce 280 omitted

# reduce 281 omitted

# reduce 282 omitted

module_eval(<<'.,.,', 'objective_c.rb.y', 589)
  def _reduce_283(val, _values, result)
     result = nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 590)
  def _reduce_284(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 591)
  def _reduce_285(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 592)
  def _reduce_286(val, _values, result)
     result = make_node(',', val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 596)
  def _reduce_287(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 597)
  def _reduce_288(val, _values, result)
     result = make_node(',', val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 601)
  def _reduce_289(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 602)
  def _reduce_290(val, _values, result)
     result = make_node(',', val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 606)
  def _reduce_291(val, _values, result)
     result = node_set_children(val[0], nil, nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 607)
  def _reduce_292(val, _values, result)
     result = node_set_children(val[1], val[0], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 611)
  def _reduce_293(val, _values, result)
     result = node_set_children(val[0], make_node(',', val[2], val[4]), nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 612)
  def _reduce_294(val, _values, result)
     result = node_set_children(val[0], make_node(',', val[2], val[4]), node_set_children(val[5], val[6], nil)) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 613)
  def _reduce_295(val, _values, result)
     result = node_set_children(val[0], val[2], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 617)
  def _reduce_296(val, _values, result)
     result = node_set_children(val[0], val[2], val[4]) 
    result
  end
.,.,

# reduce 297 omitted

# reduce 298 omitted

module_eval(<<'.,.,', 'objective_c.rb.y', 620)
  def _reduce_299(val, _values, result)
     result = node_set_children(val[0], make_node(',', make_node(',', val[2], val[3]), val[4]), val[6]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 621)
  def _reduce_300(val, _values, result)
     result = node_set_children(val[0], make_node(',', make_node(',', val[2], val[3]), val[4]), val[6]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 622)
  def _reduce_301(val, _values, result)
     result = node_set_children(val[3], make_node(',', val[2], val[4]), val[6]) 
    result
  end
.,.,

# reduce 302 omitted

# reduce 303 omitted

# reduce 304 omitted

module_eval(<<'.,.,', 'objective_c.rb.y', 629)
  def _reduce_305(val, _values, result)
     result = node_set_children(val[0], nil, nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 630)
  def _reduce_306(val, _values, result)
     result = node_set_children(val[0], val[1], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 634)
  def _reduce_307(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 635)
  def _reduce_308(val, _values, result)
     result = make_node ',', val[0], val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 640)
  def _reduce_309(val, _values, result)
        	    result = val[0]
    	    deal_with_declaration(result)
    	  
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 644)
  def _reduce_310(val, _values, result)
        	    result = val[0]
    	    deal_with_declaration(result)
    	  
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 650)
  def _reduce_311(val, _values, result)
     puts "first" 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 651)
  def _reduce_312(val, _values, result)
     result = make_node('F', make_node(',', val[0], val[1]), val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 652)
  def _reduce_313(val, _values, result)
     puts "third" 
    result
  end
.,.,

module_eval(<<'.,.,', 'objective_c.rb.y', 653)
  def _reduce_314(val, _values, result)
     puts "forth" 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class ObjectiveCParser
  end   # module Vienna

# stuff that will come after the definition of ObjectiveCParser
