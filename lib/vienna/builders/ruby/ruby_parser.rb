#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.6
# from Racc grammer file "".
#

require 'racc/parser.rb'


# require 'ctokenizer'
require 'strscan'

module Vienna
  class RubyParser < Racc::Parser

module_eval(<<'...end ruby_parser.rb.y/module_eval...', 'ruby_parser.rb.y', 1283)


...end ruby_parser.rb.y/module_eval...
##### State transition tables begin ###

clist = [
'-519,-10,-97,346,347,-519,346,347,417,515,558,430,515,-519,-519,515',
'876,515,515,-519,568,-519,-519,-519,-519,-519,-519,-519,-519,-519,-519',
'-519,346,347,-519,-100,722,-99,-519,-519,-519,-519,-519,-519,-95,-448',
'4,-451,346,347,809,-519,-519,-519,-269,-255,478,-519,-519,-269,-519',
'346,347,429,-450,405,-89,-269,-269,-519,331,331,-448,-269,-451,-269',
'-269,-269,-269,-269,-269,-269,-269,-269,-269,-269,-453,545,-269,461',
'-94,-450,-269,-269,-269,-269,-269,-269,-269,-92,307,-91,309,-99,-519',
'-269,-269,-269,-87,-94,-269,-269,-269,511,-269,307,511,309,545,511,331',
'511,511,-269,-269,-269,-269,-519,-519,-96,-519,-519,-88,-519,-519,-519',
'-519,-519,-519,-519,-519,-519,-519,-97,418,-519,331,367,-519,-100,-519',
'-10,-519,-10,-86,355,358,307,-269,309,-269,370,331,375,351,352,356,359',
'362,365,367,-229,372,374,832,331,-453,545,-269,-93,290,307,-269,309',
'-269,-269,-269,-269,-269,-269,-269,-269,-269,-269,-269,-269,-269,-95',
'455,-269,-269,-96,-269,-269,-269,-273,-269,307,-254,309,-273,526,307',
'157,309,808,412,427,-273,-273,413,-97,452,453,-273,-93,-273,-273,-273',
'-273,-273,-273,-273,-273,-273,-273,-273,525,291,-273,158,723,136,-273',
'-273,-273,-273,-273,-273,568,568,-66,698,850,-80,731,-273,-273,-273',
'307,545,309,-273,-273,137,-273,508,-94,558,-93,-86,307,-85,309,-94,353',
'357,360,363,366,368,369,371,373,376,-446,545,354,-526,-85,421,-95,-515',
'-95,331,-96,510,-96,353,357,360,363,366,368,369,371,373,376,-95,-273',
'354,367,-446,816,248,-97,35,-97,46,51,320,436,728,135,139,142,147,442',
'802,307,307,309,309,-273,-98,-273,-273,-90,-273,-273,-273,-273,-273',
'-273,-273,-273,-273,-273,-97,131,-273,-89,612,-273,307,-273,309,-273',
'54,59,65,-99,121,612,-91,866,95,101,-94,798,-94,20,611,32,40,44,115',
'116,60,66,307,817,309,611,649,127,102,107,5,11,17,24,-89,819,-96,-98',
'53,58,64,70,75,84,85,89,94,100,297,6,12,290,26,30,38,-100,821,-95,-92',
'253,-87,120,82,823,93,98,296,298,9,13,18,25,31,39,43,23,550,35,367,46',
'51,353,357,360,363,366,368,369,371,373,376,612,609,354,307,-89,309,69',
'-89,475,-88,-90,551,552,-274,307,331,309,825,291,109,611,611,826,-89',
'-515,-516,311,-89,54,59,65,421,121,795,476,477,95,101,293,-274,-274',
'20,774,32,40,44,50,55,60,66,331,-513,312,313,422,96,102,107,5,11,17',
'24,331,389,-445,390,53,58,64,70,75,84,85,89,94,100,790,6,12,-519,26',
'30,38,-447,503,497,-443,253,787,120,82,-445,93,98,495,496,9,13,18,25',
'31,39,43,23,-268,35,367,46,51,-513,-447,-384,-443,-443,-519,353,357',
'360,363,366,368,369,371,373,376,69,493,354,833,-513,-268,-268,307,307',
'309,309,785,-519,109,503,-519,-519,784,307,487,309,-384,54,59,65,783',
'121,476,494,-443,95,101,-515,331,675,20,607,32,40,44,50,55,60,66,-384',
'-519,488,-384,-384,96,102,107,5,11,17,24,-443,776,-440,331,53,58,64',
'70,75,84,85,89,94,100,774,6,12,-512,26,30,38,461,911,293,-519,253,768',
'120,82,-440,93,98,303,304,9,13,18,25,31,39,43,23,-274,35,367,46,51,-519',
'410,411,-519,-519,-440,353,357,360,363,366,368,369,371,373,376,69,-452',
'354,331,-515,-274,-274,-274,293,331,346,347,-512,109,675,-440,-440,839',
'675,-268,461,409,54,59,65,73,121,-452,-452,768,95,101,-512,-274,-274',
'20,461,32,40,44,50,55,60,66,-87,-268,-268,410,411,96,102,107,5,11,17',
'24,36,848,-449,52,53,58,64,70,75,84,85,89,94,100,331,6,12,461,26,30',
'38,-273,407,408,-273,67,461,78,82,-449,93,98,105,607,9,13,18,25,31,39',
'43,23,331,35,853,46,51,-273,-273,-87,-273,-273,-87,353,357,360,363,366',
'368,369,371,373,376,69,-516,354,455,-516,-87,854,531,367,-87,839,675',
'748,109,346,347,355,358,-304,-80,620,331,54,59,65,73,80,452,453,741',
'95,101,480,331,734,20,768,32,40,44,50,55,60,66,-304,-304,621,622,732',
'96,102,107,5,11,17,24,36,461,331,52,53,58,64,70,75,84,85,89,94,100,719',
'6,12,455,26,30,38,482,860,331,906,67,-273,78,82,-254,93,98,105,864,9',
'13,18,25,31,39,43,452,453,707,461,135,139,142,147,148,907,908,-273,-273',
'171,682,180,185,675,192,427,659,154,69,-256,217,221,134,136,-516,531',
'160,331,168,177,182,186,189,193,198,353,357,360,363,366,368,369,371',
'373,376,137,-452,354,421,436,153,135,139,142,147,442,367,650,649,641',
'649,559,625,878,355,358,171,624,180,185,881,192,-452,-452,623,510,455',
'217,221,455,614,608,531,160,367,168,177,182,186,189,193,198,455,656',
'607,689,447,592,589,690,452,453,454,452,453,457,367,574,331,194,199',
'461,-65,768,355,358,452,453,499,233,370,461,375,351,352,356,359,362',
'365,567,333,372,374,554,553,683,334,335,336,337,163,166,170,175,179',
'184,188,191,196,201,208,212,686,533,293,529,687,528,171,774,180,185',
'527,192,774,333,194,199,900,217,221,334,335,336,337,160,233,168,177',
'182,186,189,193,198,353,357,360,363,366,368,369,371,373,376,774,510',
'354,163,166,170,175,179,184,188,191,196,201,208,212,864,508,293,353',
'357,360,363,366,368,369,371,373,376,670,671,354,673,904,505,503,502',
'909,30,38,-234,353,357,360,363,366,368,369,371,373,376,689,447,354,479',
'690,-257,436,474,135,139,142,147,442,461,194,199,473,436,912,135,139',
'142,147,148,233,443,333,913,915,774,791,333,334,335,336,337,154,334',
'335,336,337,918,136,774,464,163,166,170,175,179,184,188,191,196,201',
'208,212,461,171,293,180,185,444,192,137,435,461,433,864,217,221,432',
'464,423,405,160,293,168,177,182,186,189,193,198,779,393,135,139,142',
'147,331,18,331,236,161,164,779,329,135,139,142,147,200,203,206,209,213',
'216,220,223,226,230,237,162,165,169,174,178,183,187,190,195,204,207',
'211,214,328,774,864,227,231,235,260,262,263,264,181,316,302,331,266',
'267,268,210,269,218,85,89,272,100,171,300,180,185,282,192,-515,-516',
'194,199,774,217,221,944,774,774,259,160,233,168,177,182,186,189,193',
'198,246,110,774,,,,436,,135,139,142,147,442,163,166,170,175,179,184',
'188,191,196,201,208,212,443,,270,,,437,171,,180,185,,192,,,,,,217,221',
',,,,160,,168,177,182,186,189,193,198,,,,934,533,,,935,,436,,135,139',
'142,147,442,,194,199,132,,135,139,142,147,148,,233,443,,,,,437,,,,,154',
',,,,134,136,,,,163,166,170,175,179,184,188,191,196,201,208,212,929,533',
'293,,930,,137,,,,,153,,,194,199,,,143,,,367,,248,233,35,,46,51,355,358',
',,,,370,,375,-538,-538,-538,-538,-538,-538,,163,166,170,175,179,184',
'188,191,196,201,208,212,,131,293,436,,135,139,142,147,442,54,59,65,',
'121,,,,95,101,,,443,20,,32,40,44,115,116,60,66,,,,,,127,102,107,5,11',
'17,24,,,,,53,58,64,70,75,84,85,89,94,100,297,6,12,,26,30,38,,,,,253',
',120,82,,93,98,296,298,9,13,18,25,31,39,43,248,,35,,46,51,,353,357,360',
'363,366,368,369,371,373,376,,,354,,,69,,,,293,,436,,135,139,142,147',
'442,131,436,,135,139,142,147,442,,54,59,65,443,121,,,,95,101,,443,,20',
',32,40,44,115,116,60,66,,290,,,,127,102,107,5,11,17,24,,,,,53,58,64',
'70,75,84,85,89,94,100,297,6,12,,26,30,38,,,,,253,,120,82,,93,98,296',
'298,9,13,18,25,31,39,43,248,,35,,46,51,291,,436,,135,139,142,147,148',
'436,,135,139,142,147,442,69,,,,293,154,,,,,,136,443,131,,436,,135,139',
'142,147,442,54,59,65,,121,,,,95,101,,137,443,20,,32,40,44,115,116,60',
'66,,,,,,127,102,107,5,11,17,24,,,,,53,58,64,70,75,84,85,89,94,100,297',
'6,12,,26,30,38,,,,,253,,120,82,,93,98,296,298,9,13,18,25,31,39,43,,',
',,,,,,171,,180,185,,192,,,,,,217,221,,69,,,160,393,168,177,182,186,189',
'193,198,,,436,,135,139,142,147,148,,436,,135,139,142,147,148,,,,132',
'154,135,139,142,147,148,136,,154,,171,,180,185,136,192,,,154,,,217,221',
'134,136,,,160,137,168,177,182,186,189,193,198,137,,,932,447,,,933,,',
'137,,,,,153,,194,199,,,,490,,,,,233,353,357,360,363,366,368,369,371',
'373,376,,,354,,,,,,,,163,166,170,175,179,184,188,191,196,201,208,212',
'738,447,293,,739,,171,,180,185,,192,,,194,199,,217,221,,,,,160,233,168',
'177,182,186,189,193,198,353,357,360,363,366,368,369,371,373,376,,,354',
'163,166,170,175,179,184,188,191,196,201,208,212,,,293,,,,171,,180,185',
',192,,,,,,217,221,,,,,160,,168,177,182,186,189,193,198,,,,540,447,,',
'542,,,,,,,,,,194,199,132,,135,139,142,147,148,,233,,,,,,,,,,,154,,,',
',134,136,,,,163,166,170,175,179,184,188,191,196,201,208,212,532,533',
'293,,534,,137,,,,,153,,,194,199,,,490,,,367,,-513,233,-513,,-513,-513',
'355,358,,,,,370,,375,-538,-538,-538,-538,-538,-538,,163,166,170,175',
'179,184,188,191,196,201,208,212,,-513,293,,,,,,,,-513,-513,-513,,-513',
',,,-513,-513,,,,-513,,-513,-513,-513,-513,-513,-513,-513,,,,,,-513,-513',
'-513,-513,-513,-513,-513,,,,,-513,-513,-513,-513,-513,-513,-513,-513',
'-513,-513,-513,-513,-513,,-513,-513,-513,,,,,-513,,-513,-513,,-513,-513',
'-513,-513,-513,-513,-513,-513,-513,-513,-513,248,,35,,46,51,-513,353',
'357,360,363,366,368,369,371,373,376,,,354,,,-513,,,,-513,,,,,,,,,131',
',,,,,,,,54,59,65,,121,,,,95,101,,,,20,,32,40,44,115,116,60,66,,,,,,127',
'129,130,5,11,17,24,,,,,53,58,64,70,75,84,85,89,94,100,,6,12,,26,30,38',
',,,,253,,120,82,,93,98,,,9,13,18,25,31,39,43,,,,,,,,,171,,180,185,,192',
',,,,,217,221,,69,,,160,559,168,177,182,186,189,193,198,,,,,,,,,,,,,',
',,,707,,135,139,142,147,148,,,,,,,,,171,,180,185,154,192,,,,134,136',
'217,221,,,,,160,,168,177,182,186,189,193,198,,,,735,533,,137,736,,,',
'153,,,,,,194,199,132,,135,139,142,147,148,,233,,,,,,,,,,,154,,,,,134',
'136,,,,163,166,170,175,179,184,188,191,196,201,208,212,631,533,293,',
'633,,137,,,,,153,,,194,199,436,,135,139,142,147,148,248,233,35,,46,51',
',,,,,,154,,,,,,136,,,,163,166,170,175,179,184,188,191,196,201,208,212',
',131,293,,,,137,,,,54,59,65,,121,,,,95,101,,,,20,,32,40,44,115,116,60',
'66,,,,,,127,102,107,5,11,17,24,,,,,53,58,64,70,75,84,85,89,94,100,297',
'6,12,,26,30,38,,,,,253,,120,82,,93,98,296,298,9,13,18,25,31,39,43,,',
',,,,,,171,,180,185,,192,,,,,,217,221,,69,,,160,293,168,177,182,186,189',
'193,198,,,,,,,,,,,,,,,,,132,,135,139,142,147,148,,,,,,,,,171,,180,185',
'154,192,,,,134,136,217,221,,,,,160,,168,177,182,186,189,193,198,,,,686',
'533,,137,687,,,,153,,,367,,,194,199,,,,355,358,,,,233,370,,375,351,352',
'356,359,362,365,,,372,374,,,,,,,,163,166,170,175,179,184,188,191,196',
'201,208,212,446,447,293,,448,,171,,180,185,,192,,,194,199,,217,221,',
',,,160,233,168,177,182,186,189,193,198,,,,,,,,,,,,,,163,166,170,175',
'179,184,188,191,196,201,208,212,,,293,,,,,,,,,,,,,,,,,,,,,,,353,357',
'360,363,366,368,369,371,373,376,764,447,354,,765,,,,,,,,,,194,199,,',
',,,367,,248,233,35,,46,51,355,358,,,,,370,,375,-538,-538,-538,-538,-538',
'-538,,163,166,170,175,179,184,188,191,196,201,208,212,,131,293,,,,,',
',,54,59,65,,121,,,,95,101,,,,20,,32,40,44,115,116,60,66,,,,,,127,102',
'107,5,11,17,24,,,,,53,58,64,70,75,84,85,89,94,100,297,6,12,,26,30,38',
',,,,253,,120,82,,93,98,296,298,9,13,18,25,31,39,43,-518,,-518,,-518',
'-518,,353,357,360,363,366,368,369,371,373,376,,,354,,,69,,,,293,,,,',
',,,,-518,,,,,,,,,-518,-518,-518,,-518,,,,-518,-518,,,,-518,,-518,-518',
'-518,-518,-518,-518,-518,,,,,,-518,-518,-518,-518,-518,-518,-518,,,',
',-518,-518,-518,-518,-518,-518,-518,-518,-518,-518,-518,-518,-518,,-518',
'-518,-518,,,,,-518,,-518,-518,,-518,-518,-518,-518,-518,-518,-518,-518',
'-518,-518,-518,-515,,-515,,-515,-515,,,436,,135,139,142,147,148,,,,',
',,,-518,,,,-518,154,,,,,,136,806,-515,,,,,,,,,-515,-515,-515,,-515,',
',,-515,-515,,137,,-515,,-515,-515,-515,-515,-515,-515,-515,,,,,,-515',
'-515,-515,-515,-515,-515,-515,,,,,-515,-515,-515,-515,-515,-515,-515',
'-515,-515,-515,-515,-515,-515,,-515,-515,-515,,,,,-515,,-515,-515,,-515',
'-515,-515,-515,-515,-515,-515,-515,-515,-515,-515,,,,,,,,,-96,,,,171',
',180,185,,192,,,,,-515,217,221,,-515,,,160,,168,177,182,186,189,193',
'198,707,,135,139,142,147,148,707,,135,139,142,147,148,,,,,,154,,,,,134',
'136,154,,,,,134,136,,,,,,,,,,,,,,,137,,,,,153,,137,,,,,153,761,533,',
',762,,,,,,,,,,194,199,,,,,,367,,-517,233,-517,,-517,-517,355,358,,,',
',370,,375,-538,-538,-538,-538,-538,-538,,163,166,170,175,179,184,188',
'191,196,201,208,212,,-517,293,,,,,,,,-517,-517,-517,,-517,,,,-517,-517',
',,,-517,,-517,-517,-517,-517,-517,-517,-517,,,,,,-517,-517,-517,-517',
'-517,-517,-517,,,,,-517,-517,-517,-517,-517,-517,-517,-517,-517,-517',
'-517,-517,-517,,-517,-517,-517,,,,,-517,,-517,-517,,-517,-517,-517,-517',
'-517,-517,-517,-517,-517,-517,-517,-516,,-516,,-516,-516,,353,357,360',
'363,366,368,369,371,373,376,,,354,,,-517,,,,-517,,,,,,,,723,-516,,,',
',,,,,-516,-516,-516,,-516,,,,-516,-516,,,,-516,,-516,-516,-516,-516',
'-516,-516,-516,,,,,,-516,-516,-516,-516,-516,-516,-516,,,,,-516,-516',
'-516,-516,-516,-516,-516,-516,-516,-516,-516,-516,-516,,-516,-516,-516',
',,,,-516,,-516,-516,,-516,-516,-516,-516,-516,-516,-516,-516,-516,-516',
'-516,248,,35,,46,51,,,-98,436,,135,139,142,147,148,,,,,,,-516,,,,-516',
',154,,,,,,136,131,,,,,,,,,54,59,65,,121,,,,95,101,,,137,20,,32,40,44',
'115,116,60,66,,,,,,127,102,107,5,11,17,24,,,,,53,58,64,70,75,84,85,89',
'94,100,297,6,12,,26,30,38,,,,,253,,120,82,,93,98,296,298,9,13,18,25',
'31,39,43,-512,,-512,,-512,-512,,,436,,135,139,142,147,148,,,,,,,,69',
',,,293,154,,,,,,136,,-512,,,,,,,,,-512,-512,-512,,-512,,,,-512,-512',
',137,,-512,,-512,-512,-512,-512,-512,-512,-512,,,,,,-512,-512,-512,-512',
'-512,-512,-512,,,,,-512,-512,-512,-512,-512,-512,-512,-512,-512,-512',
'-512,-512,-512,,-512,-512,-512,,,,,-512,,-512,-512,,-512,-512,-512,-512',
'-512,-512,-512,-512,-512,-512,-512,248,,35,,46,51,-512,,436,,135,139',
'142,147,148,,,,,,,,-512,,,,-512,154,,,,,,136,,131,,,,,,,,,54,59,65,',
'121,,,,95,101,,137,,20,,32,40,44,115,116,60,66,,,,,,127,102,107,5,11',
'17,24,,,,,53,58,64,70,75,84,85,89,94,100,297,6,12,,26,30,38,,,,,253',
',120,82,,93,98,296,298,9,13,18,25,31,39,43,240,23,,35,,46,51,,,,,,,',
',,,,,,,,69,,,,293,,,,,,,,,,109,,,,,,,,,54,59,65,73,121,,,,95,101,,,',
'20,,32,40,44,50,55,60,66,,,,,,96,102,107,5,11,17,24,36,,,52,53,58,64',
'70,75,84,85,89,94,100,,6,12,,26,30,38,,,,,67,,344,82,,93,98,105,,9,13',
'18,25,31,39,43,240,23,,35,,46,51,,,,,,,,,,,,,,,,69,,,,,,,,,,,,,,109',
',,,,,,,,54,59,65,73,121,,,,95,101,,,,20,,32,40,44,50,55,60,66,,,,,,96',
'102,107,5,11,17,24,36,,,52,53,58,64,70,75,84,85,89,94,100,,6,12,,26',
'30,38,,,,,67,,78,82,,93,98,105,,9,13,18,25,31,39,43,,,,,171,,180,185',
',192,,,,,,217,221,,,,,160,69,168,177,182,186,189,193,198,,,,,,,,,,236',
'161,164,,,,,,,200,203,206,209,213,216,220,223,226,230,237,162,165,169',
'174,178,183,187,190,195,204,207,211,214,,,,227,231,235,159,167,172,176',
'181,,,,197,202,205,210,215,218,,,228,,,,,,,,,,194,199,132,,135,139,142',
'147,148,,233,240,23,13,35,,46,51,,,,154,,,,,134,136,,,,163,166,170,175',
'179,184,188,191,196,201,208,212,,,,,109,,137,,,,,153,,54,59,65,73,121',
',,,95,101,,,,20,,32,40,44,50,55,60,66,,,,,,96,102,107,5,11,17,24,36',
',,52,53,58,64,70,75,84,85,89,94,100,,6,12,,26,30,38,,,,,67,,78,82,,93',
'98,105,,9,13,18,25,31,39,43,240,23,,35,,46,51,,,,,,,,,,,,,,,,69,,,,',
',,,,,,,,,109,,,,,,,,,54,59,65,73,121,,,,95,101,,,,20,,32,40,44,50,55',
'60,66,,,,,,96,102,107,5,11,17,24,36,,,52,53,58,64,70,75,84,85,89,94',
'100,,6,12,,26,30,38,,,,,67,,78,82,,93,98,105,,9,13,18,25,31,39,43,240',
'23,,35,,46,51,,,,,,,,,,,,,,,,69,,,,,,,,,,,,,,109,,,,,,,,,54,59,65,73',
'121,,,,95,101,,,,20,,32,40,44,50,55,60,66,,,,,,96,102,107,5,11,17,24',
'36,,,52,53,58,64,70,75,84,85,89,94,100,,6,12,,26,30,38,,,,,67,,78,82',
',93,98,105,,9,13,18,25,31,39,43,240,23,,35,,46,51,,,,,,,,,,,,,,,,69',
',,,,,,,,,,,,,109,,,,,,,,,54,59,65,73,121,,,,95,101,,,,20,,32,40,44,50',
'55,60,66,,,,,,96,102,107,5,11,17,24,36,,,52,53,58,64,70,75,84,85,89',
'94,100,,6,12,,26,30,38,,,,,67,,78,82,,93,98,105,,9,13,18,25,31,39,43',
'240,23,,35,,46,51,,,,,,,,,,,,,,,,69,,,,,,,,,,,,,,109,,,,,,,,,54,59,65',
'73,121,,,,95,101,,,,20,,32,40,44,50,55,60,66,,,,,,96,102,107,5,11,17',
'24,36,,,52,53,58,64,70,75,84,85,89,94,100,,6,12,,26,30,38,,,,,67,,78',
'82,,93,98,105,,9,13,18,25,31,39,43,240,23,,35,,46,51,,,,,,,,,,,,,,,',
'69,,,,,,,,,,,,,,109,,,,,,,,,54,59,65,73,121,,,,95,101,,,,20,,32,40,44',
'50,55,60,66,,,,,,96,102,107,5,11,17,24,36,,,52,53,58,64,70,75,84,85',
'89,94,100,,6,12,,26,30,38,,,,,67,,78,82,,93,98,105,,9,13,18,25,31,39',
'43,240,23,,35,,46,51,,,,,,,,,,,,,,,,69,,,,,,,,,,,,,,109,,,,,,,,,54,59',
'65,73,121,,,,95,101,,,,20,,32,40,44,50,55,60,66,,,,,,96,102,107,5,11',
'17,24,36,,,52,53,58,64,70,75,84,85,89,94,100,,6,12,,26,30,38,,,,,67',
',78,82,,93,98,105,,9,13,18,25,31,39,43,,,,,171,,180,185,,192,,,,,,217',
'221,,,,,160,69,168,177,182,186,189,193,198,,,,,,,,,,236,161,164,,,,',
',,200,203,206,209,213,216,220,223,226,230,237,162,165,169,174,178,183',
'187,190,195,204,207,211,214,,,,227,231,235,159,167,172,176,181,,,,197',
'202,205,210,215,218,,,228,,,,,,,,,,194,199,132,,135,139,142,147,148',
',233,240,23,13,35,,46,51,,,,154,,,,,134,136,,,,163,166,170,175,179,184',
'188,191,196,201,208,212,,,,,109,,137,,,,,153,,54,59,65,73,121,,,,95',
'101,,,,20,,32,40,44,50,55,60,66,,,,,,96,102,107,5,11,17,24,36,,,52,53',
'58,64,70,75,84,85,89,94,100,,6,12,,26,30,38,,,,,67,,78,82,,93,98,105',
',9,13,18,25,31,39,43,240,23,,35,,46,51,,,,,,,,,,,,,,,,69,,,,,,,,,,,',
',,109,,,,,,,,,54,59,65,73,121,,,,95,101,,,,20,,32,40,44,50,55,60,66',
',,,,,96,102,107,5,11,17,24,36,,,52,53,58,64,70,75,84,85,89,94,100,,6',
'12,,26,30,38,,,,,67,,78,82,,93,98,105,,9,13,18,25,31,39,43,240,23,,35',
',46,51,,,,,,,,,,,,,,,,69,,,,,,,,,,,,,,109,,,,,,,,,54,59,65,73,121,,',
',95,101,,,,20,,32,40,44,50,55,60,66,,,,,,96,102,107,5,11,17,24,36,,',
'52,53,58,64,70,75,84,85,89,94,100,,6,12,,26,30,38,,,,,67,,78,82,,93',
'98,105,,9,13,18,25,31,39,43,,,,,171,,180,185,,192,,,,,,217,221,,,,,160',
'69,168,177,182,186,189,193,198,,,,,,,,,,236,161,164,,,,,,,200,203,206',
'209,213,216,220,223,226,230,237,162,165,169,174,178,183,187,190,195',
'204,207,211,214,,,,227,231,235,159,167,172,176,181,,,,197,202,205,210',
'215,218,,,228,,,,,,,,,,194,199,132,,135,139,142,147,148,,233,240,23',
'13,35,,46,51,,,,154,,,,,134,136,,,,163,166,170,175,179,184,188,191,196',
'201,208,212,,,,,109,,137,,,,,153,,54,59,65,73,121,,,,95,101,,,,20,,32',
'40,44,50,55,60,66,,,,,,96,102,107,5,11,17,24,36,,,52,53,58,64,70,75',
'84,85,89,94,100,,6,12,,26,30,38,,,,,67,,344,82,,93,98,105,,9,13,18,25',
'31,39,43,240,23,,35,,46,51,,,,,,,,,,,,,,,,69,,,,,,,,,,,,,,109,,,,,,',
',,54,59,65,73,121,,,,95,101,,,,20,,32,40,44,50,55,60,66,,,,,,96,102',
'107,5,11,17,24,36,,,52,53,58,64,70,75,84,85,89,94,100,,6,12,,26,30,38',
',,,,67,,78,82,,93,98,105,,9,13,18,25,31,39,43,240,23,,35,,46,51,,,,',
',,,,,,,,,,,69,,,,,,,,,,,,,,109,,,,,,,,,54,59,65,73,121,,,,95,101,,,',
'20,,32,40,44,50,55,60,66,,,,,,96,102,107,5,11,17,24,36,,,52,53,58,64',
'70,75,84,85,89,94,100,,6,12,,26,30,38,,,,,67,,78,82,,93,98,105,,9,13',
'18,25,31,39,43,240,23,,35,,46,51,,,,,,,,,,,,,,,,69,,,,,,,,,,,,,,109',
',,,,,,,,54,59,65,73,121,,,,95,101,,,,20,,32,40,44,50,55,60,66,,,,,,96',
'102,107,5,11,17,24,36,,,52,53,58,64,70,75,84,85,89,94,100,,6,12,,26',
'30,38,,,,,67,,78,82,,93,98,105,,9,13,18,25,31,39,43,240,23,,35,,46,51',
',,,,,,,,,,,,,,,69,,,,,,,,,,,,,,109,,,,,,,,,54,59,65,73,121,,,,95,101',
',,,20,,32,40,44,50,55,60,66,,,,,,96,102,107,5,11,17,24,36,,,52,53,58',
'64,70,75,84,85,89,94,100,,6,12,,26,30,38,,,,,67,,78,82,,93,98,105,,9',
'13,18,25,31,39,43,240,23,,35,,46,51,,,,,,,,,,,,,,,,69,,,,,,,,,,,,,,109',
',,,,,,,,54,59,65,73,121,,,,95,101,,,,20,,32,40,44,50,55,60,66,,,,,,96',
'102,107,5,11,17,24,36,,,52,53,58,64,70,75,84,85,89,94,100,,6,12,,26',
'30,38,,,,,67,,78,82,,93,98,105,,9,13,18,25,31,39,43,240,23,,35,,46,51',
',,,,,,,,,,,,,,,69,,,,,,,,,,,,,,109,,,,,,,,,54,59,65,73,121,,,,95,101',
',,,20,,32,40,44,50,55,60,66,,,,,,96,102,107,5,11,17,24,36,,,52,53,58',
'64,70,75,84,85,89,94,100,,6,12,,26,30,38,,,,,67,,78,82,,93,98,105,,9',
'13,18,25,31,39,43,,,,,171,,180,185,,192,,,,,,217,221,,,,,160,69,168',
'177,182,186,189,193,198,,,,,,,,,,236,161,164,,,,,,,200,203,206,209,213',
'216,220,223,226,230,237,162,165,169,174,178,183,187,190,195,204,207',
'211,214,,,,227,231,235,159,167,172,176,181,,,,197,202,205,210,215,218',
'278,,228,,,,,,,,,,194,199,,171,,180,185,,192,,233,,,13,217,221,,,,,160',
',168,177,182,186,189,193,198,,,163,166,170,175,179,184,188,191,196,201',
'208,212,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,446,447,,,448',
',,,,,,,,,194,199,,,,,,,,,233,,,,,,,,,,,,,,,,,,,,,163,166,170,175,179',
'184,188,191,196,201,208,212,171,,180,185,,192,,,,,,217,221,,,,,160,',
'168,177,182,186,189,193,198,,,,,,,,,,236,161,164,,,,,,,200,203,206,209',
'213,216,220,223,226,230,237,162,165,169,174,178,183,187,190,195,204',
'207,211,214,,,,227,231,235,159,167,172,176,181,,,,197,202,205,210,215',
'218,,,228,,,,,,,,,,194,199,,,,,,367,240,23,233,35,,46,51,355,358,,,',
',370,,375,-538,-538,-538,-538,-538,-538,,163,166,170,175,179,184,188',
'191,196,201,208,212,,109,,,,,,,,,54,59,65,73,121,,,,95,101,,,,20,,32',
'40,44,50,55,60,66,,,,,,96,102,107,5,11,17,24,36,,,52,53,58,64,70,75',
'84,85,89,94,100,,6,12,,26,30,38,,,,,67,,78,82,,93,98,105,,9,13,18,25',
'31,39,43,240,23,,35,,46,51,353,357,360,363,366,368,369,371,373,376,',
',354,,,69,,,,,,,,,,,,,,109,,,,,,,,,54,59,65,73,121,,,,95,101,,,,20,',
'32,40,44,50,55,60,66,,,,,,96,102,107,5,11,17,24,36,,,52,53,58,64,70',
'75,84,85,89,94,100,,6,12,,26,30,38,,,,,67,,78,82,,93,98,105,,9,13,18',
'25,31,39,43,,,,,171,,180,185,,192,,,,,,217,221,,,,,160,69,168,177,182',
'186,189,193,198,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,446,447,,,448,,,,,,,,,,194,199,,,,,,367,240,23,233,35,,46,51',
'355,358,,,,,370,,375,-538,-538,-538,-538,-538,-538,,163,166,170,175',
'179,184,188,191,196,201,208,212,,109,,,,,,,,,54,59,65,73,121,,,,95,101',
',,,20,,32,40,44,50,55,60,66,,,,,,96,102,107,5,11,17,24,36,,,52,53,58',
'64,70,75,84,85,89,94,100,,6,12,,26,30,38,,,,,67,,78,82,,93,98,105,,9',
'13,18,25,31,39,43,240,23,,35,,46,51,353,357,360,363,366,368,369,371',
'373,376,,,354,,,69,,,,,,,,,,,,,,109,,,,,,,,,54,59,65,73,121,,,,95,101',
',,,20,,32,40,44,50,55,60,66,,,,,,96,102,107,5,11,17,24,36,,,52,53,58',
'64,70,75,84,85,89,94,100,,6,12,,26,30,38,,,,,67,,78,82,,93,98,105,,9',
'13,18,25,31,39,43,240,23,,35,,46,51,,,,,,,,,,,,,,,,69,,,,,,,,,,,,,,109',
',,,,,,,,54,59,65,73,121,,,,95,101,,,,20,,32,40,44,50,55,60,66,,,,,,96',
'102,107,5,11,17,24,36,,,52,53,58,64,70,75,84,85,89,94,100,,6,12,,26',
'30,38,,,,,67,,78,82,,93,98,105,,9,13,18,25,31,39,43,240,23,,35,,46,51',
',,,,,,,,,,,,,,,69,,,,,,,,,,,,,,109,,,,,,,,,54,59,65,73,121,,,,95,101',
',,,20,,32,40,44,50,55,60,66,,,,,,96,102,107,5,11,17,24,36,,,52,53,58',
'64,70,75,84,85,89,94,100,,6,12,,26,30,38,,,,,67,,78,82,,93,98,105,,9',
'13,18,25,31,39,43,240,23,,35,,46,51,,,,,,,,,,,,,,,,69,,,,,,,,,,,,,,109',
',,,,,,,,54,59,65,73,121,,,,95,101,,,,20,,32,40,44,50,55,60,66,,,,,,96',
'102,107,5,11,17,24,36,,,52,53,58,64,70,75,84,85,89,94,100,,6,12,,26',
'30,38,,,,,67,,344,82,,93,98,105,,9,13,18,25,31,39,43,240,23,,35,,46',
'51,,,,,,,,,,,,,,,,69,,,,,,,,,,,,,,109,,,,,,,,,54,59,65,73,121,,,,95',
'101,,,,20,,32,40,44,50,55,60,66,,,,,,96,102,107,5,11,17,24,36,,,52,53',
'58,64,70,75,84,85,89,94,100,,6,12,,26,30,38,,,,,67,,78,82,,93,98,105',
',9,13,18,25,31,39,43,240,23,,35,,46,51,,,,,,,,,,,,,,,,69,,,,,,,,,,,',
',,109,,,,,,,,,54,59,65,73,121,,,,95,101,,,,20,,32,40,44,50,55,60,66',
',,,,,96,102,107,5,11,17,24,36,,,52,53,58,64,70,75,84,85,89,94,100,,6',
'12,,26,30,38,,,,,67,,78,82,,93,98,105,,9,13,18,25,31,39,43,,,,,171,',
'180,185,,192,,,,,,217,221,,,,,160,69,168,177,182,186,189,193,198,,,',
',,,,,,236,161,164,,,,,,,200,203,206,209,213,216,220,223,226,230,237',
'162,165,169,174,178,183,187,190,195,204,207,211,214,,,,227,231,235,159',
'167,172,176,181,,,,197,202,205,210,215,218,219,222,228,229,,,,,,,,,194',
'199,,,,,,367,16,23,233,35,,46,51,355,358,,,,,370,,375,351,352,356,359',
'362,365,-227,163,166,170,175,179,184,188,191,196,201,208,212,,109,,',
',,,,,,54,59,65,73,80,,,,95,101,,,,20,,32,40,44,50,55,60,66,,,,,,96,102',
'107,5,11,17,24,36,,,52,53,58,64,70,75,84,85,89,94,100,,6,12,,26,30,38',
',,,,67,,78,82,,93,98,105,,9,13,18,25,31,39,43,240,23,,35,,46,51,353',
'357,360,363,366,368,369,371,373,376,,,354,,,69,,,,,,,,,,,,,,109,,,,',
',,,,54,59,65,73,121,,,,95,101,,,,20,,32,40,44,50,55,60,66,,,,,,96,102',
'107,5,11,17,24,36,,,52,53,58,64,70,75,84,85,89,94,100,,6,12,,26,30,38',
',,,,67,,78,82,,93,98,105,,9,13,18,25,31,39,43,248,,35,,46,51,,,,,,,',
',,,,,,,,,69,,,,,,,,,,,,,131,,,,,,,,,54,59,65,,121,,,,95,101,,,,20,,32',
'40,44,115,116,60,66,,,,,,127,129,130,5,11,17,24,,,,,53,58,64,70,75,84',
'85,89,94,100,297,6,12,,26,30,38,,,,,253,,120,82,,93,98,,298,9,13,18',
'25,31,39,43,248,,35,,46,51,,,,,,,,,,,,,,,,,69,,,,,,,,,,,,,131,,,,,,',
',,54,59,65,,121,,,,95,101,,,,20,,32,40,44,115,116,60,66,,,,,,127,129',
'130,5,11,17,24,,,,,53,58,64,70,75,84,85,89,94,100,,6,12,,26,30,38,,',
',,253,,120,82,,93,98,,,9,13,18,25,31,39,43,248,,35,,46,51,,,,,,,,,,',
',,,,,,69,,,,,,,,,,,,,131,,,,,,,,,54,59,65,,121,,,,95,101,,,,20,,32,40',
'44,115,116,60,66,,,,,,127,129,130,5,11,17,24,,,,,53,58,64,70,75,84,85',
'89,94,100,,6,12,,26,30,38,,,,,253,,120,82,,93,98,472,,9,13,18,25,31',
'39,43,248,,35,,46,51,,,,,,,,,,,,,,,,,69,,,,,,,,,,,,,131,,,,,,,,,54,59',
'65,,121,,,,95,101,,,,20,,32,40,44,115,116,60,66,,,,,,127,129,130,5,11',
'17,24,,,,,53,58,64,70,75,84,85,89,94,100,,6,12,,26,30,38,,,,,253,,120',
'82,,93,98,,,9,13,18,25,31,39,43,248,,35,,46,51,,,,,,,,,,,,,,,,,69,,',
',,,,,,,,,,131,,,,,,,,,54,59,65,,121,,,,95,101,,,,20,,32,40,44,115,116',
'60,66,,,,,,127,102,107,5,11,17,24,,,,,53,58,64,70,75,84,85,89,94,100',
'297,6,12,,26,30,38,,,,,253,,120,82,,93,98,296,298,9,13,18,25,31,39,43',
'23,,35,,46,51,,,,,,,,,,,,,,,,,69,,,,,,,,,,,,,109,,,,,,,,,54,59,65,,121',
',,,95,101,,,,20,,32,40,44,50,55,60,66,,,,,,96,102,107,5,11,17,24,,,',
',53,58,64,70,75,84,85,89,94,100,,6,12,,26,30,38,,,,,253,,120,82,,93',
'98,,,9,13,18,25,31,39,43,248,,35,,46,51,,,,,,,,,,,,,,,,,69,,,,,,,,,',
',,,131,,,,,,,,,54,59,65,,121,,,,95,101,,,,20,,32,40,44,115,116,60,66',
',,,,,127,129,130,5,11,17,24,,,,,53,58,64,70,75,84,85,89,94,100,,6,12',
',26,30,38,,,,,253,,120,82,,93,98,,,9,13,18,25,31,39,43,248,,35,,46,51',
',,,,,,,,,,,,,,,,69,,,,,,,,,,,,,131,,,,,,,,,54,59,65,,121,,,,95,101,',
',,20,,32,40,44,115,116,60,66,,,,,,127,129,130,5,11,17,24,,,,,53,58,64',
'70,75,84,85,89,94,100,,6,12,,26,30,38,,,,,253,,120,82,,93,98,,,9,13',
'18,25,31,39,43,248,,35,,46,51,,,,,,,,,,,,,,,,,69,,,,,,,,,,,,,131,,,',
',,,,,54,59,65,,121,,,,95,101,,,,20,,32,40,44,115,116,60,66,,,,,,127',
'129,130,5,11,17,24,,,,,53,58,64,70,75,84,85,89,94,100,,6,12,,26,30,38',
',,,,253,,120,82,,93,98,,,9,13,18,25,31,39,43,23,,35,,46,51,,,,,,,,,',
',,,,,,,69,,,,,,,,,,,,,109,,,,,,,,,54,59,65,73,121,,,,95,101,,,,20,,32',
'40,44,50,55,60,66,,,,,,96,102,107,5,11,17,24,36,,,52,53,58,64,70,75',
'84,85,89,94,100,,6,12,,26,30,38,,,,,67,,78,82,,93,98,105,,9,13,18,25',
'31,39,43,248,,35,,46,51,,,,,,,,,,,,,,,,,69,,,,,,,,,,,,,131,,,,,,,,,54',
'59,65,,121,,,,95,101,,,,20,,32,40,44,115,116,60,66,,,,,,127,129,130',
'5,11,17,24,,,,,53,58,64,70,75,84,85,89,94,100,,6,12,,26,30,38,,,,,253',
',120,82,,93,98,,,9,13,18,25,31,39,43,248,,35,,46,51,,,,,,,,,,,,,,,,',
'69,,,,,,,,,,,,,131,,,,,,,,,54,59,65,,121,,,,95,101,,,,20,,32,40,44,115',
'116,60,66,,,,,,127,129,130,5,11,17,24,,,,,53,58,64,70,75,84,85,89,94',
'100,,6,12,,26,30,38,,,,,253,,120,82,,93,98,,,9,13,18,25,31,39,43,248',
',35,,46,51,,,,,,,,,,,,,,,,,69,,,,,,,,,,,,,131,,,,,,,,,54,59,65,,121',
',,,95,101,,,,20,,32,40,44,115,116,60,66,,,,,,127,129,130,5,11,17,24',
',,,,53,58,64,70,75,84,85,89,94,100,,6,12,,26,30,38,,,,,253,,120,82,',
'93,98,,,9,13,18,25,31,39,43,248,,35,,46,51,,,,,,,,,,,,,,,,,69,,,,,,',
',,,,,,131,,,,,,,,,54,59,65,,121,,,,95,101,,,,20,,32,40,44,115,116,60',
'66,,,,,,127,129,130,5,11,17,24,,,,,53,58,64,70,75,84,85,89,94,100,,6',
'12,,26,30,38,,,,,253,,120,82,,93,98,,,9,13,18,25,31,39,43,248,,35,,46',
'51,,,,,,,,,,,,,,,,,69,,,,,,,,,,,,,131,,,,,,,,,54,59,65,,121,,,,95,101',
',,,20,,32,40,44,50,55,60,66,,,,,,96,102,107,5,11,17,24,,,,,53,58,64',
'70,75,84,85,89,94,100,,6,12,,26,30,38,,,,,253,,120,82,,93,98,472,,9',
'13,18,25,31,39,43,248,,35,,46,51,,,,,,,,,,,,,,,,,69,,,,,,,,,,,,,131',
',,,,,,,,54,59,65,,121,,,,95,101,,,,20,,32,40,44,115,116,60,66,,,,,,127',
'129,130,5,11,17,24,,,,,53,58,64,70,75,84,85,89,94,100,,6,12,,26,30,38',
',,,,253,,120,82,,93,98,,,9,13,18,25,31,39,43,248,,35,,46,51,,,,,,,,',
',,,,,,,,69,,,,,,,,,,,,,131,,,,,,,,,54,59,65,,121,,,,95,101,,,,20,,32',
'40,44,115,116,60,66,,,,,,127,129,130,5,11,17,24,,,,,53,58,64,70,75,84',
'85,89,94,100,,6,12,,26,30,38,,,,,253,,120,82,,93,98,,,9,13,18,25,31',
'39,43,248,,35,,46,51,,,,,,,,,,,,,,,,,69,,,,,,,,,,,,,131,,,,,,,,,54,59',
'65,,121,,,,95,101,,,,20,,32,40,44,115,116,60,66,,,,,,127,129,130,5,11',
'17,24,,,,,53,58,64,70,75,84,85,89,94,100,,6,12,,26,30,38,,,,,253,,120',
'82,,93,98,,,9,13,18,25,31,39,43,248,,35,,46,51,,,,,,,,,,,,,,,,,69,,',
',,,,,,,,,,131,,,,,,,,,54,59,65,,121,,,,95,101,,,,20,,32,40,44,115,116',
'60,66,,,,,,127,129,130,5,11,17,24,,,,,53,58,64,70,75,84,85,89,94,100',
',6,12,,26,30,38,,,,,253,,120,82,,93,98,,,9,13,18,25,31,39,43,248,,35',
',46,51,,,,,,,,,,,,,,,,,69,,,,,,,,,,,,,131,,,,,,,,,54,59,65,,121,,,,95',
'101,,,,20,,32,40,44,115,116,60,66,,,,,,127,129,130,5,11,17,24,,,,,53',
'58,64,70,75,84,85,89,94,100,,6,12,,26,30,38,,,,,253,,120,82,,93,98,',
',9,13,18,25,31,39,43,248,,35,,46,51,,,,,,,,,,,,,,,,,69,,,,,,,,,,,,,131',
',,,,,,,,54,59,65,,121,,,,95,101,,,,20,,32,40,44,115,116,60,66,,,,,,127',
'129,130,5,11,17,24,,,,,53,58,64,70,75,84,85,89,94,100,,6,12,,26,30,38',
',,,,253,,120,82,,93,98,,,9,13,18,25,31,39,43,248,,35,,46,51,,,,,,,,',
',,,,,,,,69,,,,,,,,,,,,,131,,,,,,,,,54,59,65,,121,,,,95,101,,,,20,,32',
'40,44,115,116,60,66,,,,,,127,129,130,5,11,17,24,,,,,53,58,64,70,75,84',
'85,89,94,100,,6,12,,26,30,38,,,,,253,,120,82,,93,98,,,9,13,18,25,31',
'39,43,248,,35,,46,51,,,,,,,,,,,,,,,,,69,,,,,,,,,,,,,131,,,,,,,,,54,59',
'65,,121,,,,95,101,,,,20,,32,40,44,115,116,60,66,,,,,,127,129,130,5,11',
'17,24,,,,,53,58,64,70,75,84,85,89,94,100,,6,12,,26,30,38,,,,,253,,120',
'82,,93,98,,,9,13,18,25,31,39,43,248,,35,,46,51,,,,,,,,,,,,,,,,,69,,',
',,,,,,,,,,131,,,,,,,,,54,59,65,,121,,,,95,101,,,,20,,32,40,44,115,116',
'60,66,,,,,,127,129,130,5,11,17,24,,,,,53,58,64,70,75,84,85,89,94,100',
',6,12,,26,30,38,,,,,253,,120,82,,93,98,,,9,13,18,25,31,39,43,248,,35',
',46,51,,,,,,,,,,,,,,,,,69,,,,,,,,,,,,,131,,,,,,,,,54,59,65,,121,,,,95',
'101,,,,20,,32,40,44,115,116,60,66,,,,,,127,129,130,5,11,17,24,,,,,53',
'58,64,70,75,84,85,89,94,100,,6,12,,26,30,38,,,,,253,,120,82,,93,98,296',
',9,13,18,25,31,39,43,248,,35,,46,51,,,,,,,,,,,,,,,,,69,,,,,,,,,,,,,131',
',,,,,,,,54,59,65,,121,,,,95,101,,,,20,,32,40,44,115,116,60,66,,,,,,127',
'129,130,5,11,17,24,,,,,53,58,64,70,75,84,85,89,94,100,297,6,12,,26,30',
'38,,,,,253,,120,82,,93,98,704,,9,13,18,25,31,39,43,248,,35,,46,51,,',
',,,,,,,,,,,,,,69,,,,,,,,,,,,,131,,,,,,,,,54,59,65,,121,,,,95,101,,,',
'20,,32,40,44,50,55,60,66,,,,,,96,102,107,5,11,17,24,,,,,53,58,64,70',
'75,84,85,89,94,100,,6,12,,26,30,38,,,,,253,,120,82,,93,98,472,,9,13',
'18,25,31,39,43,248,,35,,46,51,,,,,,,,,,,,,,,,,69,,,,,,,,,,,,,131,,,',
',,,,,54,59,65,,121,,,,95,101,,,,20,,32,40,44,115,116,60,66,,,,,,127',
'129,130,5,11,17,24,,,,,53,58,64,70,75,84,85,89,94,100,297,6,12,,26,30',
'38,,,,,253,,120,82,,93,98,,,9,13,18,25,31,39,43,248,,35,,46,51,,,,,',
',,,,,,,,,,,69,,,,,,,,,,,,,131,,,,,,,,,54,59,65,,121,,,,95,101,,,,20',
',32,40,44,115,116,60,66,,,,,,127,129,130,5,11,17,24,,,,,53,58,64,70',
'75,84,85,89,94,100,,6,12,,26,30,38,,,,,253,,120,82,,93,98,,,9,13,18',
'25,31,39,43,23,,35,,46,51,,,,,,,,,,,,,,,,,69,,,,,,,,,,,,,109,,,,,,,',
',54,59,65,,121,,,,95,101,,,,20,,32,40,44,50,55,60,66,,,,,,96,102,107',
'5,11,17,24,,,,,53,58,64,70,75,84,85,89,94,100,,6,12,,26,30,38,,,,,253',
',120,82,,93,98,,,9,13,18,25,31,39,43,248,,35,,46,51,,,,,,,,,,,,,,,,',
'69,,,,,,,,,,,,,131,,,,,,,,,54,59,65,,121,,,,95,101,,,,20,,32,40,44,115',
'116,60,66,,,,,,127,129,130,5,11,17,24,,,,,53,58,64,70,75,84,85,89,94',
'100,,6,12,,26,30,38,,,,,253,,120,82,,93,98,,,9,13,18,25,31,39,43,248',
',35,,46,51,,,,,,,,,,,,,,,,,69,,,,,,,,,,,,,131,,,,,,,,,54,59,65,,121',
',,,95,101,,,,20,,32,40,44,115,116,60,66,,,,,,127,102,107,5,11,17,24',
',,,,53,58,64,70,75,84,85,89,94,100,297,6,12,,26,30,38,,,,,253,,120,82',
',93,98,296,298,9,13,18,25,31,39,43,248,,35,,46,51,,,,,,,,,,,,,,,,,69',
',,,,,,,,,,,,131,,,,,,,,,54,59,65,,121,,,,95,101,,,,20,,32,40,44,115',
'116,60,66,,,,,,127,102,107,5,11,17,24,,,,,53,58,64,70,75,84,85,89,94',
'100,297,6,12,,26,30,38,,,,,253,,120,82,,93,98,296,298,9,13,18,25,31',
'39,43,248,,35,,46,51,,,,,,,,,,,,,,,,,69,,,,,,,,,,,,,131,,,,,,,,,54,59',
'65,,121,,,,95,101,,,,20,,32,40,44,115,116,60,66,,,,,,127,129,130,5,11',
'17,24,,,,,53,58,64,70,75,84,85,89,94,100,297,6,12,,26,30,38,,,,,253',
',120,82,,93,98,296,,9,13,18,25,31,39,43,248,,35,,46,51,,,,,,,,,,,,,',
',,,69,,,,,,,,,,,,,131,,,,,,,,,54,59,65,,121,,,,95,101,,,,20,,32,40,44',
'115,116,60,66,,,,,,127,129,130,5,11,17,24,,,,,53,58,64,70,75,84,85,89',
'94,100,,6,12,,26,30,38,,,,,253,,120,82,,93,98,,,9,13,18,25,31,39,43',
'23,,35,,46,51,,,,,,,,,,,,,,,,,69,,,,,,,,,,,,,109,,,,,,,,,54,59,65,,121',
',,,95,101,,,,20,,32,40,44,50,55,60,66,,,,,,96,102,107,5,11,17,24,,,',
',53,58,64,70,75,84,85,89,94,100,,6,12,,26,30,38,,,,,253,,120,82,,93',
'98,,,9,13,18,25,31,39,43,23,,35,,46,51,,,,,,,,,,,,,,,,,69,,,,,,,,,,',
',,109,,,,,,,,,54,59,65,,121,,,,95,101,,,,20,,32,40,44,50,55,60,66,,',
',,,96,102,107,5,11,17,24,,,,,53,58,64,70,75,84,85,89,94,100,,6,12,,26',
'30,38,,,,,253,,120,82,,93,98,,,9,13,18,25,31,39,43,248,,35,,46,51,,',
',,,,,,,,,,,,,,69,,,,,,,,,,,,,131,,,,,,,,,54,59,65,,121,,,,95,101,,,',
'20,,32,40,44,115,116,60,66,,,,,,127,129,130,5,11,17,24,,,,,53,58,64',
'70,75,84,85,89,94,100,297,6,12,,26,30,38,,,,,253,,120,82,,93,98,,,9',
'13,18,25,31,39,43,23,,35,,46,51,,,,,,,,,,,,,,,,,69,,,,,,,,,,,,,109,',
',,,,,,,54,59,65,,121,,,,95,101,,,,20,,32,40,44,50,55,60,66,,,,,,96,102',
'107,5,11,17,24,,,,,53,58,64,70,75,84,85,89,94,100,,6,12,,26,30,38,,',
',,253,,120,82,,93,98,,,9,13,18,25,31,39,43,23,,35,,46,51,,,,,,,,,,,',
',,,,,69,,,,,,,,,,,,,109,,,,,,,,,54,59,65,,121,,,,95,101,,,,20,,32,40',
'44,50,55,60,66,,,,,,96,102,107,5,11,17,24,,,,,53,58,64,70,75,84,85,89',
'94,100,,6,12,,26,30,38,,,,,253,,120,82,,93,98,,,9,13,18,25,31,39,43',
'23,,35,,46,51,,,,,,,,,,,,,,,,,69,,,,,,,,,,,,,109,,,,,,,,,54,59,65,,121',
',,,95,101,,,,20,,32,40,44,50,55,60,66,,,,,,96,102,107,5,11,17,24,,,',
',53,58,64,70,75,84,85,89,94,100,,6,12,,26,30,38,,,,,253,,120,82,,93',
'98,,,9,13,18,25,31,39,43,23,,35,,46,51,,,,,,,,,,,,,,,,,69,,,,,,,,,,',
',,109,,,,,,,,,54,59,65,,121,,,,95,101,,,,20,,32,40,44,50,55,60,66,,',
',,,96,102,107,5,11,17,24,,,,,53,58,64,70,75,84,85,89,94,100,,6,12,,26',
'30,38,,,,,253,,120,82,,93,98,,,9,13,18,25,31,39,43,248,,35,,46,51,,',
',,,,,,,,,,,,,,69,,,,,,,,,,,,,131,,,,,,,,,54,59,65,,121,,,,95,101,,,',
'20,,32,40,44,115,116,60,66,,,,,,127,129,130,5,11,17,24,,,,,53,58,64',
'70,75,84,85,89,94,100,,6,12,,26,30,38,,,,,253,,120,82,,93,98,,,9,13',
'18,25,31,39,43,248,,35,,46,51,,,,,,,,,,,,,,,,,69,,,,,,,,,,,,,131,,,',
',,,,,54,59,65,,121,,,,95,101,,,,20,,32,40,44,115,116,60,66,,,,,,127',
'129,130,5,11,17,24,,,,,53,58,64,70,75,84,85,89,94,100,,6,12,,26,30,38',
',,,,253,,120,82,,93,98,,,9,13,18,25,31,39,43,248,,35,,46,51,,,,,,,,',
',,,,,,,,69,,,,,,,,,,,,,131,,,,,,,,,54,59,65,,121,,,,95,101,,,,20,,32',
'40,44,115,116,60,66,,,,,,127,129,130,5,11,17,24,,,,,53,58,64,70,75,84',
'85,89,94,100,,6,12,,26,30,38,,,,,253,,120,82,,93,98,,,9,13,18,25,31',
'39,43,248,,35,,46,51,,,,,,,,,,,,,,,,,69,,,,,,,,,,,,,131,,,,,,,,,54,59',
'65,,121,,,,95,101,,,,20,,32,40,44,115,116,60,66,,,,,,127,102,107,5,11',
'17,24,,,,,53,58,64,70,75,84,85,89,94,100,297,6,12,,26,30,38,,,,,253',
',120,82,,93,98,296,298,9,13,18,25,31,39,43,248,,35,,46,51,,,,,,,,,,',
',,,,,,69,,,,,,,,,,,,,131,,,,,,,,,54,59,65,,121,,,,95,101,,,,20,,32,40',
'44,50,55,60,66,,,,,,96,102,107,5,11,17,24,,,,,53,58,64,70,75,84,85,89',
'94,100,,6,12,,26,30,38,,,,,253,,120,82,,93,98,,,9,13,18,25,31,39,43',
'23,,35,,46,51,,,,,,,,,,,,,,,,,69,,,,,,,,,,,,,109,,,,,,,,,54,59,65,,121',
',,,95,101,,,,20,,32,40,44,50,55,60,66,,,,,,96,102,107,5,11,17,24,,,',
',53,58,64,70,75,84,85,89,94,100,,6,12,,26,30,38,,,,,253,,120,82,,93',
'98,,,9,13,18,25,31,39,43,23,,35,,46,51,,,,,,,,,,,,,,,,,69,,,,,,,,,,',
',,109,,,,,,,,,54,59,65,,121,,,,95,101,,,,20,,32,40,44,50,55,60,66,,',
',,,96,102,107,5,11,17,24,,,,,53,58,64,70,75,84,85,89,94,100,,6,12,,26',
'30,38,,,,,253,,120,82,,93,98,,,9,13,18,25,31,39,43,248,,35,,46,51,,',
',,,,,,,,,,,,,,69,,,,,,,,,,,,,131,,,,,,,,,54,59,65,,121,,,,95,101,,,',
'20,,32,40,44,115,116,60,66,,,,,,127,129,130,5,11,17,24,,,,,53,58,64',
'70,75,84,85,89,94,100,,6,12,,26,30,38,,,,,253,,120,82,,93,98,,,9,13',
'18,25,31,39,43,248,,35,,46,51,,,,,,,,,,,,,,,,,69,,,,,,,,,,,,,131,,,',
',,,,,54,59,65,,121,,,,95,101,,,,20,,32,40,44,115,116,60,66,,,,,,127',
'102,107,5,11,17,24,,,,,53,58,64,70,75,84,85,89,94,100,297,6,12,,26,30',
'38,,,,,253,,120,82,,93,98,296,298,9,13,18,25,31,39,43,248,,35,,46,51',
',,,,,,,,,,,,,,,,69,,,,,,,,,,,,,131,,,,,,,,,54,59,65,,121,,,,95,101,',
',,20,,32,40,44,115,116,60,66,,,,,,127,129,130,5,11,17,24,,,,,53,58,64',
'70,75,84,85,89,94,100,,6,12,,26,30,38,,,,,253,,120,82,,93,98,,,9,13',
'18,25,31,39,43,248,,35,,46,51,,,,,,,,,,,,,,,,,69,,,,,,,,,,,,,131,,,',
',,,,,54,59,65,,121,,,,95,101,,,,20,,32,40,44,115,116,60,66,,,,,,127',
'129,130,5,11,17,24,,,,,53,58,64,70,75,84,85,89,94,100,,6,12,,26,30,38',
',,,,253,,120,82,,93,98,,,9,13,18,25,31,39,43,248,,35,,46,51,,,,,,,,',
',,,,,,,,69,,,,,,,,,,,,,131,,,,,,,,,54,59,65,,121,,,,95,101,,,,20,,32',
'40,44,115,116,60,66,,,,,,127,129,130,5,11,17,24,,,,,53,58,64,70,75,84',
'85,89,94,100,,6,12,,26,30,38,,,,,253,,120,82,,93,98,,,9,13,18,25,31',
'39,43,248,,35,,46,51,,,,,,,,,,,,,,,,,69,,,,,,,,,,,,,131,,,,,,,,,54,59',
'65,,121,,,,95,101,,,,20,,32,40,44,115,116,60,66,,,,,,127,129,130,5,11',
'17,24,,,,,53,58,64,70,75,84,85,89,94,100,,6,12,,26,30,38,,,,,253,,120',
'82,,93,98,,,9,13,18,25,31,39,43,248,,35,,46,51,,,,,,,,,,,,,,,,,69,,',
',,,,,,,,,,131,,,,,,,,,54,59,65,,121,,,,95,101,,,,20,,32,40,44,50,55',
'60,66,,,,,,96,102,107,5,11,17,24,,,,,53,58,64,70,75,84,85,89,94,100',
',6,12,,26,30,38,,,,,253,,120,82,,93,98,,,9,13,18,25,31,39,43,248,,35',
',46,51,,,,,,,,,,,,,,,,,69,,,,,,,,,,,,,131,,,,,,,,,54,59,65,,121,,,,95',
'101,,,,20,,32,40,44,115,116,60,66,,,,,,127,129,130,5,11,17,24,,,,,53',
'58,64,70,75,84,85,89,94,100,,6,12,,26,30,38,,,,,253,,120,82,,93,98,',
',9,13,18,25,31,39,43,248,,35,,46,51,,,,,,,,,,,,,,,,,69,,,,,,,,,,,,,131',
',,,,,,,,54,59,65,,121,,,,95,101,,,,20,,32,40,44,115,116,60,66,,,,,,127',
'129,130,5,11,17,24,,,,,53,58,64,70,75,84,85,89,94,100,297,6,12,,26,30',
'38,,,,,253,,120,82,,93,98,704,298,9,13,18,25,31,39,43,248,,35,,46,51',
',,,,,,,,,,,,,,,,69,,,,,,,,,,,,,131,,,,,,,,,54,59,65,,121,,,,95,101,',
',,20,,32,40,44,115,116,60,66,,,,,,127,102,107,5,11,17,24,,,,,53,58,64',
'70,75,84,85,89,94,100,297,6,12,,26,30,38,,,,,253,,120,82,,93,98,296',
'298,9,13,18,25,31,39,43,248,,35,,46,51,,,,,,,,,,,,,,,,,69,,,,,,,,,,',
',,131,,,,,,,,,54,59,65,,121,,,,95,101,,,,20,,32,40,44,115,116,60,66',
',,,,,127,129,130,5,11,17,24,,,,,53,58,64,70,75,84,85,89,94,100,,6,12',
',26,30,38,,,,,253,,120,82,,93,98,,,9,13,18,25,31,39,43,248,,35,,46,51',
',,,,,,,,,,,,,,,,69,,,,,,,,,,,,,131,,,,,,,,,54,59,65,,121,,,,95,101,',
',,20,,32,40,44,115,116,60,66,,,,,,127,102,107,5,11,17,24,,,,,53,58,64',
'70,75,84,85,89,94,100,297,6,12,,26,30,38,,,,,253,,120,82,,93,98,296',
'298,9,13,18,25,31,39,43,248,,35,,46,51,,,,,,,,,,,,,,,,,69,,,,,,,,,,',
',,131,,,,,,,,,54,59,65,,121,,,,95,101,,,,20,,32,40,44,50,55,60,66,,',
',,,96,102,107,5,11,17,24,,,,,53,58,64,70,75,84,85,89,94,100,,6,12,,26',
'30,38,,,,,253,,120,82,,93,98,,,9,13,18,25,31,39,43,248,,35,,46,51,,',
',,,,,,,,,,,,,,69,,,,,,,,,,,,,131,,,,,,,,,54,59,65,,121,,,,95,101,,,',
'20,,32,40,44,115,116,60,66,,,,,,127,102,107,5,11,17,24,,,,,53,58,64',
'70,75,84,85,89,94,100,297,6,12,,26,30,38,,,,,253,,120,82,,93,98,296',
'298,9,13,18,25,31,39,43,248,,35,,46,51,,,,,,,,,,,,,,,,,69,,,,,,,,,,',
',,131,,,,,,,,,54,59,65,,121,,,,95,101,,,,20,,32,40,44,50,55,60,66,,',
',,,96,102,107,5,11,17,24,,,,,53,58,64,70,75,84,85,89,94,100,,6,12,,26',
'30,38,,,,,253,,120,82,,93,98,,,9,13,18,25,31,39,43,248,,35,,46,51,,',
',,,,,,,,,,,,,,69,,,,,,,,,,,,,131,,,,,,,,,54,59,65,,121,,,,95,101,,,',
'20,,32,40,44,115,116,60,66,,,,,,127,129,130,5,11,17,24,,,,,53,58,64',
'70,75,84,85,89,94,100,,6,12,,26,30,38,,,,,253,,120,82,,93,98,,,9,13',
'18,25,31,39,43,248,,35,,46,51,,,,,,,,,,,,,,,,,69,,,,,,,,,,,,,131,,,',
',,,,,54,59,65,,121,,,,95,101,,,,20,,32,40,44,115,116,60,66,,,,,,127',
'129,130,5,11,17,24,,,,,53,58,64,70,75,84,85,89,94,100,,6,12,,26,30,38',
',,,,253,,120,82,,93,98,,,9,13,18,25,31,39,43,248,,35,,46,51,,,,,,,,',
',,,,,,,,69,,,,,,,,,,,,,131,,,,,,,,,54,59,65,,121,,,,95,101,,,,20,,32',
'40,44,50,55,60,66,,,,,,96,102,107,5,11,17,24,,,,,53,58,64,70,75,84,85',
'89,94,100,,6,12,,26,30,38,,,,,253,,120,82,,93,98,,,9,13,18,25,31,39',
'43,248,,35,,46,51,,,,,,,,,,,,,,,,,69,,,,,,,,,,,,,131,,,,,,,,,54,59,65',
',121,,,,95,101,,,,20,,32,40,44,115,116,60,66,,,,,,127,102,107,5,11,17',
'24,,,,,53,58,64,70,75,84,85,89,94,100,297,6,12,,26,30,38,,,,,253,,120',
'82,,93,98,296,298,9,13,18,25,31,39,43,248,,35,,46,51,,,,,,,,,,,,,,,',
',69,,,,,,,,,,,,,131,,,,,,,,,54,59,65,,121,,,,95,101,,,,20,,32,40,44',
'50,55,60,66,,,,,,96,102,107,5,11,17,24,,,,,53,58,64,70,75,84,85,89,94',
'100,,6,12,,26,30,38,,,,,253,,120,82,,93,98,,,9,13,18,25,31,39,43,248',
',35,,46,51,,,,,,,,,,,,,,,,,69,,,,,,,,,,,,,131,,,,,,,,,54,59,65,,121',
',,,95,101,,,,20,,32,40,44,115,116,60,66,,,,,,127,129,130,5,11,17,24',
',,,,53,58,64,70,75,84,85,89,94,100,,6,12,,26,30,38,,,,,253,,120,82,',
'93,98,,,9,13,18,25,31,39,43,248,,35,,46,51,,,,,,,,,,,,,,,,,69,,,,,,',
',,,,,,131,,,,,,,,,54,59,65,,121,,,,95,101,,,,20,,32,40,44,115,116,60',
'66,,,,,,127,129,130,5,11,17,24,,,,,53,58,64,70,75,84,85,89,94,100,,6',
'12,,26,30,38,,,,,253,,120,82,,93,98,,,9,13,18,25,31,39,43,248,,35,,46',
'51,,,,,,,,,,,,,,,,,69,,,,,,,,,,,,,131,,,,,,,,,54,59,65,,121,,,,95,101',
',,,20,,32,40,44,115,116,60,66,,,,,,127,129,130,5,11,17,24,,,,,53,58',
'64,70,75,84,85,89,94,100,,6,12,,26,30,38,,,,,253,,120,82,,93,98,,,9',
'13,18,25,31,39,43,248,,35,,46,51,,,,,,,,,,,,,,,,,69,,,,,,,,,,,,,131',
',,,,,,,,54,59,65,,121,,,,95,101,,,,20,,32,40,44,115,116,60,66,,,,,,127',
'129,130,5,11,17,24,,,,,53,58,64,70,75,84,85,89,94,100,,6,12,,26,30,38',
',,,,253,,120,82,,93,98,704,,9,13,18,25,31,39,43,248,,35,,46,51,,,,,',
',,,,,,,,,,,69,,,,,,,,,,,,,131,,,,,,,,,54,59,65,,121,,,,95,101,,,,20',
',32,40,44,50,55,60,66,,,,,,96,102,107,5,11,17,24,,,,,53,58,64,70,75',
'84,85,89,94,100,,6,12,,26,30,38,,,,,253,,120,82,,93,98,,,9,13,18,25',
'31,39,43,248,,35,,46,51,,,,,,,,,,,,,,,,,69,,,,,,,,,,,,,131,,,,,,,,,54',
'59,65,,121,,,,95,101,,,,20,,32,40,44,115,116,60,66,,,,,,127,129,130',
'5,11,17,24,,,,,53,58,64,70,75,84,85,89,94,100,,6,12,,26,30,38,,,,,253',
',120,82,,93,98,,,9,13,18,25,31,39,43,248,,35,,46,51,,,,,,,,,,,,,,,,',
'69,,,,,,,,,,,,,131,,,,,,,,,54,59,65,,121,,,,95,101,,,,20,,32,40,44,115',
'116,60,66,,,,,,127,129,130,5,11,17,24,,,,,53,58,64,70,75,84,85,89,94',
'100,,6,12,,26,30,38,,,,,253,,120,82,,93,98,804,,9,13,18,25,31,39,43',
'248,,35,,46,51,,,,,,,,,,,,,,,,,69,,,,,,,,,,,,,131,,,,,,,,,54,59,65,',
'121,,,,95,101,,,,20,,32,40,44,115,116,60,66,,,,,,127,102,107,5,11,17',
'24,,,,,53,58,64,70,75,84,85,89,94,100,297,6,12,,26,30,38,,,,,253,,120',
'82,,93,98,296,298,9,13,18,25,31,39,43,248,,35,,46,51,,,,,,,,,,,,,,,',
',69,,,,,,,,,,,,,131,,,,,,,,,54,59,65,,121,,,,95,101,,,,20,,32,40,44',
'115,116,60,66,,,,,,127,129,130,5,11,17,24,,,,,53,58,64,70,75,84,85,89',
'94,100,,6,12,,26,30,38,,,,,253,,120,82,,93,98,,,9,13,18,25,31,39,43',
'23,,35,,46,51,,,,,,,,,,,,,,,,,69,,,,,,,,,,,,,109,,,,,,,,,54,59,65,73',
'80,,,,95,101,,,,20,,32,40,44,50,55,60,66,,,,,,96,102,107,5,11,17,24',
'36,,,52,53,58,64,70,75,84,85,89,94,100,,6,12,,26,30,38,,,,,67,,78,82',
',93,98,105,,9,13,18,25,31,39,43,23,,35,,46,51,,,,,,,,,,,,,,,,,69,,,',
',,,,,,,,,109,,,,,,,,,54,59,65,73,121,,,,95,101,,,,20,,32,40,44,50,55',
'60,66,,,,,,96,102,107,5,11,17,24,36,,,52,53,58,64,70,75,84,85,89,94',
'100,,6,12,,26,30,38,,,,,67,,78,82,,93,98,105,,9,13,18,25,31,39,43,23',
',35,,46,51,,,,,,,,,,,,,,,,,69,,,,,,,,,,,,,109,,,,,,,,,54,59,65,,121',
',,,95,101,,,,20,,32,40,44,50,55,60,66,,,,,,96,102,107,5,11,17,24,,,',
',53,58,64,70,75,84,85,89,94,100,,6,12,,26,30,38,,,,,253,,120,82,,93',
'98,,,9,13,18,25,31,39,43,23,,35,,46,51,,,,,,,,,,,,,,,,,69,,,,,,,,,,',
',,109,,,,,,,,,54,59,65,,121,,,,95,101,,,,20,,32,40,44,50,55,60,66,,',
',,,96,102,107,5,11,17,24,,,,,53,58,64,70,75,84,85,89,94,100,,6,12,,26',
'30,38,,,,,253,,120,82,,93,98,,,9,13,18,25,31,39,43,23,,35,,46,51,,,',
',,,,,,,,,,,,,69,,,,,,,,,,,,,109,,,,,,,,,54,59,65,,121,,,,95,101,,,,20',
',32,40,44,50,55,60,66,,,,,,96,102,107,5,11,17,24,,,,,53,58,64,70,75',
'84,85,89,94,100,,6,12,,26,30,38,,,,,253,,120,82,,93,98,,,9,13,18,25',
'31,39,43,23,,35,,46,51,,,,,,,,,,,,,,,,,69,,,,,,,,,,,,,109,,,,,,,,,54',
'59,65,,121,,,,95,101,,,,20,,32,40,44,50,55,60,66,,,,,,96,102,107,5,11',
'17,24,,,,,53,58,64,70,75,84,85,89,94,100,,6,12,,26,30,38,,,,,253,,120',
'82,,93,98,,,9,13,18,25,31,39,43,248,,35,,46,51,,,,,,,,,,,,,,,,,69,,',
',,,,,,,,,,131,,,,,,,,,54,59,65,,121,,,,95,101,,,,20,,32,40,44,115,116',
'60,66,,,,,,127,129,130,5,11,17,24,,,,,53,58,64,70,75,84,85,89,94,100',
',6,12,,26,30,38,,,,,253,,120,82,,93,98,,,9,13,18,25,31,39,43,248,,35',
',46,51,,,,,,,,,,,,,,,,,69,,,,,,,,,,,,,131,,,,,,,,,54,59,65,,121,,,,95',
'101,,,,20,,32,40,44,115,116,60,66,,,,,,127,129,130,5,11,17,24,,,,,53',
'58,64,70,75,84,85,89,94,100,,6,12,,26,30,38,,,,,253,,120,82,,93,98,',
',9,13,18,25,31,39,43,248,,35,,46,51,,,,,,,,,,,,,,,,,69,,,,,,,,,,,,,131',
',,,,,,,,54,59,65,,121,,,,95,101,,,,20,,32,40,44,115,116,60,66,,,,,,127',
'129,130,5,11,17,24,,,,,53,58,64,70,75,84,85,89,94,100,,6,12,,26,30,38',
',,,,253,,120,82,,93,98,,,9,13,18,25,31,39,43,248,,35,,46,51,,,,,,,,',
',,,,,,,,69,,,,,,,,,,,,,131,,,,,,,,,54,59,65,,121,,,,95,101,,,,20,,32',
'40,44,115,116,60,66,,,,,,127,129,130,5,11,17,24,,,,,53,58,64,70,75,84',
'85,89,94,100,,6,12,,26,30,38,,,,,253,,120,82,,93,98,,,9,13,18,25,31',
'39,43,23,,35,,46,51,,,,,,,,,,,,,,,,,69,,,,,,,,,,,,,109,,,,,,,,,54,59',
'65,,121,,,,95,101,,,,20,,32,40,44,50,55,60,66,,,,,,96,102,107,5,11,17',
'24,,,,,53,58,64,70,75,84,85,89,94,100,,6,12,,26,30,38,,,,,253,,120,82',
',93,98,,,9,13,18,25,31,39,43,248,,35,,46,51,,,,,,,,,,,,,,,,,69,,,,,',
',,,,,,,131,,,,,,,,,54,59,65,,121,,,,95,101,,,,20,,32,40,44,115,116,60',
'66,,,,,,127,129,130,5,11,17,24,,,,,53,58,64,70,75,84,85,89,94,100,,6',
'12,,26,30,38,,,,,253,,120,82,,93,98,,,9,13,18,25,31,39,43,248,,35,,46',
'51,,,,,,,,,,,,,,,,,69,,,,,,,,,,,,,131,,,,,,,,,54,59,65,,121,,,,95,101',
',,,20,,32,40,44,115,116,60,66,,,,,,127,129,130,5,11,17,24,,,,,53,58',
'64,70,75,84,85,89,94,100,,6,12,,26,30,38,,,,,253,,120,82,,93,98,,,9',
'13,18,25,31,39,43,23,,35,,46,51,,,,,,,,,,,,,,,,,69,,,,,,,,,,,,,109,',
',,,,,,,54,59,65,,121,,,,95,101,,,,20,,32,40,44,50,55,60,66,,,,,,96,102',
'107,5,11,17,24,,,,,53,58,64,70,75,84,85,89,94,100,,6,12,,26,30,38,,',
',,253,,120,82,,93,98,,,9,13,18,25,31,39,43,23,,35,,46,51,,,,,,,,,,,',
',,,,,69,,,,,,,,,,,,,109,,,,,,,,,54,59,65,,121,,,,95,101,,,,20,,32,40',
'44,50,55,60,66,,,,,,96,102,107,5,11,17,24,,,,,53,58,64,70,75,84,85,89',
'94,100,,6,12,,26,30,38,,,,,253,,120,82,,93,98,,,9,13,18,25,31,39,43',
'248,,35,,46,51,,,,,,,,,,,,,,,,,69,,,,,,,,,,,,,131,,,,,,,,,54,59,65,',
'121,,,,95,101,,,,20,,32,40,44,115,116,60,66,,,,,,127,129,130,5,11,17',
'24,,,,,53,58,64,70,75,84,85,89,94,100,,6,12,,26,30,38,,,,,253,,120,82',
',93,98,,,9,13,18,25,31,39,43,248,,35,,46,51,,,,,,,,,,,,,,,,,69,,,,,',
',,,,,,,131,,,,,,,,,54,59,65,,121,,,,95,101,,,,20,,32,40,44,115,116,60',
'66,,,,,,127,129,130,5,11,17,24,,,,,53,58,64,70,75,84,85,89,94,100,,6',
'12,,26,30,38,,,,,253,,120,82,,93,98,,,9,13,18,25,31,39,43,248,,35,,46',
'51,,,,,,,,,,,,,,,,,69,,,,,,,,,,,,,131,,,,,,,,,54,59,65,,121,,,,95,101',
',,,20,,32,40,44,115,116,60,66,,,,,,127,129,130,5,11,17,24,,,,,53,58',
'64,70,75,84,85,89,94,100,,6,12,,26,30,38,,,,,253,,120,82,,93,98,,,9',
'13,18,25,31,39,43,248,,35,,46,51,,,,,,,,,,,,,,,,,69,,,,,,,,,,,,,131',
',,,,,,,,54,59,65,,121,,,,95,101,,,,20,,32,40,44,115,116,60,66,,,,,,127',
'129,130,5,11,17,24,,,,,53,58,64,70,75,84,85,89,94,100,,6,12,,26,30,38',
',,,,253,,120,82,,93,98,,,9,13,18,25,31,39,43,248,,35,,46,51,,,,,,,,',
',,,,,,,,69,,,,,,,,,,,,,131,,,,,,,,,54,59,65,,121,,,,95,101,,,,20,,32',
'40,44,115,116,60,66,,,,,,127,129,130,5,11,17,24,,,,,53,58,64,70,75,84',
'85,89,94,100,,6,12,,26,30,38,,,,,253,,120,82,,93,98,,,9,13,18,25,31',
'39,43,248,,35,,46,51,,,,,,,,,,,,,,,,,69,,,,,,,,,,,,,131,,,,,,,,,54,59',
'65,,121,,,,95,101,,,,20,,32,40,44,115,116,60,66,,,,,,127,129,130,5,11',
'17,24,,,,,53,58,64,70,75,84,85,89,94,100,,6,12,,26,30,38,,,,,253,,120',
'82,,93,98,,,9,13,18,25,31,39,43,248,,35,,46,51,,,,,,,,,,,,,,,,,69,,',
',,,,,,,,,,131,,,,,,,,,54,59,65,,121,,,,95,101,,,,20,,32,40,44,115,116',
'60,66,,,,,,127,129,130,5,11,17,24,,,,,53,58,64,70,75,84,85,89,94,100',
',6,12,,26,30,38,,,,,253,,120,82,,93,98,,,9,13,18,25,31,39,43,248,,35',
',46,51,,,,,,,,,,,,,,,,,69,,,,,,,,,,,,,131,,,,,,,,,54,59,65,,121,,,,95',
'101,,,,20,,32,40,44,115,116,60,66,,,,,,127,129,130,5,11,17,24,,,,,53',
'58,64,70,75,84,85,89,94,100,,6,12,,26,30,38,,,,,253,,120,82,,93,98,',
',9,13,18,25,31,39,43,23,,35,,46,51,,,,,,,,,,,,,,,,,69,,,,,,,,,,,,,109',
',,,,,,,,54,59,65,,121,,,,95,101,,,,20,,32,40,44,50,55,60,66,,,,,,96',
'102,107,5,11,17,24,,,,,53,58,64,70,75,84,85,89,94,100,,6,12,,26,30,38',
',,,,253,,120,82,,93,98,,367,9,13,18,25,31,39,43,355,358,,,,,370,367',
'375,351,352,356,359,362,365,355,358,372,374,,,370,69,375,351,352,356',
'359,362,365,367,,372,374,,,,,355,358,,,,,370,,375,351,352,356,359,362',
'365,-227,-229,372,374,367,,,,,,,,355,358,,,,,370,,375,351,352,356,359',
'362,365,367,,372,374,,,718,,355,358,,,,,370,,375,351,352,356,359,362',
'365,,,372,374,,,,,,,,,,,,,,353,357,360,363,366,368,369,371,373,376,',
',354,,,353,357,360,363,366,368,369,371,373,376,,,354,,,,,,,,,,,353,357',
'360,363,366,368,369,371,373,376,,,354,,,,,,,,,,,,,,,353,357,360,363',
'366,368,369,371,373,376,,,354,,,,,,,,,,,353,357,360,363,366,368,369',
'371,373,376,367,,354,,,,,,355,358,,,,,370,,375,351,352,356,359,362,365',
'-227,-229,372,374,367,,,,,,,,355,358,,,,,370,367,375,351,352,356,359',
'362,365,355,358,372,374,,,370,367,375,351,352,356,359,362,365,355,358',
'372,374,,,370,367,375,351,352,356,359,362,365,355,358,372,374,,,370',
'367,375,351,352,356,359,362,365,355,358,372,374,,,370,,375,351,352,356',
'359,362,365,-227,-229,372,374,,,,,,,,,,,,,,,353,357,360,363,366,368',
'369,371,373,376,,,354,,,,,,,,,,,,,,,353,357,360,363,366,368,369,371',
'373,376,,,354,,,353,357,360,363,366,368,369,371,373,376,,,354,,,353',
'357,360,363,366,368,369,371,373,376,,,354,,,353,357,360,363,366,368',
'369,371,373,376,,,354,,,353,357,360,363,366,368,369,371,373,376,367',
',354,,,,,,355,358,,,,,370,367,375,351,352,356,359,362,365,355,358,372',
'374,,,370,367,375,351,352,356,359,362,365,355,358,372,374,,,370,367',
'375,351,352,356,359,362,365,355,358,372,374,,,370,367,375,351,352,356',
'359,362,365,355,358,372,374,,,370,367,375,351,352,356,359,362,365,355',
'358,372,374,,,370,367,375,351,352,356,359,362,365,355,358,372,374,,',
'370,,375,351,352,356,359,362,365,,,372,374,,,,,,,,,,,,353,357,360,363',
'366,368,369,371,373,376,,,354,,,353,357,360,363,366,368,369,371,373',
'376,,,354,,,353,357,360,363,366,368,369,371,373,376,,,354,,,353,357',
'360,363,366,368,369,371,373,376,,,354,,,353,357,360,363,366,368,369',
'371,373,376,,,354,,,353,357,360,363,366,368,369,371,373,376,,,354,,',
'353,357,360,363,366,368,369,371,373,376,367,,354,,,,,,355,358,,,,,370',
'367,375,351,352,356,359,362,365,355,358,372,374,,,370,367,375,351,352',
'356,359,362,365,355,358,372,374,,,370,367,375,351,352,356,359,362,365',
'355,358,-538,-538,,,370,367,375,351,352,356,359,362,365,355,358,372',
'374,,,370,367,375,351,352,356,359,362,365,355,358,-538,-538,,,370,367',
'375,351,352,356,359,362,365,355,358,372,374,,,370,,375,351,352,356,359',
'362,365,-227,-229,372,374,,,,,,,,,,,,353,357,360,363,366,368,369,371',
'373,376,,,354,,,353,357,360,363,366,368,369,371,373,376,,,354,,,353',
'357,360,363,366,368,369,371,373,376,,,354,,,353,357,360,363,366,368',
'369,371,373,376,,,354,,,353,357,360,363,366,368,369,371,373,376,,,354',
',,353,357,360,363,366,368,369,371,373,376,,,354,,,353,357,360,363,366',
'368,369,371,373,376,367,,354,,,,,,355,358,,,,,370,367,375,351,352,356',
'359,362,365,355,358,372,374,,,370,,375,351,352,356,359,362,365,367,',
'372,374,,,683,,355,358,,,,,370,,375,351,352,356,359,362,365,-227,-229',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,353',
'357,360,363,366,368,369,371,373,376,,,354,,,353,357,360,363,366,368',
'369,371,373,376,113,,354,,,,,,,,,,,353,357,360,363,366,368,369,371,373',
'376,,,354,,,,,,131,,,,,,,,,54,59,65,,121,,,,95,101,,,,20,,32,40,44,115',
'116,60,66,,,,,,127,129,130,5,11,17,24,,113,,,53,58,64,119,75,84,85,89',
'94,100,,6,12,,26,30,38,,,,,323,,120,82,,93,98,131,,9,13,18,25,31,39',
'43,54,59,65,,121,,,,95,101,,557,,20,,32,40,44,115,116,60,66,,,,,,127',
'129,130,5,11,17,24,,113,,,53,58,64,119,75,84,85,89,94,100,,6,12,,26',
'30,38,,,,,323,,120,82,,93,98,131,,9,13,18,25,31,39,43,54,59,65,,121',
',,,95,101,,402,,20,,32,40,44,115,116,60,66,,,,,,127,129,130,5,11,17',
'24,,113,,,53,58,64,119,75,84,85,89,94,100,,6,12,,26,30,38,,,,,323,,325',
'82,,93,98,131,,9,13,18,25,31,39,43,54,59,65,,121,,,,95,101,,,,20,,32',
'40,44,115,116,60,66,,,,,,127,129,130,5,11,17,24,,113,,,53,58,64,119',
'75,84,85,89,94,100,,6,12,,26,30,38,,,,,323,,325,82,,93,98,131,,9,13',
'18,25,31,39,43,54,59,65,,121,,,,95,101,,,,20,,32,40,44,115,116,60,66',
',,,,,127,129,130,5,11,17,24,,113,,,53,58,64,119,75,84,85,89,94,100,',
'6,12,,26,30,38,,,,,880,,120,82,,93,98,131,,9,13,18,25,31,39,43,54,59',
'65,,121,,,,95,101,,,,20,,32,40,44,115,116,60,66,,,,,,127,129,130,5,11',
'17,24,,113,,,53,58,64,119,75,84,85,89,94,100,,6,12,,26,30,38,,,,,323',
',325,82,,93,98,131,,9,13,18,25,31,39,43,54,59,65,,121,,,,95,101,,,,20',
',32,40,44,115,116,60,66,,,,,,127,129,130,5,11,17,24,,,,,53,58,64,119',
'122,84,85,89,128,100,113,6,12,,26,30,38,124,,,,118,,120,82,,93,98,,',
'9,13,18,25,31,39,43,,,,,131,,,,,,,,,54,59,65,,121,,,,95,101,,,,20,,32',
'40,44,115,116,60,66,,,,,,127,129,130,5,11,17,24,,113,,,53,58,64,119',
'122,84,85,89,128,100,,6,12,,26,30,38,,,,,118,,120,82,,93,98,131,,9,13',
'18,25,31,39,43,54,59,65,,121,,,,95,101,,,,20,,32,40,44,115,116,60,66',
',,,,,127,129,130,5,11,17,24,,113,,,53,58,64,119,75,84,85,89,94,100,',
'6,12,,26,30,38,,,,,323,,325,82,,93,98,131,,9,13,18,25,31,39,43,54,59',
'65,,121,,,,95,101,,,,20,,32,40,44,115,116,60,66,,,,,,127,129,130,5,11',
'17,24,,,113,,53,58,64,119,75,84,85,89,94,100,,6,12,,26,30,38,,,,,398',
',78,82,,93,98,105,131,9,13,18,25,31,39,43,,54,59,65,,121,,,,95,101,',
',,20,,32,40,44,115,116,60,66,,,,,,127,129,130,5,11,17,24,,113,,,53,58',
'64,119,75,84,85,89,94,100,,6,12,,26,30,38,,,,,323,,325,82,,93,98,131',
',9,13,18,25,31,39,43,54,59,65,,121,,,,95,101,,,,20,,32,40,44,115,116',
'60,66,,,,,,127,129,130,5,11,17,24,,113,,,53,58,64,119,75,84,85,89,94',
'100,,6,12,,26,30,38,,,,,873,,120,82,,93,98,131,,9,13,18,25,31,39,43',
'54,59,65,,121,,,,95,101,,,,20,,32,40,44,115,116,60,66,,,,,,127,129,130',
'5,11,17,24,,,,,53,58,64,119,75,84,85,89,94,100,,6,12,,26,30,38,,,,,323',
',325,82,,93,98,327,,9,13,18,25,31,39,43' ]
        racc_action_table = arr = Array.new(22769, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'532,80,765,416,416,532,349,349,126,503,479,149,389,532,532,290,807,291',
'390,532,350,532,532,532,532,532,532,532,532,532,532,532,489,489,532',
'397,532,623,532,532,532,532,532,532,764,264,1,268,744,744,690,532,532',
'532,84,684,252,532,532,84,532,629,629,149,266,109,765,84,84,532,109',
'694,264,84,268,84,84,84,84,84,84,84,84,84,84,84,254,890,84,696,855,266',
'84,84,84,84,84,84,84,397,350,623,350,479,532,84,84,84,764,807,84,84',
'84,503,84,416,389,416,318,290,349,291,390,84,84,84,84,532,532,532,532',
'532,532,532,532,532,532,532,532,532,532,532,532,690,126,532,489,582',
'532,252,532,80,532,80,855,582,582,126,84,126,84,582,744,582,582,582',
'582,582,582,582,315,582,582,582,726,629,83,756,84,254,48,890,84,890',
'84,84,84,84,84,84,84,84,84,84,84,84,84,932,500,84,84,929,84,84,84,534',
'84,639,680,639,534,301,318,10,318,689,118,148,534,534,118,933,500,500',
'534,399,534,534,534,534,534,534,534,534,534,534,534,301,48,534,10,534',
'148,534,534,534,534,534,534,341,766,749,500,756,749,542,534,534,534',
'377,338,377,534,534,148,534,701,726,328,83,726,756,83,756,942,582,582',
'582,582,582,582,582,582,582,582,260,800,582,582,399,707,932,929,932',
'582,929,702,929,315,315,315,315,315,315,315,315,315,315,689,534,315',
'583,260,707,393,933,393,933,393,393,62,791,540,791,791,791,791,791,679',
'341,766,341,766,534,534,534,534,534,534,534,534,534,534,534,534,534',
'534,534,542,393,534,542,383,534,338,534,338,534,393,393,393,328,393',
'387,328,791,393,393,942,674,942,393,383,393,393,393,393,393,393,393',
'800,709,800,387,711,393,393,393,393,393,393,393,739,712,761,762,393',
'393,393,393,393,393,393,393,393,393,393,393,393,112,393,393,393,62,713',
'540,62,393,540,393,393,714,393,393,393,393,393,393,393,393,393,393,393',
'92,321,92,586,92,92,583,583,583,583,583,583,583,583,583,583,757,381',
'583,417,739,417,393,739,251,761,762,321,321,413,245,393,245,715,112',
'92,757,381,716,739,761,762,49,739,92,92,92,132,92,668,251,251,92,92',
'112,413,413,92,661,92,92,92,92,92,92,92,688,128,49,49,132,92,92,92,92',
'92,92,92,660,99,262,99,92,92,92,92,92,92,92,92,92,92,657,92,92,631,92',
'92,92,263,724,278,128,92,655,92,92,262,92,92,278,278,92,92,92,92,92',
'92,92,405,872,405,595,405,405,128,263,842,128,128,631,586,586,586,586',
'586,586,586,586,586,586,92,273,586,727,128,872,872,92,491,92,491,653',
'631,405,729,631,631,652,47,265,47,842,405,405,405,651,405,273,273,272',
'405,405,631,647,895,405,895,405,405,405,405,405,405,405,842,735,265',
'842,842,405,405,405,405,405,405,405,272,646,269,737,405,405,405,405',
'405,405,405,405,405,405,645,405,405,122,405,405,405,640,879,636,735',
'405,742,405,405,269,405,405,46,46,405,405,405,405,405,405,405,466,909',
'466,720,466,466,735,879,879,735,735,122,595,595,595,595,595,595,595',
'595,595,595,405,874,595,635,735,909,909,553,632,405,79,79,122,466,745',
'122,122,733,733,322,747,114,466,466,466,466,466,874,874,627,466,466',
'122,553,553,466,750,466,466,466,466,466,466,466,738,322,322,114,114',
'466,466,466,466,466,466,466,466,751,267,466,466,466,466,466,466,466',
'466,466,466,466,619,466,466,606,466,466,466,633,113,113,930,466,754',
'466,466,267,466,466,466,605,466,466,466,466,466,466,466,308,573,308',
'758,308,308,633,633,738,930,930,738,720,720,720,720,720,720,720,720',
'720,720,466,633,720,256,930,738,759,466,598,738,940,940,572,308,319',
'319,598,598,29,571,396,763,308,308,308,308,308,256,256,556,308,308,256',
'555,547,308,767,308,308,308,308,308,308,308,29,29,396,396,544,308,308',
'308,308,308,308,308,308,771,539,308,308,308,308,308,308,308,308,308',
'308,308,526,308,308,258,308,308,308,258,780,517,871,308,736,308,308',
'485,308,308,308,789,308,308,308,308,308,308,308,258,258,511,481,511',
'511,511,511,511,871,871,736,736,494,468,494,494,462,494,442,441,511',
'308,803,494,494,511,511,736,308,494,440,494,494,494,494,494,494,494',
'598,598,598,598,598,598,598,598,598,598,511,326,598,436,437,511,437',
'437,437,437,437,603,428,426,421,511,415,401,813,603,603,493,400,493',
'493,818,493,326,326,398,388,225,493,493,239,385,380,379,493,721,493',
'493,493,493,493,493,493,281,437,378,494,494,364,361,494,225,225,225',
'239,239,239,471,345,343,494,494,841,342,843,471,471,281,281,281,494',
'471,845,471,471,471,471,471,471,471,339,242,471,471,324,323,471,242',
'242,242,242,494,494,494,494,494,494,494,494,494,494,494,494,493,493',
'494,304,493,303,477,859,477,477,302,477,861,681,493,493,862,477,477',
'681,681,681,681,477,493,477,477,477,477,477,477,477,603,603,603,603',
'603,603,603,603,603,603,863,289,603,493,493,493,493,493,493,493,493',
'493,493,493,493,865,286,493,721,721,721,721,721,721,721,721,721,721',
'453,453,721,453,867,285,283,282,873,453,453,471,471,471,471,471,471',
'471,471,471,471,471,477,477,471,253,477,875,659,250,659,659,659,659',
'659,877,477,477,247,787,880,787,787,787,787,787,477,659,459,882,883',
'885,659,71,459,459,459,459,787,71,71,71,71,886,787,887,244,477,477,477',
'477,477,477,477,477,477,477,477,477,243,34,477,34,34,156,34,787,152',
'896,151,903,34,34,150,905,140,131,34,130,34,34,34,34,34,34,34,860,129',
'860,860,860,860,119,81,70,34,34,34,649,68,649,649,649,649,34,34,34,34',
'34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,67,926,927',
'34,34,34,34,34,34,34,34,52,43,931,34,34,34,34,34,34,34,34,34,34,911',
'42,911,911,39,911,934,935,34,34,936,911,911,937,938,939,33,911,34,911',
'911,911,911,911,911,911,22,4,949,,,,154,,154,154,154,154,154,34,34,34',
'34,34,34,34,34,34,34,34,34,154,,34,,,154,906,,906,906,,906,,,,,,906',
'906,,,,,906,,906,906,906,906,906,906,906,,,,911,911,,,911,,443,,443',
'443,443,443,443,,911,911,9,,9,9,9,9,9,,911,443,,,,,443,,,,,9,,,,,9,9',
',,,911,911,911,911,911,911,911,911,911,911,911,911,906,906,911,,906',
',9,,,,,9,,,906,906,,,9,,,579,,107,906,107,,107,107,579,579,,,,,579,',
'579,579,579,579,579,579,579,,906,906,906,906,906,906,906,906,906,906',
'906,906,,107,906,864,,864,864,864,864,864,107,107,107,,107,,,,107,107',
',,864,107,,107,107,107,107,107,107,107,,,,,,107,107,107,107,107,107',
'107,,,,,107,107,107,107,107,107,107,107,107,107,107,107,107,,107,107',
'107,,,,,107,,107,107,,107,107,107,107,107,107,107,107,107,107,107,41',
',41,,41,41,,579,579,579,579,579,579,579,579,579,579,,,579,,,107,,,,107',
',904,,904,904,904,904,904,41,790,,790,790,790,790,790,,41,41,41,904',
'41,,,,41,41,,790,,41,,41,41,41,41,41,41,41,,41,,,,41,41,41,41,41,41',
'41,,,,,41,41,41,41,41,41,41,41,41,41,41,41,41,,41,41,41,,,,,41,,41,41',
',41,41,41,41,41,41,41,41,41,41,41,102,,102,,102,102,41,,823,,823,823',
'823,823,823,866,,866,866,866,866,866,41,,,,41,823,,,,,,823,866,102,',
'656,,656,656,656,656,656,102,102,102,,102,,,,102,102,,823,656,102,,102',
'102,102,102,102,102,102,,,,,,102,102,102,102,102,102,102,,,,,102,102',
'102,102,102,102,102,102,102,102,102,102,102,,102,102,102,,,,,102,,102',
'102,,102,102,102,102,102,102,102,102,102,102,102,,,,,,,,,908,,908,908',
',908,,,,,,908,908,,102,,,908,102,908,908,908,908,908,908,908,,,444,',
'444,444,444,444,444,,918,,918,918,918,918,918,,,,692,444,692,692,692',
'692,692,444,,918,,552,,552,552,918,552,,,692,,,552,552,692,692,,,552',
'444,552,552,552,552,552,552,552,918,,,908,908,,,908,,,692,,,,,692,,908',
'908,,,,692,,,,,908,255,255,255,255,255,255,255,255,255,255,,,255,,,',
',,,,908,908,908,908,908,908,908,908,908,908,908,908,552,552,908,,552',
',313,,313,313,,313,,,552,552,,313,313,,,,,313,552,313,313,313,313,313',
'313,313,274,274,274,274,274,274,274,274,274,274,,,274,552,552,552,552',
'552,552,552,552,552,552,552,552,,,552,,,,311,,311,311,,311,,,,,,311',
'311,,,,,311,,311,311,311,311,311,311,311,,,,313,313,,,313,,,,,,,,,,313',
'313,271,,271,271,271,271,271,,313,,,,,,,,,,,271,,,,,271,271,,,,313,313',
'313,313,313,313,313,313,313,313,313,313,311,311,313,,311,,271,,,,,271',
',,311,311,,,271,,,580,,94,311,94,,94,94,580,580,,,,,580,,580,580,580',
'580,580,580,580,,311,311,311,311,311,311,311,311,311,311,311,311,,94',
'311,,,,,,,,94,94,94,,94,,,,94,94,,,,94,,94,94,94,94,94,94,94,,,,,,94',
'94,94,94,94,94,94,,,,,94,94,94,94,94,94,94,94,94,94,94,94,94,,94,94',
'94,,,,,94,,94,94,,94,94,94,94,94,94,94,94,94,94,94,332,,332,,332,332',
'94,580,580,580,580,580,580,580,580,580,580,,,580,,,94,,,,94,,,,,,,,',
'332,,,,,,,,,332,332,332,,332,,,,332,332,,,,332,,332,332,332,332,332',
'332,332,,,,,,332,332,332,332,332,332,332,,,,,332,332,332,332,332,332',
'332,332,332,332,,332,332,,332,332,332,,,,,332,,332,332,,332,332,,,332',
'332,332,332,332,332,332,,,,,,,,,550,,550,550,,550,,,,,,550,550,,332',
',,550,332,550,550,550,550,550,550,550,,,,,,,,,,,,,,,,,821,,821,821,821',
'821,821,,,,,,,,,409,,409,409,821,409,,,,821,821,409,409,,,,,409,,409',
'409,409,409,409,409,409,,,,550,550,,821,550,,,,821,,,,,,550,550,143',
',143,143,143,143,143,,550,,,,,,,,,,,143,,,,,143,143,,,,550,550,550,550',
'550,550,550,550,550,550,550,550,409,409,550,,409,,143,,,,,143,,,409',
'409,774,,774,774,774,774,774,449,409,449,,449,449,,,,,,,774,,,,,,774',
',,,409,409,409,409,409,409,409,409,409,409,409,409,,449,409,,,,774,',
',,449,449,449,,449,,,,449,449,,,,449,,449,449,449,449,449,449,449,,',
',,,449,449,449,449,449,449,449,,,,,449,449,449,449,449,449,449,449,449',
'449,449,449,449,,449,449,449,,,,,449,,449,449,,449,449,449,449,449,449',
'449,449,449,449,449,,,,,,,,,475,,475,475,,475,,,,,,475,475,,449,,,475',
'449,475,475,475,475,475,475,475,,,,,,,,,,,,,,,,,785,,785,785,785,785',
'785,,,,,,,,,411,,411,411,785,411,,,,785,785,411,411,,,,,411,,411,411',
'411,411,411,411,411,,,,475,475,,785,475,,,,785,,,838,,,475,475,,,,838',
'838,,,,475,838,,838,838,838,838,838,838,838,,,838,838,,,,,,,,475,475',
'475,475,475,475,475,475,475,475,475,475,411,411,475,,411,,622,,622,622',
',622,,,411,411,,622,622,,,,,622,411,622,622,622,622,622,622,622,,,,',
',,,,,,,,,411,411,411,411,411,411,411,411,411,411,411,411,,,411,,,,,',
',,,,,,,,,,,,,,,,,838,838,838,838,838,838,838,838,838,838,622,622,838',
',622,,,,,,,,,,622,622,,,,,,584,,541,622,541,,541,541,584,584,,,,,584',
',584,584,584,584,584,584,584,,622,622,622,622,622,622,622,622,622,622',
'622,622,,541,622,,,,,,,,541,541,541,,541,,,,541,541,,,,541,,541,541',
'541,541,541,541,541,,,,,,541,541,541,541,541,541,541,,,,,541,541,541',
'541,541,541,541,541,541,541,541,541,541,,541,541,541,,,,,541,,541,541',
',541,541,541,541,541,541,541,541,541,541,541,536,,536,,536,536,,584',
'584,584,584,584,584,584,584,584,584,,,584,,,541,,,,541,,,,,,,,,536,',
',,,,,,,536,536,536,,536,,,,536,536,,,,536,,536,536,536,536,536,536,536',
',,,,,536,536,536,536,536,536,536,,,,,536,536,536,536,536,536,536,536',
'536,536,536,536,536,,536,536,536,,,,,536,,536,536,,536,536,536,536,536',
'536,536,536,536,536,536,686,,686,,686,686,,,944,,944,944,944,944,944',
',,,,,,,536,,,,536,944,,,,,,944,686,686,,,,,,,,,686,686,686,,686,,,,686',
'686,,944,,686,,686,686,686,686,686,686,686,,,,,,686,686,686,686,686',
'686,686,,,,,686,686,686,686,686,686,686,686,686,686,686,686,686,,686',
'686,686,,,,,686,,686,686,,686,686,686,686,686,686,686,686,686,686,686',
',,,,,,,,686,,,,620,,620,620,,620,,,,,686,620,620,,686,,,620,,620,620',
'620,620,620,620,620,819,,819,819,819,819,819,913,,913,913,913,913,913',
',,,,,819,,,,,819,819,913,,,,,913,913,,,,,,,,,,,,,,,819,,,,,819,,913',
',,,,913,620,620,,,620,,,,,,,,,,620,620,,,,,,587,,533,620,533,,533,533',
'587,587,,,,,587,,587,587,587,587,587,587,587,,620,620,620,620,620,620',
'620,620,620,620,620,620,,533,620,,,,,,,,533,533,533,,533,,,,533,533',
',,,533,,533,533,533,533,533,533,533,,,,,,533,533,533,533,533,533,533',
',,,,533,533,533,533,533,533,533,533,533,533,533,533,533,,533,533,533',
',,,,533,,533,533,,533,533,533,533,533,533,533,533,533,533,533,687,,687',
',687,687,,587,587,587,587,587,587,587,587,587,587,,,587,,,533,,,,533',
',,,,,,,687,687,,,,,,,,,687,687,687,,687,,,,687,687,,,,687,,687,687,687',
'687,687,687,687,,,,,,687,687,687,687,687,687,687,,,,,687,687,687,687',
'687,687,687,687,687,687,687,687,687,,687,687,687,,,,,687,,687,687,,687',
'687,687,687,687,687,687,687,687,687,687,451,,451,,451,451,,,687,915',
',915,915,915,915,915,,,,,,,687,,,,687,,915,,,,,,915,451,,,,,,,,,451',
'451,451,,451,,,,451,451,,,915,451,,451,451,451,451,451,451,451,,,,,',
'451,451,451,451,451,451,451,,,,,451,451,451,451,451,451,451,451,451',
'451,451,451,451,,451,451,451,,,,,451,,451,451,,451,451,451,451,451,451',
'451,451,451,451,451,75,,75,,75,75,,,776,,776,776,776,776,776,,,,,,,',
'451,,,,451,776,,,,,,776,,75,,,,,,,,,75,75,75,,75,,,,75,75,,776,,75,',
'75,75,75,75,75,75,75,,,,,,75,75,75,75,75,75,75,,,,,75,75,75,75,75,75',
'75,75,75,75,75,75,75,,75,75,75,,,,,75,,75,75,,75,75,75,75,75,75,75,75',
'75,75,75,535,,535,,535,535,75,,900,,900,900,900,900,900,,,,,,,,75,,',
',75,900,,,,,,900,,535,,,,,,,,,535,535,535,,535,,,,535,535,,900,,535',
',535,535,535,535,535,535,535,,,,,,535,535,535,535,535,535,535,,,,,535',
'535,535,535,535,535,535,535,535,535,535,535,535,,535,535,535,,,,,535',
',535,535,,535,535,535,535,535,535,535,535,535,535,535,344,344,,344,',
'344,344,,,,,,,,,,,,,,,,535,,,,535,,,,,,,,,,344,,,,,,,,,344,344,344,344',
'344,,,,344,344,,,,344,,344,344,344,344,344,344,344,,,,,,344,344,344',
'344,344,344,344,344,,,344,344,344,344,344,344,344,344,344,344,344,,344',
'344,,344,344,344,,,,,344,,344,344,,344,344,344,,344,344,344,344,344',
'344,344,617,617,,617,,617,617,,,,,,,,,,,,,,,,344,,,,,,,,,,,,,,617,,',
',,,,,,617,617,617,617,617,,,,617,617,,,,617,,617,617,617,617,617,617',
'617,,,,,,617,617,617,617,617,617,617,617,,,617,617,617,617,617,617,617',
'617,617,617,617,,617,617,,617,617,617,,,,,617,,617,617,,617,617,617',
',617,617,617,617,617,617,617,,,,,73,,73,73,,73,,,,,,73,73,,,,,73,617',
'73,73,73,73,73,73,73,,,,,,,,,,73,73,73,,,,,,,73,73,73,73,73,73,73,73',
'73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,,,,73,73,73,73,73,73',
'73,73,,,,73,73,73,73,73,73,,,73,,,,,,,,,,73,73,423,,423,423,423,423',
'423,,73,616,616,73,616,,616,616,,,,423,,,,,423,423,,,,73,73,73,73,73',
'73,73,73,73,73,73,73,,,,,616,,423,,,,,423,,616,616,616,616,616,,,,616',
'616,,,,616,,616,616,616,616,616,616,616,,,,,,616,616,616,616,616,616',
'616,616,,,616,616,616,616,616,616,616,616,616,616,616,,616,616,,616',
'616,616,,,,,616,,616,616,,616,616,616,,616,616,616,616,616,616,616,869',
'869,,869,,869,869,,,,,,,,,,,,,,,,616,,,,,,,,,,,,,,869,,,,,,,,,869,869',
'869,869,869,,,,869,869,,,,869,,869,869,869,869,869,869,869,,,,,,869',
'869,869,869,869,869,869,869,,,869,869,869,869,869,869,869,869,869,869',
'869,,869,869,,869,869,869,,,,,869,,869,869,,869,869,869,,869,869,869',
'869,869,869,869,921,921,,921,,921,921,,,,,,,,,,,,,,,,869,,,,,,,,,,,',
',,921,,,,,,,,,921,921,921,921,921,,,,921,921,,,,921,,921,921,921,921',
'921,921,921,,,,,,921,921,921,921,921,921,921,921,,,921,921,921,921,921',
'921,921,921,921,921,921,,921,921,,921,921,921,,,,,921,,921,921,,921',
'921,921,,921,921,921,921,921,921,921,516,516,,516,,516,516,,,,,,,,,',
',,,,,,921,,,,,,,,,,,,,,516,,,,,,,,,516,516,516,516,516,,,,516,516,,',
',516,,516,516,516,516,516,516,516,,,,,,516,516,516,516,516,516,516,516',
',,516,516,516,516,516,516,516,516,516,516,516,,516,516,,516,516,516',
',,,,516,,516,516,,516,516,516,,516,516,516,516,516,516,516,546,546,',
'546,,546,546,,,,,,,,,,,,,,,,516,,,,,,,,,,,,,,546,,,,,,,,,546,546,546',
'546,546,,,,546,546,,,,546,,546,546,546,546,546,546,546,,,,,,546,546',
'546,546,546,546,546,546,,,546,546,546,546,546,546,546,546,546,546,546',
',546,546,,546,546,546,,,,,546,,546,546,,546,546,546,,546,546,546,546',
'546,546,546,514,514,,514,,514,514,,,,,,,,,,,,,,,,546,,,,,,,,,,,,,,514',
',,,,,,,,514,514,514,514,514,,,,514,514,,,,514,,514,514,514,514,514,514',
'514,,,,,,514,514,514,514,514,514,514,514,,,514,514,514,514,514,514,514',
'514,514,514,514,,514,514,,514,514,514,,,,,514,,514,514,,514,514,514',
',514,514,514,514,514,514,514,856,856,,856,,856,856,,,,,,,,,,,,,,,,514',
',,,,,,,,,,,,,856,,,,,,,,,856,856,856,856,856,,,,856,856,,,,856,,856',
'856,856,856,856,856,856,,,,,,856,856,856,856,856,856,856,856,,,856,856',
'856,856,856,856,856,856,856,856,856,,856,856,,856,856,856,,,,,856,,856',
'856,,856,856,856,,856,856,856,856,856,856,856,,,,,498,,498,498,,498',
',,,,,498,498,,,,,498,856,498,498,498,498,498,498,498,,,,,,,,,,498,498',
'498,,,,,,,498,498,498,498,498,498,498,498,498,498,498,498,498,498,498',
'498,498,498,498,498,498,498,498,498,,,,498,498,498,498,498,498,498,498',
',,,498,498,498,498,498,498,,,498,,,,,,,,,,498,498,490,,490,490,490,490',
'490,,498,637,637,498,637,,637,637,,,,490,,,,,490,490,,,,498,498,498',
'498,498,498,498,498,498,498,498,498,,,,,637,,490,,,,,490,,637,637,637',
'637,637,,,,637,637,,,,637,,637,637,637,637,637,637,637,,,,,,637,637',
'637,637,637,637,637,637,,,637,637,637,637,637,637,637,637,637,637,637',
',637,637,,637,637,637,,,,,637,,637,637,,637,637,637,,637,637,637,637',
'637,637,637,316,316,,316,,316,316,,,,,,,,,,,,,,,,637,,,,,,,,,,,,,,316',
',,,,,,,,316,316,316,316,316,,,,316,316,,,,316,,316,316,316,316,316,316',
'316,,,,,,316,316,316,316,316,316,316,316,,,316,316,316,316,316,316,316',
'316,316,316,316,,316,316,,316,316,316,,,,,316,,316,316,,316,316,316',
',316,316,316,316,316,316,316,566,566,,566,,566,566,,,,,,,,,,,,,,,,316',
',,,,,,,,,,,,,566,,,,,,,,,566,566,566,566,566,,,,566,566,,,,566,,566',
'566,566,566,566,566,566,,,,,,566,566,566,566,566,566,566,566,,,566,566',
'566,566,566,566,566,566,566,566,566,,566,566,,566,566,566,,,,,566,,566',
'566,,566,566,566,,566,566,566,566,566,566,566,,,,,567,,567,567,,567',
',,,,,567,567,,,,,567,566,567,567,567,567,567,567,567,,,,,,,,,,567,567',
'567,,,,,,,567,567,567,567,567,567,567,567,567,567,567,567,567,567,567',
'567,567,567,567,567,567,567,567,567,,,,567,567,567,567,567,567,567,567',
',,,567,567,567,567,567,567,,,567,,,,,,,,,,567,567,433,,433,433,433,433',
'433,,567,78,78,567,78,,78,78,,,,433,,,,,433,433,,,,567,567,567,567,567',
'567,567,567,567,567,567,567,,,,,78,,433,,,,,433,,78,78,78,78,78,,,,78',
'78,,,,78,,78,78,78,78,78,78,78,,,,,,78,78,78,78,78,78,78,78,,,78,78',
'78,78,78,78,78,78,78,78,78,,78,78,,78,78,78,,,,,78,,78,78,,78,78,78',
',78,78,78,78,78,78,78,257,257,,257,,257,257,,,,,,,,,,,,,,,,78,,,,,,',
',,,,,,,257,,,,,,,,,257,257,257,257,257,,,,257,257,,,,257,,257,257,257',
'257,257,257,257,,,,,,257,257,257,257,257,257,257,257,,,257,257,257,257',
'257,257,257,257,257,257,257,,257,257,,257,257,257,,,,,257,,257,257,',
'257,257,257,,257,257,257,257,257,257,257,570,570,,570,,570,570,,,,,',
',,,,,,,,,,257,,,,,,,,,,,,,,570,,,,,,,,,570,570,570,570,570,,,,570,570',
',,,570,,570,570,570,570,570,570,570,,,,,,570,570,570,570,570,570,570',
'570,,,570,570,570,570,570,570,570,570,570,570,570,,570,570,,570,570',
'570,,,,,570,,570,570,,570,570,570,,570,570,570,570,570,570,570,492,492',
',492,,492,492,,,,,,,,,,,,,,,,570,,,,,,,,,,,,,,492,,,,,,,,,492,492,492',
'492,492,,,,492,492,,,,492,,492,492,492,492,492,492,492,,,,,,492,492',
'492,492,492,492,492,492,,,492,492,492,492,492,492,492,492,492,492,492',
',492,492,,492,492,492,,,,,492,,492,492,,492,492,492,,492,492,492,492',
'492,492,492,419,419,,419,,419,419,,,,,,,,,,,,,,,,492,,,,,,,,,,,,,,419',
',,,,,,,,419,419,419,419,419,,,,419,419,,,,419,,419,419,419,419,419,419',
'419,,,,,,419,419,419,419,419,419,419,419,,,419,419,419,419,419,419,419',
'419,419,419,419,,419,419,,419,419,419,,,,,419,,419,419,,419,419,419',
',419,419,419,419,419,419,419,810,810,,810,,810,810,,,,,,,,,,,,,,,,419',
',,,,,,,,,,,,,810,,,,,,,,,810,810,810,810,810,,,,810,810,,,,810,,810',
'810,810,810,810,810,810,,,,,,810,810,810,810,810,810,810,810,,,810,810',
'810,810,810,810,810,810,810,810,810,,810,810,,810,810,810,,,,,810,,810',
'810,,810,810,810,,810,810,810,810,810,810,810,578,578,,578,,578,578',
',,,,,,,,,,,,,,,810,,,,,,,,,,,,,,578,,,,,,,,,578,578,578,578,578,,,,578',
'578,,,,578,,578,578,578,578,578,578,578,,,,,,578,578,578,578,578,578',
'578,578,,,578,578,578,578,578,578,578,578,578,578,578,,578,578,,578',
'578,578,,,,,578,,578,578,,578,578,578,,578,578,578,578,578,578,578,',
',,,36,,36,36,,36,,,,,,36,36,,,,,36,578,36,36,36,36,36,36,36,,,,,,,,',
',36,36,36,,,,,,,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36',
'36,36,36,36,36,36,,,,36,36,36,36,36,36,36,36,,,,36,36,36,36,36,36,36',
',36,,,,,,,,,,36,36,,158,,158,158,,158,,36,,,36,158,158,,,,,158,,158',
'158,158,158,158,158,158,,,36,36,36,36,36,36,36,36,36,36,36,36,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,158,158,,,158,,,,,,,,,,158,158',
',,,,,,,,158,,,,,,,,,,,,,,,,,,,,,158,158,158,158,158,158,158,158,158',
'158,158,158,486,,486,486,,486,,,,,,486,486,,,,,486,,486,486,486,486',
'486,486,486,,,,,,,,,,486,486,486,,,,,,,486,486,486,486,486,486,486,486',
'486,486,486,486,486,486,486,486,486,486,486,486,486,486,486,486,,,,486',
'486,486,486,486,486,486,486,,,,486,486,486,486,486,486,,,486,,,,,,,',
',,486,486,,,,,,590,120,120,486,120,,120,120,590,590,,,,,590,,590,590',
'590,590,590,590,590,,486,486,486,486,486,486,486,486,486,486,486,486',
',120,,,,,,,,,120,120,120,120,120,,,,120,120,,,,120,,120,120,120,120',
'120,120,120,,,,,,120,120,120,120,120,120,120,120,,,120,120,120,120,120',
'120,120,120,120,120,120,,120,120,,120,120,120,,,,,120,,120,120,,120',
'120,120,,120,120,120,120,120,120,120,429,429,,429,,429,429,590,590,590',
'590,590,590,590,590,590,590,,,590,,,120,,,,,,,,,,,,,,429,,,,,,,,,429',
'429,429,429,429,,,,429,429,,,,429,,429,429,429,429,429,429,429,,,,,',
'429,429,429,429,429,429,429,429,,,429,429,429,429,429,429,429,429,429',
'429,429,,429,429,,429,429,429,,,,,429,,429,429,,429,429,429,,429,429',
'429,429,429,429,429,,,,,157,,157,157,,157,,,,,,157,157,,,,,157,429,157',
'157,157,157,157,157,157,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,157,157,,,157,,,,,,,,,,157,157,,,,,,593,675,675,157',
'675,,675,675,593,593,,,,,593,,593,593,593,593,593,593,593,,157,157,157',
'157,157,157,157,157,157,157,157,157,,675,,,,,,,,,675,675,675,675,675',
',,,675,675,,,,675,,675,675,675,675,675,675,675,,,,,,675,675,675,675',
'675,675,675,675,,,675,675,675,675,675,675,675,675,675,675,675,,675,675',
',675,675,675,,,,,675,,675,675,,675,675,675,,675,675,675,675,675,675',
'675,430,430,,430,,430,430,593,593,593,593,593,593,593,593,593,593,,',
'593,,,675,,,,,,,,,,,,,,430,,,,,,,,,430,430,430,430,430,,,,430,430,,',
',430,,430,430,430,430,430,430,430,,,,,,430,430,430,430,430,430,430,430',
',,430,430,430,430,430,430,430,430,430,430,430,,430,430,,430,430,430',
',,,,430,,430,430,,430,430,430,,430,430,430,430,430,430,430,851,851,',
'851,,851,851,,,,,,,,,,,,,,,,430,,,,,,,,,,,,,,851,,,,,,,,,851,851,851',
'851,851,,,,851,851,,,,851,,851,851,851,851,851,851,851,,,,,,851,851',
'851,851,851,851,851,851,,,851,851,851,851,851,851,851,851,851,851,851',
',851,851,,851,851,851,,,,,851,,851,851,,851,851,851,,851,851,851,851',
'851,851,851,700,700,,700,,700,700,,,,,,,,,,,,,,,,851,,,,,,,,,,,,,,700',
',,,,,,,,700,700,700,700,700,,,,700,700,,,,700,,700,700,700,700,700,700',
'700,,,,,,700,700,700,700,700,700,700,700,,,700,700,700,700,700,700,700',
'700,700,700,700,,700,700,,700,700,700,,,,,700,,700,700,,700,700,700',
',700,700,700,700,700,700,700,325,325,,325,,325,325,,,,,,,,,,,,,,,,700',
',,,,,,,,,,,,,325,,,,,,,,,325,325,325,325,325,,,,325,325,,,,325,,325',
'325,325,325,325,325,325,,,,,,325,325,325,325,325,325,325,325,,,325,325',
'325,325,325,325,325,325,325,325,325,,325,325,,325,325,325,,,,,325,,325',
'325,,325,325,325,,325,325,325,325,325,325,325,798,798,,798,,798,798',
',,,,,,,,,,,,,,,325,,,,,,,,,,,,,,798,,,,,,,,,798,798,798,798,798,,,,798',
'798,,,,798,,798,798,798,798,798,798,798,,,,,,798,798,798,798,798,798',
'798,798,,,798,798,798,798,798,798,798,798,798,798,798,,798,798,,798',
'798,798,,,,,798,,798,798,,798,798,798,,798,798,798,798,798,798,798,21',
'21,,21,,21,21,,,,,,,,,,,,,,,,798,,,,,,,,,,,,,,21,,,,,,,,,21,21,21,21',
'21,,,,21,21,,,,21,,21,21,21,21,21,21,21,,,,,,21,21,21,21,21,21,21,21',
',,21,21,21,21,21,21,21,21,21,21,21,,21,21,,21,21,21,,,,,21,,21,21,,21',
'21,21,,21,21,21,21,21,21,21,,,,,13,,13,13,,13,,,,,,13,13,,,,,13,21,13',
'13,13,13,13,13,13,,,,,,,,,,13,13,13,,,,,,,13,13,13,13,13,13,13,13,13',
'13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,,,,13,13,13,13,13,13,13',
'13,,,,13,13,13,13,13,13,13,13,13,13,,,,,,,,,13,13,,,,,,752,3,3,13,3',
',3,3,752,752,,,,,752,,752,752,752,752,752,752,752,752,13,13,13,13,13',
'13,13,13,13,13,13,13,,3,,,,,,,,,3,3,3,3,3,,,,3,3,,,,3,,3,3,3,3,3,3,3',
',,,,,3,3,3,3,3,3,3,3,,,3,3,3,3,3,3,3,3,3,3,3,,3,3,,3,3,3,,,,,3,,3,3',
',3,3,3,,3,3,3,3,3,3,3,452,452,,452,,452,452,752,752,752,752,752,752',
'752,752,752,752,,,752,,,3,,,,,,,,,,,,,,452,,,,,,,,,452,452,452,452,452',
',,,452,452,,,,452,,452,452,452,452,452,452,452,,,,,,452,452,452,452',
'452,452,452,452,,,452,452,452,452,452,452,452,452,452,452,452,,452,452',
',452,452,452,,,,,452,,452,452,,452,452,452,,452,452,452,452,452,452',
'452,508,,508,,508,508,,,,,,,,,,,,,,,,,452,,,,,,,,,,,,,508,,,,,,,,,508',
'508,508,,508,,,,508,508,,,,508,,508,508,508,508,508,508,508,,,,,,508',
'508,508,508,508,508,508,,,,,508,508,508,508,508,508,508,508,508,508',
'508,508,508,,508,508,508,,,,,508,,508,508,,508,508,,508,508,508,508',
'508,508,508,508,804,,804,,804,804,,,,,,,,,,,,,,,,,508,,,,,,,,,,,,,804',
',,,,,,,,804,804,804,,804,,,,804,804,,,,804,,804,804,804,804,804,804',
'804,,,,,,804,804,804,804,804,804,804,,,,,804,804,804,804,804,804,804',
'804,804,804,,804,804,,804,804,804,,,,,804,,804,804,,804,804,,,804,804',
'804,804,804,804,804,464,,464,,464,464,,,,,,,,,,,,,,,,,804,,,,,,,,,,',
',,464,,,,,,,,,464,464,464,,464,,,,464,464,,,,464,,464,464,464,464,464',
'464,464,,,,,,464,464,464,464,464,464,464,,,,,464,464,464,464,464,464',
'464,464,464,464,,464,464,,464,464,464,,,,,464,,464,464,,464,464,464',
',464,464,464,464,464,464,464,589,,589,,589,589,,,,,,,,,,,,,,,,,464,',
',,,,,,,,,,,589,,,,,,,,,589,589,589,,589,,,,589,589,,,,589,,589,589,589',
'589,589,589,589,,,,,,589,589,589,589,589,589,589,,,,,589,589,589,589',
'589,589,589,589,589,589,,589,589,,589,589,589,,,,,589,,589,589,,589',
'589,,,589,589,589,589,589,589,589,907,,907,,907,907,,,,,,,,,,,,,,,,',
'589,,,,,,,,,,,,,907,,,,,,,,,907,907,907,,907,,,,907,907,,,,907,,907',
'907,907,907,907,907,907,,,,,,907,907,907,907,907,907,907,,,,,907,907',
'907,907,907,907,907,907,907,907,907,907,907,,907,907,907,,,,,907,,907',
'907,,907,907,907,907,907,907,907,907,907,907,907,124,,124,,124,124,',
',,,,,,,,,,,,,,,907,,,,,,,,,,,,,124,,,,,,,,,124,124,124,,124,,,,124,124',
',,,124,,124,124,124,124,124,124,124,,,,,,124,124,124,124,124,124,124',
',,,,124,124,124,124,124,124,124,124,124,124,,124,124,,124,124,124,,',
',,124,,124,124,,124,124,,,124,124,124,124,124,124,124,806,,806,,806',
'806,,,,,,,,,,,,,,,,,124,,,,,,,,,,,,,806,,,,,,,,,806,806,806,,806,,,',
'806,806,,,,806,,806,806,806,806,806,806,806,,,,,,806,806,806,806,806',
'806,806,,,,,806,806,806,806,806,806,806,806,806,806,,806,806,,806,806',
'806,,,,,806,,806,806,,806,806,,,806,806,806,806,806,806,806,376,,376',
',376,376,,,,,,,,,,,,,,,,,806,,,,,,,,,,,,,376,,,,,,,,,376,376,376,,376',
',,,376,376,,,,376,,376,376,376,376,376,376,376,,,,,,376,376,376,376',
'376,376,376,,,,,376,376,376,376,376,376,376,376,376,376,,376,376,,376',
'376,376,,,,,376,,376,376,,376,376,,,376,376,376,376,376,376,376,375',
',375,,375,375,,,,,,,,,,,,,,,,,376,,,,,,,,,,,,,375,,,,,,,,,375,375,375',
',375,,,,375,375,,,,375,,375,375,375,375,375,375,375,,,,,,375,375,375',
'375,375,375,375,,,,,375,375,375,375,375,375,375,375,375,375,,375,375',
',375,375,375,,,,,375,,375,375,,375,375,,,375,375,375,375,375,375,375',
'240,,240,,240,240,,,,,,,,,,,,,,,,,375,,,,,,,,,,,,,240,,,,,,,,,240,240',
'240,240,240,,,,240,240,,,,240,,240,240,240,240,240,240,240,,,,,,240',
'240,240,240,240,240,240,240,,,240,240,240,240,240,240,240,240,240,240',
'240,,240,240,,240,240,240,,,,,240,,240,240,,240,240,240,,240,240,240',
'240,240,240,240,374,,374,,374,374,,,,,,,,,,,,,,,,,240,,,,,,,,,,,,,374',
',,,,,,,,374,374,374,,374,,,,374,374,,,,374,,374,374,374,374,374,374',
'374,,,,,,374,374,374,374,374,374,374,,,,,374,374,374,374,374,374,374',
'374,374,374,,374,374,,374,374,374,,,,,374,,374,374,,374,374,,,374,374',
'374,374,374,374,374,373,,373,,373,373,,,,,,,,,,,,,,,,,374,,,,,,,,,,',
',,373,,,,,,,,,373,373,373,,373,,,,373,373,,,,373,,373,373,373,373,373',
'373,373,,,,,,373,373,373,373,373,373,373,,,,,373,373,373,373,373,373',
'373,373,373,373,,373,373,,373,373,373,,,,,373,,373,373,,373,373,,,373',
'373,373,373,373,373,373,372,,372,,372,372,,,,,,,,,,,,,,,,,373,,,,,,',
',,,,,,372,,,,,,,,,372,372,372,,372,,,,372,372,,,,372,,372,372,372,372',
'372,372,372,,,,,,372,372,372,372,372,372,372,,,,,372,372,372,372,372',
'372,372,372,372,372,,372,372,,372,372,372,,,,,372,,372,372,,372,372',
',,372,372,372,372,372,372,372,371,,371,,371,371,,,,,,,,,,,,,,,,,372',
',,,,,,,,,,,,371,,,,,,,,,371,371,371,,371,,,,371,371,,,,371,,371,371',
'371,371,371,371,371,,,,,,371,371,371,371,371,371,371,,,,,371,371,371',
'371,371,371,371,371,371,371,,371,371,,371,371,371,,,,,371,,371,371,',
'371,371,,,371,371,371,371,371,371,371,246,,246,,246,246,,,,,,,,,,,,',
',,,,371,,,,,,,,,,,,,246,,,,,,,,,246,246,246,,246,,,,246,246,,,,246,',
'246,246,246,246,246,246,246,,,,,,246,246,246,246,246,246,246,,,,,246',
'246,246,246,246,246,246,246,246,246,,246,246,,246,246,246,,,,,246,,246',
'246,,246,246,246,,246,246,246,246,246,246,246,370,,370,,370,370,,,,',
',,,,,,,,,,,,246,,,,,,,,,,,,,370,,,,,,,,,370,370,370,,370,,,,370,370',
',,,370,,370,370,370,370,370,370,370,,,,,,370,370,370,370,370,370,370',
',,,,370,370,370,370,370,370,370,370,370,370,,370,370,,370,370,370,,',
',,370,,370,370,,370,370,,,370,370,370,370,370,370,370,248,,248,,248',
'248,,,,,,,,,,,,,,,,,370,,,,,,,,,,,,,248,,,,,,,,,248,248,248,,248,,,',
'248,248,,,,248,,248,248,248,248,248,248,248,,,,,,248,248,248,248,248',
'248,248,,,,,248,248,248,248,248,248,248,248,248,248,,248,248,,248,248',
'248,,,,,248,,248,248,,248,248,,,248,248,248,248,248,248,248,876,,876',
',876,876,,,,,,,,,,,,,,,,,248,,,,,,,,,,,,,876,,,,,,,,,876,876,876,,876',
',,,876,876,,,,876,,876,876,876,876,876,876,876,,,,,,876,876,876,876',
'876,876,876,,,,,876,876,876,876,876,876,876,876,876,876,,876,876,,876',
'876,876,,,,,876,,876,876,,876,876,,,876,876,876,876,876,876,876,422',
',422,,422,422,,,,,,,,,,,,,,,,,876,,,,,,,,,,,,,422,,,,,,,,,422,422,422',
',422,,,,422,422,,,,422,,422,422,422,422,422,422,422,,,,,,422,422,422',
'422,422,422,422,,,,,422,422,422,422,422,422,422,422,422,422,,422,422',
',422,422,422,,,,,422,,422,422,,422,422,,,422,422,422,422,422,422,422',
'369,,369,,369,369,,,,,,,,,,,,,,,,,422,,,,,,,,,,,,,369,,,,,,,,,369,369',
'369,,369,,,,369,369,,,,369,,369,369,369,369,369,369,369,,,,,,369,369',
'369,369,369,369,369,,,,,369,369,369,369,369,369,369,369,369,369,,369',
'369,,369,369,369,,,,,369,,369,369,,369,369,,,369,369,369,369,369,369',
'369,368,,368,,368,368,,,,,,,,,,,,,,,,,369,,,,,,,,,,,,,368,,,,,,,,,368',
'368,368,,368,,,,368,368,,,,368,,368,368,368,368,368,368,368,,,,,,368',
'368,368,368,368,368,368,,,,,368,368,368,368,368,368,368,368,368,368',
',368,368,,368,368,368,,,,,368,,368,368,,368,368,,,368,368,368,368,368',
'368,368,367,,367,,367,367,,,,,,,,,,,,,,,,,368,,,,,,,,,,,,,367,,,,,,',
',,367,367,367,,367,,,,367,367,,,,367,,367,367,367,367,367,367,367,,',
',,,367,367,367,367,367,367,367,,,,,367,367,367,367,367,367,367,367,367',
'367,,367,367,,367,367,367,,,,,367,,367,367,,367,367,,,367,367,367,367',
'367,367,367,808,,808,,808,808,,,,,,,,,,,,,,,,,367,,,,,,,,,,,,,808,,',
',,,,,,808,808,808,,808,,,,808,808,,,,808,,808,808,808,808,808,808,808',
',,,,,808,808,808,808,808,808,808,,,,,808,808,808,808,808,808,808,808',
'808,808,,808,808,,808,808,808,,,,,808,,808,808,,808,808,,,808,808,808',
'808,808,808,808,809,,809,,809,809,,,,,,,,,,,,,,,,,808,,,,,,,,,,,,,809',
',,,,,,,,809,809,809,,809,,,,809,809,,,,809,,809,809,809,809,809,809',
'809,,,,,,809,809,809,809,809,809,809,,,,,809,809,809,809,809,809,809',
'809,809,809,,809,809,,809,809,809,,,,,809,,809,809,,809,809,,,809,809',
'809,809,809,809,809,607,,607,,607,607,,,,,,,,,,,,,,,,,809,,,,,,,,,,',
',,607,,,,,,,,,607,607,607,,607,,,,607,607,,,,607,,607,607,607,607,607',
'607,607,,,,,,607,607,607,607,607,607,607,,,,,607,607,607,607,607,607',
'607,607,607,607,,607,607,,607,607,607,,,,,607,,607,607,,607,607,607',
',607,607,607,607,607,607,607,609,,609,,609,609,,,,,,,,,,,,,,,,,607,',
',,,,,,,,,,,609,,,,,,,,,609,609,609,,609,,,,609,609,,,,609,,609,609,609',
'609,609,609,609,,,,,,609,609,609,609,609,609,609,,,,,609,609,609,609',
'609,609,609,609,609,609,609,609,609,,609,609,609,,,,,609,,609,609,,609',
'609,609,,609,609,609,609,609,609,609,259,,259,,259,259,,,,,,,,,,,,,',
',,,609,,,,,,,,,,,,,259,,,,,,,,,259,259,259,,259,,,,259,259,,,,259,,259',
'259,259,259,259,259,259,,,,,,259,259,259,259,259,259,259,,,,,259,259',
'259,259,259,259,259,259,259,259,,259,259,,259,259,259,,,,,259,,259,259',
',259,259,259,,259,259,259,259,259,259,259,98,,98,,98,98,,,,,,,,,,,,',
',,,,259,,,,,,,,,,,,,98,,,,,,,,,98,98,98,,98,,,,98,98,,,,98,,98,98,98',
'98,98,98,98,,,,,,98,98,98,98,98,98,98,,,,,98,98,98,98,98,98,98,98,98',
'98,98,98,98,,98,98,98,,,,,98,,98,98,,98,98,,,98,98,98,98,98,98,98,366',
',366,,366,366,,,,,,,,,,,,,,,,,98,,,,,,,,,,,,,366,,,,,,,,,366,366,366',
',366,,,,366,366,,,,366,,366,366,366,366,366,366,366,,,,,,366,366,366',
'366,366,366,366,,,,,366,366,366,366,366,366,366,366,366,366,,366,366',
',366,366,366,,,,,366,,366,366,,366,366,,,366,366,366,366,366,366,366',
'559,,559,,559,559,,,,,,,,,,,,,,,,,366,,,,,,,,,,,,,559,,,,,,,,,559,559',
'559,,559,,,,559,559,,,,559,,559,559,559,559,559,559,559,,,,,,559,559',
'559,559,559,559,559,,,,,559,559,559,559,559,559,559,559,559,559,,559',
'559,,559,559,559,,,,,559,,559,559,,559,559,,,559,559,559,559,559,559',
'559,558,,558,,558,558,,,,,,,,,,,,,,,,,559,,,,,,,,,,,,,558,,,,,,,,,558',
'558,558,,558,,,,558,558,,,,558,,558,558,558,558,558,558,558,,,,,,558',
'558,558,558,558,558,558,,,,,558,558,558,558,558,558,558,558,558,558',
',558,558,,558,558,558,,,,,558,,558,558,,558,558,,,558,558,558,558,558',
'558,558,96,,96,,96,96,,,,,,,,,,,,,,,,,558,,,,,,,,,,,,,96,,,,,,,,,96',
'96,96,,96,,,,96,96,,,,96,,96,96,96,96,96,96,96,,,,,,96,96,96,96,96,96',
'96,,,,,96,96,96,96,96,96,96,96,96,96,96,96,96,,96,96,96,,,,,96,,96,96',
',96,96,96,96,96,96,96,96,96,96,96,551,,551,,551,551,,,,,,,,,,,,,,,,',
'96,,,,,,,,,,,,,551,,,,,,,,,551,551,551,,551,,,,551,551,,,,551,,551,551',
'551,551,551,551,551,,,,,,551,551,551,551,551,551,551,,,,,551,551,551',
'551,551,551,551,551,551,551,551,551,551,,551,551,551,,,,,551,,551,551',
',551,551,551,551,551,551,551,551,551,551,551,93,,93,,93,93,,,,,,,,,',
',,,,,,,551,,,,,,,,,,,,,93,,,,,,,,,93,93,93,,93,,,,93,93,,,,93,,93,93',
'93,93,93,93,93,,,,,,93,93,93,93,93,93,93,,,,,93,93,93,93,93,93,93,93',
'93,93,93,93,93,,93,93,93,,,,,93,,93,93,,93,93,93,,93,93,93,93,93,93',
'93,365,,365,,365,365,,,,,,,,,,,,,,,,,93,,,,,,,,,,,,,365,,,,,,,,,365',
'365,365,,365,,,,365,365,,,,365,,365,365,365,365,365,365,365,,,,,,365',
'365,365,365,365,365,365,,,,,365,365,365,365,365,365,365,365,365,365',
',365,365,,365,365,365,,,,,365,,365,365,,365,365,,,365,365,365,365,365',
'365,365,88,,88,,88,88,,,,,,,,,,,,,,,,,365,,,,,,,,,,,,,88,,,,,,,,,88',
'88,88,,88,,,,88,88,,,,88,,88,88,88,88,88,88,88,,,,,,88,88,88,88,88,88',
'88,,,,,88,88,88,88,88,88,88,88,88,88,,88,88,,88,88,88,,,,,88,,88,88',
',88,88,,,88,88,88,88,88,88,88,270,,270,,270,270,,,,,,,,,,,,,,,,,88,',
',,,,,,,,,,,270,,,,,,,,,270,270,270,,270,,,,270,270,,,,270,,270,270,270',
'270,270,270,270,,,,,,270,270,270,270,270,270,270,,,,,270,270,270,270',
'270,270,270,270,270,270,,270,270,,270,270,270,,,,,270,,270,270,,270',
'270,,,270,270,270,270,270,270,270,612,,612,,612,612,,,,,,,,,,,,,,,,',
'270,,,,,,,,,,,,,612,,,,,,,,,612,612,612,,612,,,,612,612,,,,612,,612',
'612,612,612,612,612,612,,,,,,612,612,612,612,612,612,612,,,,,612,612',
'612,612,612,612,612,612,612,612,612,612,612,,612,612,612,,,,,612,,612',
'612,,612,612,,,612,612,612,612,612,612,612,82,,82,,82,82,,,,,,,,,,,',
',,,,,612,,,,,,,,,,,,,82,,,,,,,,,82,82,82,,82,,,,82,82,,,,82,,82,82,82',
'82,82,82,82,,,,,,82,82,82,82,82,82,82,,,,,82,82,82,82,82,82,82,82,82',
'82,,82,82,,82,82,82,,,,,82,,82,82,,82,82,,,82,82,82,82,82,82,82,77,',
'77,,77,77,,,,,,,,,,,,,,,,,82,,,,,,,,,,,,,77,,,,,,,,,77,77,77,,77,,,',
'77,77,,,,77,,77,77,77,77,77,77,77,,,,,,77,77,77,77,77,77,77,,,,,77,77',
'77,77,77,77,77,77,77,77,,77,77,,77,77,77,,,,,77,,77,77,,77,77,,,77,77',
'77,77,77,77,77,72,,72,,72,72,,,,,,,,,,,,,,,,,77,,,,,,,,,,,,,72,,,,,',
',,,72,72,72,,72,,,,72,72,,,,72,,72,72,72,72,72,72,72,,,,,,72,72,72,72',
'72,72,72,,,,,72,72,72,72,72,72,72,72,72,72,,72,72,,72,72,72,,,,,72,',
'72,72,,72,72,,,72,72,72,72,72,72,72,406,,406,,406,406,,,,,,,,,,,,,,',
',,72,,,,,,,,,,,,,406,,,,,,,,,406,406,406,,406,,,,406,406,,,,406,,406',
'406,406,406,406,406,406,,,,,,406,406,406,406,406,406,406,,,,,406,406',
'406,406,406,406,406,406,406,406,,406,406,,406,406,406,,,,,406,,406,406',
',406,406,,,406,406,406,406,406,406,406,69,,69,,69,69,,,,,,,,,,,,,,,',
',406,,,,,,,,,,,,,69,,,,,,,,,69,69,69,,69,,,,69,69,,,,69,,69,69,69,69',
'69,69,69,,,,,,69,69,69,69,69,69,69,,,,,69,69,69,69,69,69,69,69,69,69',
',69,69,,69,69,69,,,,,69,,69,69,,69,69,,,69,69,69,69,69,69,69,529,,529',
',529,529,,,,,,,,,,,,,,,,,69,,,,,,,,,,,,,529,,,,,,,,,529,529,529,,529',
',,,529,529,,,,529,,529,529,529,529,529,529,529,,,,,,529,529,529,529',
'529,529,529,,,,,529,529,529,529,529,529,529,529,529,529,,529,529,,529',
'529,529,,,,,529,,529,529,,529,529,,,529,529,529,529,529,529,529,528',
',528,,528,528,,,,,,,,,,,,,,,,,529,,,,,,,,,,,,,528,,,,,,,,,528,528,528',
',528,,,,528,528,,,,528,,528,528,528,528,528,528,528,,,,,,528,528,528',
'528,528,528,528,,,,,528,528,528,528,528,528,528,528,528,528,,528,528',
',528,528,528,,,,,528,,528,528,,528,528,,,528,528,528,528,528,528,528',
'621,,621,,621,621,,,,,,,,,,,,,,,,,528,,,,,,,,,,,,,621,,,,,,,,,621,621',
'621,,621,,,,621,621,,,,621,,621,621,621,621,621,621,621,,,,,,621,621',
'621,621,621,621,621,,,,,621,621,621,621,621,621,621,621,621,621,621',
'621,621,,621,621,621,,,,,621,,621,621,,621,621,621,621,621,621,621,621',
'621,621,621,832,,832,,832,832,,,,,,,,,,,,,,,,,621,,,,,,,,,,,,,832,,',
',,,,,,832,832,832,,832,,,,832,832,,,,832,,832,832,832,832,832,832,832',
',,,,,832,832,832,832,832,832,832,,,,,832,832,832,832,832,832,832,832',
'832,832,,832,832,,832,832,832,,,,,832,,832,832,,832,832,,,832,832,832',
'832,832,832,832,624,,624,,624,624,,,,,,,,,,,,,,,,,832,,,,,,,,,,,,,624',
',,,,,,,,624,624,624,,624,,,,624,624,,,,624,,624,624,624,624,624,624',
'624,,,,,,624,624,624,624,624,624,624,,,,,624,624,624,624,624,624,624',
'624,624,624,,624,624,,624,624,624,,,,,624,,624,624,,624,624,,,624,624',
'624,624,624,624,624,57,,57,,57,57,,,,,,,,,,,,,,,,,624,,,,,,,,,,,,,57',
',,,,,,,,57,57,57,,57,,,,57,57,,,,57,,57,57,57,57,57,57,57,,,,,,57,57',
'57,57,57,57,57,,,,,57,57,57,57,57,57,57,57,57,57,,57,57,,57,57,57,,',
',,57,,57,57,,57,57,,,57,57,57,57,57,57,57,510,,510,,510,510,,,,,,,,',
',,,,,,,,57,,,,,,,,,,,,,510,,,,,,,,,510,510,510,,510,,,,510,510,,,,510',
',510,510,510,510,510,510,510,,,,,,510,510,510,510,510,510,510,,,,,510',
'510,510,510,510,510,510,510,510,510,,510,510,,510,510,510,,,,,510,,510',
'510,,510,510,,,510,510,510,510,510,510,510,293,,293,,293,293,,,,,,,',
',,,,,,,,,510,,,,,,,,,,,,,293,,,,,,,,,293,293,293,,293,,,,293,293,,,',
'293,,293,293,293,293,293,293,293,,,,,,293,293,293,293,293,293,293,,',
',,293,293,293,293,293,293,293,293,293,293,293,293,293,,293,293,293,',
',,,293,,293,293,,293,293,293,293,293,293,293,293,293,293,293,363,,363',
',363,363,,,,,,,,,,,,,,,,,293,,,,,,,,,,,,,363,,,,,,,,,363,363,363,,363',
',,,363,363,,,,363,,363,363,363,363,363,363,363,,,,,,363,363,363,363',
'363,363,363,,,,,363,363,363,363,363,363,363,363,363,363,,363,363,,363',
'363,363,,,,,363,,363,363,,363,363,,,363,363,363,363,363,363,363,296',
',296,,296,296,,,,,,,,,,,,,,,,,363,,,,,,,,,,,,,296,,,,,,,,,296,296,296',
',296,,,,296,296,,,,296,,296,296,296,296,296,296,296,,,,,,296,296,296',
'296,296,296,296,,,,,296,296,296,296,296,296,296,296,296,296,,296,296',
',296,296,296,,,,,296,,296,296,,296,296,,,296,296,296,296,296,296,296',
'297,,297,,297,297,,,,,,,,,,,,,,,,,296,,,,,,,,,,,,,297,,,,,,,,,297,297',
'297,,297,,,,297,297,,,,297,,297,297,297,297,297,297,297,,,,,,297,297',
'297,297,297,297,297,,,,,297,297,297,297,297,297,297,297,297,297,,297',
'297,,297,297,297,,,,,297,,297,297,,297,297,,,297,297,297,297,297,297',
'297,298,,298,,298,298,,,,,,,,,,,,,,,,,297,,,,,,,,,,,,,298,,,,,,,,,298',
'298,298,,298,,,,298,298,,,,298,,298,298,298,298,298,298,298,,,,,,298',
'298,298,298,298,298,298,,,,,298,298,298,298,298,298,298,298,298,298',
',298,298,,298,298,298,,,,,298,,298,298,,298,298,,,298,298,298,298,298',
'298,298,300,,300,,300,300,,,,,,,,,,,,,,,,,298,,,,,,,,,,,,,300,,,,,,',
',,300,300,300,,300,,,,300,300,,,,300,,300,300,300,300,300,300,300,,',
',,,300,300,300,300,300,300,300,,,,,300,300,300,300,300,300,300,300,300',
'300,,300,300,,300,300,300,,,,,300,,300,300,,300,300,,,300,300,300,300',
'300,300,300,592,,592,,592,592,,,,,,,,,,,,,,,,,300,,,,,,,,,,,,,592,,',
',,,,,,592,592,592,,592,,,,592,592,,,,592,,592,592,592,592,592,592,592',
',,,,,592,592,592,592,592,592,592,,,,,592,592,592,592,592,592,592,592',
'592,592,,592,592,,592,592,592,,,,,592,,592,592,,592,592,,,592,592,592',
'592,592,592,592,505,,505,,505,505,,,,,,,,,,,,,,,,,592,,,,,,,,,,,,,505',
',,,,,,,,505,505,505,,505,,,,505,505,,,,505,,505,505,505,505,505,505',
'505,,,,,,505,505,505,505,505,505,505,,,,,505,505,505,505,505,505,505',
'505,505,505,505,505,505,,505,505,505,,,,,505,,505,505,,505,505,505,505',
'505,505,505,505,505,505,505,55,,55,,55,55,,,,,,,,,,,,,,,,,505,,,,,,',
',,,,,,55,,,,,,,,,55,55,55,,55,,,,55,55,,,,55,,55,55,55,55,55,55,55,',
',,,,55,55,55,55,55,55,55,,,,,55,55,55,55,55,55,55,55,55,55,55,55,55',
',55,55,55,,,,,55,,55,55,,55,55,55,55,55,55,55,55,55,55,55,51,,51,,51',
'51,,,,,,,,,,,,,,,,,55,,,,,,,,,,,,,51,,,,,,,,,51,51,51,,51,,,,51,51,',
',,51,,51,51,51,51,51,51,51,,,,,,51,51,51,51,51,51,51,,,,,51,51,51,51',
'51,51,51,51,51,51,,51,51,,51,51,51,,,,,51,,51,51,,51,51,,,51,51,51,51',
'51,51,51,50,,50,,50,50,,,,,,,,,,,,,,,,,51,,,,,,,,,,,,,50,,,,,,,,,50',
'50,50,,50,,,,50,50,,,,50,,50,50,50,50,50,50,50,,,,,,50,50,50,50,50,50',
'50,,,,,50,50,50,50,50,50,50,50,50,50,50,50,50,,50,50,50,,,,,50,,50,50',
',50,50,50,50,50,50,50,50,50,50,50,731,,731,,731,731,,,,,,,,,,,,,,,,',
'50,,,,,,,,,,,,,731,,,,,,,,,731,731,731,,731,,,,731,731,,,,731,,731,731',
'731,731,731,731,731,,,,,,731,731,731,731,731,731,731,,,,,731,731,731',
'731,731,731,731,731,731,731,,731,731,,731,731,731,,,,,731,,731,731,',
'731,731,,,731,731,731,731,731,731,731,312,,312,,312,312,,,,,,,,,,,,',
',,,,731,,,,,,,,,,,,,312,,,,,,,,,312,312,312,,312,,,,312,312,,,,312,',
'312,312,312,312,312,312,312,,,,,,312,312,312,312,312,312,312,,,,,312',
'312,312,312,312,312,312,312,312,312,312,312,312,,312,312,312,,,,,312',
',312,312,,312,312,312,312,312,312,312,312,312,312,312,728,,728,,728',
'728,,,,,,,,,,,,,,,,,312,,,,,,,,,,,,,728,,,,,,,,,728,728,728,,728,,,',
'728,728,,,,728,,728,728,728,728,728,728,728,,,,,,728,728,728,728,728',
'728,728,,,,,728,728,728,728,728,728,728,728,728,728,,728,728,,728,728',
'728,,,,,728,,728,728,,728,728,,,728,728,728,728,728,728,728,362,,362',
',362,362,,,,,,,,,,,,,,,,,728,,,,,,,,,,,,,362,,,,,,,,,362,362,362,,362',
',,,362,362,,,,362,,362,362,362,362,362,362,362,,,,,,362,362,362,362',
'362,362,362,,,,,362,362,362,362,362,362,362,362,362,362,,362,362,,362',
'362,362,,,,,362,,362,362,,362,362,,,362,362,362,362,362,362,362,723',
',723,,723,723,,,,,,,,,,,,,,,,,362,,,,,,,,,,,,,723,,,,,,,,,723,723,723',
',723,,,,723,723,,,,723,,723,723,723,723,723,723,723,,,,,,723,723,723',
'723,723,723,723,,,,,723,723,723,723,723,723,723,723,723,723,,723,723',
',723,723,723,,,,,723,,723,723,,723,723,,,723,723,723,723,723,723,723',
'722,,722,,722,722,,,,,,,,,,,,,,,,,723,,,,,,,,,,,,,722,,,,,,,,,722,722',
'722,,722,,,,722,722,,,,722,,722,722,722,722,722,722,722,,,,,,722,722',
'722,722,722,722,722,,,,,722,722,722,722,722,722,722,722,722,722,,722',
'722,,722,722,722,,,,,722,,722,722,,722,722,,,722,722,722,722,722,722',
'722,410,,410,,410,410,,,,,,,,,,,,,,,,,722,,,,,,,,,,,,,410,,,,,,,,,410',
'410,410,,410,,,,410,410,,,,410,,410,410,410,410,410,410,410,,,,,,410',
'410,410,410,410,410,410,,,,,410,410,410,410,410,410,410,410,410,410',
'410,410,410,,410,410,410,,,,,410,,410,410,,410,410,410,410,410,410,410',
'410,410,410,410,320,,320,,320,320,,,,,,,,,,,,,,,,,410,,,,,,,,,,,,,320',
',,,,,,,,320,320,320,,320,,,,320,320,,,,320,,320,320,320,320,320,320',
'320,,,,,,320,320,320,320,320,320,320,,,,,320,320,320,320,320,320,320',
'320,320,320,,320,320,,320,320,320,,,,,320,,320,320,,320,320,,,320,320',
'320,320,320,320,320,718,,718,,718,718,,,,,,,,,,,,,,,,,320,,,,,,,,,,',
',,718,,,,,,,,,718,718,718,,718,,,,718,718,,,,718,,718,718,718,718,718',
'718,718,,,,,,718,718,718,718,718,718,718,,,,,718,718,718,718,718,718',
'718,718,718,718,,718,718,,718,718,718,,,,,718,,718,718,,718,718,,,718',
'718,718,718,718,718,718,35,,35,,35,35,,,,,,,,,,,,,,,,,718,,,,,,,,,,',
',,35,,,,,,,,,35,35,35,,35,,,,35,35,,,,35,,35,35,35,35,35,35,35,,,,,',
'35,35,35,35,35,35,35,,,,,35,35,35,35,35,35,35,35,35,35,,35,35,,35,35',
'35,,,,,35,,35,35,,35,35,,,35,35,35,35,35,35,35,704,,704,,704,704,,,',
',,,,,,,,,,,,,35,,,,,,,,,,,,,704,,,,,,,,,704,704,704,,704,,,,704,704',
',,,704,,704,704,704,704,704,704,704,,,,,,704,704,704,704,704,704,704',
',,,,704,704,704,704,704,704,704,704,704,704,,704,704,,704,704,704,,',
',,704,,704,704,,704,704,,,704,704,704,704,704,704,704,850,,850,,850',
'850,,,,,,,,,,,,,,,,,704,,,,,,,,,,,,,850,,,,,,,,,850,850,850,,850,,,',
'850,850,,,,850,,850,850,850,850,850,850,850,,,,,,850,850,850,850,850',
'850,850,,,,,850,850,850,850,850,850,850,850,850,850,,850,850,,850,850',
'850,,,,,850,,850,850,,850,850,850,,850,850,850,850,850,850,850,23,,23',
',23,23,,,,,,,,,,,,,,,,,850,,,,,,,,,,,,,23,,,,,,,,,23,23,23,,23,,,,23',
'23,,,,23,,23,23,23,23,23,23,23,,,,,,23,23,23,23,23,23,23,,,,,23,23,23',
'23,23,23,23,23,23,23,,23,23,,23,23,23,,,,,23,,23,23,,23,23,,,23,23,23',
'23,23,23,23,478,,478,,478,478,,,,,,,,,,,,,,,,,23,,,,,,,,,,,,,478,,,',
',,,,,478,478,478,,478,,,,478,478,,,,478,,478,478,478,478,478,478,478',
',,,,,478,478,478,478,478,478,478,,,,,478,478,478,478,478,478,478,478',
'478,478,,478,478,,478,478,478,,,,,478,,478,478,,478,478,,,478,478,478',
'478,478,478,478,682,,682,,682,682,,,,,,,,,,,,,,,,,478,,,,,,,,,,,,,682',
',,,,,,,,682,682,682,,682,,,,682,682,,,,682,,682,682,682,682,682,682',
'682,,,,,,682,682,682,682,682,682,682,,,,,682,682,682,682,682,682,682',
'682,682,682,,682,682,,682,682,682,,,,,682,,682,682,,682,682,682,,682',
'682,682,682,682,682,682,476,,476,,476,476,,,,,,,,,,,,,,,,,682,,,,,,',
',,,,,,476,,,,,,,,,476,476,476,,476,,,,476,476,,,,476,,476,476,476,476',
'476,476,476,,,,,,476,476,476,476,476,476,476,,,,,476,476,476,476,476',
'476,476,476,476,476,476,476,476,,476,476,476,,,,,476,,476,476,,476,476',
'476,476,476,476,476,476,476,476,476,360,,360,,360,360,,,,,,,,,,,,,,',
',,476,,,,,,,,,,,,,360,,,,,,,,,360,360,360,,360,,,,360,360,,,,360,,360',
'360,360,360,360,360,360,,,,,,360,360,360,360,360,360,360,,,,,360,360',
'360,360,360,360,360,360,360,360,,360,360,,360,360,360,,,,,360,,360,360',
',360,360,,,360,360,360,360,360,360,360,16,,16,,16,16,,,,,,,,,,,,,,,',
',360,,,,,,,,,,,,,16,,,,,,,,,16,16,16,16,16,,,,16,16,,,,16,,16,16,16',
'16,16,16,16,,,,,,16,16,16,16,16,16,16,16,,,16,16,16,16,16,16,16,16,16',
'16,16,,16,16,,16,16,16,,,,,16,,16,16,,16,16,16,,16,16,16,16,16,16,16',
'333,,333,,333,333,,,,,,,,,,,,,,,,,16,,,,,,,,,,,,,333,,,,,,,,,333,333',
'333,333,333,,,,333,333,,,,333,,333,333,333,333,333,333,333,,,,,,333',
'333,333,333,333,333,333,333,,,333,333,333,333,333,333,333,333,333,333',
'333,,333,333,,333,333,333,,,,,333,,333,333,,333,333,333,,333,333,333',
'333,333,333,333,334,,334,,334,334,,,,,,,,,,,,,,,,,333,,,,,,,,,,,,,334',
',,,,,,,,334,334,334,,334,,,,334,334,,,,334,,334,334,334,334,334,334',
'334,,,,,,334,334,334,334,334,334,334,,,,,334,334,334,334,334,334,334',
'334,334,334,,334,334,,334,334,334,,,,,334,,334,334,,334,334,,,334,334',
'334,334,334,334,334,335,,335,,335,335,,,,,,,,,,,,,,,,,334,,,,,,,,,,',
',,335,,,,,,,,,335,335,335,,335,,,,335,335,,,,335,,335,335,335,335,335',
'335,335,,,,,,335,335,335,335,335,335,335,,,,,335,335,335,335,335,335',
'335,335,335,335,,335,335,,335,335,335,,,,,335,,335,335,,335,335,,,335',
'335,335,335,335,335,335,336,,336,,336,336,,,,,,,,,,,,,,,,,335,,,,,,',
',,,,,,336,,,,,,,,,336,336,336,,336,,,,336,336,,,,336,,336,336,336,336',
'336,336,336,,,,,,336,336,336,336,336,336,336,,,,,336,336,336,336,336',
'336,336,336,336,336,,336,336,,336,336,336,,,,,336,,336,336,,336,336',
',,336,336,336,336,336,336,336,337,,337,,337,337,,,,,,,,,,,,,,,,,336',
',,,,,,,,,,,,337,,,,,,,,,337,337,337,,337,,,,337,337,,,,337,,337,337',
'337,337,337,337,337,,,,,,337,337,337,337,337,337,337,,,,,337,337,337',
'337,337,337,337,337,337,337,,337,337,,337,337,337,,,,,337,,337,337,',
'337,337,,,337,337,337,337,337,337,337,683,,683,,683,683,,,,,,,,,,,,',
',,,,337,,,,,,,,,,,,,683,,,,,,,,,683,683,683,,683,,,,683,683,,,,683,',
'683,683,683,683,683,683,683,,,,,,683,683,683,683,683,683,683,,,,,683',
'683,683,683,683,683,683,683,683,683,,683,683,,683,683,683,,,,,683,,683',
'683,,683,683,,,683,683,683,683,683,683,683,848,,848,,848,848,,,,,,,',
',,,,,,,,,683,,,,,,,,,,,,,848,,,,,,,,,848,848,848,,848,,,,848,848,,,',
'848,,848,848,848,848,848,848,848,,,,,,848,848,848,848,848,848,848,,',
',,848,848,848,848,848,848,848,848,848,848,,848,848,,848,848,848,,,,',
'848,,848,848,,848,848,,,848,848,848,848,848,848,848,474,,474,,474,474',
',,,,,,,,,,,,,,,,848,,,,,,,,,,,,,474,,,,,,,,,474,474,474,,474,,,,474',
'474,,,,474,,474,474,474,474,474,474,474,,,,,,474,474,474,474,474,474',
'474,,,,,474,474,474,474,474,474,474,474,474,474,,474,474,,474,474,474',
',,,,474,,474,474,,474,474,,,474,474,474,474,474,474,474,473,,473,,473',
'473,,,,,,,,,,,,,,,,,474,,,,,,,,,,,,,473,,,,,,,,,473,473,473,,473,,,',
'473,473,,,,473,,473,473,473,473,473,473,473,,,,,,473,473,473,473,473',
'473,473,,,,,473,473,473,473,473,473,473,473,473,473,,473,473,,473,473',
'473,,,,,473,,473,473,,473,473,,,473,473,473,473,473,473,473,839,,839',
',839,839,,,,,,,,,,,,,,,,,473,,,,,,,,,,,,,839,,,,,,,,,839,839,839,,839',
',,,839,839,,,,839,,839,839,839,839,839,839,839,,,,,,839,839,839,839',
'839,839,839,,,,,839,839,839,839,839,839,839,839,839,839,,839,839,,839',
'839,839,,,,,839,,839,839,,839,839,,,839,839,839,839,839,839,839,357',
',357,,357,357,,,,,,,,,,,,,,,,,839,,,,,,,,,,,,,357,,,,,,,,,357,357,357',
',357,,,,357,357,,,,357,,357,357,357,357,357,357,357,,,,,,357,357,357',
'357,357,357,357,,,,,357,357,357,357,357,357,357,357,357,357,,357,357',
',357,357,357,,,,,357,,357,357,,357,357,,,357,357,357,357,357,357,357',
'359,,359,,359,359,,,,,,,,,,,,,,,,,357,,,,,,,,,,,,,359,,,,,,,,,359,359',
'359,,359,,,,359,359,,,,359,,359,359,359,359,359,359,359,,,,,,359,359',
'359,359,359,359,359,,,,,359,359,359,359,359,359,359,359,359,359,,359',
'359,,359,359,359,,,,,359,,359,359,,359,359,,,359,359,359,359,359,359',
'359,346,,346,,346,346,,,,,,,,,,,,,,,,,359,,,,,,,,,,,,,346,,,,,,,,,346',
'346,346,,346,,,,346,346,,,,346,,346,346,346,346,346,346,346,,,,,,346',
'346,346,346,346,346,346,,,,,346,346,346,346,346,346,346,346,346,346',
',346,346,,346,346,346,,,,,346,,346,346,,346,346,,,346,346,346,346,346',
'346,346,347,,347,,347,347,,,,,,,,,,,,,,,,,346,,,,,,,,,,,,,347,,,,,,',
',,347,347,347,,347,,,,347,347,,,,347,,347,347,347,347,347,347,347,,',
',,,347,347,347,347,347,347,347,,,,,347,347,347,347,347,347,347,347,347',
'347,,347,347,,347,347,347,,,,,347,,347,347,,347,347,,,347,347,347,347',
'347,347,347,472,,472,,472,472,,,,,,,,,,,,,,,,,347,,,,,,,,,,,,,472,,',
',,,,,,472,472,472,,472,,,,472,472,,,,472,,472,472,472,472,472,472,472',
',,,,,472,472,472,472,472,472,472,,,,,472,472,472,472,472,472,472,472',
'472,472,,472,472,,472,472,472,,,,,472,,472,472,,472,472,,,472,472,472',
'472,472,472,472,358,,358,,358,358,,,,,,,,,,,,,,,,,472,,,,,,,,,,,,,358',
',,,,,,,,358,358,358,,358,,,,358,358,,,,358,,358,358,358,358,358,358',
'358,,,,,,358,358,358,358,358,358,358,,,,,358,358,358,358,358,358,358',
'358,358,358,,358,358,,358,358,358,,,,,358,,358,358,,358,358,,,358,358',
'358,358,358,358,358,351,,351,,351,351,,,,,,,,,,,,,,,,,358,,,,,,,,,,',
',,351,,,,,,,,,351,351,351,,351,,,,351,351,,,,351,,351,351,351,351,351',
'351,351,,,,,,351,351,351,351,351,351,351,,,,,351,351,351,351,351,351',
'351,351,351,351,,351,351,,351,351,351,,,,,351,,351,351,,351,351,,,351',
'351,351,351,351,351,351,352,,352,,352,352,,,,,,,,,,,,,,,,,351,,,,,,',
',,,,,,352,,,,,,,,,352,352,352,,352,,,,352,352,,,,352,,352,352,352,352',
'352,352,352,,,,,,352,352,352,352,352,352,352,,,,,352,352,352,352,352',
'352,352,352,352,352,,352,352,,352,352,352,,,,,352,,352,352,,352,352',
',,352,352,352,352,352,352,352,353,,353,,353,353,,,,,,,,,,,,,,,,,352',
',,,,,,,,,,,,353,,,,,,,,,353,353,353,,353,,,,353,353,,,,353,,353,353',
'353,353,353,353,353,,,,,,353,353,353,353,353,353,353,,,,,353,353,353',
'353,353,353,353,353,353,353,,353,353,,353,353,353,,,,,353,,353,353,',
'353,353,,,353,353,353,353,353,353,353,354,,354,,354,354,,,,,,,,,,,,',
',,,,353,,,,,,,,,,,,,354,,,,,,,,,354,354,354,,354,,,,354,354,,,,354,',
'354,354,354,354,354,354,354,,,,,,354,354,354,354,354,354,354,,,,,354',
'354,354,354,354,354,354,354,354,354,,354,354,,354,354,354,,,,,354,,354',
'354,,354,354,,,354,354,354,354,354,354,354,355,,355,,355,355,,,,,,,',
',,,,,,,,,354,,,,,,,,,,,,,355,,,,,,,,,355,355,355,,355,,,,355,355,,,',
'355,,355,355,355,355,355,355,355,,,,,,355,355,355,355,355,355,355,,',
',,355,355,355,355,355,355,355,355,355,355,,355,355,,355,355,355,,,,',
'355,,355,355,,355,355,,,355,355,355,355,355,355,355,356,,356,,356,356',
',,,,,,,,,,,,,,,,355,,,,,,,,,,,,,356,,,,,,,,,356,356,356,,356,,,,356',
'356,,,,356,,356,356,356,356,356,356,356,,,,,,356,356,356,356,356,356',
'356,,,,,356,356,356,356,356,356,356,356,356,356,,356,356,,356,356,356',
',,,,356,,356,356,,356,356,,,356,356,356,356,356,356,356,418,,418,,418',
'418,,,,,,,,,,,,,,,,,356,,,,,,,,,,,,,418,,,,,,,,,418,418,418,,418,,,',
'418,418,,,,418,,418,418,418,418,418,418,418,,,,,,418,418,418,418,418',
'418,418,,,,,418,418,418,418,418,418,418,418,418,418,,418,418,,418,418',
'418,,,,,418,,418,418,,418,418,,330,418,418,418,418,418,418,418,330,330',
',,,,330,835,330,330,330,330,330,330,330,835,835,330,330,,,835,418,835',
'835,835,835,835,835,835,294,,835,835,,,,,294,294,,,,,294,,294,294,294',
'294,294,294,294,294,294,294,294,524,,,,,,,,524,524,,,,,524,,524,524',
'524,524,524,524,524,549,,524,524,,,524,,549,549,,,,,549,,549,549,549',
'549,549,549,549,,,549,549,,,,,,,,,,,,,,330,330,330,330,330,330,330,330',
'330,330,,,330,,,835,835,835,835,835,835,835,835,835,835,,,835,,,,,,',
',,,,294,294,294,294,294,294,294,294,294,294,,,294,,,,,,,,,,,,,,,524',
'524,524,524,524,524,524,524,524,524,,,524,,,,,,,,,,,549,549,549,549',
'549,549,549,549,549,549,560,,549,,,,,,560,560,,,,,560,,560,560,560,560',
'560,560,560,560,560,560,560,581,,,,,,,,581,581,,,,,581,889,581,581,581',
'581,581,581,581,889,889,581,581,,,889,585,889,889,889,889,889,889,889',
'585,585,889,889,,,585,588,585,585,585,585,585,585,585,588,588,585,585',
',,588,893,588,588,588,588,588,588,588,893,893,588,588,,,893,,893,893',
'893,893,893,893,893,893,893,893,893,,,,,,,,,,,,,,,560,560,560,560,560',
'560,560,560,560,560,,,560,,,,,,,,,,,,,,,581,581,581,581,581,581,581',
'581,581,581,,,581,,,889,889,889,889,889,889,889,889,889,889,,,889,,',
'585,585,585,585,585,585,585,585,585,585,,,585,,,588,588,588,588,588',
'588,588,588,588,588,,,588,,,893,893,893,893,893,893,893,893,893,893',
'830,,893,,,,,,830,830,,,,,830,829,830,830,830,830,830,830,830,829,829',
'830,830,,,829,827,829,829,829,829,829,829,829,827,827,829,829,,,827',
'591,827,827,827,827,827,827,827,591,591,827,827,,,591,594,591,591,591',
'591,591,591,591,594,594,591,591,,,594,596,594,594,594,594,594,594,594',
'596,596,594,594,,,596,805,596,596,596,596,596,596,596,805,805,596,596',
',,805,,805,805,805,805,805,805,805,,,805,805,,,,,,,,,,,,830,830,830',
'830,830,830,830,830,830,830,,,830,,,829,829,829,829,829,829,829,829',
'829,829,,,829,,,827,827,827,827,827,827,827,827,827,827,,,827,,,591',
'591,591,591,591,591,591,591,591,591,,,591,,,594,594,594,594,594,594',
'594,594,594,594,,,594,,,596,596,596,596,596,596,596,596,596,596,,,596',
',,805,805,805,805,805,805,805,805,805,805,597,,805,,,,,,597,597,,,,',
'597,599,597,597,597,597,597,597,597,599,599,597,597,,,599,600,599,599',
'599,599,599,599,599,600,600,599,599,,,600,601,600,600,600,600,600,600',
'600,601,601,600,600,,,601,602,601,601,601,601,601,601,601,602,602,601',
'601,,,602,604,602,602,602,602,602,602,602,604,604,602,602,,,604,90,604',
'604,604,604,604,604,604,90,90,604,604,,,90,,90,90,90,90,90,90,90,90',
'90,90,90,,,,,,,,,,,,597,597,597,597,597,597,597,597,597,597,,,597,,',
'599,599,599,599,599,599,599,599,599,599,,,599,,,600,600,600,600,600',
'600,600,600,600,600,,,600,,,601,601,601,601,601,601,601,601,601,601',
',,601,,,602,602,602,602,602,602,602,602,602,602,,,602,,,604,604,604',
'604,604,604,604,604,604,604,,,604,,,90,90,90,90,90,90,90,90,90,90,743',
',90,,,,,,743,743,,,,,743,685,743,743,743,743,743,743,743,685,685,743',
'743,,,685,,685,685,685,685,685,685,685,753,,685,685,,,685,,753,753,',
',,,753,,753,753,753,753,753,753,753,753,753,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,743,743,743,743,743,743,743',
'743,743,743,,,743,,,685,685,685,685,685,685,685,685,685,685,327,,685',
',,,,,,,,,,753,753,753,753,753,753,753,753,753,753,,,753,,,,,,327,,,',
',,,,,327,327,327,,327,,,,327,327,,,,327,,327,327,327,327,327,327,327',
',,,,,327,327,327,327,327,327,327,,105,,,327,327,327,327,327,327,327',
'327,327,327,,327,327,,327,327,327,,,,,327,,327,327,,327,327,105,,327',
'327,327,327,327,327,327,105,105,105,,105,,,,105,105,,327,,105,,105,105',
'105,105,105,105,105,,,,,,105,105,105,105,105,105,105,,557,,,105,105',
'105,105,105,105,105,105,105,105,,105,105,,105,105,105,,,,,105,,105,105',
',105,105,557,,105,105,105,105,105,105,105,557,557,557,,557,,,,557,557',
',105,,557,,557,557,557,557,557,557,557,,,,,,557,557,557,557,557,557',
'557,,402,,,557,557,557,557,557,557,557,557,557,557,,557,557,,557,557',
'557,,,,,557,,557,557,,557,557,402,,557,557,557,557,557,557,557,402,402',
'402,,402,,,,402,402,,,,402,,402,402,402,402,402,402,402,,,,,,402,402',
'402,402,402,402,402,,816,,,402,402,402,402,402,402,402,402,402,402,',
'402,402,,402,402,402,,,,,402,,402,402,,402,402,816,,402,402,402,402',
'402,402,402,816,816,816,,816,,,,816,816,,,,816,,816,816,816,816,816',
'816,816,,,,,,816,816,816,816,816,816,816,,768,,,816,816,816,816,816',
'816,816,816,816,816,,816,816,,816,816,816,,,,,816,,816,816,,816,816',
'768,,816,816,816,816,816,816,816,768,768,768,,768,,,,768,768,,,,768',
',768,768,768,768,768,768,768,,,,,,768,768,768,768,768,768,768,,28,,',
'768,768,768,768,768,768,768,768,768,768,,768,768,,768,768,768,,,,,768',
',768,768,,768,768,28,,768,768,768,768,768,768,768,28,28,28,,28,,,,28',
'28,,,,28,,28,28,28,28,28,28,28,,,,,,28,28,28,28,28,28,28,,,,,28,28,28',
'28,28,28,28,28,28,28,8,28,28,,28,28,28,8,,,,28,,28,28,,28,28,,,28,28',
'28,28,28,28,28,,,,,8,,,,,,,,,8,8,8,,8,,,,8,8,,,,8,,8,8,8,8,8,8,8,,,',
',,8,8,8,8,8,8,8,,741,,,8,8,8,8,8,8,8,8,8,8,,8,8,,8,8,8,,,,,8,,8,8,,8',
'8,741,,8,8,8,8,8,8,8,741,741,741,,741,,,,741,741,,,,741,,741,741,741',
'741,741,741,741,,,,,,741,741,741,741,741,741,741,,104,,,741,741,741',
'741,741,741,741,741,741,741,,741,741,,741,741,741,,,,,741,,741,741,',
'741,741,104,,741,741,741,741,741,741,741,104,104,104,,104,,,,104,104',
',,,104,,104,104,104,104,104,104,104,,,,,,104,104,104,104,104,104,104',
',,625,,104,104,104,104,104,104,104,104,104,104,,104,104,,104,104,104',
',,,,104,,104,104,,104,104,104,625,104,104,104,104,104,104,104,,625,625',
'625,,625,,,,625,625,,,,625,,625,625,625,625,625,625,625,,,,,,625,625',
'625,625,625,625,625,,802,,,625,625,625,625,625,625,625,625,625,625,',
'625,625,,625,625,625,,,,,625,,625,625,,625,625,802,,625,625,625,625',
'625,625,625,802,802,802,,802,,,,802,802,,,,802,,802,802,802,802,802',
'802,802,,,,,,802,802,802,802,802,802,802,,63,,,802,802,802,802,802,802',
'802,802,802,802,,802,802,,802,802,802,,,,,802,,802,802,,802,802,63,',
'802,802,802,802,802,802,802,63,63,63,,63,,,,63,63,,,,63,,63,63,63,63',
'63,63,63,,,,,,63,63,63,63,63,63,63,,,,,63,63,63,63,63,63,63,63,63,63',
',63,63,,63,63,63,,,,,63,,63,63,,63,63,63,,63,63,63,63,63,63,63' ]
        racc_action_check = arr = Array.new(22769, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
   nil,    46,   nil,  8309,  1334,   nil,   nil,   nil, 22272,  1321,
   109,   nil,   nil,  8200,   nil,   nil, 17830,   nil,   nil,   nil,
   nil,  8077,  1204, 17235,   nil,   nil,   nil,   nil, 22184,   726,
   nil,   nil,   nil,  1194,  1213, 16878,  6650,   nil,   nil,  1160,
   nil,  1590,  1272,  1144,   nil,   nil,   567,   442,   111,   371,
 15688, 15569,  1167,   nil,   nil, 15450,   nil, 14260,   nil,   nil,
   nil,   nil,   284, 22648,   nil,   nil,   nil,  1191,  1122, 13546,
  1097,  1154, 13308,  4265,   nil,  3783,   nil, 13189,  5807,   665,
     1,  1132, 13070,   140,    54,   nil,   nil,   nil, 12713,   nil,
 21444,   nil,   431, 12475,  2151,   nil, 12237,   nil, 11761,   443,
   nil,   nil,  1709,   nil, 22422, 21809,   nil,  1471,   nil,   -82,
   nil,   nil,   340,   676,   610,   nil,   nil,   nil,   128,  1095,
  7005,   nil,   578,   nil,  9143,   nil,     7,   nil,   431,  1095,
  1086,  1084,   374,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
  1098,   nil,   nil,  2413,   nil,   nil,   nil,   nil,   129,   -61,
  1140,  1092,  1134,   nil,  1251,   nil,  1087,  7248,  6753,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   892,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   895,
  9619,   nil,  1009,  1161,  1150,   313, 10214,  1044, 10452,   nil,
  1128,   353,    20,  1068,    50,  1816,   718,  5927,   788, 11642,
   181,   nil,   409,   428,   -59,   489,   -40,   647,   -57,   528,
 12832,  2001,   499,   471,  1880,   nil,   nil,   nil,   444,   nil,
   nil,   908,  1019,  1097,   nil,  1008,   991,   nil,   nil,  1002,
   -14,   -12,   nil, 14498, 20713,   nil, 14736, 14855, 14974,   nil,
 15093,   114,   952,  1065,  1063,   nil,   nil,   nil,   788,   nil,
   nil,  2042, 15926,  1985,   nil,   165,  5452,   nil,    62,   788,
 16640,   330,   608,   955,   914,  7837,   855, 21734,   232,   nil,
 20675,   nil,  2270, 17949, 18068, 18187, 18306, 18425,   204,   910,
   nil,   179,   896,   869,  4022,   872, 19377, 19496,   nil,   -32,
   -50, 19853, 19972, 20091, 20210, 20329, 20448, 19139, 19734, 19258,
 17711,   983, 16164, 14617,   981, 12594, 11880, 11047, 10928, 10809,
 10333, 10095,  9976,  9857,  9738,  9500,  9381,   109,   947,   845,
   845,   318,   nil,   220,   nil,   865,   nil,   231,   882,   -17,
   -11,   nil,   nil,   312,   nil,   nil,   728,   -33,   895,   157,
   912,   843, 21959,   nil,   nil,   550, 13427,   nil,   nil,  2454,
 16521,  2747,   nil,   358,   nil,   827,   -35,   302, 20567,  6287,
   nil,   884, 10690,  4281,   nil,   nil,   821,   nil,   882,  7125,
  7477,   nil,   nil,  5711,   nil,   nil,   855,   874,   nil,   nil,
   788,   797,   840,  1311,  1778,   nil,   nil,   nil,   nil,  2563,
   nil,  3664,  8429,  1045,   nil,   nil,   nil,   nil,   nil,  1149,
   nil,   nil,   868,   nil,  8786,   nil,   669,   nil,   791,   nil,
   nil,  1014, 19615, 18901, 18782,  2690, 17592,  1069, 17354,   -26,
   nil,   859,   nil,   nil,   nil,   765,  6896,   nil,   nil,    -6,
  5236,   432,  6167,   977,   920,   nil,   nil,   nil,  5220,   nil,
   101,   nil,   nil,   -20,   nil, 15331,   nil,   nil,  8548,   nil,
 14379,   823,   nil,   nil,  4977,   nil,  4737,   739,   nil,   nil,
   nil,   nil,   nil,   nil, 20740,   nil,   731,   nil, 13784, 13665,
   nil,   nil,     0,  3426,   205,  3902,  3067,   nil,   nil,   718,
   286,  2948,   219,   nil,   732,   nil,  4857,   790,   nil, 20763,
  2397, 12356,  1893,   596,   nil,   693,   709, 21884, 12118, 11999,
 20901,   nil,   nil,   nil,   nil,   nil,  5572,  5695,   nil,   nil,
  6047,   699,   676,   639,   nil,   nil,   nil,   nil,  6527,  1466,
  2146, 20928,   142,   306,  2943, 20958,   431,  3421, 20973,  8905,
  7000, 21171, 15212,  7352, 21186,   550, 21201, 21354,   815, 21369,
 21384, 21399, 21414,   964, 21429,   722,   713, 11404,   nil, 11523,
   nil,   nil, 12951,   nil,   nil,   nil,  4377,  4142,   nil,   611,
  3317, 13903,  2839,   -31, 14141, 22498,   nil,   590,   nil,    23,
   nil,   459,   554,   666,   nil,   544,   506,  5332,   nil,    57,
   598,   nil,   nil,   nil,   nil,   512,   499,   455,   nil,  1165,
   nil,   471,   538,   453,   nil,   405,  1660,   393,   nil,  1075,
   359,   359,   nil,   nil,   nil,   nil,   nil,   nil,   354,   nil,
   nil,   nil,   nil,   nil,   317,  7357,   nil,   nil,   nil,   222,
    76,  1044, 17473, 18544,   -77, 21597,  3186,  3545,   347,   179,
    14,   nil,  1796,   nil,   -81,   nil,    36,   nil,   nil,   nil,
  7717,   134,   190,   nil, 16997,   nil,   nil,   184,   nil,   248,
   nil,   234,   261,   282,   289,   413,   343,   nil, 16759,   nil,
   669,   992, 16402, 16283,   489,   nil,   138,   428, 16045,   544,
   nil, 15807,   nil,   653,   nil,   550,   790,   481,   669,   324,
   nil, 22347,   524, 21582,    10,   649,   nil,   660,   nil,   122,
   676,   604,  8304, 21620,   722,   nil,   121,   317,   740,   765,
   nil,   326,   327,   681,   -24,   -66,   180,   716, 22109,   nil,
   nil,   816,   nil,   nil,  2470,   nil,  3705,   nil,   nil,   nil,
   758,   nil,   nil,   nil,   nil,  2646,   nil,  1086,   nil,   769,
  1540,   233,   nil,   nil,   nil,   nil,   nil,   nil,  7957,   nil,
   230,   nil, 22573,   800,  8667, 21216,  9262,   -20, 11166, 11285,
  6407,   nil,   nil,   848,   nil,   nil, 22034,   nil,   850,  3257,
   nil,  2353,   nil,  1631,   nil,   nil,   nil, 21156,   nil, 21141,
 21126,   nil, 14022,   nil,   nil, 20690,   nil,   nil,  2784, 19020,
   nil,   971,   491,   894,   nil,   981,   nil,   nil, 18663,   nil,
 17116,  7597,   nil,   nil,   nil,    22,  5097,   nil,   nil,   940,
  1153,   945,   949,   975,  1422,   990,  1638,  1007,   nil,  4497,
   nil,   788,   449,  1051,   590,  1030, 10571,  1117,   nil,   548,
  1083,   nil,  1052,  1053,   nil,  1054,  1066,  1068,   nil, 20943,
    31,   nil,   nil, 20988,   nil,   550,  1170,   nil,   nil,   nil,
  3824,   nil,   nil,  1093,  1532,  1178,  1362,  9024,  1836,   568,
   nil,  1305,   nil,  3264,   nil,  3587,   nil,   nil,  1786,   nil,
   nil,  4617,   nil,   nil,   nil,   nil,  1152,  1153,   nil,   145,
   669,  1144,   141,   165,  1166,  1167,  1185,  1188,  1189,  1190,
   765,   nil,   218,   nil,  3108,   nil,   nil,   nil,   nil,  1203,
   nil ]

racc_action_default = [
    -2,  -538,    -1,  -537,  -538,  -446,  -436,  -266,  -538,  -475,
   -53,  -445,  -437,  -421,  -400,  -267,  -538,  -447,  -419,  -401,
  -310,  -537,  -538,  -538,  -448,  -421,  -403,   -41,  -538,  -233,
  -454,  -421,  -308,  -538,  -538,  -538,  -538,    -3,  -455,  -411,
  -309,  -538,  -538,  -417,  -311,   -65,  -538,  -524,  -285,  -538,
  -300,  -538,  -538,  -450,  -312,  -301,    -5,  -538,  -449,  -313,
  -302,    -6,  -268,   -69,  -451,  -314,  -303,  -538,  -538,  -538,
  -526,    -9,  -538,  -538,   -79,  -440,  -399,  -538,  -537,   -40,
  -305,  -402,  -538,  -452,  -514,  -442,  -404,  -261,  -538,  -441,
   -46,  -262,  -524,  -537,  -443,  -306,  -277,  -263,  -537,   -48,
  -444,  -307,  -280,  -264,  -538,   -77,   -49,  -383,  -265,  -526,
   951,  -304,  -538,  -538,  -538,  -300,  -301,  -268,  -538,  -526,
  -537,  -305,  -101,  -452,  -538,  -104,  -538,  -277,  -102,  -280,
  -383,  -538,  -481,  -474,  -495,  -478,  -499,  -498,  -484,  -477,
  -537,  -486,  -476,  -475,  -287,  -492,  -480,  -479,  -538,  -538,
  -497,  -537,  -538,  -494,  -538,  -368,  -537,  -538,  -538,  -176,
  -126,  -171,  -161,  -117,  -152,  -160,  -118,  -169,  -128,  -155,
  -119,  -139,  -179,  -430,  -181,  -125,  -164,  -120,  -185,  -127,
  -141,  -151,  -121,  -186,  -132,  -138,  -122,  -165,  -133,  -129,
  -154,  -134,  -142,  -123,  -143,  -168,  -136,  -146,  -124,  -144,
  -156,  -137,  -147,  -167,  -172,  -148,  -157,  -174,  -140,  -180,
  -158,  -166,  -145,  -149,  -159,  -106,  -173,  -130,  -108,  -433,
  -163,  -131,  -432,  -150,  -431,  -538,  -183,  -175,  -107,  -434,
  -184,  -182,  -109,  -135,  -110,  -177,  -170,  -178,    -8,  -538,
  -538,   -13,   -14,  -538,  -537,  -524,  -538,  -538,  -538,   -45,
  -538,  -538,  -268,  -538,  -452,  -223,  -538,  -537,  -538,  -538,
  -176,  -504,  -169,  -179,  -164,  -538,  -146,  -147,  -148,  -106,
  -538,  -475,  -107,  -538,  -208,  -113,  -112,  -114,  -538,  -111,
   -17,  -538,  -538,   -57,  -284,  -537,  -537,  -508,  -376,  -254,
  -537,  -537,  -248,  -537,  -234,  -244,  -538,  -538,  -538,  -249,
  -538,  -538,  -538,  -438,  -439,    -4,  -535,  -533,  -525,  -534,
  -286,  -538,  -537,  -538,   -51,  -209,  -537,   -52,  -538,   -47,
  -538,  -538,   -92,  -538,   -70,  -537,   -85,   -73,  -274,   -81,
  -224,  -527,  -538,  -538,  -538,  -538,  -538,  -538,  -538,   -22,
  -115,  -538,   -67,  -526,  -537,  -538,  -538,  -538,  -405,  -526,
  -538,  -538,  -538,  -538,  -538,  -538,  -538,  -538,  -538,  -538,
  -538,  -538,  -538,  -538,  -538,  -538,  -538,  -538,  -538,  -538,
  -538,  -538,  -538,  -538,  -538,  -538,  -538,  -524,  -538,  -525,
  -538,  -530,  -235,  -530,   -50,  -538,  -506,  -530,  -538,  -537,
  -537,  -373,   -64,  -526,  -325,  -326,  -538,  -268,  -538,  -452,
  -538,   -75,  -538,   -63,  -382,  -526,  -538,  -438,  -439,  -538,
  -537,  -538,  -101,  -102,  -103,  -538,  -538,  -538,  -538,  -537,
  -456,  -538,  -538,  -538,  -503,  -470,  -537,  -483,  -538,  -537,
  -537,  -366,  -496,  -538,  -467,  -500,  -481,  -338,  -329,  -327,
  -526,  -331,  -538,  -538,  -538,  -472,  -515,  -517,  -516,  -537,
  -518,  -537,  -537,  -538,  -435,  -423,  -422,  -406,  -420,   -16,
  -270,  -315,  -537,  -391,  -537,   -12,  -525,   -29,  -538,   -37,
  -254,  -187,  -538,  -538,  -538,  -538,  -537,  -538,  -538,  -274,
  -407,  -538,  -408,   -30,   -39,   -38,  -538,  -523,  -522,  -526,
  -475,  -538,  -537,  -538,  -538,   -21,   -20,   -19,  -538,  -410,
  -538,  -413,  -409,  -537,   -58,  -252,  -245,  -253,  -252,  -246,
  -538,  -537,  -356,  -355,  -537,  -358,  -537,  -526,  -242,  -243,
  -255,  -511,  -250,   -31,  -189,  -416,  -538,  -415,  -538,  -538,
    -7,  -536,  -515,  -520,  -516,  -538,  -521,  -381,  -379,  -526,
  -515,  -537,  -516,  -380,  -538,  -317,  -537,  -316,   -36,  -197,
  -538,  -537,  -538,   -91,   -82,  -526,   -71,  -538,  -538,  -538,
  -231,   -27,   -23,   -24,   -25,   -26,  -537,  -538,  -320,  -319,
  -537,   -66,  -538,  -526,  -272,   -43,   -42,  -271,  -537,  -213,
  -218,  -210,  -227,  -225,  -219,  -211,  -226,  -220,  -212,  -538,
  -221,  -214,  -538,  -222,  -216,  -205,  -200,  -201,  -215,  -202,
  -198,  -203,  -199,  -217,  -204,  -538,  -538,  -538,  -275,  -532,
  -236,  -531,  -532,  -238,  -276,  -507,  -537,  -537,  -279,  -526,
  -538,  -537,  -538,  -274,  -538,  -538,   -83,   -78,  -283,  -526,
   -44,  -101,  -538,  -102,  -105,  -526,  -537,  -537,  -458,  -538,
  -538,  -482,  -488,  -502,  -493,  -537,  -537,  -526,  -360,  -538,
  -501,  -538,  -538,  -537,  -487,  -537,  -538,  -336,  -485,  -538,
  -526,  -537,   -55,  -240,  -241,  -375,   -54,  -374,  -538,  -424,
  -426,  -427,  -429,  -428,  -537,  -537,  -323,  -394,  -393,  -537,
  -392,   -15,  -538,  -538,  -260,  -187,  -519,  -273,  -526,  -515,
  -516,  -297,  -475,  -505,  -526,  -460,  -538,   -18,  -412,  -414,
  -537,  -537,  -256,  -251,  -538,  -509,  -510,  -481,  -354,  -538,
  -490,  -537,  -537,  -537,  -537,  -538,  -538,  -239,  -538,  -418,
  -206,  -207,  -538,  -538,   -61,  -378,  -384,  -538,  -538,   -59,
  -377,  -538,   -28,  -537,  -318,   -88,   -90,  -526,  -515,  -516,
   -80,  -538,   -74,  -196,  -526,  -537,  -116,  -538,  -528,   -68,
  -538,  -538,  -228,  -230,  -538,  -293,  -538,  -530,  -538,  -538,
  -278,  -519,  -273,  -526,  -515,  -516,  -538,   -76,  -538,  -282,
  -384,  -538,  -457,  -295,  -538,  -471,  -538,  -468,  -367,  -364,
  -361,  -362,  -365,  -369,  -370,  -538,  -463,  -538,  -465,  -339,
  -538,  -334,  -330,  -328,  -473,  -425,   -11,  -398,  -537,  -324,
  -538,  -396,  -538,  -258,  -538,  -188,  -538,  -384,  -538,  -538,
  -537,  -459,  -298,  -538,  -247,  -257,  -538,  -357,  -538,  -345,
  -347,  -538,  -350,  -538,  -352,  -386,  -385,  -190,   -35,  -194,
  -195,   -62,  -538,  -529,   -33,  -192,   -60,   -34,  -193,  -538,
  -321,  -538,   -86,   -72,  -281,  -538,  -290,  -291,  -538,  -292,
  -538,  -537,  -237,  -372,  -371,  -384,  -537,   -84,  -296,  -537,
  -538,  -537,  -537,  -537,  -538,  -337,  -538,  -332,  -397,  -537,
  -395,  -538,  -100,  -538,   -93,  -259,  -538,  -538,   -56,  -489,
  -538,  -359,  -537,  -537,  -491,  -537,  -537,  -537,   -32,  -191,
  -538,  -288,  -289,  -232,  -256,  -537,  -538,  -469,  -363,  -464,
  -538,  -461,  -466,  -335,  -538,  -537,  -538,  -537,  -538,   -99,
  -299,  -538,  -274,  -538,  -342,  -538,  -344,  -351,  -538,  -348,
  -353,  -537,  -387,  -389,  -388,  -294,  -537,  -333,  -390,  -519,
   -98,  -526,  -515,  -516,  -519,  -273,  -537,  -537,  -537,  -537,
  -537,  -462,  -384,  -343,  -538,  -340,  -346,  -349,  -322,  -537,
  -341 ]

clist = [
'56,71,42,288,243,449,451,232,324,462,332,546,383,155,71,42,606,387,314',
'249,42,280,381,317,277,439,492,306,232,133,232,566,295,276,517,283,111',
'644,570,224,713,295,627,504,674,414,295,578,440,406,506,509,305,539',
'647,401,111,458,340,415,271,277,61,342,384,781,841,232,654,404,276,789',
'306,308,288,238,705,42,884,610,792,613,782,126,47,615,343,295,385,261',
'382,111,404,295,469,386,392,378,295,501,225,403,703,257,726,703,420',
'484,711,514,516,318,256,665,419,667,144,380,258,42,486,498,395,780,339',
'796,338,149,431,310,391,341,111,111,922,679,800,424,348,709,239,265',
'350,281,500,3,377,426,424,301,669,635,173,424,653,37,2,400,428,535,1',
'541,,133,,,,,,,884,,,,,468,,62,,,705,,117,,,,,,468,,62,,,,,62,,742,',
',770,646,117,,,865,,,616,617,,655,,,,,,688,,,,,,,,306,,,,,,,,,,,,322',
'459,42,481,463,467,754,,,,,,,465,,62,807,,483,42,,,636,,519,,,,767,',
',,,,466,,948,,543,898,556,397,322,519,903,507,507,295,792,,513,513,714',
'518,133,737,782,62,,523,,,,,,842,295,,536,71,42,657,518,342,,678,,439',
'42,548,,699,927,,569,700,535,42,541,,845,855,342,569,561,42,555,,,634',
'660,,818,,,636,42,,319,,626,882,,,22,573,,,111,,306,,,319,619,763,,22',
'319,,530,,22,349,,,543,,,319,,519,,319,843,605,,295,,513,513,562,563',
'564,565,,468,,,637,638,,644,636,295,640,536,,,,518,,654,,664,416,664',
'62,,,,42,,,,,648,701,,22,,42,42,111,62,,,,,,,,543,295,,295,662,519,666',
'663,810,663,851,,42,394,,654,852,543,,,676,,677,,856,681,42,814,295',
'22,536,636,695,639,518,,696,,924,,727,232,,62,697,831,,277,536,460,836',
'62,42,232,869,694,276,942,725,,62,513,322,626,664,,,,62,648,,133,,692',
'42,543,42,,,62,519,,,751,,,,295,439,757,724,439,708,295,923,,729,756',
',663,,,,295,,536,42,,,518,,,,746,,,277,,,489,,,232,,862,276,42,,,,42',
'626,,,,,727,322,42,,425,,,,921,543,111,,,22,519,434,,,62,725,445,,883',
'664,886,,,,62,62,22,,,,,,,295,,536,42,42,,518,772,771,,319,319,319,319',
'62,672,727,,,,,663,575,576,42,,,,62,,424,424,,,,,931,,424,,424,111,',
',22,,424,,,439,867,,22,,62,,,,928,797,,22,42,,801,727,766,,,22,,,,,626',
',62,,62,937,22,629,630,,,,507,42,,,,727,,,319,,648,424,424,424,133,857',
',,,,828,,62,,,,834,,691,837,,,676,322,571,,645,439,,439,577,,62,,676',
',62,,569,,,,,,62,,,661,636,,,,,,,,,,,22,,111,,,,,,439,,22,22,,,,618',
',,,,,,,62,62,,877,628,,111,42,,322,22,,,345,,,,,,42,,62,,,22,,,,,,,388',
'712,,,,,,888,658,111,,,,,,,,,,22,,,,111,345,,744,,62,42,755,,,,42,424',
',424,424,424,,22,,22,,,,42,,543,727,,,62,519,,,693,424,424,,424,424',
'424,773,,,,,,,676,890,22,,,,295,,536,,463,,518,536,717,,,,,,319,,22',
'322,,,22,,42,,,424,,,22,,,,,,,424,424,424,424,676,,,,812,322,,740,,424',
',,,,,,49,,,,,114,,,,749,,22,22,49,,,470,,49,62,251,,,872,,114,,,,485',
',62,22,,,,,117,251,846,,,847,,,,849,251,,,,,251,,251,760,,,,,321,,,858',
',769,520,521,522,251,22,,62,,251,49,,62,,251,,,,778,,251,,,544,251,62',
',,251,,22,793,345,,251,,396,321,,251,,,,,,,,,,,,345,49,,,,251,,,,,,',
',,811,775,777,891,859,,,892,,786,,788,62,861,,863,83,794,,,,123,,,,',
',,,83,,,,,83,,,,,910,,123,,,319,,,123,,885,844,887,,,,,,,925,,,,642',
'22,,,,870,820,822,824,651,652,,,22,326,,,,,,,,,,,,,,,83,,,668,,,,,,',
',,,680,,,49,,,,,684,251,,,22,399,326,,,22,,,49,,251,,926,,,,,83,22,',
',251,,,,936,,938,,702,939,,388,,706,,,,,,715,,716,,251,,,,,,,251,,,',
',949,,,49,,,,251,,,,49,,,22,251,733,,,,49,,321,,,,,,49,251,251,251,251',
',,,745,,,49,747,251,251,897,,899,901,902,750,,,,,,,,,,,,,,,,,,914,916',
',917,919,920,,,,470,,702,,,388,83,,,,,758,759,251,,,,,,,,,321,83,,251',
'251,,,,251,,,,,941,,,251,49,,,,,,943,945,946,947,49,49,,,,,,,,950,,',
',,,,,,,,251,799,251,49,,83,803,,,,,,,83,,,,49,,,,,83,,326,,813,251,815',
',83,,,,,,,,,,,83,,49,,,,,,,,,,,,,,,,,,,,,,49,,49,,,,,,,,,,,,,,,,,,,251',
',,,,,251,,,,,49,,326,,,251,,,,,,321,,251,,,,,,83,49,,,,49,,,868,,83',
'83,875,49,,,,,,,,,,,,,,,,,,,,83,,,,,,,,,,,,,,83,,,,49,49,,,,251,,894',
'251,321,895,,,,,896,,,,,255,49,83,,,,,,905,,,,274,,,,,,294,,,,,,83,',
'83,294,315,,,,294,,,,,,,49,,,,,,,330,,,,,,,,,,83,,,,940,,,,49,,,326',
',,294,,,294,,294,83,,,294,83,,,,294,,251,,83,,,,251,,,251,,,,,,,,,,321',
',,,,,,,,,,,,,,,,,,,,83,83,,,,,321,,,326,,,,,,,,,,,,83,,,,,,,,,,,,,,',
'49,,,,871,,,,,,,,49,,,,,,879,,,,,83,,,,,,,,,,,251,,,,,,,251,,,,,,,83',
',,,,49,,,,,49,,,471,,255,,,,,,,,49,,,294,,,,,,,,,,,,,,,326,,,,,,,,,',
',,,,,,,,,294,251,,294,294,294,,524,326,,,,,,,49,,,,294,,,,,,,,549,,',
',,,,,,,,83,560,,,874,,,,,,,,83,,,,,,123,,579,580,581,582,583,584,585',
'586,587,588,,590,591,,593,594,595,596,597,598,599,600,601,602,603,604',
',,,,,,,83,,,,,83,,,,294,,,,112,,,,,83,,,,,,,,294,,,,,,,112,,,,,294,',
'112,,,,,,,,,,,,,,,,112,,,,,,,,,294,,294,112,,83,,,,112,,,,,,294,,,,',
',,,294,685,524,,294,,549,,,,112,,,,,112,,,,,,112,112,,,,,,,,,,,294,',
',294,,294,,,,,,,,,,,,,,,,,,720,721,,,,,,294,,,,,,294,,,,,,,,,,294,,',
',,,,743,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,752,,,753,,,,,,,,,,,,,,,294,,294',
',,294,,,,,,,,,294,,,,,,,,,,,,,,,,112,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,294,805,,112,112,112,,,,,,,,,,,,,,,,,294,,,,,,,,,,,,112',
',827,,,112,829,830,,,,,835,,,838,,,,,,,,,112,112,112,112,112,112,112',
'112,112,112,,112,112,,112,112,112,112,112,112,112,112,112,112,112,112',
',,,,,,,,,,,,,,,,,,,,,,,,,112,,,,,,,,,,,,,294,,829,,835,838,,112,,,,',
',,,,,,,,,,,,,,,,889,,,,,,,,,,,,,,,,893,,294,,,112,,,,,,,,112,112,112',
',,,112,,,,,,,,,889,,,,,,,,,,,,,,,,,,112,,,112,,112,,,,,,,,294,,,,,,',
',,,112,112,,,,,,,,,,,,,,,,,,,,,,,,,,,,112,112,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,112,,,112,,,,,,,,,,,,,,,112,,112,,,112,,,,,,,,,,,,,112,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,112,112,,,,,,,,,',
',,,,,,,,,,,112,,,,,,,,,,,,,,112,,,,,112,,,,,,,,,,,,,,,,,,112,,,,,,,',
',,,,,,,,,,,,,,,,,,,112,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,112,,112,,112',
',112,112,,,,,,,112,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,112,,112,,,,,,,,,',
',,,,,,,,,,,,,,,,112' ]
        racc_goto_table = arr = Array.new(2829, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'7,10,23,66,11,38,38,54,47,13,32,84,65,119,10,23,91,65,36,21,23,17,63',
'36,58,103,99,96,54,111,54,84,34,57,25,39,59,138,88,53,108,34,49,40,14',
'51,34,88,104,32,68,68,6,25,113,48,59,132,17,32,53,58,8,43,36,115,85',
'54,137,66,57,105,96,9,66,8,142,23,139,64,102,64,116,52,5,64,44,34,79',
'76,7,59,66,34,28,7,39,6,34,132,129,39,69,52,26,69,96,28,106,41,41,19',
'129,67,95,67,82,62,129,23,101,31,22,114,18,15,19,117,118,80,120,19,59',
'59,122,123,124,7,127,113,128,100,19,130,131,4,19,119,7,133,134,25,135',
'7,136,3,2,93,141,38,1,38,,111,,,,,,,139,,,,,63,,27,,,142,,27,,,,,,63',
',27,,,,,27,,49,,,26,109,27,,,105,,,41,41,,109,,,,,,25,,,,,,,,96,,,,',
',,,,,,,27,10,23,11,7,21,91,,,,,,,6,,27,26,,21,23,,,38,,36,,,,49,,,,',
',9,,85,,66,115,48,27,27,36,105,7,7,34,102,,7,7,109,7,111,25,116,27,',
'21,,,,,,26,34,,54,10,23,103,7,43,,28,,103,23,21,,132,105,,96,41,38,23',
'38,,14,26,43,96,10,23,44,,,51,104,,113,,,38,23,,30,,47,108,,,20,44,',
',59,,96,,,30,36,25,,20,30,,8,,20,30,,,66,,,30,,36,,30,49,6,,34,,7,7',
'19,19,19,19,,63,,,96,96,,138,38,34,11,54,,,,7,,137,,66,30,66,27,,,,23',
',,,,7,65,,20,,23,23,59,27,,,,,,,,66,34,,34,39,36,39,7,99,7,84,,23,20',
',137,64,66,,,7,,7,,88,10,23,68,34,20,54,38,96,19,7,,11,,14,,32,54,,27',
'17,40,,58,54,78,40,27,23,54,84,119,57,26,66,,27,7,27,47,66,,,,27,7,',
'111,,53,23,66,23,,,27,36,,,32,,,,34,103,65,39,103,111,34,91,,39,63,',
'7,,,,34,,54,23,,,7,,,,17,,,58,,,30,,,54,,109,57,23,,,,23,47,,,,,32,27',
'23,,110,,,,84,66,59,,,20,36,110,,,27,66,110,,109,66,109,,,,27,27,20',
',,,,,,34,,54,23,23,,7,96,11,,30,30,30,30,27,27,32,,,,,7,30,30,23,,,',
'27,,7,7,,,,,25,,7,,7,59,,,20,,7,,,103,103,,20,,27,,,,13,7,,20,23,,7',
'32,19,,,20,,,,,47,,27,,27,109,20,30,30,,,,7,23,,,,32,,,30,,7,7,7,7,111',
'47,,,,,21,,27,,,,21,,78,21,,,7,27,45,,107,103,,103,45,,27,,7,,27,,96',
',,,,,27,,,107,38,,,,,,,,,,,20,,59,,,,,,103,,20,20,,,,45,,,,,,,,27,27',
',11,45,,59,23,,27,20,,,12,,,,,,23,,27,,,20,,,,,,,29,107,,,,,,21,45,59',
',,,,,,,,,20,,,,59,12,,30,,27,23,78,,,,23,7,,7,7,7,,20,,20,,,,23,,66',
'32,,,27,36,,,45,7,7,,7,7,7,78,,,,,,,7,19,20,,,,34,,54,,7,,7,54,45,,',
',,,30,,20,27,,,20,,23,,,7,,,20,,,,,,,7,7,7,7,7,,,,78,27,,45,,7,,,,,',
',24,,,,,24,,,,45,,20,20,24,,,29,,24,27,24,,,27,,24,,,,29,,27,20,,,,',
'27,24,78,,,78,,,,78,24,,,,,24,,24,45,,,,,24,,,78,,45,29,29,29,24,20',
',27,,24,24,,27,,24,,,,45,,24,,,12,24,27,,,24,,20,45,12,,24,,24,24,,24',
',,,,,,,,,,,12,24,,,,24,,,,,,,,,45,110,110,78,107,,,78,,110,,110,27,107',
',107,50,110,,,,50,,,,,,,,50,,,,,50,,,,,78,,50,,,30,,,50,,107,45,107',
',,,,,,78,,,,29,20,,,,20,110,110,110,12,12,,,20,50,,,,,,,,,,,,,,,50,',
',12,,,,,,,,,,29,,,24,,,,,29,24,,,20,50,50,,,20,,,24,,24,,107,,,,,50',
'20,,,24,,,,107,,107,,29,107,,29,,29,,,,,,12,,12,,24,,,,,,,24,,,,,107',
',,24,,,,24,,,,24,,,20,24,12,,,,24,,24,,,,,,24,24,24,24,24,,,,12,,,24',
'12,24,24,110,,110,110,110,12,,,,,,,,,,,,,,,,,,110,110,,110,110,110,',
',,29,,29,,,29,50,,,,,12,12,24,,,,,,,,,24,50,,24,24,,,,24,,,,,110,,,24',
'24,,,,,,110,110,110,110,24,24,,,,,,,,110,,,,,,,,,,,24,12,24,24,,50,29',
',,,,,,50,,,,24,,,,,50,,50,,12,24,29,,50,,,,,,,,,,,50,,24,,,,,,,,,,,',
',,,,,,,,,,24,,24,,,,,,,,,,,,,,,,,,,24,,,,,,24,,,,,24,,50,,,24,,,,,,24',
',24,,,,,,50,24,,,,24,,,12,,50,50,29,24,,,,,,,,,,,,,,,,,,,,50,,,,,,,',
',,,,,,50,,,,24,24,,,,24,,29,24,24,12,,,,,12,,,,,33,24,50,,,,,,12,,,',
'33,,,,,,33,,,,,,50,,50,33,33,,,,33,,,,,,,24,,,,,,,33,,,,,,,,,,50,,,',
'12,,,,24,,,50,,,33,,,33,,33,50,,,33,50,,,,33,,24,,50,,,,24,,,24,,,,',
',,,,,24,,,,,,,,,,,,,,,,,,,,,50,50,,,,,24,,,50,,,,,,,,,,,,50,,,,,,,,',
',,,,,,24,,,,24,,,,,,,,24,,,,,,24,,,,,50,,,,,,,,,,,24,,,,,,,24,,,,,,',
'50,,,,,24,,,,,24,,,33,,33,,,,,,,,24,,,33,,,,,,,,,,,,,,,50,,,,,,,,,,',
',,,,,,,,33,24,,33,33,33,,33,50,,,,,,,24,,,,33,,,,,,,,33,,,,,,,,,,,50',
'33,,,50,,,,,,,,50,,,,,,50,,33,33,33,33,33,33,33,33,33,33,,33,33,,33',
'33,33,33,33,33,33,33,33,33,33,33,,,,,,,,50,,,,,50,,,,33,,,,42,,,,,50',
',,,,,,,33,,,,,,,42,,,,,33,,42,,,,,,,,,,,,,,,,42,,,,,,,,,33,,33,42,,50',
',,,42,,,,,,33,,,,,,,,33,33,33,,33,,33,,,,42,,,,,42,,,,,,42,42,,,,,,',
',,,,33,,,33,,33,,,,,,,,,,,,,,,,,,33,33,,,,,,33,,,,,,33,,,,,,,,,,33,',
',,,,,33,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,33,,,33,,,,,,,,,,,,,,,33,,33,',
',33,,,,,,,,,33,,,,,,,,,,,,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,33,33,,42,42,42,,,,,,,,,,,,,,,,,33,,,,,,,,,,,,42,,33,,,42,33',
'33,,,,,33,,,33,,,,,,,,,42,42,42,42,42,42,42,42,42,42,,42,42,,42,42,42',
'42,42,42,42,42,42,42,42,42,,,,,,,,,,,,,,,,,,,,,,,,,,42,,,,,,,,,,,,,33',
',33,,33,33,,42,,,,,,,,,,,,,,,,,,,,,33,,,,,,,,,,,,,,,,33,,33,,,42,,,',
',,,,42,42,42,,,,42,,,,,,,,,33,,,,,,,,,,,,,,,,,,42,,,42,,42,,,,,,,,33',
',,,,,,,,,42,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,42,42,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,42,,,42,,,,,,,,,,,,,,,42,,42,,,42,,,,,,,,,,,,,42,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,42,42,,,,,,,,,,,,,,,',
',,,,,42,,,,,,,,,,,,,,42,,,,,42,,,,,,,,,,,,,,,,,,42,,,,,,,,,,,,,,,,,',
',,,,,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,42,,42,,42,,42,42,,,,,',
',42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,42,,42,,,,,,,,,,,,,,,,,,,,,,,,,,42' ]
        racc_goto_check = arr = Array.new(2829, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_goto_pointer = [
   nil,   160,   156,   152,   145,    81,     5,    -3,    59,    26,
    -2,   -17,   725,  -235,  -418,  -549,   nil,   -15,    51,    54,
   348,    -4,    18,    -1,   950,  -259,  -435,   174,  -152,   723,
   288,  -159,   -60,  1563,    -9,   nil,   -32,   nil,  -152,    -6,
  -240,  -181,  1952,   -15,     8,   389,   nil,   -55,   -50,  -360,
  1096,   -73,    75,    26,    -6,   nil,   nil,    -3,   -12,    28,
   nil,   nil,    24,   -71,  -302,   -81,   -38,  -336,  -235,  -403,
   nil,   nil,   nil,   nil,   nil,   nil,    55,   nil,   245,   -10,
    81,   nil,   107,   nil,  -307,  -667,   nil,   nil,  -303,   nil,
   nil,  -362,   nil,    53,   nil,   -12,   -20,   nil,   nil,  -245,
   107,  -145,  -579,  -129,  -106,  -585,  -403,   311,  -471,  -222,
   439,    20,   nil,  -372,  -526,  -584,  -567,   118,   -21,     4,
    31,   nil,  -761,  -329,  -543,   nil,   nil,    57,   122,    87,
   104,  -137,  -182,   106,  -303,   139,  -279,  -365,  -386,  -743,
   nil,    10,  -432 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   241,   nil,   379,
   242,   nil,   244,   nil,   840,   nil,   245,   nil,   nil,   nil,
   247,    27,    33,   250,   273,   nil,   nil,   252,   nil,   289,
    79,   nil,   572,    90,    99,   106,   299,    10,   632,   nil,
   nil,   nil,    41,    45,   nil,   nil,    63,    68,    74,   nil,
   254,   125,   nil,   279,   450,   234,   275,    14,    19,    29,
   361,   364,   nil,   285,   nil,   286,   537,   730,   nil,   292,
    87,    91,    97,   103,   108,     7,    15,    21,   nil,   nil,
   284,    48,   nil,    57,   nil,   nil,    72,    77,   nil,    88,
    92,   nil,   104,   nil,     8,   nil,   547,    28,    34,   nil,
   nil,   nil,   438,   138,   nil,   441,   nil,   151,   nil,   156,
   nil,   643,   512,   nil,   nil,   nil,   146,   nil,   nil,   491,
   nil,   538,   nil,   nil,   nil,    76,    81,    86,   nil,   nil,
   nil,   nil,   456,   nil,   nil,   nil,   140,   141,   145,   710,
   150,   152,   287 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 154, :_reduce_1,
  0, 157, :_reduce_2,
  2, 155, :_reduce_3,
  2, 156, :_reduce_4,
  1, 158, :_reduce_5,
  1, 158, :_reduce_6,
  3, 158, :_reduce_7,
  2, 158, :_reduce_8,
  1, 161, :_reduce_9,
  1, 161, :_reduce_none,
  4, 164, :_reduce_11,
  2, 165, :_reduce_12,
  1, 169, :_reduce_13,
  1, 169, :_reduce_14,
  3, 169, :_reduce_15,
  2, 169, :_reduce_none,
  0, 184, :_reduce_17,
  4, 163, :_reduce_18,
  3, 163, :_reduce_none,
  3, 163, :_reduce_none,
  3, 163, :_reduce_none,
  2, 163, :_reduce_none,
  3, 163, :_reduce_23,
  3, 163, :_reduce_24,
  3, 163, :_reduce_none,
  3, 163, :_reduce_none,
  3, 163, :_reduce_none,
  4, 163, :_reduce_none,
  3, 163, :_reduce_29,
  3, 163, :_reduce_none,
  3, 163, :_reduce_none,
  6, 163, :_reduce_none,
  5, 163, :_reduce_none,
  5, 163, :_reduce_none,
  5, 163, :_reduce_none,
  3, 163, :_reduce_none,
  3, 163, :_reduce_none,
  3, 163, :_reduce_none,
  3, 163, :_reduce_none,
  1, 163, :_reduce_none,
  1, 183, :_reduce_none,
  3, 183, :_reduce_none,
  3, 183, :_reduce_none,
  3, 183, :_reduce_44,
  2, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 172, :_reduce_none,
  1, 174, :_reduce_none,
  1, 174, :_reduce_none,
  2, 174, :_reduce_50,
  2, 174, :_reduce_none,
  2, 174, :_reduce_none,
  1, 188, :_reduce_none,
  4, 188, :_reduce_none,
  4, 188, :_reduce_none,
  4, 193, :_reduce_none,
  2, 187, :_reduce_57,
  3, 187, :_reduce_none,
  4, 187, :_reduce_59,
  5, 187, :_reduce_none,
  4, 187, :_reduce_none,
  5, 187, :_reduce_none,
  2, 187, :_reduce_63,
  2, 187, :_reduce_64,
  1, 175, :_reduce_none,
  3, 175, :_reduce_none,
  1, 197, :_reduce_none,
  3, 197, :_reduce_none,
  1, 196, :_reduce_none,
  2, 196, :_reduce_none,
  3, 196, :_reduce_none,
  5, 196, :_reduce_none,
  2, 196, :_reduce_none,
  4, 196, :_reduce_none,
  2, 196, :_reduce_none,
  4, 196, :_reduce_none,
  1, 196, :_reduce_none,
  3, 196, :_reduce_none,
  1, 200, :_reduce_none,
  3, 200, :_reduce_none,
  2, 199, :_reduce_none,
  3, 199, :_reduce_none,
  1, 202, :_reduce_none,
  3, 202, :_reduce_none,
  1, 201, :_reduce_none,
  4, 201, :_reduce_none,
  3, 201, :_reduce_none,
  3, 201, :_reduce_none,
  3, 201, :_reduce_none,
  3, 201, :_reduce_none,
  2, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 173, :_reduce_none,
  4, 173, :_reduce_94,
  3, 173, :_reduce_95,
  3, 173, :_reduce_none,
  3, 173, :_reduce_none,
  3, 173, :_reduce_none,
  2, 173, :_reduce_none,
  1, 173, :_reduce_none,
  1, 204, :_reduce_101,
  1, 204, :_reduce_102,
  2, 205, :_reduce_103,
  1, 205, :_reduce_104,
  3, 205, :_reduce_none,
  1, 206, :_reduce_none,
  1, 206, :_reduce_none,
  1, 206, :_reduce_none,
  1, 206, :_reduce_109,
  1, 206, :_reduce_110,
  1, 209, :_reduce_none,
  1, 209, :_reduce_none,
  1, 170, :_reduce_none,
  1, 170, :_reduce_none,
  1, 171, :_reduce_none,
  3, 171, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  3, 186, :_reduce_187,
  5, 186, :_reduce_none,
  3, 186, :_reduce_189,
  5, 186, :_reduce_none,
  6, 186, :_reduce_none,
  5, 186, :_reduce_none,
  5, 186, :_reduce_none,
  5, 186, :_reduce_none,
  5, 186, :_reduce_none,
  4, 186, :_reduce_none,
  3, 186, :_reduce_none,
  3, 186, :_reduce_none,
  3, 186, :_reduce_none,
  3, 186, :_reduce_200,
  3, 186, :_reduce_201,
  3, 186, :_reduce_202,
  3, 186, :_reduce_203,
  3, 186, :_reduce_204,
  3, 186, :_reduce_205,
  4, 186, :_reduce_none,
  4, 186, :_reduce_none,
  2, 186, :_reduce_none,
  2, 186, :_reduce_209,
  3, 186, :_reduce_210,
  3, 186, :_reduce_211,
  3, 186, :_reduce_212,
  3, 186, :_reduce_213,
  3, 186, :_reduce_214,
  3, 186, :_reduce_215,
  3, 186, :_reduce_216,
  3, 186, :_reduce_217,
  3, 186, :_reduce_218,
  3, 186, :_reduce_219,
  3, 186, :_reduce_220,
  3, 186, :_reduce_221,
  3, 186, :_reduce_222,
  2, 186, :_reduce_223,
  2, 186, :_reduce_224,
  3, 186, :_reduce_225,
  3, 186, :_reduce_226,
  0, 213, :_reduce_227,
  4, 186, :_reduce_228,
  0, 214, :_reduce_229,
  4, 186, :_reduce_230,
  3, 186, :_reduce_none,
  6, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 182, :_reduce_none,
  1, 215, :_reduce_none,
  2, 215, :_reduce_none,
  4, 215, :_reduce_none,
  2, 215, :_reduce_none,
  3, 219, :_reduce_239,
  1, 220, :_reduce_240,
  1, 220, :_reduce_none,
  1, 178, :_reduce_242,
  1, 178, :_reduce_none,
  1, 189, :_reduce_244,
  2, 189, :_reduce_245,
  2, 189, :_reduce_246,
  4, 189, :_reduce_247,
  1, 189, :_reduce_248,
  1, 192, :_reduce_none,
  2, 222, :_reduce_250,
  2, 221, :_reduce_251,
  1, 221, :_reduce_none,
  1, 221, :_reduce_none,
  1, 216, :_reduce_254,
  2, 216, :_reduce_255,
  3, 216, :_reduce_256,
  4, 216, :_reduce_257,
  3, 181, :_reduce_none,
  4, 181, :_reduce_none,
  2, 181, :_reduce_none,
  1, 212, :_reduce_none,
  1, 212, :_reduce_none,
  1, 212, :_reduce_none,
  1, 212, :_reduce_none,
  1, 212, :_reduce_none,
  1, 212, :_reduce_none,
  1, 212, :_reduce_none,
  1, 212, :_reduce_none,
  1, 212, :_reduce_none,
  3, 212, :_reduce_none,
  3, 212, :_reduce_none,
  3, 212, :_reduce_272,
  3, 212, :_reduce_273,
  2, 212, :_reduce_274,
  3, 212, :_reduce_275,
  3, 212, :_reduce_276,
  1, 212, :_reduce_277,
  4, 212, :_reduce_278,
  3, 212, :_reduce_279,
  1, 212, :_reduce_280,
  5, 212, :_reduce_none,
  4, 212, :_reduce_none,
  3, 212, :_reduce_none,
  2, 212, :_reduce_284,
  1, 212, :_reduce_285,
  2, 212, :_reduce_286,
  2, 212, :_reduce_none,
  6, 212, :_reduce_288,
  6, 212, :_reduce_289,
  5, 212, :_reduce_none,
  5, 212, :_reduce_none,
  5, 212, :_reduce_292,
  4, 212, :_reduce_293,
  7, 212, :_reduce_none,
  5, 212, :_reduce_295,
  6, 212, :_reduce_none,
  4, 212, :_reduce_297,
  5, 212, :_reduce_298,
  7, 212, :_reduce_299,
  1, 212, :_reduce_none,
  1, 212, :_reduce_none,
  1, 212, :_reduce_none,
  1, 212, :_reduce_none,
  1, 177, :_reduce_none,
  1, 230, :_reduce_none,
  1, 236, :_reduce_none,
  1, 239, :_reduce_none,
  1, 240, :_reduce_none,
  1, 242, :_reduce_none,
  1, 243, :_reduce_none,
  1, 245, :_reduce_none,
  1, 247, :_reduce_none,
  1, 250, :_reduce_none,
  1, 251, :_reduce_none,
  1, 231, :_reduce_none,
  1, 237, :_reduce_none,
  1, 237, :_reduce_none,
  2, 237, :_reduce_none,
  1, 241, :_reduce_none,
  1, 241, :_reduce_none,
  1, 238, :_reduce_321,
  5, 238, :_reduce_322,
  1, 167, :_reduce_323,
  2, 167, :_reduce_324,
  1, 246, :_reduce_none,
  1, 246, :_reduce_none,
  1, 255, :_reduce_none,
  3, 255, :_reduce_none,
  1, 258, :_reduce_none,
  3, 258, :_reduce_none,
  1, 257, :_reduce_none,
  4, 257, :_reduce_none,
  6, 257, :_reduce_none,
  3, 257, :_reduce_none,
  5, 257, :_reduce_none,
  2, 257, :_reduce_none,
  4, 257, :_reduce_none,
  1, 257, :_reduce_none,
  3, 257, :_reduce_none,
  6, 259, :_reduce_none,
  8, 259, :_reduce_none,
  4, 259, :_reduce_none,
  6, 259, :_reduce_none,
  4, 259, :_reduce_none,
  2, 259, :_reduce_none,
  6, 259, :_reduce_none,
  2, 259, :_reduce_none,
  4, 259, :_reduce_none,
  6, 259, :_reduce_none,
  2, 259, :_reduce_none,
  4, 259, :_reduce_none,
  2, 259, :_reduce_none,
  4, 259, :_reduce_none,
  1, 259, :_reduce_none,
  1, 194, :_reduce_355,
  1, 194, :_reduce_none,
  3, 265, :_reduce_none,
  1, 265, :_reduce_none,
  4, 265, :_reduce_359,
  1, 266, :_reduce_none,
  2, 266, :_reduce_none,
  1, 267, :_reduce_none,
  3, 267, :_reduce_none,
  1, 268, :_reduce_none,
  1, 268, :_reduce_none,
  2, 235, :_reduce_none,
  4, 270, :_reduce_none,
  1, 270, :_reduce_none,
  3, 271, :_reduce_none,
  3, 271, :_reduce_none,
  4, 273, :_reduce_none,
  4, 273, :_reduce_372,
  2, 190, :_reduce_373,
  4, 190, :_reduce_none,
  4, 190, :_reduce_none,
  2, 234, :_reduce_376,
  4, 234, :_reduce_377,
  4, 234, :_reduce_378,
  3, 234, :_reduce_379,
  3, 234, :_reduce_none,
  3, 234, :_reduce_none,
  2, 234, :_reduce_382,
  1, 234, :_reduce_383,
  4, 234, :_reduce_384,
  4, 233, :_reduce_385,
  4, 233, :_reduce_386,
  5, 244, :_reduce_387,
  1, 275, :_reduce_388,
  1, 275, :_reduce_none,
  6, 166, :_reduce_none,
  1, 166, :_reduce_none,
  1, 276, :_reduce_none,
  1, 276, :_reduce_none,
  1, 276, :_reduce_none,
  2, 277, :_reduce_none,
  1, 277, :_reduce_none,
  2, 168, :_reduce_none,
  1, 168, :_reduce_none,
  1, 223, :_reduce_none,
  1, 223, :_reduce_none,
  1, 223, :_reduce_none,
  1, 224, :_reduce_none,
  1, 279, :_reduce_none,
  1, 279, :_reduce_none,
  2, 279, :_reduce_none,
  3, 280, :_reduce_406,
  3, 225, :_reduce_407,
  3, 226, :_reduce_none,
  3, 227, :_reduce_none,
  3, 227, :_reduce_none,
  0, 283, :_reduce_none,
  3, 283, :_reduce_none,
  1, 284, :_reduce_none,
  2, 284, :_reduce_none,
  3, 228, :_reduce_none,
  3, 228, :_reduce_none,
  0, 286, :_reduce_417,
  3, 286, :_reduce_none,
  0, 281, :_reduce_419,
  2, 281, :_reduce_420,
  0, 282, :_reduce_421,
  2, 282, :_reduce_422,
  1, 285, :_reduce_423,
  2, 285, :_reduce_424,
  3, 285, :_reduce_425,
  1, 287, :_reduce_none,
  1, 287, :_reduce_none,
  1, 287, :_reduce_none,
  1, 287, :_reduce_none,
  2, 210, :_reduce_430,
  1, 288, :_reduce_none,
  1, 288, :_reduce_none,
  1, 288, :_reduce_none,
  1, 288, :_reduce_none,
  3, 211, :_reduce_none,
  1, 278, :_reduce_436,
  1, 278, :_reduce_437,
  2, 278, :_reduce_none,
  2, 278, :_reduce_none,
  1, 203, :_reduce_440,
  1, 203, :_reduce_441,
  1, 203, :_reduce_442,
  1, 203, :_reduce_443,
  1, 203, :_reduce_444,
  1, 203, :_reduce_445,
  1, 203, :_reduce_446,
  1, 203, :_reduce_447,
  1, 203, :_reduce_448,
  1, 203, :_reduce_449,
  1, 203, :_reduce_450,
  1, 203, :_reduce_451,
  1, 229, :_reduce_none,
  1, 176, :_reduce_none,
  1, 180, :_reduce_none,
  1, 180, :_reduce_none,
  1, 248, :_reduce_456,
  3, 248, :_reduce_457,
  2, 248, :_reduce_458,
  3, 252, :_reduce_459,
  2, 252, :_reduce_460,
  6, 272, :_reduce_461,
  8, 272, :_reduce_462,
  4, 272, :_reduce_463,
  6, 272, :_reduce_464,
  4, 272, :_reduce_465,
  6, 272, :_reduce_466,
  2, 272, :_reduce_467,
  4, 272, :_reduce_468,
  6, 272, :_reduce_469,
  2, 272, :_reduce_470,
  4, 272, :_reduce_471,
  2, 272, :_reduce_472,
  4, 272, :_reduce_473,
  1, 272, :_reduce_474,
  0, 272, :_reduce_475,
  1, 269, :_reduce_none,
  1, 269, :_reduce_none,
  1, 269, :_reduce_none,
  1, 269, :_reduce_none,
  1, 256, :_reduce_none,
  1, 256, :_reduce_481,
  3, 256, :_reduce_482,
  2, 256, :_reduce_483,
  1, 290, :_reduce_484,
  3, 290, :_reduce_none,
  1, 260, :_reduce_486,
  3, 260, :_reduce_487,
  3, 291, :_reduce_none,
  3, 292, :_reduce_none,
  1, 261, :_reduce_none,
  3, 261, :_reduce_none,
  1, 289, :_reduce_none,
  3, 289, :_reduce_none,
  1, 293, :_reduce_none,
  1, 293, :_reduce_none,
  2, 262, :_reduce_none,
  1, 262, :_reduce_none,
  1, 294, :_reduce_none,
  1, 294, :_reduce_none,
  2, 264, :_reduce_500,
  3, 264, :_reduce_501,
  2, 263, :_reduce_502,
  1, 263, :_reduce_none,
  1, 253, :_reduce_none,
  3, 253, :_reduce_none,
  1, 232, :_reduce_506,
  2, 232, :_reduce_507,
  1, 218, :_reduce_508,
  3, 218, :_reduce_509,
  3, 295, :_reduce_510,
  2, 295, :_reduce_511,
  1, 195, :_reduce_none,
  1, 195, :_reduce_none,
  1, 195, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 274, :_reduce_none,
  1, 274, :_reduce_none,
  1, 274, :_reduce_none,
  1, 254, :_reduce_none,
  1, 254, :_reduce_none,
  0, 159, :_reduce_none,
  1, 159, :_reduce_none,
  0, 185, :_reduce_none,
  1, 185, :_reduce_none,
  2, 198, :_reduce_none,
  2, 179, :_reduce_none,
  0, 217, :_reduce_none,
  1, 217, :_reduce_none,
  1, 217, :_reduce_none,
  1, 249, :_reduce_none,
  1, 249, :_reduce_none,
  1, 162, :_reduce_none,
  2, 162, :_reduce_none,
  0, 160, :_reduce_none ]

racc_reduce_n = 538

racc_shift_n = 951

racc_token_table = {
  false => 0,
  :error => 1,
  "!" => 2,
  :tTILDE => 3,
  :tUPLUS => 4,
  :tPOW => 5,
  :tUMINUS_NUM => 6,
  :tUMINUS => 7,
  :tSTAR2 => 8,
  :tDIVIDE => 9,
  :tPERCENT => 10,
  :tPLUS => 11,
  :tMINUS => 12,
  :tLSHFT => 13,
  :tRSHFT => 14,
  :tAMPER2 => 15,
  :tPIPE => 16,
  :tCARET => 17,
  :tGT => 18,
  :tGEQ => 19,
  :tLT => 20,
  :tLEQ => 21,
  :tCMP => 22,
  :tEQ => 23,
  :tEQQ => 24,
  :tNEQ => 25,
  :tMATCH => 26,
  :tNMATCH => 27,
  :tANDOP => 28,
  :tOROP => 29,
  :tDOT2 => 30,
  :tDOT3 => 31,
  :tEH => 32,
  :tCOLON => 33,
  :kRESCUE_MOD => 34,
  :tEQL => 35,
  :tOP_ASGN => 36,
  :kNOT => 37,
  :kOR => 38,
  :kAND => 39,
  :kIF_MOD => 40,
  :kUNLESS_MOD => 41,
  :kWHILE_MOD => 42,
  :kUNTIL_MOD => 43,
  :tLBRACE_ARG => 44,
  :tLOWEST => 45,
  :kCLASS => 46,
  :kMODULE => 47,
  :kDEF => 48,
  :kUNDEF => 49,
  :kBEGIN => 50,
  :kRESCUE => 51,
  :kENSURE => 52,
  :kEND => 53,
  :kIF => 54,
  :kUNLESS => 55,
  :kTHEN => 56,
  :kELSIF => 57,
  :kELSE => 58,
  :kCASE => 59,
  :kWHEN => 60,
  :kWHILE => 61,
  :kUNTIL => 62,
  :kFOR => 63,
  :kBREAK => 64,
  :kNEXT => 65,
  :kREDO => 66,
  :kRETRY => 67,
  :kIN => 68,
  :kDO => 69,
  :kDO_COND => 70,
  :kDO_BLOCK => 71,
  :kDO_LAMBDA => 72,
  :kRETURN => 73,
  :kYIELD => 74,
  :kSUPER => 75,
  :kSELF => 76,
  :kNIL => 77,
  :kTRUE => 78,
  :kFALSE => 79,
  :kALIAS => 80,
  :kDEFINED => 81,
  :klBEGIN => 82,
  :klEND => 83,
  :k__LINE__ => 84,
  :k__FILE__ => 85,
  :k__ENCODING__ => 86,
  :kDEFined => 87,
  :tIDENTIFIER => 88,
  :tFID => 89,
  :tGVAR => 90,
  :tIVAR => 91,
  :tCONSTANT => 92,
  :tCVAR => 93,
  :tLABEL => 94,
  :tINTEGER => 95,
  :tFLOAT => 96,
  :tSTRING_CONTENT => 97,
  :tCHAR => 98,
  :tNTH_REF => 99,
  :tBACK_REF => 100,
  :tREGEXP_END => 101,
  :tAREF => 102,
  :tASET => 103,
  :tCOLON2 => 104,
  :tCOLON3 => 105,
  :tASSOC => 106,
  :tLPAREN => 107,
  :tLPAREN_ARG => 108,
  :tRPAREN => 109,
  :tLBRACK => 110,
  :tLBRACE => 111,
  :tSTAR => 112,
  :tAMPER => 113,
  :tLAMBDA => 114,
  :tSYMBEG => 115,
  :tSTRING_BEG => 116,
  :tXSTRING_BEG => 117,
  :tREGEXP_BEG => 118,
  :tWORDS_BEG => 119,
  :tQWORDS_BEG => 120,
  :tSTRING_DBEG => 121,
  :tSTRING_DVAR => 122,
  :tSTRING_END => 123,
  :tLAMBEG => 124,
  :tSTRING => 125,
  :tXSTRING_END => 126,
  "{" => 127,
  "}" => 128,
  "=" => 129,
  "[" => 130,
  "." => 131,
  "," => 132,
  "|" => 133,
  "^" => 134,
  "&" => 135,
  ">" => 136,
  "<" => 137,
  "+" => 138,
  "-" => 139,
  "*" => 140,
  "/" => 141,
  "%" => 142,
  "~" => 143,
  "`" => 144,
  "?" => 145,
  ":" => 146,
  "(" => 147,
  ")" => 148,
  "]" => 149,
  ";" => 150,
  " " => 151,
  "\\n" => 152 }

racc_nt_base = 153

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\"!\"",
  "tTILDE",
  "tUPLUS",
  "tPOW",
  "tUMINUS_NUM",
  "tUMINUS",
  "tSTAR2",
  "tDIVIDE",
  "tPERCENT",
  "tPLUS",
  "tMINUS",
  "tLSHFT",
  "tRSHFT",
  "tAMPER2",
  "tPIPE",
  "tCARET",
  "tGT",
  "tGEQ",
  "tLT",
  "tLEQ",
  "tCMP",
  "tEQ",
  "tEQQ",
  "tNEQ",
  "tMATCH",
  "tNMATCH",
  "tANDOP",
  "tOROP",
  "tDOT2",
  "tDOT3",
  "tEH",
  "tCOLON",
  "kRESCUE_MOD",
  "tEQL",
  "tOP_ASGN",
  "kNOT",
  "kOR",
  "kAND",
  "kIF_MOD",
  "kUNLESS_MOD",
  "kWHILE_MOD",
  "kUNTIL_MOD",
  "tLBRACE_ARG",
  "tLOWEST",
  "kCLASS",
  "kMODULE",
  "kDEF",
  "kUNDEF",
  "kBEGIN",
  "kRESCUE",
  "kENSURE",
  "kEND",
  "kIF",
  "kUNLESS",
  "kTHEN",
  "kELSIF",
  "kELSE",
  "kCASE",
  "kWHEN",
  "kWHILE",
  "kUNTIL",
  "kFOR",
  "kBREAK",
  "kNEXT",
  "kREDO",
  "kRETRY",
  "kIN",
  "kDO",
  "kDO_COND",
  "kDO_BLOCK",
  "kDO_LAMBDA",
  "kRETURN",
  "kYIELD",
  "kSUPER",
  "kSELF",
  "kNIL",
  "kTRUE",
  "kFALSE",
  "kALIAS",
  "kDEFINED",
  "klBEGIN",
  "klEND",
  "k__LINE__",
  "k__FILE__",
  "k__ENCODING__",
  "kDEFined",
  "tIDENTIFIER",
  "tFID",
  "tGVAR",
  "tIVAR",
  "tCONSTANT",
  "tCVAR",
  "tLABEL",
  "tINTEGER",
  "tFLOAT",
  "tSTRING_CONTENT",
  "tCHAR",
  "tNTH_REF",
  "tBACK_REF",
  "tREGEXP_END",
  "tAREF",
  "tASET",
  "tCOLON2",
  "tCOLON3",
  "tASSOC",
  "tLPAREN",
  "tLPAREN_ARG",
  "tRPAREN",
  "tLBRACK",
  "tLBRACE",
  "tSTAR",
  "tAMPER",
  "tLAMBDA",
  "tSYMBEG",
  "tSTRING_BEG",
  "tXSTRING_BEG",
  "tREGEXP_BEG",
  "tWORDS_BEG",
  "tQWORDS_BEG",
  "tSTRING_DBEG",
  "tSTRING_DVAR",
  "tSTRING_END",
  "tLAMBEG",
  "tSTRING",
  "tXSTRING_END",
  "\"{\"",
  "\"}\"",
  "\"=\"",
  "\"[\"",
  "\".\"",
  "\",\"",
  "\"|\"",
  "\"^\"",
  "\"&\"",
  "\">\"",
  "\"<\"",
  "\"+\"",
  "\"-\"",
  "\"*\"",
  "\"/\"",
  "\"%\"",
  "\"~\"",
  "\"`\"",
  "\"?\"",
  "\":\"",
  "\"(\"",
  "\")\"",
  "\"]\"",
  "\";\"",
  "\" \"",
  "\"\\\\n\"",
  "$start",
  "target",
  "program",
  "top_compstmt",
  "@1",
  "top_stmts",
  "opt_terms",
  "none",
  "top_stmt",
  "terms",
  "stmt",
  "bodystmt",
  "compstmt",
  "opt_rescue",
  "opt_else",
  "opt_ensure",
  "stmts",
  "fitem",
  "undef_list",
  "expr_value",
  "lhs",
  "command_call",
  "mlhs",
  "var_lhs",
  "primary_value",
  "opt_call_args",
  "rbracket",
  "backref",
  "mrhs",
  "arg_value",
  "expr",
  "@2",
  "opt_nl",
  "arg",
  "command",
  "block_command",
  "call_args",
  "block_call",
  "operation2",
  "command_args",
  "cmd_brace_block",
  "opt_block_param",
  "operation",
  "mlhs_basic",
  "mlhs_inner",
  "rparen",
  "mlhs_head",
  "mlhs_item",
  "mlhs_node",
  "mlhs_post",
  "variable",
  "cname",
  "cpath",
  "fname",
  "op",
  "reswords",
  "fsym",
  "symbol",
  "dsym",
  "primary",
  "@3",
  "@4",
  "aref_args",
  "args",
  "trailer",
  "assocs",
  "paren_args",
  "opt_paren_args",
  "opt_block_arg",
  "block_arg",
  "literal",
  "strings",
  "xstring",
  "regexp",
  "words",
  "qwords",
  "var_ref",
  "k_begin",
  "k_end",
  "assoc_list",
  "brace_block",
  "method_call",
  "lambda",
  "k_if",
  "then",
  "if_tail",
  "k_unless",
  "k_while",
  "do",
  "k_until",
  "k_case",
  "case_body",
  "k_for",
  "for_var",
  "k_class",
  "superclass",
  "term",
  "k_module",
  "k_def",
  "f_arglist",
  "singleton",
  "dot_or_colon",
  "f_marg",
  "f_norm_arg",
  "f_margs",
  "f_marg_list",
  "block_param",
  "f_arg",
  "f_block_optarg",
  "f_rest_arg",
  "opt_f_block_arg",
  "f_block_arg",
  "block_param_def",
  "opt_bv_decl",
  "bv_decls",
  "bvar",
  "f_bad_arg",
  "f_larglist",
  "lambda_body",
  "f_args",
  "do_block",
  "operation3",
  "cases",
  "exc_list",
  "exc_var",
  "numeric",
  "string",
  "string1",
  "string_contents",
  "xstring_contents",
  "word_list",
  "word",
  "string_content",
  "qword_list",
  "string_dvar",
  "sym",
  "f_optarg",
  "f_arg_item",
  "f_opt",
  "f_block_opt",
  "restarg_mark",
  "blkarg_mark",
  "assoc" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 101)
  def _reduce_1(val, _values, result)
                        # puts 'well, we got here..'
                    # puts val[0]
                    @parser_result = val[0]
                    result = val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 109)
  def _reduce_2(val, _values, result)
                        self.lex_state = :EXPR_BEG
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 113)
  def _reduce_3(val, _values, result)
                        # puts 'program'
                    # puts val[1]
                    result = val[1]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 120)
  def _reduce_4(val, _values, result)
                        # puts 'top_compstmt'
                    # puts val[0]
                    # puts val[1]
                    result = val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 128)
  def _reduce_5(val, _values, result)
                        result = []
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 132)
  def _reduce_6(val, _values, result)
                        result = [val[0]]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 136)
  def _reduce_7(val, _values, result)
                        result = val[0] + [val[2]]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 140)
  def _reduce_8(val, _values, result)
                        result = val[1]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 145)
  def _reduce_9(val, _values, result)
                        result = val[0]
                  
    result
  end
.,.,

# reduce 10 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 151)
  def _reduce_11(val, _values, result)
                        result = val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 156)
  def _reduce_12(val, _values, result)
                        result = val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 161)
  def _reduce_13(val, _values, result)
                        result = []
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 165)
  def _reduce_14(val, _values, result)
                        result = [val[0]]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 169)
  def _reduce_15(val, _values, result)
                        result = val[0] + [val[2]]
		              
    result
  end
.,.,

# reduce 16 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 175)
  def _reduce_17(val, _values, result)
                        self.lex_state = :EXPR_FNAME
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 180)
  def _reduce_18(val, _values, result)
                      
    result
  end
.,.,

# reduce 19 omitted

# reduce 20 omitted

# reduce 21 omitted

# reduce 22 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 187)
  def _reduce_23(val, _values, result)
                		    result = node :if_mod, :stmt => val[0], :expr => val[2]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 191)
  def _reduce_24(val, _values, result)
                		    result = node :unless_mod, :stmt => val[0], :expr => val[2]
            		  
    result
  end
.,.,

# reduce 25 omitted

# reduce 26 omitted

# reduce 27 omitted

# reduce 28 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 199)
  def _reduce_29(val, _values, result)
                		    result = node :assign, :lhs => val[0], :rhs => val[2]
            		  
    result
  end
.,.,

# reduce 30 omitted

# reduce 31 omitted

# reduce 32 omitted

# reduce 33 omitted

# reduce 34 omitted

# reduce 35 omitted

# reduce 36 omitted

# reduce 37 omitted

# reduce 38 omitted

# reduce 39 omitted

# reduce 40 omitted

# reduce 41 omitted

# reduce 42 omitted

# reduce 43 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 218)
  def _reduce_44(val, _values, result)
                  	    result = node :not, :expr => val[2]
              	  
    result
  end
.,.,

# reduce 45 omitted

# reduce 46 omitted

# reduce 47 omitted

# reduce 48 omitted

# reduce 49 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 229)
  def _reduce_50(val, _values, result)
                  	    result = node :return, :call_args => val[1]
              	  
    result
  end
.,.,

# reduce 51 omitted

# reduce 52 omitted

# reduce 53 omitted

# reduce 54 omitted

# reduce 55 omitted

# reduce 56 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 242)
  def _reduce_57(val, _values, result)
                        # command call - no brackets/recv
          		      result = node :call, :recv => nil, :meth => val[0], :call_args => val[1]
                  
    result
  end
.,.,

# reduce 58 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 248)
  def _reduce_59(val, _values, result)
              		      result = node :call, :recv => val[0], :meth => val[2], :call_args => val[3]
                  
    result
  end
.,.,

# reduce 60 omitted

# reduce 61 omitted

# reduce 62 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 255)
  def _reduce_63(val, _values, result)
          		          result = node :super, :call_args => val[1]
      		        
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 259)
  def _reduce_64(val, _values, result)
            	          result = node :yield, :call_args => val[1]
        	        
    result
  end
.,.,

# reduce 65 omitted

# reduce 66 omitted

# reduce 67 omitted

# reduce 68 omitted

# reduce 69 omitted

# reduce 70 omitted

# reduce 71 omitted

# reduce 72 omitted

# reduce 73 omitted

# reduce 74 omitted

# reduce 75 omitted

# reduce 76 omitted

# reduce 77 omitted

# reduce 78 omitted

# reduce 79 omitted

# reduce 80 omitted

# reduce 81 omitted

# reduce 82 omitted

# reduce 83 omitted

# reduce 84 omitted

# reduce 85 omitted

# reduce 86 omitted

# reduce 87 omitted

# reduce 88 omitted

# reduce 89 omitted

# reduce 90 omitted

# reduce 91 omitted

# reduce 92 omitted

# reduce 93 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 300)
  def _reduce_94(val, _values, result)
    		                result = node :call, :recv => val[0], :meth => '[]', :args => val[2]
		              
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 304)
  def _reduce_95(val, _values, result)
              		      result = node :call, :recv => val[0], :meth => val[2]
                  
    result
  end
.,.,

# reduce 96 omitted

# reduce 97 omitted

# reduce 98 omitted

# reduce 99 omitted

# reduce 100 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 314)
  def _reduce_101(val, _values, result)
                        puts 'ERROR: cant use identifier for class/mod name'
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 318)
  def _reduce_102(val, _values, result)
                		    result = val[0]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 324)
  def _reduce_103(val, _values, result)
                      
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 327)
  def _reduce_104(val, _values, result)
      	                result = node :path, :cname => val[0]
  	              
    result
  end
.,.,

# reduce 105 omitted

# reduce 106 omitted

# reduce 107 omitted

# reduce 108 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 336)
  def _reduce_109(val, _values, result)
    		                self.lex_state = :EXPR_END
		                result = val[0]
		              
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 341)
  def _reduce_110(val, _values, result)
    		                self.lex_state = :EXPR_END
		                result = val[0]
		              
    result
  end
.,.,

# reduce 111 omitted

# reduce 112 omitted

# reduce 113 omitted

# reduce 114 omitted

# reduce 115 omitted

# reduce 116 omitted

# reduce 117 omitted

# reduce 118 omitted

# reduce 119 omitted

# reduce 120 omitted

# reduce 121 omitted

# reduce 122 omitted

# reduce 123 omitted

# reduce 124 omitted

# reduce 125 omitted

# reduce 126 omitted

# reduce 127 omitted

# reduce 128 omitted

# reduce 129 omitted

# reduce 130 omitted

# reduce 131 omitted

# reduce 132 omitted

# reduce 133 omitted

# reduce 134 omitted

# reduce 135 omitted

# reduce 136 omitted

# reduce 137 omitted

# reduce 138 omitted

# reduce 139 omitted

# reduce 140 omitted

# reduce 141 omitted

# reduce 142 omitted

# reduce 143 omitted

# reduce 144 omitted

# reduce 145 omitted

# reduce 146 omitted

# reduce 147 omitted

# reduce 148 omitted

# reduce 149 omitted

# reduce 150 omitted

# reduce 151 omitted

# reduce 152 omitted

# reduce 153 omitted

# reduce 154 omitted

# reduce 155 omitted

# reduce 156 omitted

# reduce 157 omitted

# reduce 158 omitted

# reduce 159 omitted

# reduce 160 omitted

# reduce 161 omitted

# reduce 162 omitted

# reduce 163 omitted

# reduce 164 omitted

# reduce 165 omitted

# reduce 166 omitted

# reduce 167 omitted

# reduce 168 omitted

# reduce 169 omitted

# reduce 170 omitted

# reduce 171 omitted

# reduce 172 omitted

# reduce 173 omitted

# reduce 174 omitted

# reduce 175 omitted

# reduce 176 omitted

# reduce 177 omitted

# reduce 178 omitted

# reduce 179 omitted

# reduce 180 omitted

# reduce 181 omitted

# reduce 182 omitted

# reduce 183 omitted

# reduce 184 omitted

# reduce 185 omitted

# reduce 186 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 377)
  def _reduce_187(val, _values, result)
                        result = node :assign, :lhs => val[0], :rhs => val[2]
                  
    result
  end
.,.,

# reduce 188 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 382)
  def _reduce_189(val, _values, result)
                		    result = node :op_asgn, :lhs => val[0], :op => val[1], :rhs => val[2]
            		  
    result
  end
.,.,

# reduce 190 omitted

# reduce 191 omitted

# reduce 192 omitted

# reduce 193 omitted

# reduce 194 omitted

# reduce 195 omitted

# reduce 196 omitted

# reduce 197 omitted

# reduce 198 omitted

# reduce 199 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 396)
  def _reduce_200(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '+', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 400)
  def _reduce_201(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '-', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 404)
  def _reduce_202(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '*', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 408)
  def _reduce_203(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '/', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 412)
  def _reduce_204(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '%', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 416)
  def _reduce_205(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '**', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

# reduce 206 omitted

# reduce 207 omitted

# reduce 208 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 423)
  def _reduce_209(val, _values, result)
                		    result = node :call, :recv => val[1], :meth => '-@', :call_args => []
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 427)
  def _reduce_210(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '|', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 431)
  def _reduce_211(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '^', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 435)
  def _reduce_212(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '&', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 439)
  def _reduce_213(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '<=>', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 443)
  def _reduce_214(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '>', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 447)
  def _reduce_215(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '>=', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 451)
  def _reduce_216(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '<', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 455)
  def _reduce_217(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '<=', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 459)
  def _reduce_218(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '==', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 463)
  def _reduce_219(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '===', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 467)
  def _reduce_220(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '!=', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 471)
  def _reduce_221(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '=~', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 475)
  def _reduce_222(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '!~', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 479)
  def _reduce_223(val, _values, result)
                  	    result = node :not, :expr => val[1]
              	  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 483)
  def _reduce_224(val, _values, result)
                		    result = node :call, :recv => val[1], :meth => '~', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 487)
  def _reduce_225(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '<<', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 491)
  def _reduce_226(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '>>', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 495)
  def _reduce_227(val, _values, result)
                          # weird? unless break here, it throws an error? hmm...
                      # we must use val[3] then as this counts as one match....
              		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 501)
  def _reduce_228(val, _values, result)
                		    result = node :andop, :lhs => val[0], :rhs => val[3]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 505)
  def _reduce_229(val, _values, result)
                        # weird? unless break here, it throws an error? hmm...
                    # we must use val[3] then as this counts as one match....
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 511)
  def _reduce_230(val, _values, result)
                		    result = node :orop, :lhs => val[0], :rhs => val[3]
            		  
    result
  end
.,.,

# reduce 231 omitted

# reduce 232 omitted

# reduce 233 omitted

# reduce 234 omitted

# reduce 235 omitted

# reduce 236 omitted

# reduce 237 omitted

# reduce 238 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 526)
  def _reduce_239(val, _values, result)
                        result = val[1]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 531)
  def _reduce_240(val, _values, result)
                        result = node :call_args, :args => nil
                  
    result
  end
.,.,

# reduce 241 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 537)
  def _reduce_242(val, _values, result)
                        result = node :call_args, :args => nil
                  
    result
  end
.,.,

# reduce 243 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 543)
  def _reduce_244(val, _values, result)
                		    result = node :call_args, :args => [val[0]]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 547)
  def _reduce_245(val, _values, result)
                		    result = node :call_args, :args => val[0], :block_arg => val[1]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 551)
  def _reduce_246(val, _values, result)
                		    result = node :call_args, :assocs => val[0], :block_arg => val[1]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 555)
  def _reduce_247(val, _values, result)
                		    result = node :call_args, :args => val[0], :assocs => val[2], :block_arg => val[3]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 559)
  def _reduce_248(val, _values, result)
                		    result = node :call_args, :block_arg => val[0]
            		  
    result
  end
.,.,

# reduce 249 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 566)
  def _reduce_250(val, _values, result)
                        result = self.node :block_arg, :arg => val[1]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 571)
  def _reduce_251(val, _values, result)
                        resul = val[1]
                  
    result
  end
.,.,

# reduce 252 omitted

# reduce 253 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 578)
  def _reduce_254(val, _values, result)
                        result = [val[0]]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 582)
  def _reduce_255(val, _values, result)
    		                result = [val[1]]
		              
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 586)
  def _reduce_256(val, _values, result)
    		                result = val[0] + [val[2]]
		              
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 590)
  def _reduce_257(val, _values, result)
    		                result = val[0] + [val[3]]
		              
    result
  end
.,.,

# reduce 258 omitted

# reduce 259 omitted

# reduce 260 omitted

# reduce 261 omitted

# reduce 262 omitted

# reduce 263 omitted

# reduce 264 omitted

# reduce 265 omitted

# reduce 266 omitted

# reduce 267 omitted

# reduce 268 omitted

# reduce 269 omitted

# reduce 270 omitted

# reduce 271 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 610)
  def _reduce_272(val, _values, result)
                		    result = node :lparen, :stmt => val[1]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 614)
  def _reduce_273(val, _values, result)
                		    result = node :colon2, :lhs => val[0], :rhs => val[2]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 618)
  def _reduce_274(val, _values, result)
                		    result = node :colon3, :rhs => val[1]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 622)
  def _reduce_275(val, _values, result)
                		    result = node :array, :args => val[1]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 626)
  def _reduce_276(val, _values, result)
                		    result = node :assoc_list, :list => val[1]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 630)
  def _reduce_277(val, _values, result)
                		    result = node :return
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 634)
  def _reduce_278(val, _values, result)
            	          result = node :yield, :call_args => val[2]
        	        
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 638)
  def _reduce_279(val, _values, result)
            	          result = node :yield
        	        
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 642)
  def _reduce_280(val, _values, result)
            	          result = node :yield
        	        
    result
  end
.,.,

# reduce 281 omitted

# reduce 282 omitted

# reduce 283 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 649)
  def _reduce_284(val, _values, result)
                        # puts 1
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 653)
  def _reduce_285(val, _values, result)
                		    # puts 2
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 657)
  def _reduce_286(val, _values, result)
                		    val[0][:brace_block] = val[1]
            		    result = val[0]
            		  
    result
  end
.,.,

# reduce 287 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 663)
  def _reduce_288(val, _values, result)
                		    result = self.node :if, :expr => val[1], :stmt => val[3], :tail => val[4]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 667)
  def _reduce_289(val, _values, result)
                		    result = self.node :unless, :expr => val[1], :stmt => val[3], :tail => val[4]
            		  
    result
  end
.,.,

# reduce 290 omitted

# reduce 291 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 673)
  def _reduce_292(val, _values, result)
                		    result = node :case, :expr => val[1], :body => val[3]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 677)
  def _reduce_293(val, _values, result)
                		    result = node :case, :expr => nil, :body => val[2]
            		  
    result
  end
.,.,

# reduce 294 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 682)
  def _reduce_295(val, _values, result)
                		    result = self.node_class(:cpath => val[1], :superclass => val[2], :bodystmt => val[3])
            		  
    result
  end
.,.,

# reduce 296 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 687)
  def _reduce_297(val, _values, result)
                		    result = self.node_module(:cpath => val[1], :body => val[2])
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 691)
  def _reduce_298(val, _values, result)
                		    result = self.node :def, :fname => val[1], :arglist => val[2], :bodystmt => val[3]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 695)
  def _reduce_299(val, _values, result)
                		    result = self.node :def, :singleton => val[1], :fname => val[3], :arglist => val[4], :bodystmt => val[5]
            		  
    result
  end
.,.,

# reduce 300 omitted

# reduce 301 omitted

# reduce 302 omitted

# reduce 303 omitted

# reduce 304 omitted

# reduce 305 omitted

# reduce 306 omitted

# reduce 307 omitted

# reduce 308 omitted

# reduce 309 omitted

# reduce 310 omitted

# reduce 311 omitted

# reduce 312 omitted

# reduce 313 omitted

# reduce 314 omitted

# reduce 315 omitted

# reduce 316 omitted

# reduce 317 omitted

# reduce 318 omitted

# reduce 319 omitted

# reduce 320 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 735)
  def _reduce_321(val, _values, result)
                        result = val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 739)
  def _reduce_322(val, _values, result)
                  	    result = [self.node(:elsif, :expr => val[1], :stmt => val[3])] + val[4]
              	  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 744)
  def _reduce_323(val, _values, result)
                        result = []
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 748)
  def _reduce_324(val, _values, result)
                  	    result = [self.node(:else, :stmt => val[1])]
              	  
    result
  end
.,.,

# reduce 325 omitted

# reduce 326 omitted

# reduce 327 omitted

# reduce 328 omitted

# reduce 329 omitted

# reduce 330 omitted

# reduce 331 omitted

# reduce 332 omitted

# reduce 333 omitted

# reduce 334 omitted

# reduce 335 omitted

# reduce 336 omitted

# reduce 337 omitted

# reduce 338 omitted

# reduce 339 omitted

# reduce 340 omitted

# reduce 341 omitted

# reduce 342 omitted

# reduce 343 omitted

# reduce 344 omitted

# reduce 345 omitted

# reduce 346 omitted

# reduce 347 omitted

# reduce 348 omitted

# reduce 349 omitted

# reduce 350 omitted

# reduce 351 omitted

# reduce 352 omitted

# reduce 353 omitted

# reduce 354 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 788)
  def _reduce_355(val, _values, result)
                        result = nil
                  
    result
  end
.,.,

# reduce 356 omitted

# reduce 357 omitted

# reduce 358 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 796)
  def _reduce_359(val, _values, result)
                		    result = val[1]
            		  
    result
  end
.,.,

# reduce 360 omitted

# reduce 361 omitted

# reduce 362 omitted

# reduce 363 omitted

# reduce 364 omitted

# reduce 365 omitted

# reduce 366 omitted

# reduce 367 omitted

# reduce 368 omitted

# reduce 369 omitted

# reduce 370 omitted

# reduce 371 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 819)
  def _reduce_372(val, _values, result)
                        result = node :brace_block, :params => val[1], :stmt => val[2]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 824)
  def _reduce_373(val, _values, result)
                        val[0][:brace_block] = val[1]
                    result = val[0]
                  
    result
  end
.,.,

# reduce 374 omitted

# reduce 375 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 832)
  def _reduce_376(val, _values, result)
                        result = node :call, :recv => nil, :meth => val[0], :call_args => val[1]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 836)
  def _reduce_377(val, _values, result)
                        result = node :call, :recv => val[0], :meth => val[2], :call_args => val[3]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 840)
  def _reduce_378(val, _values, result)
                  	    puts 'SCOOOBY DOOOOOOOOOOOOOOOOOOOOOOOOOOOOO 2'
              	  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 844)
  def _reduce_379(val, _values, result)
                  	    puts 'SCOOOBY DOOOOOOOOOOOOOOOOOOOOOOOOOOOOO 3'
              	  
    result
  end
.,.,

# reduce 380 omitted

# reduce 381 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 850)
  def _reduce_382(val, _values, result)
                		    result = node :super, :call_args => val[1]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 854)
  def _reduce_383(val, _values, result)
                		    result = node :super, :call_args => nil
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 858)
  def _reduce_384(val, _values, result)
                        result = node :call, :recv => val[0], :meth => '[]', :call_args => val[2]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 865)
  def _reduce_385(val, _values, result)
                      
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 868)
  def _reduce_386(val, _values, result)
                		    result = node :brace_block, :params => val[1], :stmt => val[2]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 873)
  def _reduce_387(val, _values, result)
                        result = [node(:when, :args => val[1], :stmt => val[3])] + val[4]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 878)
  def _reduce_388(val, _values, result)
                        result = val[0]
                  
    result
  end
.,.,

# reduce 389 omitted

# reduce 390 omitted

# reduce 391 omitted

# reduce 392 omitted

# reduce 393 omitted

# reduce 394 omitted

# reduce 395 omitted

# reduce 396 omitted

# reduce 397 omitted

# reduce 398 omitted

# reduce 399 omitted

# reduce 400 omitted

# reduce 401 omitted

# reduce 402 omitted

# reduce 403 omitted

# reduce 404 omitted

# reduce 405 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 907)
  def _reduce_406(val, _values, result)
                        result = node :string, :value => val[1], :beg => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 912)
  def _reduce_407(val, _values, result)
                        result = node :xstring, :value => val[1]
                  
    result
  end
.,.,

# reduce 408 omitted

# reduce 409 omitted

# reduce 410 omitted

# reduce 411 omitted

# reduce 412 omitted

# reduce 413 omitted

# reduce 414 omitted

# reduce 415 omitted

# reduce 416 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 931)
  def _reduce_417(val, _values, result)
                        # none..
                    result = []
                  
    result
  end
.,.,

# reduce 418 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 938)
  def _reduce_419(val, _values, result)
                        # none..
                    result = []
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 943)
  def _reduce_420(val, _values, result)
                		    result = val[0] + [val[1]]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 948)
  def _reduce_421(val, _values, result)
                        # none..
                    result = []
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 953)
  def _reduce_422(val, _values, result)
                		    result = val[0] + [val[1]]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 958)
  def _reduce_423(val, _values, result)
                        result = node :string_content, :value => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 962)
  def _reduce_424(val, _values, result)
                        result = node :string_dvar, :value => val[1]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 966)
  def _reduce_425(val, _values, result)
                        result = node :string_dbeg, :value => val[1]
                  
    result
  end
.,.,

# reduce 426 omitted

# reduce 427 omitted

# reduce 428 omitted

# reduce 429 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 976)
  def _reduce_430(val, _values, result)
                        result = node :symbol, :name => val[1]
                  
    result
  end
.,.,

# reduce 431 omitted

# reduce 432 omitted

# reduce 433 omitted

# reduce 434 omitted

# reduce 435 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 988)
  def _reduce_436(val, _values, result)
                        result = node :numeric, :value => val[0], :float => false
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 992)
  def _reduce_437(val, _values, result)
                        result = node :numeric, :value => val[0], :float => true
                  
    result
  end
.,.,

# reduce 438 omitted

# reduce 439 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 999)
  def _reduce_440(val, _values, result)
                        result = node :identifier, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1003)
  def _reduce_441(val, _values, result)
                        result = node :ivar, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1007)
  def _reduce_442(val, _values, result)
                        result = node :gvar, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1011)
  def _reduce_443(val, _values, result)
                        result = node :constant, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1015)
  def _reduce_444(val, _values, result)
                        result = node :cvar, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1019)
  def _reduce_445(val, _values, result)
                        result = node :nil, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1023)
  def _reduce_446(val, _values, result)
                        result = node :self, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1027)
  def _reduce_447(val, _values, result)
                        result = node :true, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1031)
  def _reduce_448(val, _values, result)
                        result = node :false, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1035)
  def _reduce_449(val, _values, result)
                        result = node :__FILE__, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1039)
  def _reduce_450(val, _values, result)
                        result = node :__LINE__, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1043)
  def _reduce_451(val, _values, result)
                        result = node :__ENCODING__, :name => val[0]
                  
    result
  end
.,.,

# reduce 452 omitted

# reduce 453 omitted

# reduce 454 omitted

# reduce 455 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1055)
  def _reduce_456(val, _values, result)
                        result = nil
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1059)
  def _reduce_457(val, _values, result)
                		    result = node :superclass, :expr => val[1]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1061)
  def _reduce_458(val, _values, result)
     puts 'OMFG' 
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1065)
  def _reduce_459(val, _values, result)
                        result = val[1]
                    self.lex_state = :EXPR_BEG
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1070)
  def _reduce_460(val, _values, result)
                        result = val[0]
                    self.lex_state = :EXPR_BEG
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1076)
  def _reduce_461(val, _values, result)
                 		    result = node :arg, :arg => val[0], :optarg => val[2], :rest_arg => val[4], :opt_block_arg => val[5]
             		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1080)
  def _reduce_462(val, _values, result)
                 		    result = node :arg, :arg => val[0], :optarg => val[2], :rest_arg => val[4], :arg2 => val[6], :opt_block_arg => val[7]
             		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1084)
  def _reduce_463(val, _values, result)
                  	    result = node :arg, :arg => val[0], :optarg => val[2], :opt_block_arg => val[3]
              	  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1088)
  def _reduce_464(val, _values, result)
                  	    result = node :arg, :arg => val[0], :optarg => val[2], :arg2 => val[4], :opt_block_arg => val[5]
              	  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1092)
  def _reduce_465(val, _values, result)
                		    result = node :arg, :arg => val[0], :rest_arg => val[2], :opt_block_arg => val[3]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1096)
  def _reduce_466(val, _values, result)
                		    result = node :arg, :arg => val[0], :rest_arg => val[2], :arg2 => val[4], :opt_block_arg => val[5]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1100)
  def _reduce_467(val, _values, result)
                 		    result = node :arg, :arg => val[0], :opt_block_arg => val[1]
             		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1104)
  def _reduce_468(val, _values, result)
                		    result = node :optarg, :optarg => val[0], :rest_arg => val[2], :opt_block_arg => val[3]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1108)
  def _reduce_469(val, _values, result)
                		    result = node :optarg, :optarg => val[0], :rest_arg => val[2], :arg => val[4], :opt_block_arg => val[5]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1112)
  def _reduce_470(val, _values, result)
                 		    result = node :optarg, :optarg => val[0], :opt_block_arg => val[1]
             		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1116)
  def _reduce_471(val, _values, result)
                 		    result = node :optarg, :optarg => val[0], :arg => val[2], :opt_block_arg => val[3]
             		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1120)
  def _reduce_472(val, _values, result)
                 		    result = node :rest_arg, :rest_arg => val[0], :opt_block_arg => val[1]
             		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1124)
  def _reduce_473(val, _values, result)
                 		    result = node :rest_arg, :rest_arg => val[0], :arg => val[2], :opt_block_arg => val[3]
             		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1128)
  def _reduce_474(val, _values, result)
                 		    result = node :arg, :opt_block_arg => val[0]
             		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1132)
  def _reduce_475(val, _values, result)
                  	    # none...
              	    result = nil
              	  
    result
  end
.,.,

# reduce 476 omitted

# reduce 477 omitted

# reduce 478 omitted

# reduce 479 omitted

# reduce 480 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1144)
  def _reduce_481(val, _values, result)
                        # result = val[0]
              	    result = node :norm_arg, :value => val[0]
              	  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1150)
  def _reduce_482(val, _values, result)
                      
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1153)
  def _reduce_483(val, _values, result)
                        result = node :label_arg, :name => val[0], :value => val[1]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1158)
  def _reduce_484(val, _values, result)
                        result = val[0]
                  
    result
  end
.,.,

# reduce 485 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1164)
  def _reduce_486(val, _values, result)
                        result = [val[0]]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1168)
  def _reduce_487(val, _values, result)
                        # val[0] + val[2]
                    result = val[0] + [val[2]]
            		  
    result
  end
.,.,

# reduce 488 omitted

# reduce 489 omitted

# reduce 490 omitted

# reduce 491 omitted

# reduce 492 omitted

# reduce 493 omitted

# reduce 494 omitted

# reduce 495 omitted

# reduce 496 omitted

# reduce 497 omitted

# reduce 498 omitted

# reduce 499 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1193)
  def _reduce_500(val, _values, result)
                        result = val[1]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1197)
  def _reduce_501(val, _values, result)
                        result = node :label_arg, :name => val[0], :value => val[1]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1202)
  def _reduce_502(val, _values, result)
                        result = val[1]
                  
    result
  end
.,.,

# reduce 503 omitted

# reduce 504 omitted

# reduce 505 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1211)
  def _reduce_506(val, _values, result)
                        result = []
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1215)
  def _reduce_507(val, _values, result)
                  	    result = val[0]
              	  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1220)
  def _reduce_508(val, _values, result)
                        result = [val[0]]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1224)
  def _reduce_509(val, _values, result)
                		    result = val[0] + [val[2]]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1229)
  def _reduce_510(val, _values, result)
                        result = node :assoc, :key => val[0], :value => val[2]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1233)
  def _reduce_511(val, _values, result)
                        result = node :label_assoc, :key => val[0], :value => val[1]
                  
    result
  end
.,.,

# reduce 512 omitted

# reduce 513 omitted

# reduce 514 omitted

# reduce 515 omitted

# reduce 516 omitted

# reduce 517 omitted

# reduce 518 omitted

# reduce 519 omitted

# reduce 520 omitted

# reduce 521 omitted

# reduce 522 omitted

# reduce 523 omitted

# reduce 524 omitted

# reduce 525 omitted

# reduce 526 omitted

# reduce 527 omitted

# reduce 528 omitted

# reduce 529 omitted

# reduce 530 omitted

# reduce 531 omitted

# reduce 532 omitted

# reduce 533 omitted

# reduce 534 omitted

# reduce 535 omitted

# reduce 536 omitted

# reduce 537 omitted

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class RubyParser
  end   # module Vienna


