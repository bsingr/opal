#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.6
# from Racc grammer file "".
#

require 'racc/parser.rb'


# require 'ctokenizer'
require 'strscan'

module Vienna
  class RubyParser < Racc::Parser

module_eval(<<'...end ruby_parser.rb.y/module_eval...', 'ruby_parser.rb.y', 1276)


...end ruby_parser.rb.y/module_eval...
##### State transition tables begin ###

clist = [
'-272,344,345,-452,-10,-272,344,345,447,344,345,344,345,-272,-272,515',
'318,344,345,-272,515,-272,-272,-272,-272,-272,-272,-272,-272,-272,-272',
'-272,-99,-100,-272,416,727,289,-272,-272,-272,-272,-272,-272,502,515',
'-95,515,289,4,-518,-272,-272,-272,515,-518,486,-272,-272,390,-272,391',
'468,-518,-518,484,485,236,881,-518,501,-518,-518,-518,-518,-518,-518',
'-518,-518,-518,-518,-518,548,813,-518,573,726,415,-518,-518,-518,-518',
'-518,-518,237,291,-93,-91,-92,326,-85,-518,-518,-518,-272,837,291,-518',
'-518,-100,-518,-87,545,-92,307,-253,309,548,511,-518,513,326,-452,482',
'326,513,326,293,-272,-98,-272,-272,326,-90,-272,-272,-272,-272,-272',
'-272,-272,-272,-272,-272,545,448,-272,814,407,-272,513,-272,513,-272',
'-518,-10,518,-10,307,513,309,-94,32,375,44,48,307,-96,309,395,-448,408',
'810,492,326,-99,-95,-518,-518,-96,-518,-518,807,-88,-518,-518,-518,-518',
'-518,-518,-518,-518,-518,-518,545,106,-518,-448,-94,-518,493,-518,-86',
'-518,54,57,62,307,225,309,-99,-95,92,99,-91,-93,-100,19,-97,29,37,42',
'47,55,58,63,573,822,307,-94,309,93,100,104,5,9,16,21,732,307,-97,309',
'53,56,61,68,72,82,83,86,91,98,-96,6,10,-93,23,27,35,-514,545,545,-96',
'253,-96,224,80,583,90,96,642,855,8,11,17,22,28,36,41,32,375,44,48,583',
'733,413,307,582,309,307,109,309,365,369,371,374,377,378,380,382,385',
'361,71,582,366,407,-95,307,-95,309,115,326,106,-97,-97,-97,825,-88,311',
'573,-85,54,57,62,-94,225,-94,583,821,92,99,-95,-514,117,19,-87,29,37',
'42,47,55,58,63,-98,312,313,827,582,93,100,104,5,9,16,21,307,307,309',
'309,53,56,61,68,72,82,83,86,91,98,-94,6,10,829,23,27,35,-449,-97,-267',
'-89,253,-89,224,80,-66,90,96,830,-80,8,11,17,22,28,36,41,32,-446,44',
'48,307,831,309,-449,-267,-267,-254,109,-90,365,369,371,374,377,378,380',
'382,385,361,71,436,366,375,-515,-446,307,307,309,309,235,363,367,442',
'-87,-86,375,443,-445,54,57,62,307,225,309,432,434,92,99,680,468,587',
'19,375,29,37,42,218,220,58,63,363,367,293,-89,-445,231,100,104,5,9,16',
'21,375,326,-444,697,53,56,61,68,72,82,83,86,91,98,297,6,10,631,23,27',
'35,-451,-87,375,293,253,-87,224,80,-444,90,96,295,298,8,11,17,22,28',
'36,41,375,-87,440,632,436,-87,-451,-451,363,367,-303,-89,437,438,379',
'-89,384,360,362,364,368,370,373,71,-228,381,383,504,432,434,796,-89',
'326,459,-447,-89,-303,-303,365,369,371,374,377,378,380,382,385,361,344',
'345,366,365,369,371,374,377,378,380,382,385,361,-447,580,366,-518,307',
'-512,309,365,369,371,374,377,378,380,382,385,361,915,-442,366,780,582',
'114,116,119,122,838,365,369,371,374,377,378,380,382,385,361,776,-518',
'366,-442,344,345,440,441,-442,32,375,44,48,365,369,371,374,377,378,380',
'382,385,361,794,-518,366,-512,-518,-518,-442,-442,365,369,371,374,377',
'378,380,382,385,361,504,106,366,-525,-514,792,-512,551,-439,326,54,57',
'62,69,225,307,326,309,92,99,844,680,787,19,785,29,37,42,47,55,58,63',
'-518,552,553,-439,326,93,100,104,5,9,16,21,34,784,-450,49,53,56,61,68',
'72,82,83,86,91,98,326,6,10,762,23,27,35,-272,778,-518,776,65,680,75',
'80,-450,90,96,102,762,8,11,17,22,28,36,41,32,478,44,48,468,-518,-272',
'-272,-518,-518,468,109,326,365,369,371,374,377,378,380,382,385,361,71',
'-515,366,-514,479,480,468,532,468,419,106,114,116,119,122,424,506,857',
'439,54,57,62,69,76,299,300,587,92,99,844,680,326,19,750,29,37,42,47',
'55,58,63,-511,479,507,440,441,93,100,104,5,9,16,21,34,646,762,49,53',
'56,61,68,72,82,83,86,91,98,859,6,10,860,23,27,35,-272,-80,-439,746,65',
'326,75,80,-272,90,96,102,326,8,11,17,22,28,36,41,32,-272,44,48,737,-511',
'-272,-272,-439,-439,326,109,725,326,-272,-272,703,-272,-272,-253,864',
'910,865,71,-515,468,-511,-272,-272,680,532,677,559,235,419,-272,114',
'116,119,122,424,-273,54,57,62,-515,225,911,912,468,92,99,436,-255,649',
'19,413,29,37,42,218,220,58,63,-518,326,407,-273,-273,231,100,104,5,9',
'16,21,432,434,488,867,53,56,61,68,72,82,83,86,91,98,297,6,10,643,23',
'27,35,642,634,-518,633,253,630,224,80,-451,90,96,295,298,8,11,17,22',
'28,36,41,-516,626,-516,-516,627,-518,-383,883,-518,-518,-273,-518,-518',
'-273,-451,-451,656,658,620,660,885,-267,606,71,602,27,35,387,436,-518',
'628,629,518,-516,588,532,-273,-273,587,-273,-273,-383,-516,-516,-516',
'326,-516,-267,-267,579,-516,-516,432,434,458,-516,571,-516,-516,-516',
'-516,-516,-516,-516,-383,326,468,-383,-383,-516,-516,-516,-516,-516',
'-516,-516,-65,762,468,561,-516,-516,-516,-516,-516,-516,-516,-516,-516',
'-516,-516,-516,-516,555,-516,-516,-516,554,527,526,436,-516,776,-516',
'-516,518,-516,-516,-516,-516,-516,-516,-516,-516,-516,-516,-516,710',
'511,114,116,119,122,126,432,434,435,865,156,161,780,168,114,116,119',
'122,130,194,198,508,-516,113,115,137,-516,145,152,158,162,165,169,174',
'904,776,111,907,114,116,119,122,126,776,-256,504,436,117,503,913,474',
'490,133,481,477,130,468,476,917,919,113,115,642,111,776,114,116,119',
'122,126,432,434,419,922,114,116,119,122,126,776,471,468,130,395,117',
'293,468,113,115,133,865,130,387,332,773,536,496,115,774,333,334,335',
'336,326,471,431,332,429,170,175,428,117,333,334,335,336,133,418,209',
'32,117,44,48,496,365,369,371,374,377,378,380,382,385,361,410,17,366',
'330,214,326,143,147,150,155,160,164,167,172,177,184,188,191,235,419',
'293,114,116,119,122,424,317,54,57,62,865,225,776,304,301,92,99,326,426',
'280,19,278,29,37,42,218,220,58,63,776,946,776,776,264,231,100,104,5',
'9,16,21,241,110,776,,53,56,61,68,72,82,83,86,91,98,297,6,10,,23,27,35',
',,,,253,,224,80,,90,96,295,298,8,11,17,22,28,36,41,111,332,114,116,119',
'122,126,333,334,335,336,156,161,,168,,,,,130,194,198,,71,113,115,137',
'293,145,152,158,162,165,169,174,,,111,332,114,116,119,122,126,333,334',
'335,336,117,,,,,133,,,130,,,,123,113,115,111,,114,116,119,122,126,,',
',111,,114,116,119,122,126,,,130,,,117,,113,115,,133,,130,,,693,452,113',
'115,694,,419,,114,116,119,122,424,,170,175,117,,,,,133,,,209,426,117',
',,,420,133,,,,,,,,,,,,,214,,143,147,150,155,160,164,167,172,177,184',
'188,191,156,161,293,168,,,,,,194,198,,,,,137,,145,152,158,162,165,169',
'174,,,,,,,,,,212,138,141,,,,,,,176,179,182,185,189,193,197,200,201,207',
'213,139,142,146,149,154,159,163,166,171,180,183,187,190,,,,202,208,211',
'265,266,268,269,157,,,,271,272,273,186,274,195,83,86,276,98,,,156,161',
',168,,,170,175,,194,198,,,,,137,209,145,152,158,162,165,169,174,,,,',
',,,,,,,,214,,143,147,150,155,160,164,167,172,177,184,188,191,,,275,710',
',114,116,119,122,126,,,710,,114,116,119,122,126,,,,130,,,,,113,115,',
',130,,,661,536,113,115,662,,,,,,,,,,170,175,,117,,,,375,133,,209,-517',
'117,-517,-517,363,367,133,,,,379,,384,-537,-537,-537,-537,-537,-537',
'214,,143,147,150,155,160,164,167,172,177,184,188,191,-517,419,293,114',
'116,119,122,424,,-517,-517,-517,,-517,,,,-517,-517,,426,,-517,,-517',
'-517,-517,-517,-517,-517,-517,,,,,,-517,-517,-517,-517,-517,-517,-517',
',,,,-517,-517,-517,-517,-517,-517,-517,-517,-517,-517,-517,-517,-517',
',-517,-517,-517,,,,,-517,,-517,-517,,-517,-517,-517,-517,-517,-517,-517',
'-517,-517,-517,-517,32,,44,48,,,,,365,369,371,374,377,378,380,382,385',
'361,,,366,,,-517,,,419,-517,114,116,119,122,424,235,419,,114,116,119',
'122,424,,54,57,62,426,225,,,,92,99,,426,,19,,29,37,42,218,220,58,63',
',289,,,,231,100,104,5,9,16,21,,,,,53,56,61,68,72,82,83,86,91,98,297',
'6,10,,23,27,35,,,,,253,,224,80,,90,96,295,298,8,11,17,22,28,36,41,,',
',,,,291,,,,,156,161,,168,,,,,,194,198,,71,,,137,293,145,152,158,162',
'165,169,174,,,419,,114,116,119,122,424,,,,,,111,,114,116,119,122,126',
'426,,111,,114,116,119,122,126,,,,130,156,161,,168,113,115,,,130,194',
'198,,,113,115,137,,145,152,158,162,165,169,174,,,542,452,117,,543,,',
'133,,,,117,,,170,175,133,710,,114,116,119,122,126,209,,,,,,,,,,,,130',
',,,,113,115,,214,,143,147,150,155,160,164,167,172,177,184,188,191,535',
'536,293,,537,,,117,156,161,,168,133,,170,175,,194,198,,,,,137,209,145',
'152,158,162,165,169,174,,,,,,,,,,,,,214,,143,147,150,155,160,164,167',
'172,177,184,188,191,,,293,,,,,,156,161,,168,,,,,,194,198,,,,,137,,145',
'152,158,162,165,169,174,,,690,536,,,691,,419,,114,116,119,122,424,,170',
'175,419,,114,116,119,122,126,,209,426,,,,,788,,,,,130,,,,,,115,,,214',
',143,147,150,155,160,164,167,172,177,184,188,191,451,452,293,,453,,117',
'419,,114,116,119,122,424,170,175,,,,,,375,,,209,32,426,44,48,363,367',
'420,,,,379,,384,-537,-537,-537,-537,-537,-537,214,,143,147,150,155,160',
'164,167,172,177,184,188,191,235,,293,,,,,,,54,57,62,,225,,,,92,99,,',
',19,,29,37,42,218,220,58,63,,,,,,231,100,104,5,9,16,21,,,,,53,56,61',
'68,72,82,83,86,91,98,297,6,10,,23,27,35,,,,,253,,224,80,,90,96,295,298',
'8,11,17,22,28,36,41,32,,44,48,,,,,365,369,371,374,377,378,380,382,385',
'361,,,366,,,71,,,,293,,,,,,235,,,,,,,,,54,57,62,,225,,,,92,99,,,,19',
',29,37,42,218,220,58,63,,,,,,231,233,234,5,9,16,21,,,,,53,56,61,68,72',
'82,83,86,91,98,,6,10,,23,27,35,,,,,253,,224,80,,90,96,,,8,11,17,22,28',
'36,41,419,,114,116,119,122,126,,,,,156,161,,168,,,,,130,194,198,,71',
',115,137,559,145,152,158,162,165,169,174,419,,114,116,119,122,126,,',
',,,,117,,,,,419,130,114,116,119,122,126,115,,,419,,114,116,119,122,126',
',,130,,,,,,115,,,,130,117,,,,,115,,,,,,,935,452,,,936,,117,,,,,,,,170',
'175,117,,,,,375,,,209,32,,44,48,363,367,,,,,379,,384,-537,-537,-537',
'-537,-537,-537,214,,143,147,150,155,160,164,167,172,177,184,188,191',
'235,,293,,,,,,,54,57,62,,225,,,,92,99,,,,19,,29,37,42,218,220,58,63',
',,,,,231,100,104,5,9,16,21,,,,,53,56,61,68,72,82,83,86,91,98,297,6,10',
',23,27,35,,,,,253,,224,80,,90,96,295,298,8,11,17,22,28,36,41,32,,44',
'48,,,,,365,369,371,374,377,378,380,382,385,361,,,366,,,71,,,,293,,,',
',,235,,,,,,,,,54,57,62,,225,,,,92,99,,,,19,,29,37,42,218,220,58,63,',
',,,,231,100,104,5,9,16,21,,,,,53,56,61,68,72,82,83,86,91,98,297,6,10',
',23,27,35,,,,,253,,224,80,,90,96,295,298,8,11,17,22,28,36,41,419,,114',
'116,119,122,126,,,,,156,161,,168,,,,,130,194,198,,71,,115,137,293,145',
'152,158,162,165,169,174,419,,114,116,119,122,126,,,,,,,117,,,,,419,130',
'114,116,119,122,126,115,,,,,,,,,,,,130,,,,,,115,,,,,117,,,,,,,,,,,,693',
'452,,,694,,117,,,,,,,,170,175,,,,,,375,,,209,-512,,-512,-512,363,367',
',,,,379,,384,-537,-537,-537,-537,-537,-537,214,,143,147,150,155,160',
'164,167,172,177,184,188,191,-512,,293,,,,,,,-512,-512,-512,,-512,,,',
'-512,-512,,,,-512,,-512,-512,-512,-512,-512,-512,-512,,,,,,-512,-512',
'-512,-512,-512,-512,-512,,,,,-512,-512,-512,-512,-512,-512,-512,-512',
'-512,-512,-512,-512,-512,,-512,-512,-512,,,,,-512,,-512,-512,,-512,-512',
'-512,-512,-512,-512,-512,-512,-512,-512,-512,32,,44,48,,,-512,,365,369',
'371,374,377,378,380,382,385,361,,,366,,,-512,,,,-512,,,,,,235,,,,,,',
',,54,57,62,,225,,,,92,99,,,,19,,29,37,42,218,220,58,63,,,,,,231,100',
'104,5,9,16,21,,,,,53,56,61,68,72,82,83,86,91,98,297,6,10,,23,27,35,',
',,,253,,224,80,,90,96,295,298,8,11,17,22,28,36,41,,,,,,,,,,,,156,161',
',168,,,,,,194,198,,71,,,137,293,145,152,158,162,165,169,174,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,156,161,,168,,,,,,194,198,,,,,137,,145,152',
'158,162,165,169,174,,,451,452,,,453,,,,,,,,,,170,175,,,,,,,,,209,,,',
',,,,,,,,,,,,,,,,214,,143,147,150,155,160,164,167,172,177,184,188,191',
'773,536,293,,774,,,,,,,,,,170,175,,,,,,,,,209,,-514,,-514,-514,,,,,',
',,,,,,,,,214,,143,147,150,155,160,164,167,172,177,184,188,191,811,-514',
'293,,,,,,,,-514,-514,-514,,-514,,,,-514,-514,,,,-514,,-514,-514,-514',
'-514,-514,-514,-514,,,,,,-514,-514,-514,-514,-514,-514,-514,,,,,-514',
'-514,-514,-514,-514,-514,-514,-514,-514,-514,-514,-514,-514,,-514,-514',
'-514,,,,,-514,,-514,-514,,-514,-514,-514,-514,-514,-514,-514,-514,-514',
'-514,-514,,,,,,,,,-96,,,156,161,,168,,,,,,194,198,,-514,,,137,-514,145',
'152,158,162,165,169,174,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,156,161,,168',
',,,,,194,198,,,,,137,,145,152,158,162,165,169,174,,,771,452,,,772,,',
',,,,,,,170,175,,,,,,,,,209,,,,,,,,,,,,,,,,,,,,214,,143,147,150,155,160',
'164,167,172,177,184,188,191,690,536,293,,691,,,,,,,,,,170,175,,,,,,',
',,209,-511,,-511,-511,,,,,,,,,,,,,,,,214,,143,147,150,155,160,164,167',
'172,177,184,188,191,-511,,293,,,,,,,-511,-511,-511,,-511,,,,-511,-511',
',,,-511,,-511,-511,-511,-511,-511,-511,-511,,,,,,-511,-511,-511,-511',
'-511,-511,-511,,,,,-511,-511,-511,-511,-511,-511,-511,-511,-511,-511',
'-511,-511,-511,,-511,-511,-511,,,,,-511,,-511,-511,,-511,-511,-511,-511',
'-511,-511,-511,-511,-511,-511,-511,,,,,,,-511,,,,,156,161,,168,,,,,',
'194,198,,-511,,,137,-511,145,152,158,162,165,169,174,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,739,536,,,740,,,,,,,,,',
'170,175,,,,,,,,,209,-513,,-513,-513,,,,,,,,,,,,,,,,214,,143,147,150',
'155,160,164,167,172,177,184,188,191,-513,,293,,,,,,,-513,-513,-513,',
'-513,,,,-513,-513,,,,-513,,-513,-513,-513,-513,-513,-513,-513,,,,,,-513',
'-513,-513,-513,-513,-513,-513,,,,,-513,-513,-513,-513,-513,-513,-513',
'-513,-513,-513,-513,-513,-513,,-513,-513,-513,,,,,-513,,-513,-513,,-513',
'-513,-513,-513,-513,-513,-513,-513,-513,-513,-513,,,,,,,-513,,,,,156',
'161,,168,,,,,,194,198,,-513,,,137,-513,145,152,158,162,165,169,174,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,768,536,',
',769,,,,,,,,,,170,175,,,,,,,,,209,,-515,,-515,-515,,,,,,,,,,,,,,,214',
',143,147,150,155,160,164,167,172,177,184,188,191,727,-515,293,,,,,,',
',-515,-515,-515,,-515,,,,-515,-515,,,,-515,,-515,-515,-515,-515,-515',
'-515,-515,,,,,,-515,-515,-515,-515,-515,-515,-515,,,,,-515,-515,-515',
'-515,-515,-515,-515,-515,-515,-515,-515,-515,-515,,-515,-515,-515,,',
',,-515,,-515,-515,,-515,-515,-515,-515,-515,-515,-515,-515,-515,-515',
'-515,,,,,,,,,-98,,,156,161,,168,,,,,,194,198,,-515,,,137,-515,145,152',
'158,162,165,169,174,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,156,161,,168,',
',,,,194,198,,,,,137,,145,152,158,162,165,169,174,,,932,536,,,933,,,',
',,,,,,170,175,,,,,,,,,209,,,,,,,,,,,,,,,,,,,,214,,143,147,150,155,160',
'164,167,172,177,184,188,191,742,452,293,,743,,,,,,,,,,170,175,,,,,,',
'242,,209,32,,44,48,,,,,,,,,,,,,,,,214,,143,147,150,155,160,164,167,172',
'177,184,188,191,106,,293,,,,,,,54,57,62,69,225,,,,92,99,,,,19,,29,37',
'42,47,55,58,63,,,,,,93,100,104,5,9,16,21,34,,,49,53,56,61,68,72,82,83',
'86,91,98,,6,10,,23,27,35,,,,,65,,75,80,,90,96,102,,8,11,17,22,28,36',
'41,242,,,32,,44,48,,,,,109,,,,,,,,,,,,71,,,,,,,,,,,,,106,,,,,,,,,54',
'57,62,69,225,,,,92,99,,,,19,,29,37,42,47,55,58,63,,,,,,93,100,104,5',
'9,16,21,34,,,49,53,56,61,68,72,82,83,86,91,98,,6,10,,23,27,35,,,,,65',
',75,80,,90,96,102,,8,11,17,22,28,36,41,242,,,32,,44,48,,,,,109,,,,,',
',,,,,,71,,,,,,,,,,,,,106,,,,,,,,,54,57,62,69,225,,,,92,99,,,,19,,29',
'37,42,47,55,58,63,,,,,,93,100,104,5,9,16,21,34,,,49,53,56,61,68,72,82',
'83,86,91,98,,6,10,,23,27,35,,,,,65,,75,80,,90,96,102,,8,11,17,22,28',
'36,41,242,,,32,,44,48,,,,,109,,,,,,,,,,,,71,,,,,,,,,,,,,106,,,,,,,,',
'54,57,62,69,225,,,,92,99,,,,19,,29,37,42,47,55,58,63,,,,,,93,100,104',
'5,9,16,21,34,,,49,53,56,61,68,72,82,83,86,91,98,,6,10,,23,27,35,,,,',
'65,,75,80,,90,96,102,,8,11,17,22,28,36,41,242,,,32,,44,48,,,,,109,,',
',,,,,,,,,71,,,,,,,,,,,,,106,,,,,,,,,54,57,62,69,225,,,,92,99,,,,19,',
'29,37,42,47,55,58,63,,,,,,93,100,104,5,9,16,21,34,,,49,53,56,61,68,72',
'82,83,86,91,98,,6,10,,23,27,35,,,,,65,,75,80,,90,96,102,,8,11,17,22',
'28,36,41,242,,,32,,44,48,,,,,109,,,,,,,,,,,,71,,,,,,,,,,,,,106,,,,,',
',,,54,57,62,69,225,,,,92,99,,,,19,,29,37,42,47,55,58,63,,,,,,93,100',
'104,5,9,16,21,34,,,49,53,56,61,68,72,82,83,86,91,98,,6,10,,23,27,35',
',,,,65,,340,80,,90,96,102,,8,11,17,22,28,36,41,242,,,32,,44,48,,,,,109',
',,,,,,,,,,,71,,,,,,,,,,,,,106,,,,,,,,,54,57,62,69,225,,,,92,99,,,,19',
',29,37,42,47,55,58,63,,,,,,93,100,104,5,9,16,21,34,,,49,53,56,61,68',
'72,82,83,86,91,98,,6,10,,23,27,35,,,,,65,,75,80,,90,96,102,,8,11,17',
'22,28,36,41,242,,,32,,44,48,,,,,109,,,,,,,,,,,,71,,,,,,,,,,,,,106,,',
',,,,,,54,57,62,69,225,,,,92,99,,,,19,,29,37,42,47,55,58,63,,,,,,93,100',
'104,5,9,16,21,34,,,49,53,56,61,68,72,82,83,86,91,98,,6,10,,23,27,35',
',,,,65,,75,80,,90,96,102,,8,11,17,22,28,36,41,242,,,32,,44,48,,,,,109',
',,,,,,,,,,,71,,,,,,,,,,,,,106,,,,,,,,,54,57,62,69,225,,,,92,99,,,,19',
',29,37,42,47,55,58,63,,,,,,93,100,104,5,9,16,21,34,,,49,53,56,61,68',
'72,82,83,86,91,98,,6,10,,23,27,35,,,,,65,,75,80,,90,96,102,,8,11,17',
'22,28,36,41,242,,,32,,44,48,,,,,109,,,,,,,,,,,,71,,,,,,,,,,,,,106,,',
',,,,,,54,57,62,69,225,,,,92,99,,,,19,,29,37,42,47,55,58,63,,,,,,93,100',
'104,5,9,16,21,34,,,49,53,56,61,68,72,82,83,86,91,98,,6,10,,23,27,35',
',,,,65,,75,80,,90,96,102,,8,11,17,22,28,36,41,242,,,32,,44,48,,,,,109',
',,,,,,,,,,,71,,,,,,,,,,,,,106,,,,,,,,,54,57,62,69,225,,,,92,99,,,,19',
',29,37,42,47,55,58,63,,,,,,93,100,104,5,9,16,21,34,,,49,53,56,61,68',
'72,82,83,86,91,98,,6,10,,23,27,35,,,,,65,,75,80,,90,96,102,,8,11,17',
'22,28,36,41,242,,,32,,44,48,,,,,109,,,,,,,,,,,,71,,,,,,,,,,,,,106,,',
',,,,,,54,57,62,69,225,,,,92,99,,,,19,,29,37,42,47,55,58,63,,,,,,93,100',
'104,5,9,16,21,34,,,49,53,56,61,68,72,82,83,86,91,98,,6,10,,23,27,35',
',,,,65,,340,80,,90,96,102,,8,11,17,22,28,36,41,242,,,32,,44,48,,,,,109',
',,,,,,,,,,,71,,,,,,,,,,,,,106,,,,,,,,,54,57,62,69,225,,,,92,99,,,,19',
',29,37,42,47,55,58,63,,,,,,93,100,104,5,9,16,21,34,,,49,53,56,61,68',
'72,82,83,86,91,98,,6,10,,23,27,35,,,,,65,,75,80,,90,96,102,,8,11,17',
'22,28,36,41,242,,,32,,44,48,,,,,109,,,,,,,,,,,,71,,,,,,,,,,,,,106,,',
',,,,,,54,57,62,69,225,,,,92,99,,,,19,,29,37,42,47,55,58,63,,,,,,93,100',
'104,5,9,16,21,34,,,49,53,56,61,68,72,82,83,86,91,98,,6,10,,23,27,35',
',,,,65,,75,80,,90,96,102,,8,11,17,22,28,36,41,242,,,32,,44,48,,,,,109',
',,,,,,,,,,,71,,,,,,,,,,,,,106,,,,,,,,,54,57,62,69,225,,,,92,99,,,,19',
',29,37,42,47,55,58,63,,,,,,93,100,104,5,9,16,21,34,,,49,53,56,61,68',
'72,82,83,86,91,98,,6,10,,23,27,35,,,,,65,,75,80,,90,96,102,,8,11,17',
'22,28,36,41,242,,,32,,44,48,,,,,109,,,,,,,,,,,,71,,,,,,,,,,,,,106,,',
',,,,,,54,57,62,69,225,,,,92,99,,,,19,,29,37,42,47,55,58,63,,,,,,93,100',
'104,5,9,16,21,34,,,49,53,56,61,68,72,82,83,86,91,98,,6,10,,23,27,35',
',,,,65,,75,80,,90,96,102,,8,11,17,22,28,36,41,242,,,32,,44,48,,,,,109',
',,,,,,,,,,,71,,,,,,,,,,,,,106,,,,,,,,,54,57,62,69,225,,,,92,99,,,,19',
',29,37,42,47,55,58,63,,,,,,93,100,104,5,9,16,21,34,,,49,53,56,61,68',
'72,82,83,86,91,98,,6,10,,23,27,35,,,,,65,,75,80,,90,96,102,,8,11,17',
'22,28,36,41,242,,,32,,44,48,,,,,109,,,,,,,,,,,,71,,,,,,,,,,,,,106,,',
',,,,,,54,57,62,69,225,,,,92,99,,,,19,,29,37,42,47,55,58,63,,,,,,93,100',
'104,5,9,16,21,34,,,49,53,56,61,68,72,82,83,86,91,98,,6,10,,23,27,35',
',,,,65,,75,80,,90,96,102,,8,11,17,22,28,36,41,242,,,32,,44,48,,,,,109',
',,,,,,,,,,,71,,,,,,,,,,,,,106,,,,,,,,,54,57,62,69,225,,,,92,99,,,,19',
',29,37,42,47,55,58,63,,,,,,93,100,104,5,9,16,21,34,,,49,53,56,61,68',
'72,82,83,86,91,98,,6,10,,23,27,35,,,,,65,,75,80,,90,96,102,,8,11,17',
'22,28,36,41,242,,,32,,44,48,,,,,109,,,,,,,,,,,,71,,,,,,,,,,,,,106,,',
',,,,,,54,57,62,69,225,,,,92,99,,,,19,,29,37,42,47,55,58,63,,,,,,93,100',
'104,5,9,16,21,34,,,49,53,56,61,68,72,82,83,86,91,98,,6,10,,23,27,35',
',,,,65,,75,80,,90,96,102,,8,11,17,22,28,36,41,242,,,32,,44,48,,,,,109',
',,,,,,,,,,,71,,,,,,,,,,,,,106,,,,,,,,,54,57,62,69,225,,,,92,99,,,,19',
',29,37,42,47,55,58,63,,,,,,93,100,104,5,9,16,21,34,,,49,53,56,61,68',
'72,82,83,86,91,98,,6,10,,23,27,35,,,,,65,,75,80,,90,96,102,,8,11,17',
'22,28,36,41,242,,,32,,44,48,,,,,109,,,,,,,,,,,,71,,,,,,,,,,,,,106,,',
',,,,,,54,57,62,69,225,,,,92,99,,,,19,,29,37,42,47,55,58,63,,,,,,93,100',
'104,5,9,16,21,34,,,49,53,56,61,68,72,82,83,86,91,98,,6,10,,23,27,35',
',,,,65,,75,80,,90,96,102,,8,11,17,22,28,36,41,242,,,32,,44,48,,,,,109',
',,,,,,,,,,,71,,,,,,,,,,,,,106,,,,,,,,,54,57,62,69,225,,,,92,99,,,,19',
',29,37,42,47,55,58,63,,,,,,93,100,104,5,9,16,21,34,,,49,53,56,61,68',
'72,82,83,86,91,98,,6,10,,23,27,35,,,,,65,,75,80,,90,96,102,,8,11,17',
'22,28,36,41,242,,,32,,44,48,,,,,109,,,,,,,,,,,,71,,,,,,,,,,,,,106,,',
',,,,,,54,57,62,69,225,,,,92,99,,,,19,,29,37,42,47,55,58,63,,,,,,93,100',
'104,5,9,16,21,34,,,49,53,56,61,68,72,82,83,86,91,98,,6,10,,23,27,35',
',,,,65,,75,80,,90,96,102,,8,11,17,22,28,36,41,242,,,32,,44,48,,,,,109',
',,,,,,,,,,,71,,,,,,,,,,,,,106,,,,,,,,,54,57,62,69,225,,,,92,99,,,,19',
',29,37,42,47,55,58,63,,,,,,93,100,104,5,9,16,21,34,,,49,53,56,61,68',
'72,82,83,86,91,98,,6,10,,23,27,35,,,,,65,,75,80,,90,96,102,,8,11,17',
'22,28,36,41,242,,,32,,44,48,,,,,109,,,,,,,,,,,,71,,,,,,,,,,,,,106,,',
',,,,,,54,57,62,69,225,,,,92,99,,,,19,,29,37,42,47,55,58,63,,,,,,93,100',
'104,5,9,16,21,34,,,49,53,56,61,68,72,82,83,86,91,98,,6,10,,23,27,35',
',,,,65,,75,80,,90,96,102,,8,11,17,22,28,36,41,242,,,32,,44,48,,,,,109',
',,,,,,,,,,,71,,,,,,,,,,,,,106,,,,,,,,,54,57,62,69,225,,,,92,99,,,,19',
',29,37,42,47,55,58,63,,,,,,93,100,104,5,9,16,21,34,,,49,53,56,61,68',
'72,82,83,86,91,98,,6,10,,23,27,35,,,,,65,,75,80,,90,96,102,,8,11,17',
'22,28,36,41,15,,,32,,44,48,,,,,109,,,,,,,,,,,,71,,,,,,,,,,,,,106,,,',
',,,,,54,57,62,69,76,,,,92,99,,,,19,,29,37,42,47,55,58,63,,,,,,93,100',
'104,5,9,16,21,34,,,49,53,56,61,68,72,82,83,86,91,98,,6,10,,23,27,35',
',,,,65,,75,80,,90,96,102,,8,11,17,22,28,36,41,242,,,32,,44,48,,,,,109',
',,,,,,,,,,,71,,,,,,,,,,,,,106,,,,,,,,,54,57,62,69,225,,,,92,99,,,,19',
',29,37,42,47,55,58,63,,,,,,93,100,104,5,9,16,21,34,,,49,53,56,61,68',
'72,82,83,86,91,98,,6,10,,23,27,35,,,,,65,,340,80,,90,96,102,,8,11,17',
'22,28,36,41,242,,,32,,44,48,,,,,109,,,,,,,,,,375,,71,,,,,,363,367,,',
',,379,106,384,-537,-537,-537,-537,-537,-537,,54,57,62,69,225,,,,92,99',
',,,19,,29,37,42,47,55,58,63,,,,,,93,100,104,5,9,16,21,34,,,49,53,56',
'61,68,72,82,83,86,91,98,,6,10,,23,27,35,,,,,65,,75,80,,90,96,102,,8',
'11,17,22,28,36,41,375,,,,,,,,363,367,32,109,44,48,379,,384,360,362,364',
'368,370,373,71,,381,383,,,,365,369,371,374,377,378,380,382,385,361,',
',366,235,,,,,,,,,54,57,62,,225,,,,92,99,,,,19,,29,37,42,47,55,58,63',
',,,,,93,100,104,5,9,16,21,,,,,53,56,61,68,72,82,83,86,91,98,,6,10,,23',
'27,35,,,,,253,,224,80,,90,96,,,8,11,17,22,28,36,41,,,365,369,371,374',
'377,378,380,382,385,361,156,161,366,168,,,,,,194,198,71,,,,137,,145',
'152,158,162,165,169,174,,,,,,,,,,212,138,141,,,,,,,176,179,182,185,189',
'193,197,200,201,207,213,139,142,146,149,154,159,163,166,171,180,183',
'187,190,,,,202,208,211,136,144,148,151,157,,,,173,178,181,186,192,195',
',,203,,,,,375,,,,,170,175,,363,367,,,,,379,209,384,360,362,364,368,370',
'373,,,381,383,,,,,,,,,214,,143,147,150,155,160,164,167,172,177,184,188',
'191,375,,,,,,,,363,367,,,,,379,375,384,360,362,364,368,370,373,363,367',
'381,383,,,379,,384,360,362,364,368,370,373,,,381,383,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,365,369,371,374,377,378,380,382,385,361,,,366',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,365,369,371,374,377,378,380,382',
'385,361,,,366,,,365,369,371,374,377,378,380,382,385,361,156,161,366',
'168,,,,,,194,198,,,,,137,,145,152,158,162,165,169,174,,,,,,,,,,212,138',
'141,,,,,,,176,179,182,185,189,193,197,200,201,207,213,139,142,146,149',
'154,159,163,166,171,180,183,187,190,,,,202,208,211,136,144,148,151,157',
',,,173,178,181,186,192,195,,,203,,,,,,,,375,,170,175,,,,,363,367,,,209',
',379,11,384,360,362,364,368,370,373,-226,-228,381,383,,,,,,214,,143',
'147,150,155,160,164,167,172,177,184,188,191,375,,,,,,,,363,367,,,,,379',
',384,360,362,364,368,370,373,,,381,383,,,,,,,,,,,,,,,,,,,,,,,,,,,,,156',
'161,,168,,,,,,194,198,,,,,137,,145,152,158,162,165,169,174,,,,,365,369',
'371,374,377,378,380,382,385,361,,,366,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,365,369,371,374,377,378,380,382,385,361,451,452,366,,453,,,,156,161',
',168,,,170,175,,194,198,,,,,137,209,145,152,158,162,165,169,174,,,,',
',,,,,,,,214,,143,147,150,155,160,164,167,172,177,184,188,191,375,,,',
',,,,363,367,,,,,379,,384,360,362,364,368,370,373,,,381,383,,,,,,,,451',
'452,,,453,,,,,375,,,,,170,175,,363,367,,,,,379,209,384,360,362,364,368',
'370,373,,,381,383,,,,,,,,,214,,143,147,150,155,160,164,167,172,177,184',
'188,191,375,,,,,,,,363,367,,,,,379,,384,360,362,364,368,370,373,,,381',
'383,,,,,,,,,,,365,369,371,374,377,378,380,382,385,361,375,,366,,,,,',
'363,367,,,,,379,,384,-537,-537,-537,-537,-537,-537,,,,,,,,,,,365,369',
'371,374,377,378,380,382,385,361,375,,366,,,,,,363,367,,,,,379,375,384',
'360,362,364,368,370,373,363,367,381,383,,,379,,384,360,362,364,368,370',
'373,-226,365,369,371,374,377,378,380,382,385,361,375,,366,,,,,,363,367',
',,,,379,,384,360,362,364,368,370,373,,,-537,-537,,,,,,,,,,,365,369,371',
'374,377,378,380,382,385,361,375,,366,,,,,,363,367,,,,,379,,384,360,362',
'364,368,370,373,,,381,383,,,,,,,365,369,371,374,377,378,380,382,385',
'361,,,366,,,365,369,371,374,377,378,380,382,385,361,,,366,,,,,,,,,,',
',,,,,,,,,,,365,369,371,374,377,378,380,382,385,361,375,,366,,,,,,363',
'367,,,,,379,,384,360,362,364,368,370,373,,,-537,-537,,,,,,,,,,,365,369',
'371,374,377,378,380,382,385,361,375,,366,,,,,,363,367,,,,,379,375,384',
'360,362,364,368,370,373,363,367,381,383,,,379,,384,360,362,364,368,370',
'373,-226,-228,381,383,375,,,,,,,,363,367,,,,,379,,384,360,362,364,368',
'370,373,-226,-228,,,,,,,,,,,,,,,,365,369,371,374,377,378,380,382,385',
'361,375,,366,,,,,,363,367,,,,,379,,384,360,362,364,368,370,373,,,381',
'383,,,,,,,,,,,365,369,371,374,377,378,380,382,385,361,,,366,,,365,369',
'371,374,377,378,380,382,385,361,,,366,,,,,,,,,,,,,,,365,369,371,374',
'377,378,380,382,385,361,,,366,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,365',
'369,371,374,377,378,380,382,385,361,156,161,366,168,,,,,,194,198,,,',
',137,,145,152,158,162,165,169,174,,,,,,,,,,212,138,141,,,,,,,176,179',
'182,185,189,193,197,200,201,207,213,139,142,146,149,154,159,163,166',
'171,180,183,187,190,,,,202,208,211,136,144,148,151,157,,,,173,178,181',
'186,192,195,,,203,,,,,,,,375,,170,175,,,,,363,367,,,209,,379,11,384',
'360,362,364,368,370,373,-226,-228,381,383,,,,,,214,,143,147,150,155',
'160,164,167,172,177,184,188,191,375,,,,,,,,363,367,,,,,379,375,384,360',
'362,364,368,370,373,363,367,381,383,,,379,375,384,360,362,364,368,370',
'373,363,367,381,383,,,379,375,384,360,362,364,368,370,373,363,367,381',
'383,,,379,,384,360,362,364,368,370,373,,,381,383,,,,,,,,,,,,365,369',
'371,374,377,378,380,382,385,361,375,,366,,,,,,363,367,,,,,379,,384,360',
'362,364,368,370,373,,,381,383,,,,,,,,,,365,369,371,374,377,378,380,382',
'385,361,,,366,,,365,369,371,374,377,378,380,382,385,361,,,366,,,365',
'369,371,374,377,378,380,382,385,361,,,366,,,365,369,371,374,377,378',
'380,382,385,361,,,366,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,365,369,371',
'374,377,378,380,382,385,361,156,161,366,168,,,,,,194,198,,,,,137,,145',
'152,158,162,165,169,174,,,,,,,,,,212,138,141,,,,,,,176,179,182,185,189',
'193,197,200,201,207,213,139,142,146,149,154,159,163,166,171,180,183',
'187,190,,,,202,208,211,136,144,148,151,157,,,,173,178,181,186,192,195',
',,203,,,,,,,,375,,170,175,,,,,363,367,,,209,,379,11,384,360,362,364',
'368,370,373,,,381,383,,,,,,214,,143,147,150,155,160,164,167,172,177',
'184,188,191,375,,,,,,,,363,367,,,,,379,,384,360,362,364,368,370,373',
',,381,383,,,678,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',365,369,371,374,377,378,380,382,385,361,,,366,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,-233,365,369,371,374,377,378,380,382,385,361,156,161,366',
'168,,,,,,194,198,,,,,137,,145,152,158,162,165,169,174,,,,,,,,,,212,138',
'141,,,,,,,176,179,182,185,189,193,197,200,201,207,213,139,142,146,149',
'154,159,163,166,171,180,183,187,190,,,,202,208,211,136,144,148,151,157',
',,,173,178,181,186,192,195,261,,203,,,,,,,,375,,170,175,,,,,363,367',
',,209,,379,11,384,360,362,364,368,370,373,-226,-228,381,383,,,,,,214',
',143,147,150,155,160,164,167,172,177,184,188,191,375,,,,,,,,363,367',
',,,,379,375,384,360,362,364,368,370,373,363,367,381,383,,,379,,384,360',
'362,364,368,370,373,,,381,383,,,678,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,365,369,371,374,377,378,380,382,385,361,,,366,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,365,369,371,374,377,378,380,382,385,361,,,366,,,365',
'369,371,374,377,378,380,382,385,361,156,161,366,168,,,,,,194,198,,,',
',137,,145,152,158,162,165,169,174,,,,,,,,,,212,138,141,,,,,,,176,179',
'182,185,189,193,197,200,201,207,213,139,142,146,149,154,159,163,166',
'171,180,183,187,190,,,,202,208,211,136,144,148,151,157,,,,173,178,181',
'186,192,195,196,199,203,204,,,,375,,,,,170,175,,363,367,,,,,379,209',
'384,360,362,364,368,370,373,,,381,383,,,724,,,,,,214,,143,147,150,155',
'160,164,167,172,177,184,188,191,375,,,,,,,,363,367,,,,,379,,384,360',
'362,364,368,370,373,,,381,383,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,365,369,371,374,377,378,380,382,385,361,,,366,,,,,,,',
',,,,,,32,,44,48,,,,,,,,,,,,,,,,,,,,365,369,371,374,377,378,380,382,385',
'361,235,,366,,,,,,,54,57,62,,225,,,,92,99,,,,19,,29,37,42,218,220,58',
'63,,,,,,231,233,234,5,9,16,21,32,,44,48,53,56,61,68,72,82,83,86,91,98',
',6,10,,23,27,35,,,,,253,,224,80,,90,96,,235,8,11,17,22,28,36,41,,54',
'57,62,,225,,,,92,99,,,,19,,29,37,42,218,220,58,63,71,,,,,231,233,234',
'5,9,16,21,32,,44,48,53,56,61,68,72,82,83,86,91,98,,6,10,,23,27,35,,',
',,253,,224,80,,90,96,,235,8,11,17,22,28,36,41,,54,57,62,,225,,,,92,99',
',,,19,,29,37,42,218,220,58,63,71,,,,,231,100,104,5,9,16,21,,,,,53,56',
'61,68,72,82,83,86,91,98,297,6,10,,23,27,35,,,,,253,,224,80,,90,96,295',
'298,8,11,17,22,28,36,41,32,,44,48,,,,,,,,,,,,,,,,,,,,71,,,,,,,,,,235',
',,,,,,,,54,57,62,,225,,,,92,99,,,,19,,29,37,42,47,55,58,63,,,,,,93,100',
'104,5,9,16,21,32,,44,48,53,56,61,68,72,82,83,86,91,98,,6,10,,23,27,35',
',,,,253,,224,80,,90,96,465,235,8,11,17,22,28,36,41,,54,57,62,,225,,',
',92,99,,,,19,,29,37,42,218,220,58,63,71,,,,,231,233,234,5,9,16,21,32',
',44,48,53,56,61,68,72,82,83,86,91,98,,6,10,,23,27,35,,,,,253,,224,80',
',90,96,,235,8,11,17,22,28,36,41,,54,57,62,,225,,,,92,99,,,,19,,29,37',
'42,218,220,58,63,71,,,,,231,233,234,5,9,16,21,32,,44,48,53,56,61,68',
'72,82,83,86,91,98,,6,10,,23,27,35,,,,,253,,224,80,,90,96,,235,8,11,17',
'22,28,36,41,,54,57,62,,225,,,,92,99,,,,19,,29,37,42,218,220,58,63,71',
',,,,231,233,234,5,9,16,21,32,,44,48,53,56,61,68,72,82,83,86,91,98,,6',
'10,,23,27,35,,,,,253,,224,80,,90,96,,106,8,11,17,22,28,36,41,,54,57',
'62,,225,,,,92,99,,,,19,,29,37,42,47,55,58,63,71,,,,,93,100,104,5,9,16',
'21,32,,44,48,53,56,61,68,72,82,83,86,91,98,,6,10,,23,27,35,,,,,253,',
'224,80,,90,96,,235,8,11,17,22,28,36,41,,54,57,62,,225,,,,92,99,109,',
',19,,29,37,42,218,220,58,63,71,,,,,231,233,234,5,9,16,21,32,,44,48,53',
'56,61,68,72,82,83,86,91,98,,6,10,,23,27,35,,,,,253,,224,80,,90,96,,235',
'8,11,17,22,28,36,41,,54,57,62,,225,,,,92,99,,,,19,,29,37,42,47,55,58',
'63,71,,,,,93,100,104,5,9,16,21,32,,44,48,53,56,61,68,72,82,83,86,91',
'98,,6,10,,23,27,35,,,,,253,,224,80,,90,96,,235,8,11,17,22,28,36,41,',
'54,57,62,,225,,,,92,99,,,,19,,29,37,42,218,220,58,63,71,,,,,231,233',
'234,5,9,16,21,32,,44,48,53,56,61,68,72,82,83,86,91,98,,6,10,,23,27,35',
',,,,253,,224,80,,90,96,,235,8,11,17,22,28,36,41,,54,57,62,,225,,,,92',
'99,,,,19,,29,37,42,218,220,58,63,71,,,,,231,100,104,5,9,16,21,,,,,53',
'56,61,68,72,82,83,86,91,98,297,6,10,,23,27,35,,,,,253,,224,80,,90,96',
'295,298,8,11,17,22,28,36,41,32,,44,48,,,,,,,,,,,,,,,,,,,,71,,,,,,,,',
',106,,,,,,,,,54,57,62,,225,,,,92,99,,,,19,,29,37,42,47,55,58,63,,,,',
',93,100,104,5,9,16,21,32,,44,48,53,56,61,68,72,82,83,86,91,98,,6,10',
',23,27,35,,,,,253,,224,80,,90,96,,235,8,11,17,22,28,36,41,,54,57,62',
',225,,,,92,99,109,,,19,,29,37,42,218,220,58,63,71,,,,,231,233,234,5',
'9,16,21,32,,44,48,53,56,61,68,72,82,83,86,91,98,297,6,10,,23,27,35,',
',,,253,,224,80,,90,96,708,235,8,11,17,22,28,36,41,,54,57,62,,225,,,',
'92,99,,,,19,,29,37,42,218,220,58,63,71,,,,,231,100,104,5,9,16,21,,,',
',53,56,61,68,72,82,83,86,91,98,297,6,10,,23,27,35,,,,,253,,224,80,,90',
'96,295,298,8,11,17,22,28,36,41,32,,44,48,,,,,,,,,,,,,,,,,,,,71,,,,,',
',,,,235,,,,,,,,,54,57,62,,225,,,,92,99,,,,19,,29,37,42,218,220,58,63',
',,,,,231,233,234,5,9,16,21,32,,44,48,53,56,61,68,72,82,83,86,91,98,297',
'6,10,,23,27,35,,,,,253,,224,80,,90,96,,235,8,11,17,22,28,36,41,,54,57',
'62,,225,,,,92,99,,,,19,,29,37,42,218,220,58,63,71,,,,,231,233,234,5',
'9,16,21,,,,,53,56,61,68,72,82,83,86,91,98,297,6,10,,23,27,35,,,,,253',
',224,80,,90,96,,298,8,11,17,22,28,36,41,32,,44,48,,,,,,,,,,,,,,,,,,',
',71,,,,,,,,,,235,,,,,,,,,54,57,62,,225,,,,92,99,,,,19,,29,37,42,218',
'220,58,63,,,,,,231,233,234,5,9,16,21,,,,,53,56,61,68,72,82,83,86,91',
'98,297,6,10,,23,27,35,,,,,253,,224,80,,90,96,708,298,8,11,17,22,28,36',
'41,32,,44,48,,,,,,,,,,,,,,,,,,,,71,,,,,,,,,,235,,,,,,,,,54,57,62,,225',
',,,92,99,,,,19,,29,37,42,218,220,58,63,,,,,,231,233,234,5,9,16,21,32',
',44,48,53,56,61,68,72,82,83,86,91,98,,6,10,,23,27,35,,,,,253,,224,80',
',90,96,,235,8,11,17,22,28,36,41,,54,57,62,,225,,,,92,99,,,,19,,29,37',
'42,47,55,58,63,71,,,,,93,100,104,5,9,16,21,32,,44,48,53,56,61,68,72',
'82,83,86,91,98,,6,10,,23,27,35,,,,,253,,224,80,,90,96,,235,8,11,17,22',
'28,36,41,,54,57,62,,225,,,,92,99,,,,19,,29,37,42,218,220,58,63,71,,',
',,231,233,234,5,9,16,21,32,,44,48,53,56,61,68,72,82,83,86,91,98,,6,10',
',23,27,35,,,,,253,,224,80,,90,96,295,235,8,11,17,22,28,36,41,,54,57',
'62,,225,,,,92,99,,,,19,,29,37,42,218,220,58,63,71,,,,,231,233,234,5',
'9,16,21,32,,44,48,53,56,61,68,72,82,83,86,91,98,,6,10,,23,27,35,,,,',
'253,,224,80,,90,96,,106,8,11,17,22,28,36,41,,54,57,62,69,225,,,,92,99',
',,,19,,29,37,42,47,55,58,63,71,,,,,93,100,104,5,9,16,21,34,,,49,53,56',
'61,68,72,82,83,86,91,98,,6,10,,23,27,35,,,,,65,,75,80,,90,96,102,,8',
'11,17,22,28,36,41,32,,44,48,,,,,,,,109,,,,,,,,,,,,71,,,,,,,,,,235,,',
',,,,,,54,57,62,,225,,,,92,99,,,,19,,29,37,42,47,55,58,63,,,,,,93,100',
'104,5,9,16,21,32,,44,48,53,56,61,68,72,82,83,86,91,98,,6,10,,23,27,35',
',,,,253,,224,80,,90,96,465,106,8,11,17,22,28,36,41,,54,57,62,,225,,',
',92,99,,,,19,,29,37,42,47,55,58,63,71,,,,,93,100,104,5,9,16,21,32,,44',
'48,53,56,61,68,72,82,83,86,91,98,,6,10,,23,27,35,,,,,253,,224,80,,90',
'96,,235,8,11,17,22,28,36,41,,54,57,62,,225,,,,92,99,109,,,19,,29,37',
'42,218,220,58,63,71,,,,,231,233,234,5,9,16,21,32,,44,48,53,56,61,68',
'72,82,83,86,91,98,,6,10,,23,27,35,,,,,253,,224,80,,90,96,,235,8,11,17',
'22,28,36,41,,54,57,62,,225,,,,92,99,,,,19,,29,37,42,218,220,58,63,71',
',,,,231,100,104,5,9,16,21,,,,,53,56,61,68,72,82,83,86,91,98,297,6,10',
',23,27,35,,,,,253,,224,80,,90,96,295,298,8,11,17,22,28,36,41,32,,44',
'48,,,,,,,,,,,,,,,,,,,,71,,,,,,,,,,235,,,,,,,,,54,57,62,,225,,,,92,99',
',,,19,,29,37,42,218,220,58,63,,,,,,231,233,234,5,9,16,21,32,,44,48,53',
'56,61,68,72,82,83,86,91,98,,6,10,,23,27,35,,,,,253,,224,80,,90,96,,235',
'8,11,17,22,28,36,41,,54,57,62,,225,,,,92,99,,,,19,,29,37,42,218,220',
'58,63,71,,,,,231,233,234,5,9,16,21,32,,44,48,53,56,61,68,72,82,83,86',
'91,98,,6,10,,23,27,35,,,,,253,,224,80,,90,96,708,235,8,11,17,22,28,36',
'41,,54,57,62,,225,,,,92,99,,,,19,,29,37,42,218,220,58,63,71,,,,,231',
'233,234,5,9,16,21,32,,44,48,53,56,61,68,72,82,83,86,91,98,297,6,10,',
'23,27,35,,,,,253,,224,80,,90,96,,106,8,11,17,22,28,36,41,,54,57,62,69',
'225,,,,92,99,,,,19,,29,37,42,47,55,58,63,71,,,,,93,100,104,5,9,16,21',
'34,,,49,53,56,61,68,72,82,83,86,91,98,,6,10,,23,27,35,,,,,65,,75,80',
',90,96,102,,8,11,17,22,28,36,41,32,,44,48,,,,,,,,109,,,,,,,,,,,,71,',
',,,,,,,,106,,,,,,,,,54,57,62,,225,,,,92,99,,,,19,,29,37,42,47,55,58',
'63,,,,,,93,100,104,5,9,16,21,32,,44,48,53,56,61,68,72,82,83,86,91,98',
',6,10,,23,27,35,,,,,253,,224,80,,90,96,,106,8,11,17,22,28,36,41,,54',
'57,62,,225,,,,92,99,109,,,19,,29,37,42,47,55,58,63,71,,,,,93,100,104',
'5,9,16,21,32,,44,48,53,56,61,68,72,82,83,86,91,98,,6,10,,23,27,35,,',
',,253,,224,80,,90,96,,106,8,11,17,22,28,36,41,,54,57,62,,225,,,,92,99',
'109,,,19,,29,37,42,47,55,58,63,71,,,,,93,100,104,5,9,16,21,32,,44,48',
'53,56,61,68,72,82,83,86,91,98,,6,10,,23,27,35,,,,,253,,224,80,,90,96',
',106,8,11,17,22,28,36,41,,54,57,62,,225,,,,92,99,109,,,19,,29,37,42',
'47,55,58,63,71,,,,,93,100,104,5,9,16,21,32,,44,48,53,56,61,68,72,82',
'83,86,91,98,,6,10,,23,27,35,,,,,253,,224,80,,90,96,,235,8,11,17,22,28',
'36,41,,54,57,62,,225,,,,92,99,109,,,19,,29,37,42,218,220,58,63,71,,',
',,231,233,234,5,9,16,21,32,,44,48,53,56,61,68,72,82,83,86,91,98,,6,10',
',23,27,35,,,,,253,,224,80,,90,96,,235,8,11,17,22,28,36,41,,54,57,62',
',225,,,,92,99,,,,19,,29,37,42,218,220,58,63,71,,,,,231,100,104,5,9,16',
'21,,,,,53,56,61,68,72,82,83,86,91,98,297,6,10,,23,27,35,,,,,253,,224',
'80,,90,96,295,298,8,11,17,22,28,36,41,32,,44,48,,,,,,,,,,,,,,,,,,,,71',
',,,,,,,,,106,,,,,,,,,54,57,62,,225,,,,92,99,,,,19,,29,37,42,47,55,58',
'63,,,,,,93,100,104,5,9,16,21,32,,44,48,53,56,61,68,72,82,83,86,91,98',
',6,10,,23,27,35,,,,,253,,224,80,,90,96,,235,8,11,17,22,28,36,41,,54',
'57,62,,225,,,,92,99,109,,,19,,29,37,42,218,220,58,63,71,,,,,231,233',
'234,5,9,16,21,32,,44,48,53,56,61,68,72,82,83,86,91,98,297,6,10,,23,27',
'35,,,,,253,,224,80,,90,96,295,106,8,11,17,22,28,36,41,,54,57,62,,225',
',,,92,99,,,,19,,29,37,42,47,55,58,63,71,,,,,93,100,104,5,9,16,21,32',
',44,48,53,56,61,68,72,82,83,86,91,98,,6,10,,23,27,35,,,,,253,,224,80',
',90,96,,235,8,11,17,22,28,36,41,,54,57,62,,225,,,,92,99,109,,,19,,29',
'37,42,218,220,58,63,71,,,,,231,100,104,5,9,16,21,,,,,53,56,61,68,72',
'82,83,86,91,98,297,6,10,,23,27,35,,,,,253,,224,80,,90,96,295,298,8,11',
'17,22,28,36,41,32,,44,48,,,,,,,,,,,,,,,,,,,,71,,,,,,,,,,106,,,,,,,,',
'54,57,62,,225,,,,92,99,,,,19,,29,37,42,47,55,58,63,,,,,,93,100,104,5',
'9,16,21,32,,44,48,53,56,61,68,72,82,83,86,91,98,,6,10,,23,27,35,,,,',
'253,,224,80,,90,96,,106,8,11,17,22,28,36,41,,54,57,62,,225,,,,92,99',
'109,,,19,,29,37,42,47,55,58,63,71,,,,,93,100,104,5,9,16,21,32,,44,48',
'53,56,61,68,72,82,83,86,91,98,,6,10,,23,27,35,,,,,253,,224,80,,90,96',
',106,8,11,17,22,28,36,41,,54,57,62,,225,,,,92,99,109,,,19,,29,37,42',
'47,55,58,63,71,,,,,93,100,104,5,9,16,21,32,,44,48,53,56,61,68,72,82',
'83,86,91,98,,6,10,,23,27,35,,,,,253,,224,80,,90,96,,235,8,11,17,22,28',
'36,41,,54,57,62,,225,,,,92,99,109,,,19,,29,37,42,218,220,58,63,71,,',
',,231,233,234,5,9,16,21,32,,44,48,53,56,61,68,72,82,83,86,91,98,,6,10',
',23,27,35,,,,,253,,224,80,,90,96,,106,8,11,17,22,28,36,41,,54,57,62',
',225,,,,92,99,,,,19,,29,37,42,47,55,58,63,71,,,,,93,100,104,5,9,16,21',
'32,,44,48,53,56,61,68,72,82,83,86,91,98,,6,10,,23,27,35,,,,,253,,224',
'80,,90,96,,235,8,11,17,22,28,36,41,,54,57,62,,225,,,,92,99,109,,,19',
',29,37,42,218,220,58,63,71,,,,,231,233,234,5,9,16,21,32,,44,48,53,56',
'61,68,72,82,83,86,91,98,,6,10,,23,27,35,,,,,253,,224,80,,90,96,,106',
'8,11,17,22,28,36,41,,54,57,62,,225,,,,92,99,,,,19,,29,37,42,47,55,58',
'63,71,,,,,93,100,104,5,9,16,21,32,,44,48,53,56,61,68,72,82,83,86,91',
'98,,6,10,,23,27,35,,,,,253,,224,80,,90,96,,235,8,11,17,22,28,36,41,',
'54,57,62,,225,,,,92,99,109,,,19,,29,37,42,218,220,58,63,71,,,,,231,233',
'234,5,9,16,21,32,,44,48,53,56,61,68,72,82,83,86,91,98,,6,10,,23,27,35',
',,,,253,,224,80,,90,96,465,106,8,11,17,22,28,36,41,,54,57,62,,225,,',
',92,99,,,,19,,29,37,42,47,55,58,63,71,,,,,93,100,104,5,9,16,21,32,,44',
'48,53,56,61,68,72,82,83,86,91,98,,6,10,,23,27,35,,,,,253,,224,80,,90',
'96,,235,8,11,17,22,28,36,41,,54,57,62,,225,,,,92,99,109,,,19,,29,37',
'42,218,220,58,63,71,,,,,231,100,104,5,9,16,21,,,,,53,56,61,68,72,82',
'83,86,91,98,297,6,10,,23,27,35,,,,,253,,224,80,,90,96,295,298,8,11,17',
'22,28,36,41,32,,44,48,,,,,,,,,,,,,,,,,,,,71,,,,,,,,,,235,,,,,,,,,54',
'57,62,,225,,,,92,99,,,,19,,29,37,42,218,220,58,63,,,,,,231,233,234,5',
'9,16,21,32,,44,48,53,56,61,68,72,82,83,86,91,98,,6,10,,23,27,35,,,,',
'253,,224,80,,90,96,,235,8,11,17,22,28,36,41,,54,57,62,,225,,,,92,99',
',,,19,,29,37,42,218,220,58,63,71,,,,,231,233,234,5,9,16,21,32,,44,48',
'53,56,61,68,72,82,83,86,91,98,,6,10,,23,27,35,,,,,253,,224,80,,90,96',
',106,8,11,17,22,28,36,41,,54,57,62,,225,,,,92,99,,,,19,,29,37,42,47',
'55,58,63,71,,,,,93,100,104,5,9,16,21,32,,44,48,53,56,61,68,72,82,83',
'86,91,98,,6,10,,23,27,35,,,,,253,,224,80,,90,96,,235,8,11,17,22,28,36',
'41,,54,57,62,,225,,,,92,99,109,,,19,,29,37,42,218,220,58,63,71,,,,,231',
'233,234,5,9,16,21,32,,44,48,53,56,61,68,72,82,83,86,91,98,,6,10,,23',
'27,35,,,,,253,,224,80,,90,96,,235,8,11,17,22,28,36,41,,54,57,62,,225',
',,,92,99,,,,19,,29,37,42,218,220,58,63,71,,,,,231,233,234,5,9,16,21',
'32,,44,48,53,56,61,68,72,82,83,86,91,98,,6,10,,23,27,35,,,,,253,,224',
'80,,90,96,,235,8,11,17,22,28,36,41,,54,57,62,,225,,,,92,99,,,,19,,29',
'37,42,218,220,58,63,71,,,,,231,233,234,5,9,16,21,32,,44,48,53,56,61',
'68,72,82,83,86,91,98,,6,10,,23,27,35,,,,,253,,224,80,,90,96,,235,8,11',
'17,22,28,36,41,,54,57,62,,225,,,,92,99,,,,19,,29,37,42,218,220,58,63',
'71,,,,,231,233,234,5,9,16,21,32,,44,48,53,56,61,68,72,82,83,86,91,98',
',6,10,,23,27,35,,,,,253,,224,80,,90,96,,235,8,11,17,22,28,36,41,,54',
'57,62,,225,,,,92,99,,,,19,,29,37,42,218,220,58,63,71,,,,,231,233,234',
'5,9,16,21,32,,44,48,53,56,61,68,72,82,83,86,91,98,,6,10,,23,27,35,,',
',,253,,224,80,,90,96,,235,8,11,17,22,28,36,41,,54,57,62,,225,,,,92,99',
',,,19,,29,37,42,218,220,58,63,71,,,,,231,233,234,5,9,16,21,32,,44,48',
'53,56,61,68,72,82,83,86,91,98,,6,10,,23,27,35,,,,,253,,224,80,,90,96',
',235,8,11,17,22,28,36,41,,54,57,62,,225,,,,92,99,,,,19,,29,37,42,218',
'220,58,63,71,,,,,231,233,234,5,9,16,21,32,,44,48,53,56,61,68,72,82,83',
'86,91,98,,6,10,,23,27,35,,,,,253,,224,80,,90,96,,235,8,11,17,22,28,36',
'41,,54,57,62,,225,,,,92,99,,,,19,,29,37,42,218,220,58,63,71,,,,,231',
'233,234,5,9,16,21,32,,44,48,53,56,61,68,72,82,83,86,91,98,,6,10,,23',
'27,35,,,,,253,,224,80,,90,96,,235,8,11,17,22,28,36,41,,54,57,62,,225',
',,,92,99,,,,19,,29,37,42,218,220,58,63,71,,,,,231,233,234,5,9,16,21',
'32,,44,48,53,56,61,68,72,82,83,86,91,98,,6,10,,23,27,35,,,,,253,,224',
'80,,90,96,,235,8,11,17,22,28,36,41,,54,57,62,,225,,,,92,99,,,,19,,29',
'37,42,218,220,58,63,71,,,,,231,233,234,5,9,16,21,32,,44,48,53,56,61',
'68,72,82,83,86,91,98,,6,10,,23,27,35,,,,,253,,224,80,,90,96,,235,8,11',
'17,22,28,36,41,,54,57,62,,225,,,,92,99,,,,19,,29,37,42,218,220,58,63',
'71,,,,,231,233,234,5,9,16,21,32,,44,48,53,56,61,68,72,82,83,86,91,98',
',6,10,,23,27,35,,,,,253,,224,80,,90,96,,235,8,11,17,22,28,36,41,,54',
'57,62,,225,,,,92,99,,,,19,,29,37,42,218,220,58,63,71,,,,,231,233,234',
'5,9,16,21,32,,44,48,53,56,61,68,72,82,83,86,91,98,,6,10,,23,27,35,,',
',,253,,224,80,,90,96,,235,8,11,17,22,28,36,41,,54,57,62,,225,,,,92,99',
',,,19,,29,37,42,218,220,58,63,71,,,,,231,100,104,5,9,16,21,,,,,53,56',
'61,68,72,82,83,86,91,98,297,6,10,,23,27,35,,,,,253,,224,80,,90,96,295',
'298,8,11,17,22,28,36,41,32,,44,48,,,,,,,,,,,,,,,,,,,,71,,,,,,,,,,235',
',,,,,,,,54,57,62,,225,,,,92,99,,,,19,,29,37,42,218,220,58,63,,,,,,231',
'233,234,5,9,16,21,32,,44,48,53,56,61,68,72,82,83,86,91,98,,6,10,,23',
'27,35,,,,,253,,224,80,,90,96,,235,8,11,17,22,28,36,41,,54,57,62,,225',
',,,92,99,,,,19,,29,37,42,218,220,58,63,71,,,,,231,233,234,5,9,16,21',
'32,,44,48,53,56,61,68,72,82,83,86,91,98,,6,10,,23,27,35,,,,,253,,224',
'80,,90,96,,235,8,11,17,22,28,36,41,,54,57,62,,225,,,,92,99,,,,19,,29',
'37,42,218,220,58,63,71,,,,,231,233,234,5,9,16,21,32,,44,48,53,56,61',
'68,72,82,83,86,91,98,,6,10,,23,27,35,,,,,253,,224,80,,90,96,,235,8,11',
'17,22,28,36,41,,54,57,62,,225,,,,92,99,,,,19,,29,37,42,47,55,58,63,71',
',,,,93,100,104,5,9,16,21,32,,44,48,53,56,61,68,72,82,83,86,91,98,,6',
'10,,23,27,35,,,,,253,,224,80,,90,96,,235,8,11,17,22,28,36,41,,54,57',
'62,,225,,,,92,99,,,,19,,29,37,42,47,55,58,63,71,,,,,93,100,104,5,9,16',
'21,32,,44,48,53,56,61,68,72,82,83,86,91,98,,6,10,,23,27,35,,,,,253,',
'224,80,,90,96,,235,8,11,17,22,28,36,41,,54,57,62,,225,,,,92,99,,,,19',
',29,37,42,218,220,58,63,71,,,,,231,233,234,5,9,16,21,32,,44,48,53,56',
'61,68,72,82,83,86,91,98,,6,10,,23,27,35,,,,,253,,224,80,,90,96,,235',
'8,11,17,22,28,36,41,,54,57,62,,225,,,,92,99,,,,19,,29,37,42,218,220',
'58,63,71,,,,,231,233,234,5,9,16,21,32,,44,48,53,56,61,68,72,82,83,86',
'91,98,,6,10,,23,27,35,,,,,253,,224,80,,90,96,,235,8,11,17,22,28,36,41',
',54,57,62,,225,,,,92,99,,,,19,,29,37,42,218,220,58,63,71,,,,,231,233',
'234,5,9,16,21,32,,44,48,53,56,61,68,72,82,83,86,91,98,,6,10,,23,27,35',
',,,,253,,224,80,,90,96,,235,8,11,17,22,28,36,41,,54,57,62,,225,,,,92',
'99,,,,19,,29,37,42,218,220,58,63,71,,,,,231,233,234,5,9,16,21,32,,44',
'48,53,56,61,68,72,82,83,86,91,98,,6,10,,23,27,35,,,,,253,,224,80,,90',
'96,,235,8,11,17,22,28,36,41,,54,57,62,,225,,,,92,99,,,,19,,29,37,42',
'218,220,58,63,71,,,,,231,233,234,5,9,16,21,32,,44,48,53,56,61,68,72',
'82,83,86,91,98,,6,10,,23,27,35,,,,,253,,224,80,,90,96,,235,8,11,17,22',
'28,36,41,,54,57,62,,225,,,,92,99,,,,19,,29,37,42,218,220,58,63,71,,',
',,231,233,234,5,9,16,21,32,,44,48,53,56,61,68,72,82,83,86,91,98,,6,10',
',23,27,35,,,,,253,,224,80,,90,96,,235,8,11,17,22,28,36,41,,54,57,62',
',225,,,,92,99,,,,19,,29,37,42,218,220,58,63,71,,,,,231,233,234,5,9,16',
'21,32,,44,48,53,56,61,68,72,82,83,86,91,98,,6,10,,23,27,35,,,,,253,',
'224,80,,90,96,,235,8,11,17,22,28,36,41,,54,57,62,,225,,,,92,99,,,,19',
',29,37,42,218,220,58,63,71,,,,,231,233,234,5,9,16,21,32,,44,48,53,56',
'61,68,72,82,83,86,91,98,,6,10,,23,27,35,,,,,253,,224,80,,90,96,,235',
'8,11,17,22,28,36,41,,54,57,62,,225,,,,92,99,,,,19,,29,37,42,218,220',
'58,63,71,,,,,231,233,234,5,9,16,21,32,,44,48,53,56,61,68,72,82,83,86',
'91,98,,6,10,,23,27,35,,,,,253,,224,80,,90,96,,235,8,11,17,22,28,36,41',
',54,57,62,,225,,,,92,99,,,,19,,29,37,42,47,55,58,63,71,,,,,93,100,104',
'5,9,16,21,32,,44,48,53,56,61,68,72,82,83,86,91,98,,6,10,,23,27,35,,',
',,253,,224,80,,90,96,,106,8,11,17,22,28,36,41,,54,57,62,,225,,,,92,99',
',,,19,,29,37,42,47,55,58,63,71,,,,,93,100,104,5,9,16,21,32,,44,48,53',
'56,61,68,72,82,83,86,91,98,,6,10,,23,27,35,,,,,253,,224,80,,90,96,,235',
'8,11,17,22,28,36,41,,54,57,62,,225,,,,92,99,109,,,19,,29,37,42,218,220',
'58,63,71,,,,,231,233,234,5,9,16,21,32,,44,48,53,56,61,68,72,82,83,86',
'91,98,,6,10,,23,27,35,,,,,253,,224,80,,90,96,,235,8,11,17,22,28,36,41',
',54,57,62,,225,,,,92,99,,,,19,,29,37,42,218,220,58,63,71,,,,,231,100',
'104,5,9,16,21,,,,,53,56,61,68,72,82,83,86,91,98,297,6,10,,23,27,35,',
',,,253,,224,80,,90,96,295,298,8,11,17,22,28,36,41,32,,44,48,,,,,,,,',
',,,,,,,,,,,71,,,,,,,,,,235,,,,,,,,,54,57,62,,225,,,,92,99,,,,19,,29',
'37,42,218,220,58,63,,,,,,231,100,104,5,9,16,21,,,,,53,56,61,68,72,82',
'83,86,91,98,297,6,10,,23,27,35,,,,,253,,224,80,,90,96,295,298,8,11,17',
'22,28,36,41,32,,44,48,,,,,,,,,,,,,,,,,,,,71,,,,,,,,,,106,,,,,,,,,54',
'57,62,,225,,,,92,99,,,,19,,29,37,42,47,55,58,63,,,,,,93,100,104,5,9',
'16,21,32,,44,48,53,56,61,68,72,82,83,86,91,98,,6,10,,23,27,35,,,,,253',
',224,80,,90,96,,235,8,11,17,22,28,36,41,,54,57,62,,225,,,,92,99,109',
',,19,,29,37,42,218,220,58,63,71,,,,,231,233,234,5,9,16,21,32,,44,48',
'53,56,61,68,72,82,83,86,91,98,,6,10,,23,27,35,,,,,253,,224,80,,90,96',
',235,8,11,17,22,28,36,41,,54,57,62,,225,,,,92,99,,,,19,,29,37,42,218',
'220,58,63,71,,,,,231,233,234,5,9,16,21,32,,44,48,53,56,61,68,72,82,83',
'86,91,98,,6,10,,23,27,35,,,,,253,,224,80,,90,96,802,235,8,11,17,22,28',
'36,41,,54,57,62,,225,,,,92,99,,,,19,,29,37,42,218,220,58,63,71,,,,,231',
'233,234,5,9,16,21,32,,44,48,53,56,61,68,72,82,83,86,91,98,,6,10,,23',
'27,35,,,,,253,,224,80,,90,96,,235,8,11,17,22,28,36,41,,54,57,62,,225',
',,,92,99,,,,19,,29,37,42,218,220,58,63,71,,,,,231,233,234,5,9,16,21',
'32,,44,48,53,56,61,68,72,82,83,86,91,98,,6,10,,23,27,35,,,,,253,,224',
'80,,90,96,,235,8,11,17,22,28,36,41,,54,57,62,,225,,,,92,99,,,,19,,29',
'37,42,218,220,58,63,71,,,,,231,233,234,5,9,16,21,32,,44,48,53,56,61',
'68,72,82,83,86,91,98,,6,10,,23,27,35,,,,,253,,224,80,,90,96,,235,8,11',
'17,22,28,36,41,,54,57,62,,225,,,,92,99,,,,19,,29,37,42,218,220,58,63',
'71,,,,,231,233,234,5,9,16,21,32,,44,48,53,56,61,68,72,82,83,86,91,98',
',6,10,,23,27,35,,,,,253,,224,80,,90,96,,235,8,11,17,22,28,36,41,,54',
'57,62,,225,,,,92,99,,,,19,,29,37,42,218,220,58,63,71,,,,,231,233,234',
'5,9,16,21,32,,44,48,53,56,61,68,72,82,83,86,91,98,,6,10,,23,27,35,,',
',,253,,224,80,,90,96,,235,8,11,17,22,28,36,41,,54,57,62,,225,,,,92,99',
',,,19,,29,37,42,218,220,58,63,71,,,,,231,233,234,5,9,16,21,32,,44,48',
'53,56,61,68,72,82,83,86,91,98,,6,10,,23,27,35,,,,,253,,224,80,,90,96',
',235,8,11,17,22,28,36,41,,54,57,62,,225,,,,92,99,,,,19,,29,37,42,218',
'220,58,63,71,,,,,231,233,234,5,9,16,21,32,,44,48,53,56,61,68,72,82,83',
'86,91,98,,6,10,,23,27,35,,,,,253,,224,80,,90,96,,106,8,11,17,22,28,36',
'41,,54,57,62,69,76,,,,92,99,,,,19,,29,37,42,47,55,58,63,71,,,,,93,100',
'104,5,9,16,21,34,,,49,53,56,61,68,72,82,83,86,91,98,,6,10,,23,27,35',
',,,,65,,75,80,,90,96,102,,8,11,17,22,28,36,41,32,,44,48,,,,,,,,109,',
',,,,,,,,,,71,,,,,,,,,,235,,,,,,,,,54,57,62,,225,,,,92,99,,,,19,,29,37',
'42,218,220,58,63,,,,,,231,233,234,5,9,16,21,32,,44,48,53,56,61,68,72',
'82,83,86,91,98,,6,10,,23,27,35,,,,,253,,224,80,,90,96,,235,8,11,17,22',
'28,36,41,,54,57,62,,225,,,,92,99,,,,19,,29,37,42,218,220,58,63,71,,',
',,231,233,234,5,9,16,21,,216,,,53,56,61,68,72,82,83,86,91,98,,6,10,',
'23,27,35,,,,,253,,224,80,,90,96,235,,8,11,17,22,28,36,41,54,57,62,,225',
',,,92,99,,,,19,,29,37,42,218,220,58,63,,71,,,,231,233,234,5,9,16,21',
',216,,,53,56,61,223,72,82,83,86,91,98,,6,10,,23,27,35,,,,,320,,224,80',
',90,96,235,,8,11,17,22,28,36,41,54,57,62,,225,,,,92,99,,,388,19,,29',
'37,42,218,220,58,63,,,,,,231,233,234,5,9,16,21,,216,,,53,56,61,223,72',
'82,83,86,91,98,,6,10,,23,27,35,,,,,320,,224,80,,90,96,235,,8,11,17,22',
'28,36,41,54,57,62,,225,,,,92,99,,,557,19,,29,37,42,218,220,58,63,,,',
',,231,233,234,5,9,16,21,,216,,,53,56,61,223,72,82,83,86,91,98,,6,10',
',23,27,35,,,,,320,,323,80,,90,96,235,,8,11,17,22,28,36,41,54,57,62,',
'225,,,,92,99,,,,19,,29,37,42,218,220,58,63,,,,,,231,233,234,5,9,16,21',
',216,,,53,56,61,223,72,82,83,86,91,98,,6,10,,23,27,35,,,,,320,,323,80',
',90,96,235,,8,11,17,22,28,36,41,54,57,62,,225,,,,92,99,,,,19,,29,37',
'42,218,220,58,63,,,,,,231,233,234,5,9,16,21,,216,,,53,56,61,223,72,82',
'83,86,91,98,,6,10,,23,27,35,,,,,320,,323,80,,90,96,235,,8,11,17,22,28',
'36,41,54,57,62,,225,,,,92,99,,,,19,,29,37,42,47,55,58,63,,,,,,93,100',
'104,5,9,16,21,,216,,,53,56,61,223,72,82,83,86,91,98,,6,10,,23,27,35',
',,,,406,,224,80,,90,96,235,,8,11,17,22,28,36,41,54,57,62,,225,,,,92',
'99,,,,19,,29,37,42,218,220,58,63,,,,,,231,233,234,5,9,16,21,,,216,,53',
'56,61,223,72,82,83,86,91,98,,6,10,,23,27,35,,,,,401,,75,80,,90,96,102',
'235,8,11,17,22,28,36,41,,54,57,62,,225,,,,92,99,,,,19,,29,37,42,218',
'220,58,63,,,,,,231,233,234,5,9,16,21,,216,,,53,56,61,223,226,82,83,86',
'232,98,,6,10,,23,27,35,,,,,221,,224,80,,90,96,235,,8,11,17,22,28,36',
'41,54,57,62,,225,,,,92,99,,,,19,,29,37,42,218,220,58,63,,,,,,231,233',
'234,5,9,16,21,,216,,,53,56,61,223,72,82,83,86,91,98,,6,10,,23,27,35',
',,,,878,,224,80,,90,96,235,,8,11,17,22,28,36,41,54,57,62,,225,,,,92',
'99,,,,19,,29,37,42,218,220,58,63,,,,,,231,233,234,5,9,16,21,,216,,,53',
'56,61,223,72,82,83,86,91,98,,6,10,,23,27,35,,,,,320,,323,80,,90,96,235',
',8,11,17,22,28,36,41,54,57,62,,225,,,,92,99,,,,19,,29,37,42,218,220',
'58,63,,,,,,231,233,234,5,9,16,21,,216,,,53,56,61,223,72,82,83,86,91',
'98,,6,10,,23,27,35,,,,,320,,323,80,,90,96,235,,8,11,17,22,28,36,41,54',
'57,62,,225,,,,92,99,,,,19,,29,37,42,218,220,58,63,,,,,,231,233,234,5',
'9,16,21,,,,,53,56,61,223,72,82,83,86,91,98,216,6,10,,23,27,35,227,,',
',406,,224,80,,90,96,,,8,11,17,22,28,36,41,,,,,235,,,,,,,,,54,57,62,',
'225,,,,92,99,,,,19,,29,37,42,218,220,58,63,,,,,,231,233,234,5,9,16,21',
',216,,,53,56,61,223,226,82,83,86,232,98,,6,10,,23,27,35,,,,,221,,224',
'80,,90,96,235,,8,11,17,22,28,36,41,54,57,62,,225,,,,92,99,,,,19,,29',
'37,42,218,220,58,63,,,,,,231,233,234,5,9,16,21,,,,,53,56,61,223,72,82',
'83,86,91,98,,6,10,,23,27,35,,,,,320,,323,80,,90,96,325,,8,11,17,22,28',
'36,41' ]
        racc_action_table = arr = Array.new(19889, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'537,446,446,85,76,537,624,624,230,747,747,494,494,537,537,504,66,343',
'343,537,289,537,537,537,537,537,537,537,537,537,537,537,630,402,537',
'128,537,51,537,537,537,537,537,537,279,291,771,390,217,1,535,537,537',
'537,391,535,261,537,537,103,537,103,700,535,535,261,261,14,812,535,279',
'535,535,535,535,535,535,535,535,535,535,535,481,693,535,767,535,128',
'535,535,535,535,535,535,14,51,85,630,402,701,85,535,535,535,537,730',
'217,535,535,66,535,771,894,66,446,686,446,317,705,535,504,624,255,254',
'747,289,494,217,537,537,537,537,343,537,537,537,537,537,537,537,537',
'537,537,537,315,230,537,694,111,537,291,537,390,537,535,76,706,76,230',
'391,230,812,395,605,395,395,767,932,767,106,272,111,685,270,106,481',
'693,535,535,535,535,535,681,535,535,535,535,535,535,535,535,535,535',
'535,757,395,535,272,730,535,270,535,730,535,395,395,395,894,395,894',
'317,935,395,395,317,255,254,395,936,395,395,395,395,395,395,395,347',
'712,50,943,50,395,395,395,395,395,395,395,542,315,694,315,395,395,395',
'395,395,395,395,395,395,395,768,395,395,403,395,395,395,932,808,337',
'932,395,932,395,395,351,395,395,714,757,395,395,395,395,395,395,395',
'95,597,95,95,358,543,126,669,351,669,757,395,757,605,605,605,605,605',
'605,605,605,605,605,395,358,605,710,935,347,935,347,126,395,95,936,772',
'936,715,768,52,342,403,95,95,95,943,95,943,754,710,95,95,542,768,126',
'95,542,95,95,95,95,95,95,95,769,52,52,716,754,95,95,95,95,95,95,95,808',
'337,808,337,95,95,95,95,95,95,95,95,95,95,862,95,95,717,95,95,95,271',
'543,321,772,95,543,95,95,751,95,95,718,751,95,95,95,95,95,95,95,387',
'268,387,387,342,720,342,271,321,321,679,95,769,597,597,597,597,597,597',
'597,597,597,597,95,489,597,609,769,268,497,95,497,95,387,609,609,221',
'742,862,593,221,265,387,387,387,353,387,353,489,489,387,387,898,670',
'898,387,614,387,387,387,387,387,387,387,614,614,666,743,265,387,387',
'387,387,387,387,387,303,665,266,489,387,387,387,387,387,387,387,387',
'387,387,387,387,387,405,387,387,387,324,742,723,663,387,742,387,387',
'266,387,387,387,387,387,387,387,387,387,387,387,596,742,405,405,240',
'742,324,324,596,596,33,743,216,216,596,743,596,596,596,596,596,596,596',
'387,596,596,596,728,240,240,655,743,387,240,269,743,33,33,609,609,609',
'609,609,609,609,609,609,609,81,81,609,593,593,593,593,593,593,593,593',
'593,593,269,349,593,739,247,232,247,614,614,614,614,614,614,614,614',
'614,614,884,276,614,864,349,864,864,864,864,731,303,303,303,303,303',
'303,303,303,303,303,654,739,303,232,316,316,884,884,276,473,722,473',
'473,723,723,723,723,723,723,723,723,723,723,653,739,723,232,739,739',
'232,232,596,596,596,596,596,596,596,596,596,596,734,473,596,596,739',
'651,232,319,274,596,473,473,473,473,473,447,650,447,473,473,736,736',
'647,473,645,473,473,473,473,473,473,473,661,319,319,274,741,473,473',
'473,473,473,473,473,473,644,273,473,473,473,473,473,473,473,473,473',
'473,473,640,473,473,745,473,473,473,933,639,661,638,473,749,473,473',
'273,473,473,473,619,473,473,473,473,473,473,473,308,252,308,308,752',
'661,933,933,661,661,753,473,616,722,722,722,722,722,722,722,722,722',
'722,473,933,722,661,252,252,755,473,586,420,308,420,420,420,420,420',
'284,758,219,308,308,308,308,308,44,44,585,308,308,941,941,570,308,569',
'308,308,308,308,308,308,308,226,284,284,219,219,308,308,308,308,308',
'308,308,308,420,763,308,308,308,308,308,308,308,308,308,308,308,764',
'308,308,765,308,308,308,740,568,226,558,308,556,308,308,774,308,308',
'308,770,308,308,308,308,308,308,308,100,662,100,100,547,226,740,740',
'226,226,540,308,530,521,774,774,502,774,774,500,781,877,786,308,740',
'475,226,662,662,469,308,461,445,100,788,774,788,788,788,788,788,913',
'100,100,100,662,100,877,877,798,100,100,263,801,425,100,424,100,100',
'100,100,100,100,100,773,423,419,913,913,100,100,100,100,100,100,100',
'263,263,263,788,100,100,100,100,100,100,100,100,100,100,100,100,100',
'414,100,100,100,412,407,773,406,100,401,100,100,880,100,100,100,100',
'100,100,100,100,100,100,100,536,397,536,536,400,773,847,818,773,773',
'443,773,773,554,880,880,434,434,389,434,823,879,376,100,372,434,434',
'100,239,773,400,400,359,536,356,355,443,443,354,554,554,847,536,536',
'536,692,536,879,879,348,536,536,239,239,239,536,341,536,536,536,536',
'536,536,536,847,339,846,847,847,536,536,536,536,536,536,536,338,848',
'850,329,536,536,536,536,536,536,536,536,536,536,536,536,536,322,536',
'536,536,320,300,299,206,536,863,536,536,290,536,536,536,536,536,536',
'536,536,536,536,536,513,286,513,513,513,513,513,206,206,206,866,915',
'915,642,915,642,642,642,642,513,915,915,285,536,513,513,915,536,915',
'915,915,915,915,915,915,868,869,277,870,277,277,277,277,277,871,873',
'282,248,513,280,878,248,264,513,253,251,277,882,250,886,887,277,277',
'513,698,889,698,698,698,698,698,248,248,922,890,922,922,922,922,922',
'891,246,245,698,235,277,234,900,698,698,277,903,922,233,466,915,915',
'277,922,915,466,466,466,466,223,909,135,244,132,915,915,131,698,244',
'244,244,244,698,129,915,538,922,538,538,698,256,256,256,256,256,256',
'256,256,256,256,120,84,256,70,915,68,915,915,915,915,915,915,915,915',
'915,915,915,915,538,904,915,904,904,904,904,904,65,538,538,538,929,538',
'930,49,45,538,538,934,904,41,538,40,538,538,538,538,538,538,538,937',
'938,939,940,36,538,538,538,538,538,538,538,25,4,950,,538,538,538,538',
'538,538,538,538,538,538,538,538,538,,538,538,538,,,,,538,,538,538,,538',
'538,538,538,538,538,538,538,538,538,538,8,687,8,8,8,8,8,687,687,687',
'687,507,507,,507,,,,,8,507,507,,538,8,8,507,538,507,507,507,507,507',
'507,507,,,496,73,496,496,496,496,496,73,73,73,73,8,,,,,8,,,496,,,,8',
'496,496,410,,410,410,410,410,410,,,,123,,123,123,123,123,123,,,410,',
',496,,410,410,,496,,123,,,507,507,123,123,507,,426,,426,426,426,426',
'426,,507,507,410,,,,,410,,,507,426,123,,,,426,123,,,,,,,,,,,,,507,,507',
'507,507,507,507,507,507,507,507,507,507,507,38,38,507,38,,,,,,38,38',
',,,,38,,38,38,38,38,38,38,38,,,,,,,,,,38,38,38,,,,,,,38,38,38,38,38',
'38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,,,,38,38,38',
'38,38,38,38,38,,,,38,38,38,38,38,38,38,38,38,38,,,439,439,,439,,,38',
'38,,439,439,,,,,439,38,439,439,439,439,439,439,439,,,,,,,,,,,,,38,,38',
'38,38,38,38,38,38,38,38,38,38,38,,,38,825,,825,825,825,825,825,,,827',
',827,827,827,827,827,,,,825,,,,,825,825,,,827,,,439,439,827,827,439',
',,,,,,,,,439,439,,825,,,,600,825,,439,539,827,539,539,600,600,827,,',
',600,,600,600,600,600,600,600,600,439,,439,439,439,439,439,439,439,439',
'439,439,439,439,539,865,439,865,865,865,865,865,,539,539,539,,539,,',
',539,539,,865,,539,,539,539,539,539,539,539,539,,,,,,539,539,539,539',
'539,539,539,,,,,539,539,539,539,539,539,539,539,539,539,539,539,539',
',539,539,539,,,,,539,,539,539,,539,539,539,539,539,539,539,539,539,539',
'539,43,,43,43,,,,,600,600,600,600,600,600,600,600,600,600,,,600,,,539',
',,787,539,787,787,787,787,787,43,867,,867,867,867,867,867,,43,43,43',
'787,43,,,,43,43,,867,,43,,43,43,43,43,43,43,43,,43,,,,43,43,43,43,43',
'43,43,,,,,43,43,43,43,43,43,43,43,43,43,43,43,43,,43,43,43,,,,,43,,43',
'43,,43,43,43,43,43,43,43,43,43,43,43,,,,,,,43,,,,,313,313,,313,,,,,',
'313,313,,43,,,313,43,313,313,313,313,313,313,313,,,646,,646,646,646',
'646,646,,,,,,792,,792,792,792,792,792,646,,428,,428,428,428,428,428',
',,,792,311,311,,311,792,792,,,428,311,311,,,428,428,311,,311,311,311',
'311,311,311,311,,,313,313,792,,313,,,792,,,,428,,,313,313,428,917,,917',
'917,917,917,917,313,,,,,,,,,,,,917,,,,,917,917,,313,,313,313,313,313',
'313,313,313,313,313,313,313,313,311,311,313,,311,,,917,506,506,,506',
'917,,311,311,,506,506,,,,,506,311,506,506,506,506,506,506,506,,,,,,',
',,,,,,311,,311,311,311,311,311,311,311,311,311,311,311,311,,,311,,,',
',,441,441,,441,,,,,,441,441,,,,,441,,441,441,441,441,441,441,441,,,506',
'506,,,506,,649,,649,649,649,649,649,,506,506,431,,431,431,431,431,431',
',506,649,,,,,649,,,,,431,,,,,,431,,,506,,506,506,506,506,506,506,506',
'506,506,506,506,506,441,441,506,,441,,431,130,,130,130,130,130,130,441',
'441,,,,,,598,,,441,104,130,104,104,598,598,130,,,,598,,598,598,598,598',
'598,598,598,441,,441,441,441,441,441,441,441,441,441,441,441,441,104',
',441,,,,,,,104,104,104,,104,,,,104,104,,,,104,,104,104,104,104,104,104',
'104,,,,,,104,104,104,104,104,104,104,,,,,104,104,104,104,104,104,104',
'104,104,104,104,104,104,,104,104,104,,,,,104,,104,104,,104,104,104,104',
'104,104,104,104,104,104,104,327,,327,327,,,,,598,598,598,598,598,598',
'598,598,598,598,,,598,,,104,,,,104,,,,,,327,,,,,,,,,327,327,327,,327',
',,,327,327,,,,327,,327,327,327,327,327,327,327,,,,,,327,327,327,327',
'327,327,327,,,,,327,327,327,327,327,327,327,327,327,327,,327,327,,327',
'327,327,,,,,327,,327,327,,327,327,,,327,327,327,327,327,327,327,946',
',946,946,946,946,946,,,,,912,912,,912,,,,,946,912,912,,327,,946,912',
'327,912,912,912,912,912,912,912,919,,919,919,919,919,919,,,,,,,946,',
',,,794,919,794,794,794,794,794,919,,,776,,776,776,776,776,776,,,794',
',,,,,794,,,,776,919,,,,,776,,,,,,,912,912,,,912,,794,,,,,,,,912,912',
'776,,,,,594,,,912,454,,454,454,594,594,,,,,594,,594,594,594,594,594',
'594,594,912,,912,912,912,912,912,912,912,912,912,912,912,912,454,,912',
',,,,,,454,454,454,,454,,,,454,454,,,,454,,454,454,454,454,454,454,454',
',,,,,454,454,454,454,454,454,454,,,,,454,454,454,454,454,454,454,454',
'454,454,454,454,454,,454,454,454,,,,,454,,454,454,,454,454,454,454,454',
'454,454,454,454,454,454,456,,456,456,,,,,594,594,594,594,594,594,594',
'594,594,594,,,594,,,454,,,,454,,,,,,456,,,,,,,,,456,456,456,,456,,,',
'456,456,,,,456,,456,456,456,456,456,456,456,,,,,,456,456,456,456,456',
'456,456,,,,,456,456,456,456,456,456,456,456,456,456,456,456,456,,456',
'456,456,,,,,456,,456,456,,456,456,456,456,456,456,456,456,456,456,456',
'907,,907,907,907,907,907,,,,,480,480,,480,,,,,907,480,480,,456,,907',
'480,456,480,480,480,480,480,480,480,829,,829,829,829,829,829,,,,,,,907',
',,,,778,829,778,778,778,778,778,829,,,,,,,,,,,,778,,,,,,778,,,,,829',
',,,,,,,,,,,480,480,,,480,,778,,,,,,,,480,480,,,,,,592,,,480,91,,91,91',
'592,592,,,,,592,,592,592,592,592,592,592,592,480,,480,480,480,480,480',
'480,480,480,480,480,480,480,91,,480,,,,,,,91,91,91,,91,,,,91,91,,,,91',
',91,91,91,91,91,91,91,,,,,,91,91,91,91,91,91,91,,,,,91,91,91,91,91,91',
'91,91,91,91,91,91,91,,91,91,91,,,,,91,,91,91,,91,91,91,91,91,91,91,91',
'91,91,91,544,,544,544,,,91,,592,592,592,592,592,592,592,592,592,592',
',,592,,,91,,,,91,,,,,,544,,,,,,,,,544,544,544,,544,,,,544,544,,,,544',
',544,544,544,544,544,544,544,,,,,,544,544,544,544,544,544,544,,,,,544',
'544,544,544,544,544,544,544,544,544,544,544,544,,544,544,544,,,,,544',
',544,544,,544,544,544,544,544,544,544,544,544,544,544,,,,,,,,,,,,632',
'632,,632,,,,,,632,632,,544,,,632,544,632,632,632,632,632,632,632,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,631,631,,631,,,,,,631,631,,,,,631,,631',
'631,631,631,631,631,631,,,632,632,,,632,,,,,,,,,,632,632,,,,,,,,,632',
',,,,,,,,,,,,,,,,,,,632,,632,632,632,632,632,632,632,632,632,632,632',
'632,631,631,632,,631,,,,,,,,,,631,631,,,,,,,,,631,,690,,690,690,,,,',
',,,,,,,,,,631,,631,631,631,631,631,631,631,631,631,631,631,631,690,690',
'631,,,,,,,,690,690,690,,690,,,,690,690,,,,690,,690,690,690,690,690,690',
'690,,,,,,690,690,690,690,690,690,690,,,,,690,690,690,690,690,690,690',
'690,690,690,690,690,690,,690,690,690,,,,,690,,690,690,,690,690,690,690',
'690,690,690,690,690,690,690,,,,,,,,,690,,,629,629,,629,,,,,,629,629',
',690,,,629,690,629,629,629,629,629,629,629,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,478,478,,478,,,,,,478,478,,,,,478,,478,478,478,478,478,478',
'478,,,629,629,,,629,,,,,,,,,,629,629,,,,,,,,,629,,,,,,,,,,,,,,,,,,,',
'629,,629,629,629,629,629,629,629,629,629,629,629,629,478,478,629,,478',
',,,,,,,,,478,478,,,,,,,,,478,72,,72,72,,,,,,,,,,,,,,,,478,,478,478,478',
'478,478,478,478,478,478,478,478,478,72,,478,,,,,,,72,72,72,,72,,,,72',
'72,,,,72,,72,72,72,72,72,72,72,,,,,,72,72,72,72,72,72,72,,,,,72,72,72',
'72,72,72,72,72,72,72,72,72,72,,72,72,72,,,,,72,,72,72,,72,72,72,72,72',
'72,72,72,72,72,72,,,,,,,72,,,,,551,551,,551,,,,,,551,551,,72,,,551,72',
'551,551,551,551,551,551,551,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,551,551,,,551,,,,,,,,,,551,551,,,,,,,,,551,82,,82',
'82,,,,,,,,,,,,,,,,551,,551,551,551,551,551,551,551,551,551,551,551,551',
'82,,551,,,,,,,82,82,82,,82,,,,82,82,,,,82,,82,82,82,82,82,82,82,,,,',
',82,82,82,82,82,82,82,,,,,82,82,82,82,82,82,82,82,82,82,82,82,82,,82',
'82,82,,,,,82,,82,82,,82,82,82,82,82,82,82,82,82,82,82,,,,,,,82,,,,,627',
'627,,627,,,,,,627,627,,82,,,627,82,627,627,627,627,627,627,627,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,627,627,,,627',
',,,,,,,,,627,627,,,,,,,,,627,,691,,691,691,,,,,,,,,,,,,,,627,,627,627',
'627,627,627,627,627,627,627,627,627,627,691,691,627,,,,,,,,691,691,691',
',691,,,,691,691,,,,691,,691,691,691,691,691,691,691,,,,,,691,691,691',
'691,691,691,691,,,,,691,691,691,691,691,691,691,691,691,691,691,691',
'691,,691,691,691,,,,,691,,691,691,,691,691,691,691,691,691,691,691,691',
'691,691,,,,,,,,,691,,,910,910,,910,,,,,,910,910,,691,,,910,691,910,910',
'910,910,910,910,910,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,553,553,,553,',
',,,,553,553,,,,,553,,553,553,553,553,553,553,553,,,910,910,,,910,,,',
',,,,,,910,910,,,,,,,,,910,,,,,,,,,,,,,,,,,,,,910,,910,910,910,910,910',
'910,910,910,910,910,910,910,553,553,910,,553,,,,,,,,,,553,553,,,,,,',
'519,,553,519,,519,519,,,,,,,,,,,,,,,,553,,553,553,553,553,553,553,553',
'553,553,553,553,553,519,,553,,,,,,,519,519,519,519,519,,,,519,519,,',
',519,,519,519,519,519,519,519,519,,,,,,519,519,519,519,519,519,519,519',
',,519,519,519,519,519,519,519,519,519,519,519,,519,519,,519,519,519',
',,,,519,,519,519,,519,519,519,,519,519,519,519,519,519,519,304,,,304',
',304,304,,,,,519,,,,,,,,,,,,519,,,,,,,,,,,,,304,,,,,,,,,304,304,304',
'304,304,,,,304,304,,,,304,,304,304,304,304,304,304,304,,,,,,304,304',
'304,304,304,304,304,304,,,304,304,304,304,304,304,304,304,304,304,304',
',304,304,,304,304,304,,,,,304,,304,304,,304,304,304,,304,304,304,304',
'304,304,304,861,,,861,,861,861,,,,,304,,,,,,,,,,,,304,,,,,,,,,,,,,861',
',,,,,,,,861,861,861,861,861,,,,861,861,,,,861,,861,861,861,861,861,861',
'861,,,,,,861,861,861,861,861,861,861,861,,,861,861,861,861,861,861,861',
'861,861,861,861,,861,861,,861,861,861,,,,,861,,861,861,,861,861,861',
',861,861,861,861,861,861,861,622,,,622,,622,622,,,,,861,,,,,,,,,,,,861',
',,,,,,,,,,,,622,,,,,,,,,622,622,622,622,622,,,,622,622,,,,622,,622,622',
'622,622,622,622,622,,,,,,622,622,622,622,622,622,622,622,,,622,622,622',
'622,622,622,622,622,622,622,622,,622,622,,622,622,622,,,,,622,,622,622',
',622,622,622,,622,622,622,622,622,622,622,546,,,546,,546,546,,,,,622',
',,,,,,,,,,,622,,,,,,,,,,,,,546,,,,,,,,,546,546,546,546,546,,,,546,546',
',,,546,,546,546,546,546,546,546,546,,,,,,546,546,546,546,546,546,546',
'546,,,546,546,546,546,546,546,546,546,546,546,546,,546,546,,546,546',
'546,,,,,546,,546,546,,546,546,546,,546,546,546,546,546,546,546,340,',
',340,,340,340,,,,,546,,,,,,,,,,,,546,,,,,,,,,,,,,340,,,,,,,,,340,340',
'340,340,340,,,,340,340,,,,340,,340,340,340,340,340,340,340,,,,,,340',
'340,340,340,340,340,340,340,,,340,340,340,340,340,340,340,340,340,340',
'340,,340,340,,340,340,340,,,,,340,,340,340,,340,340,340,,340,340,340',
'340,340,340,340,924,,,924,,924,924,,,,,340,,,,,,,,,,,,340,,,,,,,,,,',
',,924,,,,,,,,,924,924,924,924,924,,,,924,924,,,,924,,924,924,924,924',
'924,924,924,,,,,,924,924,924,924,924,924,924,924,,,924,924,924,924,924',
'924,924,924,924,924,924,,924,924,,924,924,924,,,,,924,,924,924,,924',
'924,924,,924,924,924,924,924,924,924,517,,,517,,517,517,,,,,924,,,,',
',,,,,,,924,,,,,,,,,,,,,517,,,,,,,,,517,517,517,517,517,,,,517,517,,',
',517,,517,517,517,517,517,517,517,,,,,,517,517,517,517,517,517,517,517',
',,517,517,517,517,517,517,517,517,517,517,517,,517,517,,517,517,517',
',,,,517,,517,517,,517,517,517,,517,517,517,517,517,517,517,415,,,415',
',415,415,,,,,517,,,,,,,,,,,,517,,,,,,,,,,,,,415,,,,,,,,,415,415,415',
'415,415,,,,415,415,,,,415,,415,415,415,415,415,415,415,,,,,,415,415',
'415,415,415,415,415,415,,,415,415,415,415,415,415,415,415,415,415,415',
',415,415,,415,415,415,,,,,415,,415,415,,415,415,415,,415,415,415,415',
'415,415,415,567,,,567,,567,567,,,,,415,,,,,,,,,,,,415,,,,,,,,,,,,,567',
',,,,,,,,567,567,567,567,567,,,,567,567,,,,567,,567,567,567,567,567,567',
'567,,,,,,567,567,567,567,567,567,567,567,,,567,567,567,567,567,567,567',
'567,567,567,567,,567,567,,567,567,567,,,,,567,,567,567,,567,567,567',
',567,567,567,567,567,567,567,572,,,572,,572,572,,,,,567,,,,,,,,,,,,567',
',,,,,,,,,,,,572,,,,,,,,,572,572,572,572,572,,,,572,572,,,,572,,572,572',
'572,572,572,572,572,,,,,,572,572,572,572,572,572,572,572,,,572,572,572',
'572,572,572,572,572,572,572,572,,572,572,,572,572,572,,,,,572,,572,572',
',572,572,572,,572,572,572,572,572,572,572,75,,,75,,75,75,,,,,572,,,',
',,,,,,,,572,,,,,,,,,,,,,75,,,,,,,,,75,75,75,75,75,,,,75,75,,,,75,,75',
'75,75,75,75,75,75,,,,,,75,75,75,75,75,75,75,75,,,75,75,75,75,75,75,75',
'75,75,75,75,,75,75,,75,75,75,,,,,75,,75,75,,75,75,75,,75,75,75,75,75',
'75,75,621,,,621,,621,621,,,,,75,,,,,,,,,,,,75,,,,,,,,,,,,,621,,,,,,',
',,621,621,621,621,621,,,,621,621,,,,621,,621,621,621,621,621,621,621',
',,,,,621,621,621,621,621,621,621,621,,,621,621,621,621,621,621,621,621',
'621,621,621,,621,621,,621,621,621,,,,,621,,621,621,,621,621,621,,621',
'621,621,621,621,621,621,578,,,578,,578,578,,,,,621,,,,,,,,,,,,621,,',
',,,,,,,,,,578,,,,,,,,,578,578,578,578,578,,,,578,578,,,,578,,578,578',
'578,578,578,578,578,,,,,,578,578,578,578,578,578,578,578,,,578,578,578',
'578,578,578,578,578,578,578,578,,578,578,,578,578,578,,,,,578,,578,578',
',578,578,578,,578,578,578,578,578,578,578,449,,,449,,449,449,,,,,578',
',,,,,,,,,,,578,,,,,,,,,,,,,449,,,,,,,,,449,449,449,449,449,,,,449,449',
',,,449,,449,449,449,449,449,449,449,,,,,,449,449,449,449,449,449,449',
'449,,,449,449,449,449,449,449,449,449,449,449,449,,449,449,,449,449',
'449,,,,,449,,449,449,,449,449,449,,449,449,449,449,449,449,449,815,',
',815,,815,815,,,,,449,,,,,,,,,,,,449,,,,,,,,,,,,,815,,,,,,,,,815,815',
'815,815,815,,,,815,815,,,,815,,815,815,815,815,815,815,815,,,,,,815',
'815,815,815,815,815,815,815,,,815,815,815,815,815,815,815,815,815,815',
'815,,815,815,,815,815,815,,,,,815,,815,815,,815,815,815,,815,815,815',
'815,815,815,815,667,,,667,,667,667,,,,,815,,,,,,,,,,,,815,,,,,,,,,,',
',,667,,,,,,,,,667,667,667,667,667,,,,667,667,,,,667,,667,667,667,667',
'667,667,667,,,,,,667,667,667,667,667,667,667,667,,,667,667,667,667,667',
'667,667,667,667,667,667,,667,667,,667,667,667,,,,,667,,667,667,,667',
'667,667,,667,667,667,667,667,667,667,432,,,432,,432,432,,,,,667,,,,',
',,,,,,,667,,,,,,,,,,,,,432,,,,,,,,,432,432,432,432,432,,,,432,432,,',
',432,,432,432,432,432,432,432,432,,,,,,432,432,432,432,432,432,432,432',
',,432,432,432,432,432,432,432,432,432,432,432,,432,432,,432,432,432',
',,,,432,,432,432,,432,432,432,,432,432,432,432,432,432,432,680,,,680',
',680,680,,,,,432,,,,,,,,,,,,432,,,,,,,,,,,,,680,,,,,,,,,680,680,680',
'680,680,,,,680,680,,,,680,,680,680,680,680,680,680,680,,,,,,680,680',
'680,680,680,680,680,680,,,680,680,680,680,680,680,680,680,680,680,680',
',680,680,,680,680,680,,,,,680,,680,680,,680,680,680,,680,680,680,680',
'680,680,680,26,,,26,,26,26,,,,,680,,,,,,,,,,,,680,,,,,,,,,,,,,26,,,',
',,,,,26,26,26,26,26,,,,26,26,,,,26,,26,26,26,26,26,26,26,,,,,,26,26',
'26,26,26,26,26,26,,,26,26,26,26,26,26,26,26,26,26,26,,26,26,,26,26,26',
',,,,26,,26,26,,26,26,26,,26,26,26,26,26,26,26,249,,,249,,249,249,,,',
',26,,,,,,,,,,,,26,,,,,,,,,,,,,249,,,,,,,,,249,249,249,249,249,,,,249',
'249,,,,249,,249,249,249,249,249,249,249,,,,,,249,249,249,249,249,249',
'249,249,,,249,249,249,249,249,249,249,249,249,249,249,,249,249,,249',
'249,249,,,,,249,,249,249,,249,249,249,,249,249,249,249,249,249,249,495',
',,495,,495,495,,,,,249,,,,,,,,,,,,249,,,,,,,,,,,,,495,,,,,,,,,495,495',
'495,495,495,,,,495,495,,,,495,,495,495,495,495,495,495,495,,,,,,495',
'495,495,495,495,495,495,495,,,495,495,495,495,495,495,495,495,495,495',
'495,,495,495,,495,495,495,,,,,495,,495,495,,495,495,495,,495,495,495',
'495,495,495,495,856,,,856,,856,856,,,,,495,,,,,,,,,,,,495,,,,,,,,,,',
',,856,,,,,,,,,856,856,856,856,856,,,,856,856,,,,856,,856,856,856,856',
'856,856,856,,,,,,856,856,856,856,856,856,856,856,,,856,856,856,856,856',
'856,856,856,856,856,856,,856,856,,856,856,856,,,,,856,,856,856,,856',
'856,856,,856,856,856,856,856,856,856,807,,,807,,807,807,,,,,856,,,,',
',,,,,,,856,,,,,,,,,,,,,807,,,,,,,,,807,807,807,807,807,,,,807,807,,',
',807,,807,807,807,807,807,807,807,,,,,,807,807,807,807,807,807,807,807',
',,807,807,807,807,807,807,807,807,807,807,807,,807,807,,807,807,807',
',,,,807,,807,807,,807,807,807,,807,807,807,807,807,807,807,416,,,416',
',416,416,,,,,807,,,,,,,,,,,,807,,,,,,,,,,,,,416,,,,,,,,,416,416,416',
'416,416,,,,416,416,,,,416,,416,416,416,416,416,416,416,,,,,,416,416',
'416,416,416,416,416,416,,,416,416,416,416,416,416,416,416,416,416,416',
',416,416,,416,416,416,,,,,416,,416,416,,416,416,416,,416,416,416,416',
'416,416,416,704,,,704,,704,704,,,,,416,,,,,,,,,,,,416,,,,,,,,,,,,,704',
',,,,,,,,704,704,704,704,704,,,,704,704,,,,704,,704,704,704,704,704,704',
'704,,,,,,704,704,704,704,704,704,704,704,,,704,704,704,704,704,704,704',
'704,704,704,704,,704,704,,704,704,704,,,,,704,,704,704,,704,704,704',
',704,704,704,704,704,704,704,875,,,875,,875,875,,,,,704,,,,,,,,,,,,704',
',,,,,,,,,,,,875,,,,,,,,,875,875,875,875,875,,,,875,875,,,,875,,875,875',
'875,875,875,875,875,,,,,,875,875,875,875,875,875,875,875,,,875,875,875',
'875,875,875,875,875,875,875,875,,875,875,,875,875,875,,,,,875,,875,875',
',875,875,875,,875,875,875,875,875,875,875,3,,,3,,3,3,,,,,875,,,,,,,',
',,,,875,,,,,,,,,,,,,3,,,,,,,,,3,3,3,3,3,,,,3,3,,,,3,,3,3,3,3,3,3,3,',
',,,,3,3,3,3,3,3,3,3,,,3,3,3,3,3,3,3,3,3,3,3,,3,3,,3,3,3,,,,,3,,3,3,',
'3,3,3,,3,3,3,3,3,3,3,323,,,323,,323,323,,,,,3,,,,,,,,,,,,3,,,,,,,,,',
',,,323,,,,,,,,,323,323,323,323,323,,,,323,323,,,,323,,323,323,323,323',
'323,323,323,,,,,,323,323,323,323,323,323,323,323,,,323,323,323,323,323',
'323,323,323,323,323,323,,323,323,,323,323,323,,,,,323,,323,323,,323',
'323,323,,323,323,323,323,323,323,323,224,,,224,,224,224,,,,,323,,,,',
',,,,,603,,323,,,,,,603,603,,,,,603,224,603,603,603,603,603,603,603,',
'224,224,224,224,224,,,,224,224,,,,224,,224,224,224,224,224,224,224,',
',,,,224,224,224,224,224,224,224,224,,,224,224,224,224,224,224,224,224',
'224,224,224,,224,224,,224,224,224,,,,,224,,224,224,,224,224,224,,224',
'224,224,224,224,224,224,591,,,,,,,,591,591,837,224,837,837,591,,591',
'591,591,591,591,591,591,224,,591,591,,,,603,603,603,603,603,603,603',
'603,603,603,,,603,837,,,,,,,,,837,837,837,,837,,,,837,837,,,,837,,837',
'837,837,837,837,837,837,,,,,,837,837,837,837,837,837,837,,,,,837,837',
'837,837,837,837,837,837,837,837,,837,837,,837,837,837,,,,,837,,837,837',
',837,837,,,837,837,837,837,837,837,837,,,591,591,591,591,591,591,591',
'591,591,591,491,491,591,491,,,,,,491,491,837,,,,491,,491,491,491,491',
'491,491,491,,,,,,,,,,491,491,491,,,,,,,491,491,491,491,491,491,491,491',
'491,491,491,491,491,491,491,491,491,491,491,491,491,491,491,491,,,,491',
'491,491,491,491,491,491,491,,,,491,491,491,491,491,491,,,491,,,,,601',
',,,,491,491,,601,601,,,,,601,491,601,601,601,601,601,601,601,,,601,601',
',,,,,,,,491,,491,491,491,491,491,491,491,491,491,491,491,491,604,,,',
',,,,604,604,,,,,604,599,604,604,604,604,604,604,604,599,599,604,604',
',,599,,599,599,599,599,599,599,599,,,599,599,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,601,601,601,601,601,601,601,601,601,601,,,601,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,604,604,604,604,604,604,604,604,604,604',
',,604,,,599,599,599,599,599,599,599,599,599,599,483,483,599,483,,,,',
',483,483,,,,,483,,483,483,483,483,483,483,483,,,,,,,,,,483,483,483,',
',,,,,483,483,483,483,483,483,483,483,483,483,483,483,483,483,483,483',
'483,483,483,483,483,483,483,483,,,,483,483,483,483,483,483,483,483,',
',,483,483,483,483,483,483,,,483,,,,,,,,899,,483,483,,,,,899,899,,,483',
',899,483,899,899,899,899,899,899,899,899,899,899,899,,,,,,483,,483,483',
'483,483,483,483,483,483,483,483,483,483,607,,,,,,,,607,607,,,,,607,',
'607,607,607,607,607,607,607,,,607,607,,,,,,,,,,,,,,,,,,,,,,,,,,,,,236',
'236,,236,,,,,,236,236,,,,,236,,236,236,236,236,236,236,236,,,,,899,899',
'899,899,899,899,899,899,899,899,,,899,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,607,607,607,607,607,607,607,607,607,607,236,236,607,,236,,,,237,237',
',237,,,236,236,,237,237,,,,,237,236,237,237,237,237,237,237,237,,,,',
',,,,,,,,236,,236,236,236,236,236,236,236,236,236,236,236,236,595,,,',
',,,,595,595,,,,,595,,595,595,595,595,595,595,595,,,595,595,,,,,,,,237',
'237,,,237,,,,,608,,,,,237,237,,608,608,,,,,608,237,608,608,608,608,608',
'608,608,,,608,608,,,,,,,,,237,,237,237,237,237,237,237,237,237,237,237',
'237,237,893,,,,,,,,893,893,,,,,893,,893,893,893,893,893,893,893,,,893',
'893,,,,,,,,,,,595,595,595,595,595,595,595,595,595,595,590,,595,,,,,',
'590,590,,,,,590,,590,590,590,590,590,590,590,,,,,,,,,,,608,608,608,608',
'608,608,608,608,608,608,610,,608,,,,,,610,610,,,,,610,759,610,610,610',
'610,610,610,610,759,759,610,610,,,759,,759,759,759,759,759,759,759,759',
'893,893,893,893,893,893,893,893,893,893,611,,893,,,,,,611,611,,,,,611',
',611,611,611,611,611,611,611,,,611,611,,,,,,,,,,,590,590,590,590,590',
'590,590,590,590,590,612,,590,,,,,,612,612,,,,,612,,612,612,612,612,612',
'612,612,,,612,612,,,,,,,610,610,610,610,610,610,610,610,610,610,,,610',
',,759,759,759,759,759,759,759,759,759,759,,,759,,,,,,,,,,,,,,,,,,,,',
',611,611,611,611,611,611,611,611,611,611,613,,611,,,,,,613,613,,,,,613',
',613,613,613,613,613,613,613,,,613,613,,,,,,,,,,,612,612,612,612,612',
'612,612,612,612,612,615,,612,,,,,,615,615,,,,,615,97,615,615,615,615',
'615,615,615,97,97,615,615,,,97,,97,97,97,97,97,97,97,97,97,97,97,760',
',,,,,,,760,760,,,,,760,,760,760,760,760,760,760,760,760,760,,,,,,,,',
',,,,,,,613,613,613,613,613,613,613,613,613,613,331,,613,,,,,,331,331',
',,,,331,,331,331,331,331,331,331,331,,,331,331,,,,,,,,,,,615,615,615',
'615,615,615,615,615,615,615,,,615,,,97,97,97,97,97,97,97,97,97,97,,',
'97,,,,,,,,,,,,,,,760,760,760,760,760,760,760,760,760,760,,,760,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,331,331,331,331,331,331,331,331,331',
'331,561,561,331,561,,,,,,561,561,,,,,561,,561,561,561,561,561,561,561',
',,,,,,,,,561,561,561,,,,,,,561,561,561,561,561,561,561,561,561,561,561',
'561,561,561,561,561,561,561,561,561,561,561,561,561,,,,561,561,561,561',
'561,561,561,561,,,,561,561,561,561,561,561,,,561,,,,,,,,560,,561,561',
',,,,560,560,,,561,,560,561,560,560,560,560,560,560,560,560,560,560,560',
',,,,,561,,561,561,561,561,561,561,561,561,561,561,561,561,842,,,,,,',
',842,842,,,,,842,840,842,842,842,842,842,842,842,840,840,842,842,,,840',
'835,840,840,840,840,840,840,840,835,835,840,840,,,835,834,835,835,835',
'835,835,835,835,834,834,835,835,,,834,,834,834,834,834,834,834,834,',
',834,834,,,,,,,,,,,,560,560,560,560,560,560,560,560,560,560,832,,560',
',,,,,832,832,,,,,832,,832,832,832,832,832,832,832,,,832,832,,,,,,,,',
',842,842,842,842,842,842,842,842,842,842,,,842,,,840,840,840,840,840',
'840,840,840,840,840,,,840,,,835,835,835,835,835,835,835,835,835,835',
',,835,,,834,834,834,834,834,834,834,834,834,834,,,834,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,832,832,832,832,832,832,832,832,832,832,69,69,832',
'69,,,,,,69,69,,,,,69,,69,69,69,69,69,69,69,,,,,,,,,,69,69,69,,,,,,,69',
'69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69',
',,,69,69,69,69,69,69,69,69,,,,69,69,69,69,69,69,,,69,,,,,,,,738,,69',
'69,,,,,738,738,,,69,,738,69,738,738,738,738,738,738,738,,,738,738,,',
',,,69,,69,69,69,69,69,69,69,69,69,69,69,69,464,,,,,,,,464,464,,,,,464',
',464,464,464,464,464,464,464,,,464,464,,,464,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,738,738,738,738,738,738,738,738,738,738',
',,738,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,464,464,464,464,464,464,464,464',
'464,464,464,34,34,464,34,,,,,,34,34,,,,,34,,34,34,34,34,34,34,34,,,',
',,,,,,34,34,34,,,,,,,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34',
'34,34,34,34,34,34,34,34,,,,34,34,34,34,34,34,34,34,,,,34,34,34,34,34',
'34,34,,34,,,,,,,,294,,34,34,,,,,294,294,,,34,,294,34,294,294,294,294',
'294,294,294,294,294,294,294,,,,,,34,,34,34,34,34,34,34,34,34,34,34,34',
'34,803,,,,,,,,803,803,,,,,803,689,803,803,803,803,803,803,803,689,689',
'803,803,,,689,,689,689,689,689,689,689,689,,,689,689,,,689,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,294,294,294,294,294,294,294,294,294,294',
',,294,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,803,803,803,803,803,803,803,803',
'803,803,,,803,,,689,689,689,689,689,689,689,689,689,689,11,11,689,11',
',,,,,11,11,,,,,11,,11,11,11,11,11,11,11,,,,,,,,,,11,11,11,,,,,,,11,11',
'11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,,',
',11,11,11,11,11,11,11,11,,,,11,11,11,11,11,11,11,11,11,11,,,,529,,,',
',11,11,,529,529,,,,,529,11,529,529,529,529,529,529,529,,,529,529,,,529',
',,,,,11,,11,11,11,11,11,11,11,11,11,11,11,11,550,,,,,,,,550,550,,,,',
'550,,550,550,550,550,550,550,550,,,550,550,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,529,529,529,529,529,529,529,529,529,529',
',,529,,,,,,,,,,,,,,527,,527,527,,,,,,,,,,,,,,,,,,,,550,550,550,550,550',
'550,550,550,550,550,527,,550,,,,,,,527,527,527,,527,,,,527,527,,,,527',
',527,527,527,527,527,527,527,,,,,,527,527,527,527,527,527,527,518,,518',
'518,527,527,527,527,527,527,527,527,527,527,,527,527,,527,527,527,,',
',,527,,527,527,,527,527,,518,527,527,527,527,527,527,527,,518,518,518',
',518,,,,518,518,,,,518,,518,518,518,518,518,518,518,527,,,,,518,518',
'518,518,518,518,518,293,,293,293,518,518,518,518,518,518,518,518,518',
'518,,518,518,,518,518,518,,,,,518,,518,518,,518,518,,293,518,518,518',
'518,518,518,518,,293,293,293,,293,,,,293,293,,,,293,,293,293,293,293',
'293,293,293,518,,,,,293,293,293,293,293,293,293,,,,,293,293,293,293',
'293,293,293,293,293,293,293,293,293,,293,293,293,,,,,293,,293,293,,293',
'293,293,293,293,293,293,293,293,293,293,278,,278,278,,,,,,,,,,,,,,,',
',,,,293,,,,,,,,,,278,,,,,,,,,278,278,278,,278,,,,278,278,,,,278,,278',
'278,278,278,278,278,278,,,,,,278,278,278,278,278,278,278,295,,295,295',
'278,278,278,278,278,278,278,278,278,278,,278,278,,278,278,278,,,,,278',
',278,278,,278,278,278,295,278,278,278,278,278,278,278,,295,295,295,',
'295,,,,295,295,,,,295,,295,295,295,295,295,295,295,278,,,,,295,295,295',
'295,295,295,295,297,,297,297,295,295,295,295,295,295,295,295,295,295',
',295,295,,295,295,295,,,,,295,,295,295,,295,295,,297,295,295,295,295',
'295,295,295,,297,297,297,,297,,,,297,297,,,,297,,297,297,297,297,297',
'297,297,295,,,,,297,297,297,297,297,297,297,298,,298,298,297,297,297',
'297,297,297,297,297,297,297,,297,297,,297,297,297,,,,,297,,297,297,',
'297,297,,298,297,297,297,297,297,297,297,,298,298,298,,298,,,,298,298',
',,,298,,298,298,298,298,298,298,298,297,,,,,298,298,298,298,298,298',
'298,275,,275,275,298,298,298,298,298,298,298,298,298,298,,298,298,,298',
'298,298,,,,,298,,298,298,,298,298,,275,298,298,298,298,298,298,298,',
'275,275,275,,275,,,,275,275,,,,275,,275,275,275,275,275,275,275,298',
',,,,275,275,275,275,275,275,275,548,,548,548,275,275,275,275,275,275',
'275,275,275,275,,275,275,,275,275,275,,,,,275,,275,275,,275,275,,548',
'275,275,275,275,275,275,275,,548,548,548,,548,,,,548,548,275,,,548,',
'548,548,548,548,548,548,548,275,,,,,548,548,548,548,548,548,548,301',
',301,301,548,548,548,548,548,548,548,548,548,548,,548,548,,548,548,548',
',,,,548,,548,548,,548,548,,301,548,548,548,548,548,548,548,,301,301',
'301,,301,,,,301,301,,,,301,,301,301,301,301,301,301,301,548,,,,,301',
'301,301,301,301,301,301,526,,526,526,301,301,301,301,301,301,301,301',
'301,301,,301,301,,301,301,301,,,,,301,,301,301,,301,301,,526,301,301',
'301,301,301,301,301,,526,526,526,,526,,,,526,526,,,,526,,526,526,526',
'526,526,526,526,301,,,,,526,526,526,526,526,526,526,552,,552,552,526',
'526,526,526,526,526,526,526,526,526,,526,526,,526,526,526,,,,,526,,526',
'526,,526,526,,552,526,526,526,526,526,526,526,,552,552,552,,552,,,,552',
'552,,,,552,,552,552,552,552,552,552,552,526,,,,,552,552,552,552,552',
'552,552,,,,,552,552,552,552,552,552,552,552,552,552,552,552,552,,552',
'552,552,,,,,552,,552,552,,552,552,552,552,552,552,552,552,552,552,552',
'559,,559,559,,,,,,,,,,,,,,,,,,,,552,,,,,,,,,,559,,,,,,,,,559,559,559',
',559,,,,559,559,,,,559,,559,559,559,559,559,559,559,,,,,,559,559,559',
'559,559,559,559,580,,580,580,559,559,559,559,559,559,559,559,559,559',
',559,559,,559,559,559,,,,,559,,559,559,,559,559,,580,559,559,559,559',
'559,559,559,,580,580,580,,580,,,,580,580,559,,,580,,580,580,580,580',
'580,580,580,559,,,,,580,580,580,580,580,580,580,312,,312,312,580,580',
'580,580,580,580,580,580,580,580,580,580,580,,580,580,580,,,,,580,,580',
'580,,580,580,580,312,580,580,580,580,580,580,580,,312,312,312,,312,',
',,312,312,,,,312,,312,312,312,312,312,312,312,580,,,,,312,312,312,312',
'312,312,312,,,,,312,312,312,312,312,312,312,312,312,312,312,312,312',
',312,312,312,,,,,312,,312,312,,312,312,312,312,312,312,312,312,312,312',
'312,583,,583,583,,,,,,,,,,,,,,,,,,,,312,,,,,,,,,,583,,,,,,,,,583,583',
'583,,583,,,,583,583,,,,583,,583,583,583,583,583,583,583,,,,,,583,583',
'583,583,583,583,583,511,,511,511,583,583,583,583,583,583,583,583,583',
'583,583,583,583,,583,583,583,,,,,583,,583,583,,583,583,,511,583,583',
'583,583,583,583,583,,511,511,511,,511,,,,511,511,,,,511,,511,511,511',
'511,511,511,511,583,,,,,511,511,511,511,511,511,511,,,,,511,511,511',
'511,511,511,511,511,511,511,511,511,511,,511,511,511,,,,,511,,511,511',
',511,511,,511,511,511,511,511,511,511,511,508,,508,508,,,,,,,,,,,,,',
',,,,,,511,,,,,,,,,,508,,,,,,,,,508,508,508,,508,,,,508,508,,,,508,,508',
'508,508,508,508,508,508,,,,,,508,508,508,508,508,508,508,,,,,508,508',
'508,508,508,508,508,508,508,508,508,508,508,,508,508,508,,,,,508,,508',
'508,,508,508,508,508,508,508,508,508,508,508,508,881,,881,881,,,,,,',
',,,,,,,,,,,,,508,,,,,,,,,,881,,,,,,,,,881,881,881,,881,,,,881,881,,',
',881,,881,881,881,881,881,881,881,,,,,,881,881,881,881,881,881,881,318',
',318,318,881,881,881,881,881,881,881,881,881,881,,881,881,,881,881,881',
',,,,881,,881,881,,881,881,,318,881,881,881,881,881,881,881,,318,318',
'318,,318,,,,318,318,,,,318,,318,318,318,318,318,318,318,881,,,,,318',
'318,318,318,318,318,318,587,,587,587,318,318,318,318,318,318,318,318',
'318,318,,318,318,,318,318,318,,,,,318,,318,318,,318,318,,587,318,318',
'318,318,318,318,318,,587,587,587,,587,,,,587,587,,,,587,,587,587,587',
'587,587,587,587,318,,,,,587,587,587,587,587,587,587,857,,857,857,587',
'587,587,587,587,587,587,587,587,587,,587,587,,587,587,587,,,,,587,,587',
'587,,587,587,587,857,587,587,587,587,587,587,587,,857,857,857,,857,',
',,857,857,,,,857,,857,857,857,857,857,857,857,587,,,,,857,857,857,857',
'857,857,857,242,,242,242,857,857,857,857,857,857,857,857,857,857,,857',
'857,,857,857,857,,,,,857,,857,857,,857,857,,242,857,857,857,857,857',
'857,857,,242,242,242,242,242,,,,242,242,,,,242,,242,242,242,242,242',
'242,242,857,,,,,242,242,242,242,242,242,242,242,,,242,242,242,242,242',
'242,242,242,242,242,242,,242,242,,242,242,242,,,,,242,,242,242,,242',
'242,242,,242,242,242,242,242,242,242,241,,241,241,,,,,,,,242,,,,,,,',
',,,,242,,,,,,,,,,241,,,,,,,,,241,241,241,,241,,,,241,241,,,,241,,241',
'241,241,241,241,241,241,,,,,,241,241,241,241,241,241,241,227,,227,227',
'241,241,241,241,241,241,241,241,241,241,,241,241,,241,241,241,,,,,241',
',241,241,,241,241,241,227,241,241,241,241,241,241,241,,227,227,227,',
'227,,,,227,227,,,,227,,227,227,227,227,227,227,227,241,,,,,227,227,227',
'227,227,227,227,602,,602,602,227,227,227,227,227,227,227,227,227,227',
',227,227,,227,227,227,,,,,227,,227,227,,227,227,,602,227,227,227,227',
'227,227,227,,602,602,602,,602,,,,602,602,227,,,602,,602,602,602,602',
'602,602,602,227,,,,,602,602,602,602,602,602,602,911,,911,911,602,602',
'602,602,602,602,602,602,602,602,,602,602,,602,602,602,,,,,602,,602,602',
',602,602,,911,602,602,602,602,602,602,602,,911,911,911,,911,,,,911,911',
',,,911,,911,911,911,911,911,911,911,602,,,,,911,911,911,911,911,911',
'911,,,,,911,911,911,911,911,911,911,911,911,911,911,911,911,,911,911',
'911,,,,,911,,911,911,,911,911,911,911,911,911,911,911,911,911,911,606',
',606,606,,,,,,,,,,,,,,,,,,,,911,,,,,,,,,,606,,,,,,,,,606,606,606,,606',
',,,606,606,,,,606,,606,606,606,606,606,606,606,,,,,,606,606,606,606',
'606,606,606,855,,855,855,606,606,606,606,606,606,606,606,606,606,,606',
'606,,606,606,606,,,,,606,,606,606,,606,606,,855,606,606,606,606,606',
'606,606,,855,855,855,,855,,,,855,855,,,,855,,855,855,855,855,855,855',
'855,606,,,,,855,855,855,855,855,855,855,96,,96,96,855,855,855,855,855',
'855,855,855,855,855,,855,855,,855,855,855,,,,,855,,855,855,,855,855',
'855,96,855,855,855,855,855,855,855,,96,96,96,,96,,,,96,96,,,,96,,96',
'96,96,96,96,96,96,855,,,,,96,96,96,96,96,96,96,332,,332,332,96,96,96',
'96,96,96,96,96,96,96,96,96,96,,96,96,96,,,,,96,,96,96,,96,96,,332,96',
'96,96,96,96,96,96,,332,332,332,332,332,,,,332,332,,,,332,,332,332,332',
'332,332,332,332,96,,,,,332,332,332,332,332,332,332,332,,,332,332,332',
'332,332,332,332,332,332,332,332,,332,332,,332,332,332,,,,,332,,332,332',
',332,332,332,,332,332,332,332,332,332,332,333,,333,333,,,,,,,,332,,',
',,,,,,,,,332,,,,,,,,,,333,,,,,,,,,333,333,333,,333,,,,333,333,,,,333',
',333,333,333,333,333,333,333,,,,,,333,333,333,333,333,333,333,334,,334',
'334,333,333,333,333,333,333,333,333,333,333,,333,333,,333,333,333,,',
',,333,,333,333,,333,333,,334,333,333,333,333,333,333,333,,334,334,334',
',334,,,,334,334,333,,,334,,334,334,334,334,334,334,334,333,,,,,334,334',
'334,334,334,334,334,335,,335,335,334,334,334,334,334,334,334,334,334',
'334,,334,334,,334,334,334,,,,,334,,334,334,,334,334,,335,334,334,334',
'334,334,334,334,,335,335,335,,335,,,,335,335,334,,,335,,335,335,335',
'335,335,335,335,334,,,,,335,335,335,335,335,335,335,336,,336,336,335',
'335,335,335,335,335,335,335,335,335,,335,335,,335,335,335,,,,,335,,335',
'335,,335,335,,336,335,335,335,335,335,335,335,,336,336,336,,336,,,,336',
'336,335,,,336,,336,336,336,336,336,336,336,335,,,,,336,336,336,336,336',
'336,336,482,,482,482,336,336,336,336,336,336,336,336,336,336,,336,336',
',336,336,336,,,,,336,,336,336,,336,336,,482,336,336,336,336,336,336',
'336,,482,482,482,,482,,,,482,482,336,,,482,,482,482,482,482,482,482',
'482,336,,,,,482,482,482,482,482,482,482,93,,93,93,482,482,482,482,482',
'482,482,482,482,482,,482,482,,482,482,482,,,,,482,,482,482,,482,482',
',93,482,482,482,482,482,482,482,,93,93,93,,93,,,,93,93,,,,93,,93,93',
'93,93,93,93,93,482,,,,,93,93,93,93,93,93,93,,,,,93,93,93,93,93,93,93',
'93,93,93,93,93,93,,93,93,93,,,,,93,,93,93,,93,93,93,93,93,93,93,93,93',
'93,93,844,,844,844,,,,,,,,,,,,,,,,,,,,93,,,,,,,,,,844,,,,,,,,,844,844',
'844,,844,,,,844,844,,,,844,,844,844,844,844,844,844,844,,,,,,844,844',
'844,844,844,844,844,90,,90,90,844,844,844,844,844,844,844,844,844,844',
',844,844,,844,844,844,,,,,844,,844,844,,844,844,,90,844,844,844,844',
'844,844,844,,90,90,90,,90,,,,90,90,844,,,90,,90,90,90,90,90,90,90,844',
',,,,90,90,90,90,90,90,90,89,,89,89,90,90,90,90,90,90,90,90,90,90,90',
'90,90,,90,90,90,,,,,90,,90,90,,90,90,90,89,90,90,90,90,90,90,90,,89',
'89,89,,89,,,,89,89,,,,89,,89,89,89,89,89,89,89,90,,,,,89,89,89,89,89',
'89,89,479,,479,479,89,89,89,89,89,89,89,89,89,89,,89,89,,89,89,89,,',
',,89,,89,89,,89,89,,479,89,89,89,89,89,89,89,,479,479,479,,479,,,,479',
'479,89,,,479,,479,479,479,479,479,479,479,89,,,,,479,479,479,479,479',
'479,479,,,,,479,479,479,479,479,479,479,479,479,479,479,479,479,,479',
'479,479,,,,,479,,479,479,,479,479,479,479,479,479,479,479,479,479,479',
'626,,626,626,,,,,,,,,,,,,,,,,,,,479,,,,,,,,,,626,,,,,,,,,626,626,626',
',626,,,,626,626,,,,626,,626,626,626,626,626,626,626,,,,,,626,626,626',
'626,626,626,626,344,,344,344,626,626,626,626,626,626,626,626,626,626',
',626,626,,626,626,626,,,,,626,,626,626,,626,626,,344,626,626,626,626',
'626,626,626,,344,344,344,,344,,,,344,344,626,,,344,,344,344,344,344',
'344,344,344,626,,,,,344,344,344,344,344,344,344,345,,345,345,344,344',
'344,344,344,344,344,344,344,344,,344,344,,344,344,344,,,,,344,,344,344',
',344,344,,345,344,344,344,344,344,344,344,,345,345,345,,345,,,,345,345',
'344,,,345,,345,345,345,345,345,345,345,344,,,,,345,345,345,345,345,345',
'345,477,,477,477,345,345,345,345,345,345,345,345,345,345,,345,345,,345',
'345,345,,,,,345,,345,345,,345,345,,477,345,345,345,345,345,345,345,',
'477,477,477,,477,,,,477,477,345,,,477,,477,477,477,477,477,477,477,345',
',,,,477,477,477,477,477,477,477,80,,80,80,477,477,477,477,477,477,477',
'477,477,477,,477,477,,477,477,477,,,,,477,,477,477,,477,477,,80,477',
'477,477,477,477,477,477,,80,80,80,,80,,,,80,80,,,,80,,80,80,80,80,80',
'80,80,477,,,,,80,80,80,80,80,80,80,476,,476,476,80,80,80,80,80,80,80',
'80,80,80,,80,80,,80,80,80,,,,,80,,80,80,,80,80,,476,80,80,80,80,80,80',
'80,,476,476,476,,476,,,,476,476,80,,,476,,476,476,476,476,476,476,476',
'80,,,,,476,476,476,476,476,476,476,79,,79,79,476,476,476,476,476,476',
'476,476,476,476,,476,476,,476,476,476,,,,,476,,476,476,,476,476,,79',
'476,476,476,476,476,476,476,,79,79,79,,79,,,,79,79,,,,79,,79,79,79,79',
'79,79,79,476,,,,,79,79,79,79,79,79,79,471,,471,471,79,79,79,79,79,79',
'79,79,79,79,,79,79,,79,79,79,,,,,79,,79,79,,79,79,,471,79,79,79,79,79',
'79,79,,471,471,471,,471,,,,471,471,79,,,471,,471,471,471,471,471,471',
'471,79,,,,,471,471,471,471,471,471,471,74,,74,74,471,471,471,471,471',
'471,471,471,471,471,,471,471,,471,471,471,,,,,471,,471,471,,471,471',
'471,74,471,471,471,471,471,471,471,,74,74,74,,74,,,,74,74,,,,74,,74',
'74,74,74,74,74,74,471,,,,,74,74,74,74,74,74,74,628,,628,628,74,74,74',
'74,74,74,74,74,74,74,,74,74,,74,74,74,,,,,74,,74,74,,74,74,,628,74,74',
'74,74,74,74,74,,628,628,628,,628,,,,628,628,74,,,628,,628,628,628,628',
'628,628,628,74,,,,,628,628,628,628,628,628,628,,,,,628,628,628,628,628',
'628,628,628,628,628,628,628,628,,628,628,628,,,,,628,,628,628,,628,628',
'628,628,628,628,628,628,628,628,628,71,,71,71,,,,,,,,,,,,,,,,,,,,628',
',,,,,,,,,71,,,,,,,,,71,71,71,,71,,,,71,71,,,,71,,71,71,71,71,71,71,71',
',,,,,71,71,71,71,71,71,71,465,,465,465,71,71,71,71,71,71,71,71,71,71',
',71,71,,71,71,71,,,,,71,,71,71,,71,71,,465,71,71,71,71,71,71,71,,465',
'465,465,,465,,,,465,465,,,,465,,465,465,465,465,465,465,465,71,,,,,465',
'465,465,465,465,465,465,60,,60,60,465,465,465,465,465,465,465,465,465',
'465,,465,465,,465,465,465,,,,,465,,465,465,,465,465,,60,465,465,465',
'465,465,465,465,,60,60,60,,60,,,,60,60,,,,60,,60,60,60,60,60,60,60,465',
',,,,60,60,60,60,60,60,60,360,,360,360,60,60,60,60,60,60,60,60,60,60',
',60,60,,60,60,60,,,,,60,,60,60,,60,60,,360,60,60,60,60,60,60,60,,360',
'360,360,,360,,,,360,360,60,,,360,,360,360,360,360,360,360,360,60,,,',
',360,360,360,360,360,360,360,361,,361,361,360,360,360,360,360,360,360',
'360,360,360,,360,360,,360,360,360,,,,,360,,360,360,,360,360,,361,360',
'360,360,360,360,360,360,,361,361,361,,361,,,,361,361,,,,361,,361,361',
'361,361,361,361,361,360,,,,,361,361,361,361,361,361,361,362,,362,362',
'361,361,361,361,361,361,361,361,361,361,,361,361,,361,361,361,,,,,361',
',361,361,,361,361,,362,361,361,361,361,361,361,361,,362,362,362,,362',
',,,362,362,,,,362,,362,362,362,362,362,362,362,361,,,,,362,362,362,362',
'362,362,362,363,,363,363,362,362,362,362,362,362,362,362,362,362,,362',
'362,,362,362,362,,,,,362,,362,362,,362,362,,363,362,362,362,362,362',
'362,362,,363,363,363,,363,,,,363,363,,,,363,,363,363,363,363,363,363',
'363,362,,,,,363,363,363,363,363,363,363,364,,364,364,363,363,363,363',
'363,363,363,363,363,363,,363,363,,363,363,363,,,,,363,,363,363,,363',
'363,,364,363,363,363,363,363,363,363,,364,364,364,,364,,,,364,364,,',
',364,,364,364,364,364,364,364,364,363,,,,,364,364,364,364,364,364,364',
'365,,365,365,364,364,364,364,364,364,364,364,364,364,,364,364,,364,364',
'364,,,,,364,,364,364,,364,364,,365,364,364,364,364,364,364,364,,365',
'365,365,,365,,,,365,365,,,,365,,365,365,365,365,365,365,365,364,,,,',
'365,365,365,365,365,365,365,366,,366,366,365,365,365,365,365,365,365',
'365,365,365,,365,365,,365,365,365,,,,,365,,365,365,,365,365,,366,365',
'365,365,365,365,365,365,,366,366,366,,366,,,,366,366,,,,366,,366,366',
'366,366,366,366,366,365,,,,,366,366,366,366,366,366,366,367,,367,367',
'366,366,366,366,366,366,366,366,366,366,,366,366,,366,366,366,,,,,366',
',366,366,,366,366,,367,366,366,366,366,366,366,366,,367,367,367,,367',
',,,367,367,,,,367,,367,367,367,367,367,367,367,366,,,,,367,367,367,367',
'367,367,367,368,,368,368,367,367,367,367,367,367,367,367,367,367,,367',
'367,,367,367,367,,,,,367,,367,367,,367,367,,368,367,367,367,367,367',
'367,367,,368,368,368,,368,,,,368,368,,,,368,,368,368,368,368,368,368',
'368,367,,,,,368,368,368,368,368,368,368,369,,369,369,368,368,368,368',
'368,368,368,368,368,368,,368,368,,368,368,368,,,,,368,,368,368,,368',
'368,,369,368,368,368,368,368,368,368,,369,369,369,,369,,,,369,369,,',
',369,,369,369,369,369,369,369,369,368,,,,,369,369,369,369,369,369,369',
'370,,370,370,369,369,369,369,369,369,369,369,369,369,,369,369,,369,369',
'369,,,,,369,,369,369,,369,369,,370,369,369,369,369,369,369,369,,370',
'370,370,,370,,,,370,370,,,,370,,370,370,370,370,370,370,370,369,,,,',
'370,370,370,370,370,370,370,371,,371,371,370,370,370,370,370,370,370',
'370,370,370,,370,370,,370,370,370,,,,,370,,370,370,,370,370,,371,370',
'370,370,370,370,370,370,,371,371,371,,371,,,,371,371,,,,371,,371,371',
'371,371,371,371,371,370,,,,,371,371,371,371,371,371,371,55,,55,55,371',
'371,371,371,371,371,371,371,371,371,,371,371,,371,371,371,,,,,371,,371',
'371,,371,371,,55,371,371,371,371,371,371,371,,55,55,55,,55,,,,55,55',
',,,55,,55,55,55,55,55,55,55,371,,,,,55,55,55,55,55,55,55,,,,,55,55,55',
'55,55,55,55,55,55,55,55,55,55,,55,55,55,,,,,55,,55,55,,55,55,55,55,55',
'55,55,55,55,55,55,373,,373,373,,,,,,,,,,,,,,,,,,,,55,,,,,,,,,,373,,',
',,,,,,373,373,373,,373,,,,373,373,,,,373,,373,373,373,373,373,373,373',
',,,,,373,373,373,373,373,373,373,374,,374,374,373,373,373,373,373,373',
'373,373,373,373,,373,373,,373,373,373,,,,,373,,373,373,,373,373,,374',
'373,373,373,373,373,373,373,,374,374,374,,374,,,,374,374,,,,374,,374',
'374,374,374,374,374,374,373,,,,,374,374,374,374,374,374,374,375,,375',
'375,374,374,374,374,374,374,374,374,374,374,,374,374,,374,374,374,,',
',,374,,374,374,,374,374,,375,374,374,374,374,374,374,374,,375,375,375',
',375,,,,375,375,,,,375,,375,375,375,375,375,375,375,374,,,,,375,375',
'375,375,375,375,375,733,,733,733,375,375,375,375,375,375,375,375,375',
'375,,375,375,,375,375,375,,,,,375,,375,375,,375,375,,733,375,375,375',
'375,375,375,375,,733,733,733,,733,,,,733,733,,,,733,,733,733,733,733',
'733,733,733,375,,,,,733,733,733,733,733,733,733,732,,732,732,733,733',
'733,733,733,733,733,733,733,733,,733,733,,733,733,733,,,,,733,,733,733',
',733,733,,732,733,733,733,733,733,733,733,,732,732,732,,732,,,,732,732',
',,,732,,732,732,732,732,732,732,732,733,,,,,732,732,732,732,732,732',
'732,378,,378,378,732,732,732,732,732,732,732,732,732,732,,732,732,,732',
'732,732,,,,,732,,732,732,,732,732,,378,732,732,732,732,732,732,732,',
'378,378,378,,378,,,,378,378,,,,378,,378,378,378,378,378,378,378,732',
',,,,378,378,378,378,378,378,378,379,,379,379,378,378,378,378,378,378',
'378,378,378,378,,378,378,,378,378,378,,,,,378,,378,378,,378,378,,379',
'378,378,378,378,378,378,378,,379,379,379,,379,,,,379,379,,,,379,,379',
'379,379,379,379,379,379,378,,,,,379,379,379,379,379,379,379,380,,380',
'380,379,379,379,379,379,379,379,379,379,379,,379,379,,379,379,379,,',
',,379,,379,379,,379,379,,380,379,379,379,379,379,379,379,,380,380,380',
',380,,,,380,380,,,,380,,380,380,380,380,380,380,380,379,,,,,380,380',
'380,380,380,380,380,381,,381,381,380,380,380,380,380,380,380,380,380',
'380,,380,380,,380,380,380,,,,,380,,380,380,,380,380,,381,380,380,380',
'380,380,380,380,,381,381,381,,381,,,,381,381,,,,381,,381,381,381,381',
'381,381,381,380,,,,,381,381,381,381,381,381,381,382,,382,382,381,381',
'381,381,381,381,381,381,381,381,,381,381,,381,381,381,,,,,381,,381,381',
',381,381,,382,381,381,381,381,381,381,381,,382,382,382,,382,,,,382,382',
',,,382,,382,382,382,382,382,382,382,381,,,,,382,382,382,382,382,382',
'382,383,,383,383,382,382,382,382,382,382,382,382,382,382,,382,382,,382',
'382,382,,,,,382,,382,382,,382,382,,383,382,382,382,382,382,382,382,',
'383,383,383,,383,,,,383,383,,,,383,,383,383,383,383,383,383,383,382',
',,,,383,383,383,383,383,383,383,384,,384,384,383,383,383,383,383,383',
'383,383,383,383,,383,383,,383,383,383,,,,,383,,383,383,,383,383,,384',
'383,383,383,383,383,383,383,,384,384,384,,384,,,,384,384,,,,384,,384',
'384,384,384,384,384,384,383,,,,,384,384,384,384,384,384,384,385,,385',
'385,384,384,384,384,384,384,384,384,384,384,,384,384,,384,384,384,,',
',,384,,384,384,,384,384,,385,384,384,384,384,384,384,384,,385,385,385',
',385,,,,385,385,,,,385,,385,385,385,385,385,385,385,384,,,,,385,385',
'385,385,385,385,385,727,,727,727,385,385,385,385,385,385,385,385,385',
'385,,385,385,,385,385,385,,,,,385,,385,385,,385,385,,727,385,385,385',
'385,385,385,385,,727,727,727,,727,,,,727,727,,,,727,,727,727,727,727',
'727,727,727,385,,,,,727,727,727,727,727,727,727,726,,726,726,727,727',
'727,727,727,727,727,727,727,727,,727,727,,727,727,727,,,,,727,,727,727',
',727,727,,726,727,727,727,727,727,727,727,,726,726,726,,726,,,,726,726',
',,,726,,726,726,726,726,726,726,726,727,,,,,726,726,726,726,726,726',
'726,448,,448,448,726,726,726,726,726,726,726,726,726,726,,726,726,,726',
'726,726,,,,,726,,726,726,,726,726,,448,726,726,726,726,726,726,726,',
'448,448,448,,448,,,,448,448,,,,448,,448,448,448,448,448,448,448,726',
',,,,448,448,448,448,448,448,448,48,,48,48,448,448,448,448,448,448,448',
'448,448,448,,448,448,,448,448,448,,,,,448,,448,448,,448,448,,48,448',
'448,448,448,448,448,448,,48,48,48,,48,,,,48,48,448,,,48,,48,48,48,48',
'48,48,48,448,,,,,48,48,48,48,48,48,48,440,,440,440,48,48,48,48,48,48',
'48,48,48,48,,48,48,,48,48,48,,,,,48,,48,48,,48,48,,440,48,48,48,48,48',
'48,48,,440,440,440,,440,,,,440,440,,,,440,,440,440,440,440,440,440,440',
'48,,,,,440,440,440,440,440,440,440,,,,,440,440,440,440,440,440,440,440',
'440,440,440,440,440,,440,440,440,,,,,440,,440,440,,440,440,440,440,440',
'440,440,440,440,440,440,47,,47,47,,,,,,,,,,,,,,,,,,,,440,,,,,,,,,,47',
',,,,,,,,47,47,47,,47,,,,47,47,,,,47,,47,47,47,47,47,47,47,,,,,,47,47',
'47,47,47,47,47,,,,,47,47,47,47,47,47,47,47,47,47,47,47,47,,47,47,47',
',,,,47,,47,47,,47,47,47,47,47,47,47,47,47,47,47,396,,396,396,,,,,,,',
',,,,,,,,,,,,47,,,,,,,,,,396,,,,,,,,,396,396,396,,396,,,,396,396,,,,396',
',396,396,396,396,396,396,396,,,,,,396,396,396,396,396,396,396,724,,724',
'724,396,396,396,396,396,396,396,396,396,396,,396,396,,396,396,396,,',
',,396,,396,396,,396,396,,724,396,396,396,396,396,396,396,,724,724,724',
',724,,,,724,724,396,,,724,,724,724,724,724,724,724,724,396,,,,,724,724',
'724,724,724,724,724,677,,677,677,724,724,724,724,724,724,724,724,724',
'724,,724,724,,724,724,724,,,,,724,,724,724,,724,724,,677,724,724,724',
'724,724,724,724,,677,677,677,,677,,,,677,677,,,,677,,677,677,677,677',
'677,677,677,724,,,,,677,677,677,677,677,677,677,814,,814,814,677,677',
'677,677,677,677,677,677,677,677,,677,677,,677,677,677,,,,,677,,677,677',
',677,677,677,814,677,677,677,677,677,677,677,,814,814,814,,814,,,,814',
'814,,,,814,,814,814,814,814,814,814,814,677,,,,,814,814,814,814,814',
'814,814,678,,678,678,814,814,814,814,814,814,814,814,814,814,,814,814',
',814,814,814,,,,,814,,814,814,,814,814,,678,814,814,814,814,814,814',
'814,,678,678,678,,678,,,,678,678,,,,678,,678,678,678,678,678,678,678',
'814,,,,,678,678,678,678,678,678,678,802,,802,802,678,678,678,678,678',
'678,678,678,678,678,,678,678,,678,678,678,,,,,678,,678,678,,678,678',
',802,678,678,678,678,678,678,678,,802,802,802,,802,,,,802,802,,,,802',
',802,802,802,802,802,802,802,678,,,,,802,802,802,802,802,802,802,32',
',32,32,802,802,802,802,802,802,802,802,802,802,,802,802,,802,802,802',
',,,,802,,802,802,,802,802,,32,802,802,802,802,802,802,802,,32,32,32',
',32,,,,32,32,,,,32,,32,32,32,32,32,32,32,802,,,,,32,32,32,32,32,32,32',
'813,,813,813,32,32,32,32,32,32,32,32,32,32,,32,32,,32,32,32,,,,,32,',
'32,32,,32,32,,813,32,32,32,32,32,32,32,,813,813,813,,813,,,,813,813',
',,,813,,813,813,813,813,813,813,813,32,,,,,813,813,813,813,813,813,813',
'708,,708,708,813,813,813,813,813,813,813,813,813,813,,813,813,,813,813',
'813,,,,,813,,813,813,,813,813,,708,813,813,813,813,813,813,813,,708',
'708,708,,708,,,,708,708,,,,708,,708,708,708,708,708,708,708,813,,,,',
'708,708,708,708,708,708,708,408,,408,408,708,708,708,708,708,708,708',
'708,708,708,,708,708,,708,708,708,,,,,708,,708,708,,708,708,,408,708',
'708,708,708,708,708,708,,408,408,408,,408,,,,408,408,,,,408,,408,408',
'408,408,408,408,408,708,,,,,408,408,408,408,408,408,408,15,,15,15,408',
'408,408,408,408,408,408,408,408,408,,408,408,,408,408,408,,,,,408,,408',
'408,,408,408,,15,408,408,408,408,408,408,408,,15,15,15,15,15,,,,15,15',
',,,15,,15,15,15,15,15,15,15,408,,,,,15,15,15,15,15,15,15,15,,,15,15',
'15,15,15,15,15,15,15,15,15,,15,15,,15,15,15,,,,,15,,15,15,,15,15,15',
',15,15,15,15,15,15,15,811,,811,811,,,,,,,,15,,,,,,,,,,,,15,,,,,,,,,',
'811,,,,,,,,,811,811,811,,811,,,,811,811,,,,811,,811,811,811,811,811',
'811,811,,,,,,811,811,811,811,811,811,811,377,,377,377,811,811,811,811',
'811,811,811,811,811,811,,811,811,,811,811,811,,,,,811,,811,811,,811',
'811,,377,811,811,811,811,811,811,811,,377,377,377,,377,,,,377,377,,',
',377,,377,377,377,377,377,377,377,811,,,,,377,377,377,377,377,377,377',
',102,,,377,377,377,377,377,377,377,377,377,377,,377,377,,377,377,377',
',,,,377,,377,377,,377,377,102,,377,377,377,377,377,377,377,102,102,102',
',102,,,,102,102,,,,102,,102,102,102,102,102,102,102,,377,,,,102,102',
'102,102,102,102,102,,325,,,102,102,102,102,102,102,102,102,102,102,',
'102,102,,102,102,102,,,,,102,,102,102,,102,102,325,,102,102,102,102',
'102,102,102,325,325,325,,325,,,,325,325,,,102,325,,325,325,325,325,325',
'325,325,,,,,,325,325,325,325,325,325,325,,746,,,325,325,325,325,325',
'325,325,325,325,325,,325,325,,325,325,325,,,,,325,,325,325,,325,325',
'746,,325,325,325,325,325,325,325,746,746,746,,746,,,,746,746,,,325,746',
',746,746,746,746,746,746,746,,,,,,746,746,746,746,746,746,746,,557,',
',746,746,746,746,746,746,746,746,746,746,,746,746,,746,746,746,,,,,746',
',746,746,,746,746,557,,746,746,746,746,746,746,746,557,557,557,,557',
',,,557,557,,,,557,,557,557,557,557,557,557,557,,,,,,557,557,557,557',
'557,557,557,,762,,,557,557,557,557,557,557,557,557,557,557,,557,557',
',557,557,557,,,,,557,,557,557,,557,557,762,,557,557,557,557,557,557',
'557,762,762,762,,762,,,,762,762,,,,762,,762,762,762,762,762,762,762',
',,,,,762,762,762,762,762,762,762,,109,,,762,762,762,762,762,762,762',
'762,762,762,,762,762,,762,762,762,,,,,762,,762,762,,762,762,109,,762',
'762,762,762,762,762,762,109,109,109,,109,,,,109,109,,,,109,,109,109',
'109,109,109,109,109,,,,,,109,109,109,109,109,109,109,,107,,,109,109',
'109,109,109,109,109,109,109,109,,109,109,,109,109,109,,,,,109,,109,109',
',109,109,107,,109,109,109,109,109,109,109,107,107,107,,107,,,,107,107',
',,,107,,107,107,107,107,107,107,107,,,,,,107,107,107,107,107,107,107',
',,31,,107,107,107,107,107,107,107,107,107,107,,107,107,,107,107,107',
',,,,107,,107,107,,107,107,107,31,107,107,107,107,107,107,107,,31,31',
'31,,31,,,,31,31,,,,31,,31,31,31,31,31,31,31,,,,,,31,31,31,31,31,31,31',
',810,,,31,31,31,31,31,31,31,31,31,31,,31,31,,31,31,31,,,,,31,,31,31',
',31,31,810,,31,31,31,31,31,31,31,810,810,810,,810,,,,810,810,,,,810',
',810,810,810,810,810,810,810,,,,,,810,810,810,810,810,810,810,,620,',
',810,810,810,810,810,810,810,810,810,810,,810,810,,810,810,810,,,,,810',
',810,810,,810,810,620,,810,810,810,810,810,810,810,620,620,620,,620',
',,,620,620,,,,620,,620,620,620,620,620,620,620,,,,,,620,620,620,620',
'620,620,620,,388,,,620,620,620,620,620,620,620,620,620,620,,620,620',
',620,620,620,,,,,620,,620,620,,620,620,388,,620,620,620,620,620,620',
'620,388,388,388,,388,,,,388,388,,,,388,,388,388,388,388,388,388,388',
',,,,,388,388,388,388,388,388,388,,821,,,388,388,388,388,388,388,388',
'388,388,388,,388,388,,388,388,388,,,,,388,,388,388,,388,388,821,,388',
'388,388,388,388,388,388,821,821,821,,821,,,,821,821,,,,821,,821,821',
'821,821,821,821,821,,,,,,821,821,821,821,821,821,821,,,,,821,821,821',
'821,821,821,821,821,821,821,13,821,821,,821,821,821,13,,,,821,,821,821',
',821,821,,,821,821,821,821,821,821,821,,,,,13,,,,,,,,,13,13,13,,13,',
',,13,13,,,,13,,13,13,13,13,13,13,13,,,,,,13,13,13,13,13,13,13,,67,,',
'13,13,13,13,13,13,13,13,13,13,,13,13,,13,13,13,,,,,13,,13,13,,13,13',
'67,,13,13,13,13,13,13,13,67,67,67,,67,,,,67,67,,,,67,,67,67,67,67,67',
'67,67,,,,,,67,67,67,67,67,67,67,,,,,67,67,67,67,67,67,67,67,67,67,,67',
'67,,67,67,67,,,,,67,,67,67,,67,67,67,,67,67,67,67,67,67,67' ]
        racc_action_check = arr = Array.new(19889, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
   nil,    49,   nil,  7663,  1285,   nil,   nil,   nil,  1237,   nil,
   nil, 10393,   nil, 19693,   -37, 18511,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,  1155,  6703,   nil,   nil,   nil,
   nil, 19305, 18207,   419, 10097,   nil,  1124,   nil,  1474,   nil,
  1135,  1110,   nil,  1792,   689,  1221,   nil, 17634, 17441,  1129,
    77,   -32,   214,   nil,   nil, 16108,   nil,   nil,   nil,   nil,
 15120,   nil,   nil,   nil,   nil,  1157,   -20, 19768,  1075,  9816,
  1093, 14968,  3653,  1329, 14775,  5743,     4,   nil,   nil, 14623,
 14471,   523,  3890,   nil,  1108,   -33,   nil,   nil,   nil, 13974,
 13898,  2945,   nil, 13705,   nil,   275, 13132,  9225,   nil,   nil,
   850,   nil, 18779,   -10,  2237,   nil,    21, 19229,   nil, 19154,
   nil,    42,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
  1090,   nil,   nil,  1310,   nil,   nil,   197,   nil,   -37,  1118,
  2135,  1066,  1108,   nil,   nil,  1061,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   974,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   430,   -21,   nil,   674,
   nil,   344,   nil,  1039,  7903,   nil,   732, 12711,   nil,   nil,
     7,   nil,   510,  1033,  1026,  1024,  8652,  8744,   nil,   902,
   420, 12635, 12518,   nil,  1161,  1117,  1118,   427,  1038,  6823,
  1017,  1107,   634,  1050,    87,    86,  1079,   nil,   nil,   nil,
   nil,   -34,   nil,   809,  1017,   333,   370,   nil,   293,   443,
    69,   272,    66,   594,   556, 11214,   488,  1037, 10910,   -53,
  1014,   nil,  1090,   nil,   672,   977,   956,   nil,   nil,    -9,
   970,    16,   nil, 10793, 10192, 10986,   nil, 11062, 11138,  1065,
  1064, 11366,   nil,   467,  4543,   nil,   nil,   nil,   733,   nil,
   nil,  1978, 11787,  1920,   nil,    88,   577,    81, 12290,   555,
   976,   274,   931,  7783,   389, 18854,   nil,  2354,   nil,   917,
   nil,  9302, 13208, 13325, 13401, 13477, 13553,   205,   918,   883,
  5023,   878,   249,   -21, 14243, 14319,   nil,   156,   870,   442,
   nil,   134,   nil,   290,   949,   855,   877,   nil,   150,   897,
 15196, 15272, 15348, 15424, 15500, 15576, 15652, 15728, 15804, 15880,
 15956, 16032,   967, 16225, 16301, 16377,   964, 18704, 16605, 16681,
 16757, 16833, 16909, 16985, 17061, 17137,   nil,   392, 19530,   856,
    18,    25,   nil,   nil,   nil,   158, 17751,   904,   nil,   nil,
   871,   864,   -35,   187,   nil,   385,   862,   864, 18435,   nil,
  1300,   nil,   800,   nil,   859,  5383,  7303,   nil,   nil,   814,
   681,   nil,   nil,   766,   822,   775,  1338,   nil,  1883,   nil,
   nil,  2086,  6463,   nil,   897,   nil,   nil,   nil,   nil,  1566,
 17517,  2128,   nil,   877,   nil,   738,   -37,   516, 17365,  6103,
   nil,   nil,   nil,   nil,  2591,   nil,  2708,   nil,   nil,   nil,
   nil,   752,   nil,   nil,  9957, 15044,  1148,   nil,   nil,   825,
   nil, 14699,   nil,   616,   nil,   826, 14547, 14395,  3544, 14050,
  2836,    46, 13629,  8455,   nil,   nil,   nil,   nil,   nil,   323,
   nil,  8159,   nil,   nil,   -27,  6943,  1274,   274,   nil,   nil,
   740,   nil,   718,   nil,   -14,   nil,  2070,  1332, 12097,   nil,
   nil, 11980,   nil,  1000,   nil,   nil,   nil,  5263, 10717,  4423,
   nil,   714,   nil,   nil,   nil,   nil, 11442, 10641,   nil, 10485,
   738,   nil,   nil,   nil,   nil,    50,   967,     0,  1204,  1675,
   711,   nil,   202,   248,  3062,   nil,  4903,   802, 11290,   nil,
 10534,  3781, 11518,  4314,   880,   nil,   686, 19004,   704, 11635,
  9537,  9442,   nil,   nil,   nil,   nil,   nil,  5503,   702,   644,
   638,   nil,  5623,   nil,   nil,   nil,   nil,   nil,  5983,   nil,
 11711,   nil,   nil, 11904,   nil,   726,   715, 12366,   nil,   nil,
  8932,  8019,  2940,   430,  2586,  8793,   508,   275,  2232,  8315,
  1670,  8251, 12787,  7920,  8300,   158, 12980,  8596,  8836,   417,
  8975,  9024,  9071,  9163,   447,  9210,   596,   nil,   nil,   596,
 19455,  5863,  4783,   nil,   -32,   nil, 14167,  4018, 14851,  3486,
   -36,  3248,  3190,   nil,   nil,   nil,   nil,   nil,   587,   585,
   557,   nil,  1013,   nil,   569,   623,  1862,   541,   nil,  2076,
   515,   524,   nil,   501,   478,   415,   nil,   nil,   nil,   nil,
   nil,   615,   751,   348,   nil,   320,   314,  6343,   nil,   135,
   396,   nil,   nil,   nil,   nil,   nil,   nil, 17903, 18055,   273,
  6583,   130,   nil,   nil,   nil,    66,   -18,  1292,   nil, 10253,
  3358,  4128,   863,    47,   111,   nil,   nil,   nil,  1064,   nil,
     9,   -54,   nil,   nil,  7423,   -15,    50,   nil, 18359,   nil,
   199,   nil,    93,   nil,   119,   183,   213,   239,   334,   nil,
   273,   nil,   616,   490, 17827,   nil, 17289, 17213,   496,   nil,
    69,   450, 16529, 16453,   608,   nil,   615,   nil,  9911,   508,
   730,   535,   365,   395,   nil,   580, 18929,   -29,   nil,   664,
   nil,   255,   688,   694,   194,   713,   nil,   138,   630,  8990,
  9252,   nil, 19079,   682,   774,   777,   nil,    15,   184,   275,
   693,   -22,   246,   849,   738,   nil,  2450,   nil,  2794,   nil,
   nil,   741,   nil,   nil,   nil,   nil,   743,  1734,   800,   nil,
   nil,   nil,  1874,   nil,  2440,   nil,   nil,   nil,   850,   nil,
   nil,   774, 18131, 10238,   nil,   nil,   nil,  7183,   204,   nil,
 19380, 18628,    32, 18283, 17979,  6223,   nil,   nil,   850,   nil,
   nil, 19605,   nil,   857,   nil,  1535,   nil,  1544,   nil,  2776,
   nil,   nil,  9676,   nil,  9628,  9613,   nil,  8030,   nil,   nil,
  9598,   nil,  9583,   nil, 13822,   nil,   984,   908,   915,   nil,
   996,   nil,   nil,   nil,   nil, 13056,  7063, 12442,   nil,   nil,
   nil,  4663,   301,   940,   506,  1625,   965,  1742,   990,   991,
   993,   999,   nil,  1000,   nil,  7543,   nil,   771,  1046,   888,
   855, 12214,  1092,   nil,   487,   nil,  1014,  1015,   nil,  1020,
  1029,  1035,   nil,  8885,    56,   nil,   nil,   nil,   390,  8550,
  1122,   nil,   nil,  1046,  1154,   nil,   nil,  2741,   nil,  1142,
  4256, 12863,  2482,   791,   nil,  1095,   nil,  1937,   nil,  2422,
   nil,   nil,  1073,   nil,  5143,   nil,   nil,   nil,   nil,  1120,
  1122,   nil,   111,   613,  1107,   155,   162,  1139,  1140,  1141,
  1142,   732,   nil,   173,   nil,   nil,  2387,   nil,   nil,   nil,
  1153,   nil ]

racc_action_default = [
    -2,  -537,    -1,  -536,  -537,  -445,  -435,  -264,  -474,  -444,
  -436,  -420,  -265,  -537,   -53,  -537,  -446,  -418,  -399,  -309,
  -266,  -447,  -420,  -402,  -400,  -537,  -536,  -453,  -420,  -307,
   -41,  -537,  -537,  -232,  -537,  -454,  -410,  -308,  -537,    -3,
  -537,  -416,  -310,  -537,  -537,  -537,   -65,  -299,  -537,  -537,
  -523,  -284,  -537,  -449,  -311,  -300,  -448,  -312,  -301,    -5,
  -537,  -450,  -313,  -302,    -6,  -537,  -267,   -69,  -525,  -537,
  -537,  -537,  -439,    -9,  -537,  -536,  -304,   -79,  -398,  -537,
  -537,   -40,  -268,  -441,  -401,  -451,  -440,  -403,  -260,  -537,
  -536,  -442,  -305,  -276,  -261,  -523,  -536,   -46,  -443,  -306,
  -279,  -262,   -77,   -48,  -382,  -263,  -525,  -537,   -49,  -537,
   952,  -480,  -473,  -494,  -477,  -498,  -476,  -497,  -483,  -475,
  -536,  -485,  -478,  -474,  -286,  -491,  -537,  -479,  -537,  -496,
  -537,  -536,  -537,  -493,  -367,  -536,  -176,  -126,  -171,  -161,
  -110,  -152,  -160,  -117,  -169,  -128,  -155,  -118,  -179,  -181,
  -119,  -164,  -120,  -429,  -185,  -125,  -141,  -151,  -121,  -186,
  -127,  -138,  -122,  -165,  -132,  -129,  -154,  -133,  -142,  -123,
  -143,  -168,  -134,  -146,  -124,  -144,  -156,  -136,  -147,  -167,
  -172,  -148,  -157,  -174,  -137,  -180,  -158,  -166,  -140,  -149,
  -159,  -145,  -106,  -173,  -130,  -108,  -432,  -163,  -131,  -431,
  -150,  -183,  -175,  -107,  -433,  -430,  -537,  -184,  -182,  -135,
  -109,  -177,  -170,  -178,  -139,  -303,  -537,  -537,  -299,  -537,
  -300,  -537,  -267,  -525,  -536,  -304,  -101,  -537,  -451,  -104,
  -537,  -276,  -102,  -279,  -382,  -537,  -537,  -537,    -8,  -537,
  -537,  -537,  -537,   -13,   -14,  -537,  -536,  -523,  -537,  -536,
  -537,  -537,  -537,  -537,  -267,  -451,  -208,   -17,  -113,  -112,
  -114,  -537,  -111,  -537,  -537,  -176,  -169,  -503,  -179,  -164,
  -537,  -146,  -147,  -148,  -106,  -537,  -107,  -474,  -537,  -537,
  -537,  -248,   -57,  -283,  -537,  -536,  -536,  -507,  -375,  -536,
  -253,  -536,  -247,  -536,  -233,  -537,  -243,  -537,  -537,  -437,
  -438,  -537,   -51,  -209,  -536,    -4,  -534,  -532,  -524,  -533,
  -285,  -537,  -536,  -537,   -52,  -537,   -47,  -273,  -537,  -537,
  -537,   -92,   -70,  -536,   -85,   -73,  -526,  -537,  -115,   -22,
   -81,  -223,  -537,  -537,  -537,  -537,  -537,  -537,   -67,  -525,
  -536,  -537,  -537,  -525,  -537,  -537,  -404,  -537,  -537,  -529,
  -234,  -529,   -50,  -523,  -537,  -524,  -537,  -505,  -529,  -537,
  -537,  -537,  -537,  -537,  -537,  -537,  -537,  -537,  -537,  -537,
  -537,  -537,  -537,  -537,  -537,  -537,  -537,  -537,  -537,  -537,
  -537,  -537,  -537,  -537,  -537,  -537,   -64,  -525,  -537,   -75,
  -536,  -536,  -372,   -63,  -381,  -525,  -537,  -537,  -324,  -325,
  -537,  -537,  -267,  -451,   -45,  -537,  -537,  -537,  -537,  -469,
  -537,  -502,  -536,  -482,  -537,  -536,  -536,  -365,  -495,  -480,
  -337,  -328,  -326,  -525,  -537,  -330,  -537,  -466,  -537,  -499,
  -471,  -537,  -536,  -421,  -537,  -434,  -422,  -437,  -438,  -537,
  -536,  -537,  -101,  -102,  -103,  -537,  -537,  -537,  -537,  -536,
  -455,  -514,  -516,  -515,  -536,  -517,  -536,  -419,  -405,  -406,
   -29,  -537,   -37,  -253,  -187,  -537,   -16,  -269,  -314,  -536,
  -390,  -536,   -12,  -524,  -407,  -537,  -537,  -537,  -537,  -536,
  -537,  -273,  -537,  -537,   -21,   -20,   -19,  -412,  -409,  -537,
  -408,  -537,  -522,  -521,  -525,  -536,  -474,  -537,   -30,   -39,
   -38,  -415,  -537,  -414,  -536,   -58,  -537,  -537,  -251,  -244,
  -252,  -251,  -245,  -536,  -355,  -357,  -354,  -536,  -537,  -536,
  -242,  -525,  -241,  -254,  -510,  -249,  -537,  -537,   -31,  -189,
  -537,    -7,  -535,  -380,  -378,  -514,  -519,  -515,  -537,  -520,
  -525,  -379,  -514,  -515,  -536,  -316,  -536,  -315,  -537,   -36,
  -197,  -537,  -536,  -537,   -91,   -82,  -525,  -537,   -71,  -537,
  -230,  -537,   -27,   -23,   -24,   -25,   -26,  -536,   -66,  -537,
  -525,  -271,  -536,  -319,  -318,  -270,   -43,   -42,  -536,  -274,
  -531,  -235,  -530,  -531,  -237,  -537,  -537,  -537,  -275,  -506,
  -213,  -204,  -218,  -224,  -219,  -210,  -226,  -225,  -220,  -211,
  -221,  -212,  -537,  -222,  -214,  -205,  -537,  -216,  -200,  -215,
  -201,  -198,  -202,  -199,  -217,  -203,  -525,  -278,   -83,   -78,
  -537,  -536,  -536,  -282,  -525,   -44,  -537,  -537,  -536,  -537,
  -273,  -537,  -537,  -273,  -481,  -487,  -501,  -492,  -536,  -536,
  -525,  -359,  -537,  -500,  -537,  -537,  -537,  -335,  -484,  -537,
  -525,  -536,  -486,  -536,  -536,  -537,  -425,  -423,  -426,  -428,
  -427,  -101,  -102,  -537,  -105,  -525,  -536,  -536,  -457,  -537,
  -537,   -55,  -239,  -240,  -374,   -54,  -373,  -537,  -537,  -259,
  -536,  -536,  -322,  -393,  -392,  -536,  -391,   -15,  -296,  -187,
  -518,  -272,  -525,  -514,  -515,   -18,  -413,  -411,  -474,  -504,
  -537,  -525,  -459,  -417,  -536,  -536,  -255,  -250,  -537,  -508,
  -480,  -353,  -537,  -489,  -536,  -536,  -536,  -536,  -537,  -509,
  -537,  -238,  -206,  -207,  -537,   -28,  -537,  -537,   -61,  -377,
  -383,  -537,  -537,  -537,   -59,  -376,  -536,  -317,  -196,   -88,
   -90,  -525,  -514,  -515,   -80,   -74,  -537,  -525,  -116,  -536,
  -527,   -68,  -537,  -537,  -529,  -537,  -292,  -537,  -537,  -227,
  -229,  -277,  -537,   -76,  -537,  -537,  -281,  -537,  -518,  -272,
  -525,  -514,  -515,  -514,  -515,  -470,  -537,  -467,  -537,  -366,
  -363,  -360,  -361,  -364,  -368,  -369,  -338,  -537,  -333,  -329,
  -327,  -462,  -537,  -464,  -537,  -472,  -424,  -383,  -537,  -456,
  -294,  -257,  -537,  -188,  -323,   -11,  -397,  -536,  -537,  -395,
  -537,  -537,  -383,  -537,  -537,  -536,  -297,  -458,  -537,  -246,
  -256,  -537,  -356,  -537,  -346,  -344,  -349,  -537,  -351,  -537,
  -385,  -384,  -190,   -35,  -194,  -195,   -62,  -537,  -528,   -33,
  -192,   -34,  -193,   -60,  -537,  -320,  -537,   -86,   -72,  -280,
  -537,  -289,  -290,  -236,  -291,  -537,  -536,  -537,   -84,  -371,
  -370,  -536,  -383,  -536,  -537,  -537,  -336,  -537,  -331,  -536,
  -536,  -536,  -295,  -258,  -396,  -536,  -394,  -537,  -537,  -100,
   -93,  -537,  -537,   -56,  -488,  -358,  -536,  -536,  -490,  -536,
  -536,  -536,   -32,  -191,  -537,  -287,  -288,  -255,  -536,  -231,
  -537,  -468,  -362,  -334,  -537,  -463,  -460,  -537,  -465,  -536,
  -537,  -536,  -537,   -99,  -298,  -537,  -341,  -537,  -343,  -537,
  -350,  -347,  -537,  -352,  -536,  -386,  -388,  -387,  -293,  -332,
  -536,  -389,  -518,   -98,  -525,  -514,  -515,  -536,  -536,  -536,
  -536,  -536,  -461,  -383,  -342,  -339,  -537,  -345,  -348,  -321,
  -536,  -340 ]

clist = [
'59,288,469,210,245,322,327,586,349,134,302,112,259,495,404,681,652,505',
'314,215,546,716,521,260,73,619,210,306,296,423,210,316,296,257,572,639',
'73,215,422,578,296,540,567,282,396,316,640,259,637,389,316,343,205,653',
'462,783,352,782,260,888,316,210,394,730,509,512,316,315,328,351,64,457',
'306,215,581,358,584,305,296,277,444,337,238,589,338,296,342,350,308',
'296,339,499,789,357,846,487,347,805,310,709,386,786,353,230,393,356',
'85,707,215,674,707,676,714,215,267,215,228,411,85,206,449,249,354,397',
'412,348,112,491,411,85,240,517,411,519,228,483,248,781,717,399,329,228',
'128,417,124,392,460,712,925,888,685,808,346,239,270,263,489,50,279,461',
'657,445,153,651,3,39,2,414,1,665,324,709,,,,288,454,456,85,,,,,498,',
',,,797,,,,394,,745,,461,,446,,,,,,,324,528,450,692,,403,,228,,,812,',
',,,,,,549,306,,,475,,,,,621,622,,,,,755,,,,866,470,,,494,,,,,538,,544',
',,520,763,,,,,,466,847,,,,,,,541,558,,472,520,,783,296,902,112,741,510',
'510,684,473,516,,516,,522,,,862,,850,,296,664,949,,,,539,316,316,316',
'316,789,522,,,,,,576,577,,,574,,696,903,,574,650,618,85,647,73,306,215',
'338,886,422,,,,556,,563,564,565,566,,85,704,,823,338,616,,85,562,,570',
',770,,929,,,,,652,,624,625,,,,,296,,,531,,,,,585,666,,848,,,,516,516',
'461,,,,,215,,,,,541,,,,520,,,,85,,641,,85,673,652,673,,,870,,316,666',
',,667,668,296,85,670,324,,637,539,,,815,85,,522,541,296,,296,520,85',
'927,,538,544,,,887,672,890,672,671,669,675,943,,861,,259,856,836,296',
'541,682,,683,843,539,,260,700,702,210,522,,731,853,,,695,210,819,,,705',
',,,324,,666,687,618,729,701,539,112,467,516,673,,,757,,,,,641,541,,875',
',520,711,,85,85,,,,296,,,,,,296,747,,698,,758,85,,296,728,259,,672,938',
'539,734,,359,,,522,260,926,85,210,422,,,422,618,754,748,,,215,,,,,,666',
',538,544,,,,85,,,,,,,,,,,541,,,541,520,,,,,,316,85,924,,,,731,,,,,568',
',,,575,296,,,,,,539,85,729,85,539,673,522,215,,,,731,833,,767,,411,411',
'839,841,,934,,,,,798,799,,411,85,411,411,,,,,617,,,,324,,,672,623,931',
',,,,85,,,,,85,,,806,731,,85,809,,618,,,,,,,463,648,,,422,868,,,,858',
'112,510,,,,,,731,,,641,411,411,411,,,,,,,,,324,85,85,,52,500,,688,,',
'682,,,,219,,52,,,892,,574,523,682,524,525,,52,,215,,,219,,,,,,,,699',
',,,284,215,,85,284,,422,,422,,,,284,,,,85,284,,,,,,721,319,,882,,,,',
'284,52,,,,284,284,,,85,,,,,422,284,,316,215,284,,284,,,,,284,744,319',
'215,284,,,400,,405,,,,,,751,,756,,,,,,,,324,,894,666,,,,,,635,,411,',
',,,324,411,411,411,,541,,731,,520,,,,,,,,,411,411,761,411,411,411,,',
',,766,,682,296,,,,,,539,,,,470,539,522,779,85,638,,880,,679,,,85,790',
',686,,,228,800,,411,,,,,654,,411,411,411,411,682,,,,,,,,,411,52,,,284',
',,,816,,,706,85,,359,,,85,284,52,,719,341,817,,,52,,,,,85,,,,,25,,,',
',,,,,,,409,25,,,,284,,,284,66,,427,25,851,852,430,854,,,222,715,66,849',
'284,,,,,,,,284,66,85,52,,706,222,52,359,,,284,463,,,,,284,,,,,52,,319',
',,,872,,25,52,284,284,284,284,,,,52,,,321,284,284,,,,,,66,,,,,,,,,,',
',398,,,,,,,,,,,,,,895,321,,,896,,402,,222,,284,319,,,,,,341,284,284',
',,,,,,801,,,,,,,,,,914,,52,52,,,,,,,,,,,,,,,928,52,,820,,,,,45,284,',
',,,,,,284,52,,45,,,284,,284,,,,,,45,,,,,,,,,,,52,530,,,,,284,25,,,,',
',,,,,,,,341,,52,,,25,,66,,,,,25,,,,,341,45,,,,,,52,66,52,,,,,,66,,,873',
',,,,,,,,,284,,,,,,284,,52,,,,,,284,,,863,,319,,284,25,,,,25,,,52,,869',
',871,52,,,,,,52,25,66,897,,,66,644,645,,25,,,,,,,,25,,,66,,321,655,',
'889,,891,,66,,,,,,,,66,,,,319,52,52,,,,284,,284,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,45,,,,321,,,52,,,,25,25,,,,,,45,,52,,,,930,45,,718,25,720',
',66,66,,937,,939,,,940,,,,,52,25,,,66,,659,,,,,,736,,,,,,,950,,66,284',
',,25,,,284,284,,,,749,,,45,,752,,45,,319,,753,66,,25,,,,,,,,45,,,319',
',,,,,45,,,66,,25,,25,45,,,,,,,,,,,,775,777,,764,765,66,,66,,,,,,791',
'25,793,795,,,52,,,877,,,,,52,,,,,,884,66,25,,,,,25,,,,,321,25,,,284',
',,,,,66,284,,,,66,,804,45,45,,66,,52,,,,,52,,,,824,826,828,45,,,,,,818',
'52,,25,25,,,,,,,45,,,,,,,,,,,321,66,66,,,,,,,,,,,45,,284,,,,,,,,,,,',
'25,52,,256,,,,,45,,,,,25,294,,,,294,303,66,,,,,,294,,,,45,,45,66,,,',
'25,,,,,331,,,,,,,,,,,,874,,,66,,45,,294,,,294,,,294,,,,294,,,,294,,',
',,45,,,,,45,,,,,901,45,,,,,905,906,908,321,,,,898,,,,,900,,,,,916,918',
'321,920,921,923,,,,909,,,,,,,,,,,,45,45,,,,,25,,,876,,,,,25,,,,,,,,',
'942,,,66,,,879,944,945,947,948,66,,,941,,,222,,,951,,,45,,,,,,,,,25',
',,,45,25,,,,,,,,,,,,,,25,66,,,464,,66,,,45,,,,,,,,,,,66,,,,,,,,217,',
',,,,,,,,,,,294,,,,,217,217,,25,,,,,,,294,,294,,294,294,,217,529,,,,',
'66,,,,,,294,,,,,,550,217,,,,217,,,,560,,,,,,,,,,,,,,,217,,,,,,217,45',
',,,,217,,,45,,217,590,591,592,593,594,595,596,597,598,599,600,601,,603',
'604,605,,607,608,609,610,611,612,613,614,615,,294,,,,,,,,,,,45,,,,,45',
',,,,294,,,,,,,,,45,,,,,,,,,,,,,,,,,,,,,,,294,,,,,,,,,,,,,,294,,294,',
',,,,,,,294,45,,,,,294,,,,,689,529,,294,,,550,,,,,,,,,,,,,,,,,,,,,,,',
',,294,,,294,,,,,,,294,,,,,,,,722,723,,,,,,,,,,,294,,,,,,294,,,217,738',
'217,217,,294,,,,,,,,,,,,,,,,,,,,,,,,,217,,217,294,,,294,,,,294,,,,,',
',,,,,,,,,759,,,,760,,,,,,217,217,217,217,217,217,217,217,217,217,217',
'217,,217,217,217,294,217,217,217,217,217,217,217,217,217,,,217,,,,,',
',,,,,,,,,,,,,,217,,,,,,,,,,,,,,,,,294,803,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,294,,,,,,,,,217,,,,,,217,832,,834,835,217,217,,,840,842,217,,,,,',
',,,,,,,,,,,,,,,,,,,,217,,,217,,,,,,,217,,,,,,,,217,217,,,,,,,,,,,,,',
',,,,,,,217,,294,,,,,,,217,,834,,840,842,,,,,,,,,,,,,,,,,,217,,,217,',
'893,,217,,,,,,,,,,,,,,,217,294,,899,217,,,,,,,,,,,,,,217,,,,,,,,,893',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,294,,,,,,,,,,,,,,,,,,217,217,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,217,,,,,,,,,,,,,,,,217,,,217,,,,,,,,,,,,,,,,,,,217',
',,,,,,,,,,,,,,,217,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,217,,,,,,',
',217,217,,217,217,,,,,,,217,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,217,,217',
',,,,,,,,,,,,,,,,,,,,,,,217' ]
        racc_goto_table = arr = Array.new(2752, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'7,66,13,54,11,47,32,91,63,119,36,111,57,99,21,14,137,40,36,59,84,108',
'25,58,10,49,54,96,34,104,54,30,34,17,88,109,10,59,103,88,34,25,84,39',
'32,30,113,57,138,48,30,30,53,109,28,116,36,115,58,139,30,54,66,26,68',
'68,30,19,17,65,8,132,96,59,64,65,64,6,34,53,51,19,8,64,43,34,19,7,9',
'34,44,28,102,7,85,132,19,15,80,142,39,105,19,52,39,79,50,69,59,67,69',
'67,106,59,76,59,50,7,50,129,95,52,6,93,119,62,111,101,7,50,129,41,7',
'41,50,31,129,114,109,22,18,50,117,118,82,120,21,113,122,139,123,124',
'127,128,100,130,131,5,133,63,134,32,135,136,4,3,2,141,1,25,50,142,,',
',66,38,38,50,,,,,21,,,,,26,,,,66,,49,,63,,30,,,,,,,50,21,96,25,,50,',
'50,,,26,,,,,,,,21,96,,,11,,,,,41,41,,,,,91,,,,105,7,,,30,,,,,38,,38',
',,36,49,,,,,,10,26,,,,,,,66,48,,6,36,,116,34,115,111,25,7,7,28,9,7,',
'7,,7,,,26,,14,,34,51,85,,,,54,30,30,30,30,102,7,,,,,,30,30,,,96,,132',
'105,,96,104,47,50,103,10,96,59,43,108,103,,,,44,,19,19,19,19,,50,41',
',113,43,36,,50,10,,44,,25,,105,,,,,137,,30,30,,,,,34,,,8,,,,,6,38,,49',
',,,7,7,63,,,,,59,,,,,66,,,,36,,,,50,,7,,50,66,137,66,,,109,,30,38,,',
'96,96,34,50,11,50,,138,54,,,99,50,,7,66,34,,34,36,50,14,,38,38,,,109',
'7,109,7,39,19,39,26,,88,,57,84,40,34,66,7,,7,40,54,,58,11,96,54,7,,32',
'64,,,17,54,68,,,65,,,,50,,38,10,47,66,119,54,111,78,7,66,,,63,,,,,7',
'66,,84,,36,111,,50,50,,,,34,,,,,,34,30,,53,,32,50,,34,39,57,,7,109,54',
'39,,29,,,7,58,91,50,54,103,,,103,47,65,17,,,59,,,,,,38,,38,38,,,,50',
',,,,,,,,,,66,,,66,36,,,,,,30,50,84,,,,32,,,,,45,,,,45,34,,,,,,54,50',
'66,50,54,66,7,59,,,,32,21,,19,,7,7,21,21,,25,,,,,11,96,,7,50,7,7,,,',
',45,,,,50,,,7,45,13,,,,,50,,,,,50,,,7,32,,50,7,,47,,,,,,,29,45,,,103',
'103,,,,47,111,7,,,,,,32,,,7,7,7,7,,,,,,,,,50,50,50,,24,29,,78,,,7,,',
',24,,24,,,21,,96,29,7,29,29,,24,,59,,,24,,,,,,,,45,,,,24,59,,50,24,',
'103,,103,,,,24,,,,50,24,,,,,,45,24,,11,,,,,24,24,,,,24,24,,,50,,,,,103',
'24,,30,59,24,,24,,,,,24,45,24,59,24,,,24,,24,,,,,,45,,78,,,,,,,,50,',
'19,38,,,,,,29,,7,,,,,50,7,7,7,,66,,32,,36,,,,,,,,,7,7,45,7,7,7,,,,,45',
',7,34,,,,,,54,,,,7,54,7,45,50,107,,50,,29,,,50,45,,29,,,50,78,,7,,,',
',107,,7,7,7,7,7,,,,,,,,,7,24,,,24,,,,78,,,29,50,,29,,,50,24,24,,29,12',
'45,,,24,,,,,50,,,,,20,,,,,,,,,,,110,20,,,,24,,,24,27,,110,20,78,78,110',
'78,,,27,107,27,45,24,,,,,,,,24,27,50,24,,29,27,24,29,,,24,29,,,,,24',
',,,,24,,24,,,,78,,20,24,24,24,24,24,,,,24,,,27,24,24,,,,,,27,,,,,,,',
',,,,20,,,,,,,,,,,,,,78,27,,,78,,27,,27,,24,24,,,,,,12,24,24,,,,,,,29',
',,,,,,,,,78,,24,24,,,,,,,,,,,,,,,78,24,,29,,,,,23,24,,,,,,,,24,24,,23',
',,24,,24,,,,,,23,,,,,,,,,,,24,12,,,,,24,20,,,,,,,,,,,,,12,,24,,,20,',
'27,,,,,20,,,,,12,23,,,,,,24,27,24,,,,,,27,,,29,,,,,,,,,,24,,,,,,24,',
'24,,,,,,24,,,107,,24,,24,20,,,,20,,,24,,107,,107,24,,,,,,24,20,27,29',
',,27,12,12,,20,,,,,,,,20,,,27,,27,12,,107,,107,,27,,,,,,,,27,,,,24,24',
'24,,,,24,,24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,23,,,,27,,,24,,,,20,20,',
',,,,23,,24,,,,107,23,,12,20,12,,27,27,,107,,107,,,107,,,,,24,20,,,27',
',27,,,,,,12,,,,,,,107,,27,24,,,20,,,24,24,,,,12,,,23,,12,,23,,24,,12',
'27,,20,,,,,,,,23,,,24,,,,,,23,,,27,,20,,20,23,,,,,,,,,,,,110,110,,12',
'12,27,,27,,,,,,110,20,110,110,,,24,,,24,,,,,24,,,,,,24,27,20,,,,,20',
',,,,27,20,,,24,,,,,,27,24,,,,27,,12,23,23,,27,,24,,,,,24,,,,110,110',
'110,23,,,,,,12,24,,20,20,,,,,,,23,,,,,,,,,,,27,27,27,,,,,,,,,,,23,,24',
',,,,,,,,,,,20,24,,33,,,,,23,,,,,20,33,,,,33,33,27,,,,,,33,,,,23,,23',
'27,,,,20,,,,,33,,,,,,,,,,,,12,,,27,,23,,33,,,33,,,33,,,,33,,,,33,,,',
',23,,,,,23,,,,,110,23,,,,,110,110,110,27,,,,12,,,,,12,,,,,110,110,27',
'110,110,110,,,,12,,,,,,,,,,,,23,23,,,,,20,,,20,,,,,20,,,,,,,,,110,,',
'27,,,27,110,110,110,110,27,,,12,,,27,,,110,,,23,,,,,,,,,20,,,,23,20',
',,,,,,,,,,,,,20,27,,,33,,27,,,23,,,,,,,,,,,27,,,,,,,,42,,,,,,,,,,,,',
'33,,,,,42,42,,20,,,,,,,33,,33,,33,33,,42,33,,,,,27,,,,,,33,,,,,,33,42',
',,,42,,,,33,,,,,,,,,,,,,,,42,,,,,,42,23,,,,,42,,,23,,42,33,33,33,33',
'33,33,33,33,33,33,33,33,,33,33,33,,33,33,33,33,33,33,33,33,33,,33,,',
',,,,,,,,23,,,,,23,,,,,33,,,,,,,,,23,,,,,,,,,,,,,,,,,,,,,,,33,,,,,,,',
',,,,,,33,,33,,,,,,,,,33,23,,,,,33,,,,,33,33,,33,,,33,,,,,,,,,,,,,,,',
',,,,,,,,,,33,,,33,,,,,,,33,,,,,,,,33,33,,,,,,,,,,,33,,,,,,33,,,42,33',
'42,42,,33,,,,,,,,,,,,,,,,,,,,,,,,,42,,42,33,,,33,,,,33,,,,,,,,,,,,,',
',33,,,,33,,,,,,42,42,42,42,42,42,42,42,42,42,42,42,,42,42,42,33,42,42',
'42,42,42,42,42,42,42,,,42,,,,,,,,,,,,,,,,,,,,42,,,,,,,,,,,,,,,,,33,33',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,33,,,,,,,,,42,,,,,,42,33,,33,33,42,42,',
',33,33,42,,,,,,,,,,,,,,,,,,,,,,,,,,42,,,42,,,,,,,42,,,,,,,,42,42,,,',
',,,,,,,,,,,,,,,,,42,,33,,,,,,,42,,33,,33,33,,,,,,,,,,,,,,,,,,42,,,42',
',33,,42,,,,,,,,,,,,,,,42,33,,33,42,,,,,,,,,,,,,,42,,,,,,,,,33,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,33,,,,,,,,,,,,,,,,,,42,42,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,42,,,,,,,,,,,,,,,,42,,,42,,,,,,,,,,,,,,,,,,,42,,,,,,,,,,,',
',,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,42,,,,,,,,42,42,,42,42',
',,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,42,,42,,,,,,,,,,,,,,,,,,,',
',,,,42' ]
        racc_goto_check = arr = Array.new(2752, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_goto_pointer = [
   nil,   168,   166,   162,   164,   154,    27,    -3,    67,    38,
    21,   -22,   894,  -244,  -454,  -584,   nil,    -1,    71,     7,
   980,   -95,    32,  1160,   724,  -271,  -477,  1000,  -187,   450,
   -29,  -122,   -62,  1618,   -15,   nil,   -37,   nil,   -60,     0,
  -265,  -158,  1870,     9,    15,   269,   nil,   -62,   -53,  -363,
   103,  -141,    90,    41,    -8,   nil,   nil,   -22,   -11,     6,
   nil,   nil,    35,   -82,  -275,   -21,   -42,  -345,  -221,  -401,
   nil,   nil,   nil,   nil,   nil,   nil,    76,   nil,   255,     9,
    47,   nil,   136,   nil,  -295,  -642,   nil,   nil,  -308,   nil,
   nil,  -347,   nil,    16,   nil,  -110,   -23,   nil,   nil,  -264,
   116,  -143,  -557,   -92,  -101,  -545,  -401,   501,  -492,  -375,
   874,     3,   nil,  -366,  -505,  -585,  -587,   134,    15,     1,
    42,   nil,  -750,  -321,  -534,   nil,   nil,    68,   136,   108,
   119,  -107,  -168,   117,  -274,   151,  -265,  -412,  -362,  -768,
   nil,    41,  -412 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   243,   nil,   355,
   244,   nil,   246,   nil,   845,   nil,   247,   nil,   nil,   nil,
   250,    30,    40,   251,   252,   nil,   nil,   254,   nil,   290,
    81,   nil,   569,    97,   103,   108,   281,    14,   663,   nil,
   nil,   nil,    43,    46,   nil,   nil,    67,    70,    77,   nil,
   255,   229,   nil,   262,   455,   140,   258,    18,    24,    33,
   372,   376,   nil,   285,   nil,   286,   533,   735,   nil,   292,
    88,    94,   101,   105,     7,    12,    20,    26,   nil,   nil,
   283,    51,   nil,    60,   nil,   nil,    74,    79,   nil,    89,
    95,   nil,   107,   nil,    13,   nil,   547,    31,    38,   nil,
   nil,   nil,   421,   118,   nil,   425,   nil,   131,   nil,   135,
   nil,   636,   514,   nil,   nil,   nil,   127,   nil,   nil,   497,
   nil,   534,   nil,   nil,   nil,    78,    84,    87,   nil,   nil,
   nil,   nil,   433,   nil,   nil,   nil,   120,   121,   125,   713,
   129,   132,   287 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 155, :_reduce_1,
  0, 158, :_reduce_2,
  2, 156, :_reduce_3,
  2, 157, :_reduce_4,
  1, 159, :_reduce_5,
  1, 159, :_reduce_6,
  3, 159, :_reduce_7,
  2, 159, :_reduce_8,
  1, 162, :_reduce_9,
  1, 162, :_reduce_none,
  4, 165, :_reduce_11,
  2, 166, :_reduce_12,
  1, 170, :_reduce_13,
  1, 170, :_reduce_14,
  3, 170, :_reduce_15,
  2, 170, :_reduce_none,
  0, 185, :_reduce_17,
  4, 164, :_reduce_18,
  3, 164, :_reduce_none,
  3, 164, :_reduce_none,
  3, 164, :_reduce_none,
  2, 164, :_reduce_none,
  3, 164, :_reduce_23,
  3, 164, :_reduce_24,
  3, 164, :_reduce_none,
  3, 164, :_reduce_none,
  3, 164, :_reduce_none,
  4, 164, :_reduce_none,
  3, 164, :_reduce_29,
  3, 164, :_reduce_none,
  3, 164, :_reduce_none,
  6, 164, :_reduce_none,
  5, 164, :_reduce_none,
  5, 164, :_reduce_none,
  5, 164, :_reduce_none,
  3, 164, :_reduce_none,
  3, 164, :_reduce_none,
  3, 164, :_reduce_none,
  3, 164, :_reduce_none,
  1, 164, :_reduce_none,
  1, 184, :_reduce_none,
  3, 184, :_reduce_none,
  3, 184, :_reduce_none,
  3, 184, :_reduce_none,
  2, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 173, :_reduce_none,
  1, 175, :_reduce_none,
  1, 175, :_reduce_none,
  2, 175, :_reduce_50,
  2, 175, :_reduce_none,
  2, 175, :_reduce_none,
  1, 189, :_reduce_none,
  4, 189, :_reduce_none,
  4, 189, :_reduce_none,
  4, 194, :_reduce_none,
  2, 188, :_reduce_57,
  3, 188, :_reduce_none,
  4, 188, :_reduce_59,
  5, 188, :_reduce_none,
  4, 188, :_reduce_none,
  5, 188, :_reduce_none,
  2, 188, :_reduce_63,
  2, 188, :_reduce_64,
  1, 176, :_reduce_none,
  3, 176, :_reduce_none,
  1, 198, :_reduce_none,
  3, 198, :_reduce_none,
  1, 197, :_reduce_none,
  2, 197, :_reduce_none,
  3, 197, :_reduce_none,
  5, 197, :_reduce_none,
  2, 197, :_reduce_none,
  4, 197, :_reduce_none,
  2, 197, :_reduce_none,
  4, 197, :_reduce_none,
  1, 197, :_reduce_none,
  3, 197, :_reduce_none,
  1, 201, :_reduce_none,
  3, 201, :_reduce_none,
  2, 200, :_reduce_none,
  3, 200, :_reduce_none,
  1, 203, :_reduce_none,
  3, 203, :_reduce_none,
  1, 202, :_reduce_none,
  4, 202, :_reduce_none,
  3, 202, :_reduce_none,
  3, 202, :_reduce_none,
  3, 202, :_reduce_none,
  3, 202, :_reduce_none,
  2, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 174, :_reduce_none,
  4, 174, :_reduce_94,
  3, 174, :_reduce_95,
  3, 174, :_reduce_none,
  3, 174, :_reduce_none,
  3, 174, :_reduce_none,
  2, 174, :_reduce_none,
  1, 174, :_reduce_none,
  1, 205, :_reduce_101,
  1, 205, :_reduce_102,
  2, 206, :_reduce_103,
  1, 206, :_reduce_104,
  3, 206, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_109,
  1, 207, :_reduce_110,
  1, 210, :_reduce_none,
  1, 210, :_reduce_none,
  1, 171, :_reduce_none,
  1, 171, :_reduce_none,
  1, 172, :_reduce_none,
  3, 172, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 209, :_reduce_none,
  1, 209, :_reduce_none,
  1, 209, :_reduce_none,
  1, 209, :_reduce_none,
  1, 209, :_reduce_none,
  1, 209, :_reduce_none,
  1, 209, :_reduce_none,
  1, 209, :_reduce_none,
  1, 209, :_reduce_none,
  1, 209, :_reduce_none,
  1, 209, :_reduce_none,
  1, 209, :_reduce_none,
  1, 209, :_reduce_none,
  1, 209, :_reduce_none,
  1, 209, :_reduce_none,
  1, 209, :_reduce_none,
  1, 209, :_reduce_none,
  1, 209, :_reduce_none,
  1, 209, :_reduce_none,
  1, 209, :_reduce_none,
  1, 209, :_reduce_none,
  1, 209, :_reduce_none,
  1, 209, :_reduce_none,
  1, 209, :_reduce_none,
  1, 209, :_reduce_none,
  1, 209, :_reduce_none,
  1, 209, :_reduce_none,
  1, 209, :_reduce_none,
  1, 209, :_reduce_none,
  1, 209, :_reduce_none,
  1, 209, :_reduce_none,
  1, 209, :_reduce_none,
  1, 209, :_reduce_none,
  1, 209, :_reduce_none,
  1, 209, :_reduce_none,
  1, 209, :_reduce_none,
  1, 209, :_reduce_none,
  1, 209, :_reduce_none,
  1, 209, :_reduce_none,
  1, 209, :_reduce_none,
  1, 209, :_reduce_none,
  3, 187, :_reduce_187,
  5, 187, :_reduce_none,
  3, 187, :_reduce_189,
  5, 187, :_reduce_none,
  6, 187, :_reduce_none,
  5, 187, :_reduce_none,
  5, 187, :_reduce_none,
  5, 187, :_reduce_none,
  5, 187, :_reduce_none,
  4, 187, :_reduce_none,
  3, 187, :_reduce_none,
  3, 187, :_reduce_none,
  3, 187, :_reduce_none,
  3, 187, :_reduce_200,
  3, 187, :_reduce_201,
  3, 187, :_reduce_202,
  3, 187, :_reduce_203,
  3, 187, :_reduce_204,
  3, 187, :_reduce_205,
  4, 187, :_reduce_none,
  4, 187, :_reduce_none,
  2, 187, :_reduce_none,
  2, 187, :_reduce_209,
  3, 187, :_reduce_210,
  3, 187, :_reduce_211,
  3, 187, :_reduce_212,
  3, 187, :_reduce_213,
  3, 187, :_reduce_214,
  3, 187, :_reduce_215,
  3, 187, :_reduce_216,
  3, 187, :_reduce_217,
  3, 187, :_reduce_218,
  3, 187, :_reduce_219,
  3, 187, :_reduce_220,
  3, 187, :_reduce_221,
  3, 187, :_reduce_222,
  2, 187, :_reduce_223,
  3, 187, :_reduce_224,
  3, 187, :_reduce_225,
  0, 214, :_reduce_226,
  4, 187, :_reduce_227,
  0, 215, :_reduce_228,
  4, 187, :_reduce_229,
  3, 187, :_reduce_none,
  6, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 183, :_reduce_none,
  1, 216, :_reduce_none,
  2, 216, :_reduce_none,
  4, 216, :_reduce_none,
  2, 216, :_reduce_none,
  3, 220, :_reduce_238,
  1, 221, :_reduce_239,
  1, 221, :_reduce_none,
  1, 179, :_reduce_241,
  1, 179, :_reduce_none,
  1, 190, :_reduce_243,
  2, 190, :_reduce_244,
  2, 190, :_reduce_245,
  4, 190, :_reduce_246,
  1, 190, :_reduce_247,
  1, 193, :_reduce_none,
  2, 223, :_reduce_249,
  2, 222, :_reduce_250,
  1, 222, :_reduce_none,
  1, 222, :_reduce_none,
  1, 217, :_reduce_253,
  2, 217, :_reduce_254,
  3, 217, :_reduce_255,
  4, 217, :_reduce_256,
  3, 182, :_reduce_none,
  4, 182, :_reduce_none,
  2, 182, :_reduce_none,
  1, 213, :_reduce_none,
  1, 213, :_reduce_none,
  1, 213, :_reduce_none,
  1, 213, :_reduce_none,
  1, 213, :_reduce_none,
  1, 213, :_reduce_none,
  1, 213, :_reduce_none,
  1, 213, :_reduce_none,
  1, 213, :_reduce_none,
  3, 213, :_reduce_none,
  3, 213, :_reduce_none,
  3, 213, :_reduce_271,
  3, 213, :_reduce_272,
  2, 213, :_reduce_273,
  3, 213, :_reduce_274,
  3, 213, :_reduce_275,
  1, 213, :_reduce_276,
  4, 213, :_reduce_277,
  3, 213, :_reduce_278,
  1, 213, :_reduce_279,
  5, 213, :_reduce_none,
  4, 213, :_reduce_none,
  3, 213, :_reduce_none,
  2, 213, :_reduce_283,
  1, 213, :_reduce_284,
  2, 213, :_reduce_285,
  2, 213, :_reduce_none,
  6, 213, :_reduce_287,
  6, 213, :_reduce_288,
  5, 213, :_reduce_none,
  5, 213, :_reduce_none,
  5, 213, :_reduce_291,
  4, 213, :_reduce_292,
  7, 213, :_reduce_none,
  5, 213, :_reduce_294,
  6, 213, :_reduce_none,
  4, 213, :_reduce_296,
  5, 213, :_reduce_297,
  7, 213, :_reduce_298,
  1, 213, :_reduce_none,
  1, 213, :_reduce_none,
  1, 213, :_reduce_none,
  1, 213, :_reduce_none,
  1, 178, :_reduce_none,
  1, 231, :_reduce_none,
  1, 237, :_reduce_none,
  1, 240, :_reduce_none,
  1, 241, :_reduce_none,
  1, 243, :_reduce_none,
  1, 244, :_reduce_none,
  1, 246, :_reduce_none,
  1, 248, :_reduce_none,
  1, 251, :_reduce_none,
  1, 252, :_reduce_none,
  1, 232, :_reduce_none,
  1, 238, :_reduce_none,
  1, 238, :_reduce_none,
  2, 238, :_reduce_none,
  1, 242, :_reduce_none,
  1, 242, :_reduce_none,
  1, 239, :_reduce_320,
  5, 239, :_reduce_321,
  1, 168, :_reduce_322,
  2, 168, :_reduce_323,
  1, 247, :_reduce_none,
  1, 247, :_reduce_none,
  1, 256, :_reduce_none,
  3, 256, :_reduce_none,
  1, 259, :_reduce_none,
  3, 259, :_reduce_none,
  1, 258, :_reduce_none,
  4, 258, :_reduce_none,
  6, 258, :_reduce_none,
  3, 258, :_reduce_none,
  5, 258, :_reduce_none,
  2, 258, :_reduce_none,
  4, 258, :_reduce_none,
  1, 258, :_reduce_none,
  3, 258, :_reduce_none,
  6, 260, :_reduce_none,
  8, 260, :_reduce_none,
  4, 260, :_reduce_none,
  6, 260, :_reduce_none,
  4, 260, :_reduce_none,
  2, 260, :_reduce_none,
  6, 260, :_reduce_none,
  2, 260, :_reduce_none,
  4, 260, :_reduce_none,
  6, 260, :_reduce_none,
  2, 260, :_reduce_none,
  4, 260, :_reduce_none,
  2, 260, :_reduce_none,
  4, 260, :_reduce_none,
  1, 260, :_reduce_none,
  1, 195, :_reduce_354,
  1, 195, :_reduce_none,
  3, 266, :_reduce_none,
  1, 266, :_reduce_none,
  4, 266, :_reduce_358,
  1, 267, :_reduce_none,
  2, 267, :_reduce_none,
  1, 268, :_reduce_none,
  3, 268, :_reduce_none,
  1, 269, :_reduce_none,
  1, 269, :_reduce_none,
  2, 236, :_reduce_none,
  4, 271, :_reduce_none,
  1, 271, :_reduce_none,
  3, 272, :_reduce_none,
  3, 272, :_reduce_none,
  4, 274, :_reduce_none,
  4, 274, :_reduce_371,
  2, 191, :_reduce_372,
  4, 191, :_reduce_none,
  4, 191, :_reduce_none,
  2, 235, :_reduce_375,
  4, 235, :_reduce_376,
  4, 235, :_reduce_377,
  3, 235, :_reduce_378,
  3, 235, :_reduce_none,
  3, 235, :_reduce_none,
  2, 235, :_reduce_381,
  1, 235, :_reduce_382,
  4, 235, :_reduce_383,
  4, 234, :_reduce_384,
  4, 234, :_reduce_385,
  5, 245, :_reduce_386,
  1, 276, :_reduce_387,
  1, 276, :_reduce_none,
  6, 167, :_reduce_none,
  1, 167, :_reduce_none,
  1, 277, :_reduce_none,
  1, 277, :_reduce_none,
  1, 277, :_reduce_none,
  2, 278, :_reduce_none,
  1, 278, :_reduce_none,
  2, 169, :_reduce_none,
  1, 169, :_reduce_none,
  1, 224, :_reduce_none,
  1, 224, :_reduce_none,
  1, 224, :_reduce_none,
  1, 225, :_reduce_none,
  1, 280, :_reduce_none,
  1, 280, :_reduce_none,
  2, 280, :_reduce_none,
  3, 281, :_reduce_405,
  3, 226, :_reduce_406,
  3, 227, :_reduce_none,
  3, 228, :_reduce_none,
  3, 228, :_reduce_none,
  0, 284, :_reduce_none,
  3, 284, :_reduce_none,
  1, 285, :_reduce_none,
  2, 285, :_reduce_none,
  3, 229, :_reduce_none,
  3, 229, :_reduce_none,
  0, 287, :_reduce_416,
  3, 287, :_reduce_none,
  0, 282, :_reduce_418,
  2, 282, :_reduce_419,
  0, 283, :_reduce_420,
  2, 283, :_reduce_421,
  1, 286, :_reduce_422,
  2, 286, :_reduce_423,
  3, 286, :_reduce_424,
  1, 288, :_reduce_none,
  1, 288, :_reduce_none,
  1, 288, :_reduce_none,
  1, 288, :_reduce_none,
  2, 211, :_reduce_429,
  1, 289, :_reduce_none,
  1, 289, :_reduce_none,
  1, 289, :_reduce_none,
  1, 289, :_reduce_none,
  3, 212, :_reduce_none,
  1, 279, :_reduce_435,
  1, 279, :_reduce_436,
  2, 279, :_reduce_none,
  2, 279, :_reduce_none,
  1, 204, :_reduce_439,
  1, 204, :_reduce_440,
  1, 204, :_reduce_441,
  1, 204, :_reduce_442,
  1, 204, :_reduce_443,
  1, 204, :_reduce_444,
  1, 204, :_reduce_445,
  1, 204, :_reduce_446,
  1, 204, :_reduce_447,
  1, 204, :_reduce_448,
  1, 204, :_reduce_449,
  1, 204, :_reduce_450,
  1, 230, :_reduce_none,
  1, 177, :_reduce_none,
  1, 181, :_reduce_none,
  1, 181, :_reduce_none,
  1, 249, :_reduce_455,
  3, 249, :_reduce_456,
  2, 249, :_reduce_457,
  3, 253, :_reduce_458,
  2, 253, :_reduce_459,
  6, 273, :_reduce_460,
  8, 273, :_reduce_461,
  4, 273, :_reduce_462,
  6, 273, :_reduce_463,
  4, 273, :_reduce_464,
  6, 273, :_reduce_465,
  2, 273, :_reduce_466,
  4, 273, :_reduce_467,
  6, 273, :_reduce_468,
  2, 273, :_reduce_469,
  4, 273, :_reduce_470,
  2, 273, :_reduce_471,
  4, 273, :_reduce_472,
  1, 273, :_reduce_473,
  0, 273, :_reduce_474,
  1, 270, :_reduce_none,
  1, 270, :_reduce_none,
  1, 270, :_reduce_none,
  1, 270, :_reduce_none,
  1, 257, :_reduce_none,
  1, 257, :_reduce_480,
  3, 257, :_reduce_481,
  2, 257, :_reduce_482,
  1, 291, :_reduce_483,
  3, 291, :_reduce_none,
  1, 261, :_reduce_485,
  3, 261, :_reduce_486,
  3, 292, :_reduce_none,
  3, 293, :_reduce_none,
  1, 262, :_reduce_none,
  3, 262, :_reduce_none,
  1, 290, :_reduce_none,
  3, 290, :_reduce_none,
  1, 294, :_reduce_none,
  1, 294, :_reduce_none,
  2, 263, :_reduce_none,
  1, 263, :_reduce_none,
  1, 295, :_reduce_none,
  1, 295, :_reduce_none,
  2, 265, :_reduce_499,
  3, 265, :_reduce_500,
  2, 264, :_reduce_501,
  1, 264, :_reduce_none,
  1, 254, :_reduce_none,
  3, 254, :_reduce_none,
  1, 233, :_reduce_505,
  2, 233, :_reduce_506,
  1, 219, :_reduce_507,
  3, 219, :_reduce_508,
  3, 296, :_reduce_509,
  2, 296, :_reduce_510,
  1, 196, :_reduce_none,
  1, 196, :_reduce_none,
  1, 196, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 275, :_reduce_none,
  1, 275, :_reduce_none,
  1, 275, :_reduce_none,
  1, 255, :_reduce_none,
  1, 255, :_reduce_none,
  0, 160, :_reduce_none,
  1, 160, :_reduce_none,
  0, 186, :_reduce_none,
  1, 186, :_reduce_none,
  2, 199, :_reduce_none,
  2, 180, :_reduce_none,
  0, 218, :_reduce_none,
  1, 218, :_reduce_none,
  1, 218, :_reduce_none,
  1, 250, :_reduce_none,
  1, 250, :_reduce_none,
  1, 163, :_reduce_none,
  2, 163, :_reduce_none,
  0, 161, :_reduce_none ]

racc_reduce_n = 537

racc_shift_n = 952

racc_token_table = {
  false => 0,
  :error => 1,
  :tBANG => 2,
  :tTILDE => 3,
  :tUPLUS => 4,
  :tPOW => 5,
  :tUMINUS_NUM => 6,
  :tUMINUS => 7,
  :tSTAR2 => 8,
  :tDIVIDE => 9,
  :tPERCENT => 10,
  :tPLUS => 11,
  :tMINUS => 12,
  :tLSHFT => 13,
  :tRSHFT => 14,
  :tAMPER2 => 15,
  :tPIPE => 16,
  :tCARET => 17,
  :tGT => 18,
  :tGEQ => 19,
  :tLT => 20,
  :tLEQ => 21,
  :tCMP => 22,
  :tEQ => 23,
  :tEQQ => 24,
  :tNEQ => 25,
  :tMATCH => 26,
  :tNMATCH => 27,
  :tANDOP => 28,
  :tOROP => 29,
  :tDOT2 => 30,
  :tDOT3 => 31,
  :tEH => 32,
  :tCOLON => 33,
  :kRESCUE_MOD => 34,
  :tEQL => 35,
  :tOP_ASGN => 36,
  :kNOT => 37,
  :kOR => 38,
  :kAND => 39,
  :kIF_MOD => 40,
  :kUNLESS_MOD => 41,
  :kWHILE_MOD => 42,
  :kUNTIL_MOD => 43,
  :tLBRACE_ARG => 44,
  :tLOWEST => 45,
  :kCLASS => 46,
  :kMODULE => 47,
  :kDEF => 48,
  :kUNDEF => 49,
  :kBEGIN => 50,
  :kRESCUE => 51,
  :kENSURE => 52,
  :kEND => 53,
  :kIF => 54,
  :kUNLESS => 55,
  :kTHEN => 56,
  :kELSIF => 57,
  :kELSE => 58,
  :kCASE => 59,
  :kWHEN => 60,
  :kWHILE => 61,
  :kUNTIL => 62,
  :kFOR => 63,
  :kBREAK => 64,
  :kNEXT => 65,
  :kREDO => 66,
  :kRETRY => 67,
  :kIN => 68,
  :kDO => 69,
  :kDO_COND => 70,
  :kDO_BLOCK => 71,
  :kDO_LAMBDA => 72,
  :kRETURN => 73,
  :kYIELD => 74,
  :kSUPER => 75,
  :kSELF => 76,
  :kNIL => 77,
  :kTRUE => 78,
  :kFALSE => 79,
  :kALIAS => 80,
  :kDEFINED => 81,
  :klBEGIN => 82,
  :klEND => 83,
  :k__LINE__ => 84,
  :k__FILE__ => 85,
  :k__ENCODING__ => 86,
  :kDEFined => 87,
  :tIDENTIFIER => 88,
  :tFID => 89,
  :tGVAR => 90,
  :tIVAR => 91,
  :tCONSTANT => 92,
  :tCVAR => 93,
  :tLABEL => 94,
  :tINTEGER => 95,
  :tFLOAT => 96,
  :tSTRING_CONTENT => 97,
  :tCHAR => 98,
  :tNTH_REF => 99,
  :tBACK_REF => 100,
  :tREGEXP_END => 101,
  :tAREF => 102,
  :tASET => 103,
  :tCOLON2 => 104,
  :tCOLON3 => 105,
  :tASSOC => 106,
  :tLPAREN => 107,
  :tLPAREN_ARG => 108,
  :tRPAREN => 109,
  :tLBRACK => 110,
  :tLBRACE => 111,
  :tSTAR => 112,
  :tAMPER => 113,
  :tLAMBDA => 114,
  :tSYMBEG => 115,
  :tSTRING_BEG => 116,
  :tXSTRING_BEG => 117,
  :tREGEXP_BEG => 118,
  :tWORDS_BEG => 119,
  :tQWORDS_BEG => 120,
  :tSTRING_DBEG => 121,
  :tSTRING_DVAR => 122,
  :tSTRING_END => 123,
  :tLAMBEG => 124,
  :tSTRING => 125,
  :tXSTRING_END => 126,
  "{" => 127,
  "}" => 128,
  "=" => 129,
  "[" => 130,
  "." => 131,
  "!" => 132,
  "," => 133,
  "|" => 134,
  "^" => 135,
  "&" => 136,
  ">" => 137,
  "<" => 138,
  "+" => 139,
  "-" => 140,
  "*" => 141,
  "/" => 142,
  "%" => 143,
  "~" => 144,
  "`" => 145,
  "?" => 146,
  ":" => 147,
  "(" => 148,
  ")" => 149,
  "]" => 150,
  ";" => 151,
  " " => 152,
  "\\n" => 153 }

racc_nt_base = 154

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "tBANG",
  "tTILDE",
  "tUPLUS",
  "tPOW",
  "tUMINUS_NUM",
  "tUMINUS",
  "tSTAR2",
  "tDIVIDE",
  "tPERCENT",
  "tPLUS",
  "tMINUS",
  "tLSHFT",
  "tRSHFT",
  "tAMPER2",
  "tPIPE",
  "tCARET",
  "tGT",
  "tGEQ",
  "tLT",
  "tLEQ",
  "tCMP",
  "tEQ",
  "tEQQ",
  "tNEQ",
  "tMATCH",
  "tNMATCH",
  "tANDOP",
  "tOROP",
  "tDOT2",
  "tDOT3",
  "tEH",
  "tCOLON",
  "kRESCUE_MOD",
  "tEQL",
  "tOP_ASGN",
  "kNOT",
  "kOR",
  "kAND",
  "kIF_MOD",
  "kUNLESS_MOD",
  "kWHILE_MOD",
  "kUNTIL_MOD",
  "tLBRACE_ARG",
  "tLOWEST",
  "kCLASS",
  "kMODULE",
  "kDEF",
  "kUNDEF",
  "kBEGIN",
  "kRESCUE",
  "kENSURE",
  "kEND",
  "kIF",
  "kUNLESS",
  "kTHEN",
  "kELSIF",
  "kELSE",
  "kCASE",
  "kWHEN",
  "kWHILE",
  "kUNTIL",
  "kFOR",
  "kBREAK",
  "kNEXT",
  "kREDO",
  "kRETRY",
  "kIN",
  "kDO",
  "kDO_COND",
  "kDO_BLOCK",
  "kDO_LAMBDA",
  "kRETURN",
  "kYIELD",
  "kSUPER",
  "kSELF",
  "kNIL",
  "kTRUE",
  "kFALSE",
  "kALIAS",
  "kDEFINED",
  "klBEGIN",
  "klEND",
  "k__LINE__",
  "k__FILE__",
  "k__ENCODING__",
  "kDEFined",
  "tIDENTIFIER",
  "tFID",
  "tGVAR",
  "tIVAR",
  "tCONSTANT",
  "tCVAR",
  "tLABEL",
  "tINTEGER",
  "tFLOAT",
  "tSTRING_CONTENT",
  "tCHAR",
  "tNTH_REF",
  "tBACK_REF",
  "tREGEXP_END",
  "tAREF",
  "tASET",
  "tCOLON2",
  "tCOLON3",
  "tASSOC",
  "tLPAREN",
  "tLPAREN_ARG",
  "tRPAREN",
  "tLBRACK",
  "tLBRACE",
  "tSTAR",
  "tAMPER",
  "tLAMBDA",
  "tSYMBEG",
  "tSTRING_BEG",
  "tXSTRING_BEG",
  "tREGEXP_BEG",
  "tWORDS_BEG",
  "tQWORDS_BEG",
  "tSTRING_DBEG",
  "tSTRING_DVAR",
  "tSTRING_END",
  "tLAMBEG",
  "tSTRING",
  "tXSTRING_END",
  "\"{\"",
  "\"}\"",
  "\"=\"",
  "\"[\"",
  "\".\"",
  "\"!\"",
  "\",\"",
  "\"|\"",
  "\"^\"",
  "\"&\"",
  "\">\"",
  "\"<\"",
  "\"+\"",
  "\"-\"",
  "\"*\"",
  "\"/\"",
  "\"%\"",
  "\"~\"",
  "\"`\"",
  "\"?\"",
  "\":\"",
  "\"(\"",
  "\")\"",
  "\"]\"",
  "\";\"",
  "\" \"",
  "\"\\\\n\"",
  "$start",
  "target",
  "program",
  "top_compstmt",
  "@1",
  "top_stmts",
  "opt_terms",
  "none",
  "top_stmt",
  "terms",
  "stmt",
  "bodystmt",
  "compstmt",
  "opt_rescue",
  "opt_else",
  "opt_ensure",
  "stmts",
  "fitem",
  "undef_list",
  "expr_value",
  "lhs",
  "command_call",
  "mlhs",
  "var_lhs",
  "primary_value",
  "opt_call_args",
  "rbracket",
  "backref",
  "mrhs",
  "arg_value",
  "expr",
  "@2",
  "opt_nl",
  "arg",
  "command",
  "block_command",
  "call_args",
  "block_call",
  "operation2",
  "command_args",
  "cmd_brace_block",
  "opt_block_param",
  "operation",
  "mlhs_basic",
  "mlhs_inner",
  "rparen",
  "mlhs_head",
  "mlhs_item",
  "mlhs_node",
  "mlhs_post",
  "variable",
  "cname",
  "cpath",
  "fname",
  "op",
  "reswords",
  "fsym",
  "symbol",
  "dsym",
  "primary",
  "@3",
  "@4",
  "aref_args",
  "args",
  "trailer",
  "assocs",
  "paren_args",
  "opt_paren_args",
  "opt_block_arg",
  "block_arg",
  "literal",
  "strings",
  "xstring",
  "regexp",
  "words",
  "qwords",
  "var_ref",
  "k_begin",
  "k_end",
  "assoc_list",
  "brace_block",
  "method_call",
  "lambda",
  "k_if",
  "then",
  "if_tail",
  "k_unless",
  "k_while",
  "do",
  "k_until",
  "k_case",
  "case_body",
  "k_for",
  "for_var",
  "k_class",
  "superclass",
  "term",
  "k_module",
  "k_def",
  "f_arglist",
  "singleton",
  "dot_or_colon",
  "f_marg",
  "f_norm_arg",
  "f_margs",
  "f_marg_list",
  "block_param",
  "f_arg",
  "f_block_optarg",
  "f_rest_arg",
  "opt_f_block_arg",
  "f_block_arg",
  "block_param_def",
  "opt_bv_decl",
  "bv_decls",
  "bvar",
  "f_bad_arg",
  "f_larglist",
  "lambda_body",
  "f_args",
  "do_block",
  "operation3",
  "cases",
  "exc_list",
  "exc_var",
  "numeric",
  "string",
  "string1",
  "string_contents",
  "xstring_contents",
  "word_list",
  "word",
  "string_content",
  "qword_list",
  "string_dvar",
  "sym",
  "f_optarg",
  "f_arg_item",
  "f_opt",
  "f_block_opt",
  "restarg_mark",
  "blkarg_mark",
  "assoc" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 101)
  def _reduce_1(val, _values, result)
                        # puts 'well, we got here..'
                    # puts val[0]
                    @parser_result = val[0]
                    result = val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 109)
  def _reduce_2(val, _values, result)
                        self.lex_state = :EXPR_BEG
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 113)
  def _reduce_3(val, _values, result)
                        # puts 'program'
                    # puts val[1]
                    result = val[1]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 120)
  def _reduce_4(val, _values, result)
                        # puts 'top_compstmt'
                    # puts val[0]
                    # puts val[1]
                    result = val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 128)
  def _reduce_5(val, _values, result)
                        result = []
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 132)
  def _reduce_6(val, _values, result)
                        result = [val[0]]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 136)
  def _reduce_7(val, _values, result)
                        result = val[0] + [val[2]]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 140)
  def _reduce_8(val, _values, result)
                        result = val[1]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 145)
  def _reduce_9(val, _values, result)
                        result = val[0]
                  
    result
  end
.,.,

# reduce 10 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 151)
  def _reduce_11(val, _values, result)
                        result = val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 156)
  def _reduce_12(val, _values, result)
                        result = val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 161)
  def _reduce_13(val, _values, result)
                        result = []
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 165)
  def _reduce_14(val, _values, result)
                        result = [val[0]]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 169)
  def _reduce_15(val, _values, result)
                        result = val[0] + [val[2]]
		              
    result
  end
.,.,

# reduce 16 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 175)
  def _reduce_17(val, _values, result)
                        self.lex_state = :EXPR_FNAME
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 180)
  def _reduce_18(val, _values, result)
                      
    result
  end
.,.,

# reduce 19 omitted

# reduce 20 omitted

# reduce 21 omitted

# reduce 22 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 187)
  def _reduce_23(val, _values, result)
                		    result = node :if_mod, :stmt => val[0], :expr => val[2]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 191)
  def _reduce_24(val, _values, result)
                		    result = node :unless_mod, :stmt => val[0], :expr => val[2]
            		  
    result
  end
.,.,

# reduce 25 omitted

# reduce 26 omitted

# reduce 27 omitted

# reduce 28 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 199)
  def _reduce_29(val, _values, result)
                		    result = node :assign, :lhs => val[0], :rhs => val[2]
            		  
    result
  end
.,.,

# reduce 30 omitted

# reduce 31 omitted

# reduce 32 omitted

# reduce 33 omitted

# reduce 34 omitted

# reduce 35 omitted

# reduce 36 omitted

# reduce 37 omitted

# reduce 38 omitted

# reduce 39 omitted

# reduce 40 omitted

# reduce 41 omitted

# reduce 42 omitted

# reduce 43 omitted

# reduce 44 omitted

# reduce 45 omitted

# reduce 46 omitted

# reduce 47 omitted

# reduce 48 omitted

# reduce 49 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 226)
  def _reduce_50(val, _values, result)
                  	    result = node :return, :call_args => val[1]
              	  
    result
  end
.,.,

# reduce 51 omitted

# reduce 52 omitted

# reduce 53 omitted

# reduce 54 omitted

# reduce 55 omitted

# reduce 56 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 239)
  def _reduce_57(val, _values, result)
                        # command call - no brackets/recv
          		      result = node :call, :recv => nil, :meth => val[0], :call_args => val[1]
                  
    result
  end
.,.,

# reduce 58 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 245)
  def _reduce_59(val, _values, result)
              		      result = node :call, :recv => val[0], :meth => val[2], :call_args => val[3]
                  
    result
  end
.,.,

# reduce 60 omitted

# reduce 61 omitted

# reduce 62 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 252)
  def _reduce_63(val, _values, result)
          		          result = node :super, :call_args => val[1]
      		        
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 256)
  def _reduce_64(val, _values, result)
            	          result = node :yield, :call_args => val[1]
        	        
    result
  end
.,.,

# reduce 65 omitted

# reduce 66 omitted

# reduce 67 omitted

# reduce 68 omitted

# reduce 69 omitted

# reduce 70 omitted

# reduce 71 omitted

# reduce 72 omitted

# reduce 73 omitted

# reduce 74 omitted

# reduce 75 omitted

# reduce 76 omitted

# reduce 77 omitted

# reduce 78 omitted

# reduce 79 omitted

# reduce 80 omitted

# reduce 81 omitted

# reduce 82 omitted

# reduce 83 omitted

# reduce 84 omitted

# reduce 85 omitted

# reduce 86 omitted

# reduce 87 omitted

# reduce 88 omitted

# reduce 89 omitted

# reduce 90 omitted

# reduce 91 omitted

# reduce 92 omitted

# reduce 93 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 297)
  def _reduce_94(val, _values, result)
    		                result = node :call, :recv => val[0], :meth => '[]', :args => val[2]
		              
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 301)
  def _reduce_95(val, _values, result)
              		      result = node :call, :recv => val[0], :meth => val[2]
                  
    result
  end
.,.,

# reduce 96 omitted

# reduce 97 omitted

# reduce 98 omitted

# reduce 99 omitted

# reduce 100 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 311)
  def _reduce_101(val, _values, result)
                        puts 'ERROR: cant use identifier for class/mod name'
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 315)
  def _reduce_102(val, _values, result)
                		    result = val[0]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 321)
  def _reduce_103(val, _values, result)
                      
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 324)
  def _reduce_104(val, _values, result)
      	                result = node :path, :cname => val[0]
  	              
    result
  end
.,.,

# reduce 105 omitted

# reduce 106 omitted

# reduce 107 omitted

# reduce 108 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 333)
  def _reduce_109(val, _values, result)
    		                self.lex_state = :EXPR_END
		                result = val[0]
		              
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 338)
  def _reduce_110(val, _values, result)
    		                self.lex_state = :EXPR_END
		                result = val[0]
		              
    result
  end
.,.,

# reduce 111 omitted

# reduce 112 omitted

# reduce 113 omitted

# reduce 114 omitted

# reduce 115 omitted

# reduce 116 omitted

# reduce 117 omitted

# reduce 118 omitted

# reduce 119 omitted

# reduce 120 omitted

# reduce 121 omitted

# reduce 122 omitted

# reduce 123 omitted

# reduce 124 omitted

# reduce 125 omitted

# reduce 126 omitted

# reduce 127 omitted

# reduce 128 omitted

# reduce 129 omitted

# reduce 130 omitted

# reduce 131 omitted

# reduce 132 omitted

# reduce 133 omitted

# reduce 134 omitted

# reduce 135 omitted

# reduce 136 omitted

# reduce 137 omitted

# reduce 138 omitted

# reduce 139 omitted

# reduce 140 omitted

# reduce 141 omitted

# reduce 142 omitted

# reduce 143 omitted

# reduce 144 omitted

# reduce 145 omitted

# reduce 146 omitted

# reduce 147 omitted

# reduce 148 omitted

# reduce 149 omitted

# reduce 150 omitted

# reduce 151 omitted

# reduce 152 omitted

# reduce 153 omitted

# reduce 154 omitted

# reduce 155 omitted

# reduce 156 omitted

# reduce 157 omitted

# reduce 158 omitted

# reduce 159 omitted

# reduce 160 omitted

# reduce 161 omitted

# reduce 162 omitted

# reduce 163 omitted

# reduce 164 omitted

# reduce 165 omitted

# reduce 166 omitted

# reduce 167 omitted

# reduce 168 omitted

# reduce 169 omitted

# reduce 170 omitted

# reduce 171 omitted

# reduce 172 omitted

# reduce 173 omitted

# reduce 174 omitted

# reduce 175 omitted

# reduce 176 omitted

# reduce 177 omitted

# reduce 178 omitted

# reduce 179 omitted

# reduce 180 omitted

# reduce 181 omitted

# reduce 182 omitted

# reduce 183 omitted

# reduce 184 omitted

# reduce 185 omitted

# reduce 186 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 374)
  def _reduce_187(val, _values, result)
                        result = node :assign, :lhs => val[0], :rhs => val[2]
                  
    result
  end
.,.,

# reduce 188 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 379)
  def _reduce_189(val, _values, result)
                		    result = node :op_asgn, :lhs => val[0], :op => val[1], :rhs => val[2]
            		  
    result
  end
.,.,

# reduce 190 omitted

# reduce 191 omitted

# reduce 192 omitted

# reduce 193 omitted

# reduce 194 omitted

# reduce 195 omitted

# reduce 196 omitted

# reduce 197 omitted

# reduce 198 omitted

# reduce 199 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 393)
  def _reduce_200(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '+', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 397)
  def _reduce_201(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '-', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 401)
  def _reduce_202(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '*', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 405)
  def _reduce_203(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '/', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 409)
  def _reduce_204(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '%', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 413)
  def _reduce_205(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '**', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

# reduce 206 omitted

# reduce 207 omitted

# reduce 208 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 420)
  def _reduce_209(val, _values, result)
                		    result = node :call, :recv => val[1], :meth => '-@', :call_args => []
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 424)
  def _reduce_210(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '|', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 428)
  def _reduce_211(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '^', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 432)
  def _reduce_212(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '&', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 436)
  def _reduce_213(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '<=>', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 440)
  def _reduce_214(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '>', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 444)
  def _reduce_215(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '>=', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 448)
  def _reduce_216(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '<', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 452)
  def _reduce_217(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '<=', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 456)
  def _reduce_218(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '==', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 460)
  def _reduce_219(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '===', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 464)
  def _reduce_220(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '!=', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 468)
  def _reduce_221(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '=~', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 472)
  def _reduce_222(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '!~', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 476)
  def _reduce_223(val, _values, result)
                		    result = node :call, :recv => val[1], :meth => '~', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 480)
  def _reduce_224(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '<<', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 484)
  def _reduce_225(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '>>', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 488)
  def _reduce_226(val, _values, result)
                          # weird? unless break here, it throws an error? hmm...
                      # we must use val[3] then as this counts as one match....
              		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 494)
  def _reduce_227(val, _values, result)
                		    result = node :andop, :lhs => val[0], :rhs => val[3]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 498)
  def _reduce_228(val, _values, result)
                        # weird? unless break here, it throws an error? hmm...
                    # we must use val[3] then as this counts as one match....
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 504)
  def _reduce_229(val, _values, result)
                		    result = node :orop, :lhs => val[0], :rhs => val[3]
            		  
    result
  end
.,.,

# reduce 230 omitted

# reduce 231 omitted

# reduce 232 omitted

# reduce 233 omitted

# reduce 234 omitted

# reduce 235 omitted

# reduce 236 omitted

# reduce 237 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 519)
  def _reduce_238(val, _values, result)
                        result = val[1]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 524)
  def _reduce_239(val, _values, result)
                        result = node :call_args, :args => nil
                  
    result
  end
.,.,

# reduce 240 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 530)
  def _reduce_241(val, _values, result)
                        result = node :call_args, :args => nil
                  
    result
  end
.,.,

# reduce 242 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 536)
  def _reduce_243(val, _values, result)
                		    result = node :call_args, :args => [val[0]]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 540)
  def _reduce_244(val, _values, result)
                		    result = node :call_args, :args => val[0], :block_arg => val[1]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 544)
  def _reduce_245(val, _values, result)
                		    result = node :call_args, :assocs => val[0], :block_arg => val[1]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 548)
  def _reduce_246(val, _values, result)
                		    result = node :call_args, :args => val[0], :assocs => val[2], :block_arg => val[3]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 552)
  def _reduce_247(val, _values, result)
                		    result = node :call_args, :block_arg => val[0]
            		  
    result
  end
.,.,

# reduce 248 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 559)
  def _reduce_249(val, _values, result)
                        result = self.node :block_arg, :arg => val[1]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 564)
  def _reduce_250(val, _values, result)
                        resul = val[1]
                  
    result
  end
.,.,

# reduce 251 omitted

# reduce 252 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 571)
  def _reduce_253(val, _values, result)
                        result = [val[0]]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 575)
  def _reduce_254(val, _values, result)
    		                result = [val[1]]
		              
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 579)
  def _reduce_255(val, _values, result)
    		                result = val[0] + [val[2]]
		              
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 583)
  def _reduce_256(val, _values, result)
    		                result = val[0] + [val[3]]
		              
    result
  end
.,.,

# reduce 257 omitted

# reduce 258 omitted

# reduce 259 omitted

# reduce 260 omitted

# reduce 261 omitted

# reduce 262 omitted

# reduce 263 omitted

# reduce 264 omitted

# reduce 265 omitted

# reduce 266 omitted

# reduce 267 omitted

# reduce 268 omitted

# reduce 269 omitted

# reduce 270 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 603)
  def _reduce_271(val, _values, result)
                		    result = node :lparen, :stmt => val[1]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 607)
  def _reduce_272(val, _values, result)
                		    result = node :colon2, :lhs => val[0], :rhs => val[2]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 611)
  def _reduce_273(val, _values, result)
                		    result = node :colon3, :rhs => val[1]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 615)
  def _reduce_274(val, _values, result)
                		    result = node :array, :args => val[1]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 619)
  def _reduce_275(val, _values, result)
                		    result = node :assoc_list, :list => val[1]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 623)
  def _reduce_276(val, _values, result)
                		    result = node :return
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 627)
  def _reduce_277(val, _values, result)
            	          result = node :yield, :call_args => val[2]
        	        
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 631)
  def _reduce_278(val, _values, result)
            	          result = node :yield
        	        
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 635)
  def _reduce_279(val, _values, result)
            	          result = node :yield
        	        
    result
  end
.,.,

# reduce 280 omitted

# reduce 281 omitted

# reduce 282 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 642)
  def _reduce_283(val, _values, result)
                        # puts 1
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 646)
  def _reduce_284(val, _values, result)
                		    # puts 2
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 650)
  def _reduce_285(val, _values, result)
                		    val[0][:brace_block] = val[1]
            		    result = val[0]
            		  
    result
  end
.,.,

# reduce 286 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 656)
  def _reduce_287(val, _values, result)
                		    result = self.node :if, :expr => val[1], :stmt => val[3], :tail => val[4]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 660)
  def _reduce_288(val, _values, result)
                		    result = self.node :unless, :expr => val[1], :stmt => val[3], :tail => val[4]
            		  
    result
  end
.,.,

# reduce 289 omitted

# reduce 290 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 666)
  def _reduce_291(val, _values, result)
                		    result = node :case, :expr => val[1], :body => val[3]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 670)
  def _reduce_292(val, _values, result)
                		    result = node :case, :expr => nil, :body => val[2]
            		  
    result
  end
.,.,

# reduce 293 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 675)
  def _reduce_294(val, _values, result)
                		    result = self.node_class(:cpath => val[1], :superclass => val[2], :bodystmt => val[3])
            		  
    result
  end
.,.,

# reduce 295 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 680)
  def _reduce_296(val, _values, result)
                		    result = self.node_module(:cpath => val[1], :body => val[2])
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 684)
  def _reduce_297(val, _values, result)
                		    result = self.node :def, :fname => val[1], :arglist => val[2], :bodystmt => val[3]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 688)
  def _reduce_298(val, _values, result)
                		    result = self.node :def, :singleton => val[1], :fname => val[3], :arglist => val[4], :bodystmt => val[5]
            		  
    result
  end
.,.,

# reduce 299 omitted

# reduce 300 omitted

# reduce 301 omitted

# reduce 302 omitted

# reduce 303 omitted

# reduce 304 omitted

# reduce 305 omitted

# reduce 306 omitted

# reduce 307 omitted

# reduce 308 omitted

# reduce 309 omitted

# reduce 310 omitted

# reduce 311 omitted

# reduce 312 omitted

# reduce 313 omitted

# reduce 314 omitted

# reduce 315 omitted

# reduce 316 omitted

# reduce 317 omitted

# reduce 318 omitted

# reduce 319 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 728)
  def _reduce_320(val, _values, result)
                        result = val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 732)
  def _reduce_321(val, _values, result)
                  	    result = [self.node(:elsif, :expr => val[1], :stmt => val[3])] + val[4]
              	  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 737)
  def _reduce_322(val, _values, result)
                        result = []
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 741)
  def _reduce_323(val, _values, result)
                  	    result = [self.node(:else, :stmt => val[1])]
              	  
    result
  end
.,.,

# reduce 324 omitted

# reduce 325 omitted

# reduce 326 omitted

# reduce 327 omitted

# reduce 328 omitted

# reduce 329 omitted

# reduce 330 omitted

# reduce 331 omitted

# reduce 332 omitted

# reduce 333 omitted

# reduce 334 omitted

# reduce 335 omitted

# reduce 336 omitted

# reduce 337 omitted

# reduce 338 omitted

# reduce 339 omitted

# reduce 340 omitted

# reduce 341 omitted

# reduce 342 omitted

# reduce 343 omitted

# reduce 344 omitted

# reduce 345 omitted

# reduce 346 omitted

# reduce 347 omitted

# reduce 348 omitted

# reduce 349 omitted

# reduce 350 omitted

# reduce 351 omitted

# reduce 352 omitted

# reduce 353 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 781)
  def _reduce_354(val, _values, result)
                        result = nil
                  
    result
  end
.,.,

# reduce 355 omitted

# reduce 356 omitted

# reduce 357 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 789)
  def _reduce_358(val, _values, result)
                		    result = val[1]
            		  
    result
  end
.,.,

# reduce 359 omitted

# reduce 360 omitted

# reduce 361 omitted

# reduce 362 omitted

# reduce 363 omitted

# reduce 364 omitted

# reduce 365 omitted

# reduce 366 omitted

# reduce 367 omitted

# reduce 368 omitted

# reduce 369 omitted

# reduce 370 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 812)
  def _reduce_371(val, _values, result)
                        result = node :brace_block, :params => val[1], :stmt => val[2]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 817)
  def _reduce_372(val, _values, result)
                        val[0][:brace_block] = val[1]
                    result = val[0]
                  
    result
  end
.,.,

# reduce 373 omitted

# reduce 374 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 825)
  def _reduce_375(val, _values, result)
                        result = node :call, :recv => nil, :meth => val[0], :call_args => val[1]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 829)
  def _reduce_376(val, _values, result)
                        result = node :call, :recv => val[0], :meth => val[2], :call_args => val[3]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 833)
  def _reduce_377(val, _values, result)
                  	    puts 'SCOOOBY DOOOOOOOOOOOOOOOOOOOOOOOOOOOOO 2'
              	  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 837)
  def _reduce_378(val, _values, result)
                  	    puts 'SCOOOBY DOOOOOOOOOOOOOOOOOOOOOOOOOOOOO 3'
              	  
    result
  end
.,.,

# reduce 379 omitted

# reduce 380 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 843)
  def _reduce_381(val, _values, result)
                		    result = node :super, :call_args => val[1]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 847)
  def _reduce_382(val, _values, result)
                		    result = node :super, :call_args => nil
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 851)
  def _reduce_383(val, _values, result)
                        result = node :call, :recv => val[0], :meth => '[]', :call_args => val[2]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 858)
  def _reduce_384(val, _values, result)
                      
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 861)
  def _reduce_385(val, _values, result)
                		    result = node :brace_block, :params => val[1], :stmt => val[2]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 866)
  def _reduce_386(val, _values, result)
                        result = [node(:when, :args => val[1], :stmt => val[3])] + val[4]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 871)
  def _reduce_387(val, _values, result)
                        result = val[0]
                  
    result
  end
.,.,

# reduce 388 omitted

# reduce 389 omitted

# reduce 390 omitted

# reduce 391 omitted

# reduce 392 omitted

# reduce 393 omitted

# reduce 394 omitted

# reduce 395 omitted

# reduce 396 omitted

# reduce 397 omitted

# reduce 398 omitted

# reduce 399 omitted

# reduce 400 omitted

# reduce 401 omitted

# reduce 402 omitted

# reduce 403 omitted

# reduce 404 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 900)
  def _reduce_405(val, _values, result)
                        result = node :string, :value => val[1], :beg => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 905)
  def _reduce_406(val, _values, result)
                        result = node :xstring, :value => val[1]
                  
    result
  end
.,.,

# reduce 407 omitted

# reduce 408 omitted

# reduce 409 omitted

# reduce 410 omitted

# reduce 411 omitted

# reduce 412 omitted

# reduce 413 omitted

# reduce 414 omitted

# reduce 415 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 924)
  def _reduce_416(val, _values, result)
                        # none..
                    result = []
                  
    result
  end
.,.,

# reduce 417 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 931)
  def _reduce_418(val, _values, result)
                        # none..
                    result = []
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 936)
  def _reduce_419(val, _values, result)
                		    result = val[0] + [val[1]]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 941)
  def _reduce_420(val, _values, result)
                        # none..
                    result = []
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 946)
  def _reduce_421(val, _values, result)
                		    result = val[0] + [val[1]]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 951)
  def _reduce_422(val, _values, result)
                        result = node :string_content, :value => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 955)
  def _reduce_423(val, _values, result)
                        result = node :string_dvar, :value => val[1]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 959)
  def _reduce_424(val, _values, result)
                        result = node :string_dbeg, :value => val[1]
                  
    result
  end
.,.,

# reduce 425 omitted

# reduce 426 omitted

# reduce 427 omitted

# reduce 428 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 969)
  def _reduce_429(val, _values, result)
                        result = node :symbol, :name => val[1]
                  
    result
  end
.,.,

# reduce 430 omitted

# reduce 431 omitted

# reduce 432 omitted

# reduce 433 omitted

# reduce 434 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 981)
  def _reduce_435(val, _values, result)
                        result = node :numeric, :value => val[0], :float => false
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 985)
  def _reduce_436(val, _values, result)
                        result = node :numeric, :value => val[0], :float => true
                  
    result
  end
.,.,

# reduce 437 omitted

# reduce 438 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 992)
  def _reduce_439(val, _values, result)
                        result = node :identifier, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 996)
  def _reduce_440(val, _values, result)
                        result = node :ivar, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1000)
  def _reduce_441(val, _values, result)
                        result = node :gvar, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1004)
  def _reduce_442(val, _values, result)
                        result = node :constant, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1008)
  def _reduce_443(val, _values, result)
                        result = node :cvar, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1012)
  def _reduce_444(val, _values, result)
                        result = node :nil, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1016)
  def _reduce_445(val, _values, result)
                        result = node :self, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1020)
  def _reduce_446(val, _values, result)
                        result = node :true, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1024)
  def _reduce_447(val, _values, result)
                        result = node :false, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1028)
  def _reduce_448(val, _values, result)
                        result = node :__FILE__, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1032)
  def _reduce_449(val, _values, result)
                        result = node :__LINE__, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1036)
  def _reduce_450(val, _values, result)
                        result = node :__ENCODING__, :name => val[0]
                  
    result
  end
.,.,

# reduce 451 omitted

# reduce 452 omitted

# reduce 453 omitted

# reduce 454 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1048)
  def _reduce_455(val, _values, result)
                        result = nil
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1052)
  def _reduce_456(val, _values, result)
                		    result = node :superclass, :expr => val[1]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1054)
  def _reduce_457(val, _values, result)
     puts 'OMFG' 
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1058)
  def _reduce_458(val, _values, result)
                        result = val[1]
                    self.lex_state = :EXPR_BEG
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1063)
  def _reduce_459(val, _values, result)
                        result = val[0]
                    self.lex_state = :EXPR_BEG
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1069)
  def _reduce_460(val, _values, result)
                 		    result = node :arg, :arg => val[0], :optarg => val[2], :rest_arg => val[4], :opt_block_arg => val[5]
             		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1073)
  def _reduce_461(val, _values, result)
                 		    result = node :arg, :arg => val[0], :optarg => val[2], :rest_arg => val[4], :arg2 => val[6], :opt_block_arg => val[7]
             		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1077)
  def _reduce_462(val, _values, result)
                  	    result = node :arg, :arg => val[0], :optarg => val[2], :opt_block_arg => val[3]
              	  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1081)
  def _reduce_463(val, _values, result)
                  	    result = node :arg, :arg => val[0], :optarg => val[2], :arg2 => val[4], :opt_block_arg => val[5]
              	  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1085)
  def _reduce_464(val, _values, result)
                		    result = node :arg, :arg => val[0], :rest_arg => val[2], :opt_block_arg => val[3]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1089)
  def _reduce_465(val, _values, result)
                		    result = node :arg, :arg => val[0], :rest_arg => val[2], :arg2 => val[4], :opt_block_arg => val[5]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1093)
  def _reduce_466(val, _values, result)
                 		    result = node :arg, :arg => val[0], :opt_block_arg => val[1]
             		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1097)
  def _reduce_467(val, _values, result)
                		    result = node :optarg, :optarg => val[0], :rest_arg => val[2], :opt_block_arg => val[3]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1101)
  def _reduce_468(val, _values, result)
                		    result = node :optarg, :optarg => val[0], :rest_arg => val[2], :arg => val[4], :opt_block_arg => val[5]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1105)
  def _reduce_469(val, _values, result)
                 		    result = node :optarg, :optarg => val[0], :opt_block_arg => val[1]
             		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1109)
  def _reduce_470(val, _values, result)
                 		    result = node :optarg, :optarg => val[0], :arg => val[2], :opt_block_arg => val[3]
             		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1113)
  def _reduce_471(val, _values, result)
                 		    result = node :rest_arg, :rest_arg => val[0], :opt_block_arg => val[1]
             		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1117)
  def _reduce_472(val, _values, result)
                 		    result = node :rest_arg, :rest_arg => val[0], :arg => val[2], :opt_block_arg => val[3]
             		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1121)
  def _reduce_473(val, _values, result)
                 		    result = node :arg, :opt_block_arg => val[0]
             		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1125)
  def _reduce_474(val, _values, result)
                  	    # none...
              	    result = nil
              	  
    result
  end
.,.,

# reduce 475 omitted

# reduce 476 omitted

# reduce 477 omitted

# reduce 478 omitted

# reduce 479 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1137)
  def _reduce_480(val, _values, result)
                        # result = val[0]
              	    result = node :norm_arg, :value => val[0]
              	  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1143)
  def _reduce_481(val, _values, result)
                      
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1146)
  def _reduce_482(val, _values, result)
                        result = node :label_arg, :name => val[0], :value => val[1]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1151)
  def _reduce_483(val, _values, result)
                        result = val[0]
                  
    result
  end
.,.,

# reduce 484 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1157)
  def _reduce_485(val, _values, result)
                        result = [val[0]]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1161)
  def _reduce_486(val, _values, result)
                        # val[0] + val[2]
                    result = val[0] + [val[2]]
            		  
    result
  end
.,.,

# reduce 487 omitted

# reduce 488 omitted

# reduce 489 omitted

# reduce 490 omitted

# reduce 491 omitted

# reduce 492 omitted

# reduce 493 omitted

# reduce 494 omitted

# reduce 495 omitted

# reduce 496 omitted

# reduce 497 omitted

# reduce 498 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1186)
  def _reduce_499(val, _values, result)
                        result = val[1]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1190)
  def _reduce_500(val, _values, result)
                        result = node :label_arg, :name => val[0], :value => val[1]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1195)
  def _reduce_501(val, _values, result)
                        result = val[1]
                  
    result
  end
.,.,

# reduce 502 omitted

# reduce 503 omitted

# reduce 504 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1204)
  def _reduce_505(val, _values, result)
                        result = []
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1208)
  def _reduce_506(val, _values, result)
                  	    result = val[0]
              	  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1213)
  def _reduce_507(val, _values, result)
                        result = [val[0]]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1217)
  def _reduce_508(val, _values, result)
                		    result = val[0] + [val[2]]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1222)
  def _reduce_509(val, _values, result)
                        result = node :assoc, :key => val[0], :value => val[2]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1226)
  def _reduce_510(val, _values, result)
                        result = node :label_assoc, :key => val[0], :value => val[1]
                  
    result
  end
.,.,

# reduce 511 omitted

# reduce 512 omitted

# reduce 513 omitted

# reduce 514 omitted

# reduce 515 omitted

# reduce 516 omitted

# reduce 517 omitted

# reduce 518 omitted

# reduce 519 omitted

# reduce 520 omitted

# reduce 521 omitted

# reduce 522 omitted

# reduce 523 omitted

# reduce 524 omitted

# reduce 525 omitted

# reduce 526 omitted

# reduce 527 omitted

# reduce 528 omitted

# reduce 529 omitted

# reduce 530 omitted

# reduce 531 omitted

# reduce 532 omitted

# reduce 533 omitted

# reduce 534 omitted

# reduce 535 omitted

# reduce 536 omitted

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class RubyParser
  end   # module Vienna


