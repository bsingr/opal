#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.6
# from Racc grammer file "".
#

require 'racc/parser.rb'


# require 'ctokenizer'
require 'strscan'

module Vienna
  class RubyParser < Racc::Parser

module_eval(<<'...end ruby_parser.rb.y/module_eval...', 'ruby_parser.rb.y', 1250)


...end ruby_parser.rb.y/module_eval...
##### State transition tables begin ###

clist = [
'-272,-10,-87,353,-272,-272,-272,-272,-272,-272,-272,-272,519,922,-98',
'747,-272,-272,-66,-272,-272,-272,-272,-272,-272,-272,-272,-272,-272',
'-272,-272,-272,-272,-272,-272,-272,-272,-272,-272,-272,-272,429,522',
'-272,400,399,400,399,400,399,400,399,-272,-272,-272,400,399,-87,-272',
'-272,354,-272,-518,-100,381,-96,-518,-518,-518,-518,-518,-518,-518,-518',
'257,260,-96,744,-518,-518,-97,-518,-518,-518,-518,-518,-518,-518,-518',
'-518,-518,-518,-518,-518,-518,-518,-518,-518,-518,-518,-518,-518,-518',
'599,-272,-518,599,808,-99,-94,144,817,353,437,-518,-518,-518,-95,-89',
'-87,-518,-518,-87,-518,-97,753,-87,-448,-272,-272,-272,-90,-518,430',
'-272,-80,-272,-10,-272,-10,368,-514,-89,-100,-96,369,-96,242,816,243',
'524,-94,846,-448,526,599,815,-93,-452,-99,570,-95,750,442,435,-97,-518',
'539,-94,354,-91,-86,369,-89,369,110,369,806,369,-87,-92,242,242,243',
'243,242,-93,243,149,-518,-518,-518,-518,-88,257,260,-518,617,-518,430',
'-518,-233,599,-95,614,-92,-518,263,-525,269,271,-228,599,250,253,255',
'258,261,264,266,268,270,272,248,251,254,256,259,262,265,267,180,185',
'273,242,-89,243,-272,-89,144,427,-89,-89,-518,-97,427,-97,-94,-85,-94',
'182,187,189,192,197,201,206,210,215,219,226,229,232,236,240,164,166',
'171,-86,178,184,190,194,199,-85,495,-91,-518,-87,427,538,242,-95,243',
'-95,-96,110,491,-98,458,813,242,446,243,148,150,153,157,159,-273,-518',
'504,-518,-518,-518,242,537,243,-272,-518,242,161,243,454,455,583,531',
'149,497,585,388,389,390,391,-273,-273,505,506,369,193,198,458,-445,-272',
'-272,-272,500,501,144,237,-272,156,180,185,242,144,243,-88,156,-514',
'-90,242,-515,243,-383,454,455,489,-445,241,110,182,187,189,192,197,201',
'206,210,215,219,226,229,232,236,240,164,166,171,144,178,184,190,194',
'199,727,-450,460,-383,257,260,681,-449,148,150,153,157,159,139,-511',
'148,150,153,157,159,-439,-228,-226,369,495,161,-383,-450,-383,-383,145',
'149,161,-449,518,-272,491,145,149,854,727,639,531,516,517,640,-439,446',
'-439,148,150,153,157,159,655,193,198,565,142,144,-272,-272,156,495,-515',
'237,161,144,180,185,156,-511,149,-439,-439,491,446,-511,148,150,153',
'157,451,566,536,241,110,182,187,189,192,197,201,206,210,215,219,226',
'229,232,236,240,164,166,171,144,178,184,190,194,199,242,139,243,148',
'150,153,157,159,872,139,-272,148,150,153,157,159,257,260,495,458,161',
'242,242,243,243,145,149,110,161,263,491,-537,-537,145,149,-272,-272',
'-451,315,-515,811,761,576,454,455,762,562,446,-267,148,150,153,157,159',
'562,193,198,540,144,701,546,156,-451,-451,316,237,161,144,180,185,156',
'655,149,-267,-267,446,546,148,150,153,157,451,528,541,807,241,110,182',
'187,189,192,197,201,206,210,215,219,226,229,232,236,240,164,166,171',
'144,178,184,190,194,199,681,-272,148,150,153,157,159,666,548,681,527',
'148,150,153,157,159,617,495,413,161,-518,400,399,614,145,149,-272,-272',
'161,491,-515,-444,615,145,149,528,529,509,-442,614,369,719,576,414,415',
'720,514,446,-273,148,150,153,157,159,-518,193,198,-444,144,257,260,156',
'414,510,-442,237,161,144,180,185,156,617,149,-273,-273,257,260,-518',
'614,-518,-518,546,276,-514,278,241,110,182,187,189,192,197,201,206,210',
'215,219,226,229,232,236,240,164,166,171,144,178,184,190,194,199,139',
'356,148,150,153,157,159,257,260,139,-447,148,150,153,157,159,257,260',
'-273,161,-518,242,803,243,145,149,357,358,161,826,242,-446,243,145,149',
'458,-447,603,-253,508,369,530,531,-273,-273,533,831,446,-451,148,150',
'153,157,159,-518,193,198,-446,144,454,455,156,604,605,798,237,161,144',
'180,185,156,783,149,-451,-451,257,260,-518,-254,-518,-518,257,260,-514',
'369,241,110,182,187,189,192,197,201,206,210,215,219,226,229,232,236',
'240,164,166,171,144,178,184,190,194,199,139,-267,148,150,153,157,159',
'257,260,681,923,148,150,153,157,159,257,260,912,161,-512,257,260,546',
'145,149,-267,-267,161,263,404,-537,-537,145,149,924,925,369,458,-95',
'777,719,576,528,529,720,796,446,-303,148,150,153,157,159,-442,193,198',
'794,144,-99,570,156,454,455,511,237,161,144,180,185,257,260,149,-303',
'-303,-94,863,-512,840,-442,-442,400,399,-512,841,241,110,182,187,189',
'192,197,201,206,210,215,219,226,229,232,236,240,164,166,171,144,178',
'184,190,194,199,139,503,148,150,153,157,159,458,572,446,502,148,150',
'153,157,159,792,671,672,161,673,847,257,260,145,149,29,34,161,280,281',
'454,455,456,149,263,-100,421,110,-228,-226,764,531,257,260,765,572,446',
'499,148,150,153,157,159,498,193,198,446,144,148,150,153,157,451,791',
'237,161,144,180,185,156,369,149,854,727,786,452,148,150,153,157,449',
'-93,-452,785,241,110,182,187,189,192,197,201,206,210,215,219,226,229',
'232,236,240,164,166,171,783,178,184,190,194,199,446,369,148,150,153',
'157,159,400,399,139,546,148,150,153,157,159,257,260,422,161,388,389',
'390,391,467,149,257,260,161,263,387,269,271,145,149,-537,-537,-537,-537',
'-537,-537,639,531,773,446,640,148,150,153,157,451,257,260,-97,778,193',
'198,786,420,148,150,153,157,452,263,237,269,271,180,185,250,253,255',
'258,261,264,266,268,270,272,248,251,254,256,259,241,110,182,187,189',
'192,197,201,206,210,215,219,226,229,232,236,240,164,166,171,727,178',
'184,190,194,199,257,260,388,389,390,391,546,388,389,390,391,773,387',
'263,464,269,271,387,462,250,253,255,258,261,264,266,268,270,272,248',
'251,254,256,259,262,265,267,369,460,273,369,575,576,773,446,578,148',
'150,153,157,451,257,260,767,865,193,198,445,441,369,870,440,438,452',
'263,237,269,271,180,185,250,253,255,258,261,264,266,268,270,272,248',
'251,254,256,259,241,110,182,187,189,192,197,201,206,210,215,219,226',
'229,232,236,240,164,166,171,433,178,184,190,194,199,257,260,388,389',
'390,391,572,760,877,422,-65,420,387,263,368,269,271,418,546,250,253',
'255,258,261,264,266,268,270,272,248,251,254,256,259,262,265,267,369',
'412,273,411,636,576,591,446,637,148,150,153,157,451,257,260,-255,410',
'193,198,406,-80,895,755,369,18,452,263,237,269,271,180,185,250,253,255',
'258,261,264,266,268,270,272,248,251,254,256,259,241,110,182,187,189',
'192,197,201,206,210,215,219,226,229,232,236,240,164,166,171,592,178',
'184,190,194,199,257,260,602,369,546,607,773,546,382,783,612,783,905',
'263,783,269,271,-228,-226,250,253,255,258,261,264,266,268,270,272,248',
'251,254,256,259,262,265,267,870,624,273,907,530,531,422,446,533,148',
'150,153,157,451,257,260,629,369,193,198,-253,914,916,783,919,783,452',
'263,237,269,271,180,185,250,253,255,258,261,264,266,268,270,272,248',
'251,254,546,818,241,110,182,187,189,192,197,201,206,210,215,219,226',
'229,232,236,240,164,166,171,546,178,184,190,194,199,257,260,732,649',
'369,-256,546,730,655,727,662,870,430,263,350,269,271,349,334,250,253',
'255,258,261,264,266,268,270,272,248,251,254,256,259,262,265,267,369',
'667,273,331,694,576,328,446,696,148,150,153,157,451,257,260,548,317',
'193,198,783,870,783,945,783,783,452,263,237,269,271,180,185,250,253',
'255,258,261,264,266,268,270,272,248,251,254,718,442,241,110,182,187',
'189,192,197,201,206,210,215,219,226,229,232,236,240,164,166,171,369',
'178,184,190,194,199,257,260,299,460,546,597,109,783,,,,,,263,,269,271',
',,250,253,255,258,261,264,266,268,270,272,248,251,254,256,259,262,265',
'267,,,273,,636,576,,,637,,,,,,257,260,,,193,198,,,,,,,,263,237,269,271',
'180,185,250,253,255,258,261,264,266,268,270,272,248,251,,,,241,110,182',
'187,189,192,197,201,206,210,215,219,226,229,232,236,240,164,166,171',
',178,184,190,194,199,257,260,,,,,,,,,,,,263,,269,271,-228,-226,250,253',
'255,258,261,264,266,268,270,272,248,251,254,256,259,262,265,267,,,273',
',698,531,,,700,,446,,148,150,153,157,451,,193,198,,,,,,,,,237,452,,180',
'185,,449,,,204,213,217,222,,,,,,,,241,110,182,187,189,192,197,201,206',
'210,215,219,226,229,232,236,240,164,166,171,,178,184,190,194,199,202',
'207,211,214,220,225,228,230,234,238,165,167,172,175,177,183,188,191',
'196,203,208,212,216,221,,,,235,239,163,336,338,339,340,186,,,,342,343',
'345,346,223,86,90,347,98,,,,,257,260,,,193,198,,,,,,,,263,237,269,271',
'180,185,250,253,255,258,261,264,266,268,270,272,,,,,,241,335,182,187',
'189,192,197,201,206,210,215,219,226,229,232,236,240,164,166,171,,178',
'184,190,194,199,257,260,,,,,,,,,,,,263,,269,271,,,250,253,255,258,261',
'264,266,268,270,272,248,251,254,256,259,262,265,267,,,273,,938,531,',
',939,,,,,,257,260,,,193,198,,,,,,,,263,237,269,271,180,185,250,253,255',
'258,261,264,266,268,270,272,,,,,,241,110,182,187,189,192,197,201,206',
'210,215,219,226,229,232,236,240,164,166,171,,178,184,190,194,199,257',
'260,,,,,,,,,,,,263,,269,271,,,250,253,255,258,261,264,266,268,270,272',
'248,251,254,256,259,262,265,267,,257,260,,935,576,,,936,,,,,,263,,269',
'271,193,198,-537,-537,-537,-537,-537,-537,257,260,237,,,180,185,,,,',
',,263,,269,271,,-226,,,,241,110,182,187,189,192,197,201,206,210,215',
'219,226,229,232,236,240,164,166,171,,178,184,190,194,199,257,260,,,',
',446,,148,150,153,157,451,263,,269,271,,,-537,-537,-537,-537,-537,-537',
'452,,,,,800,257,260,,,,,,257,260,,708,576,,263,710,269,271,-228,-226',
',263,,269,271,193,198,-537,-537,-537,-537,-537,-537,,,237,,,180,185',
',,,,204,213,217,222,,,,,,,,241,110,182,187,189,192,197,201,206,210,215',
'219,226,229,232,236,240,164,166,171,,178,184,190,194,199,202,207,211',
'214,220,225,228,230,234,238,165,167,172,175,177,183,188,191,196,203',
'208,212,216,221,,,,235,239,163,168,173,176,181,186,,,,200,205,209,218',
'223,,,231,,,,,,,,,,193,198,,257,260,,,,,,237,,,12,180,185,263,,269,271',
',,-537,-537,-537,-537,-537,-537,,,241,,,182,187,189,192,197,201,206',
'210,215,219,226,229,232,236,240,164,166,171,,178,184,190,194,199,257',
'260,,,,,,,,,,,,263,,269,271,,,250,253,255,258,261,264,,,,,,,,,,,,,,257',
'260,,530,531,,,533,,,,,,263,,269,271,193,198,250,253,255,258,261,264',
',,237,,180,185,,,,,204,213,217,222,,,,,,,,,241,182,187,189,192,197,201',
'206,210,215,219,226,229,232,236,240,164,166,171,,178,184,190,194,199',
'202,207,211,214,220,225,228,230,234,238,165,167,172,175,177,183,188',
'191,196,203,208,212,216,221,,,,235,239,163,168,173,176,181,186,,,,200',
'205,209,218,223,,,231,,,,,,,,,,193,198,,257,260,,,,,,237,,,12,180,185',
'263,,269,271,,,250,253,255,258,261,264,,,241,,,182,187,189,192,197,201',
'206,210,215,219,226,229,232,236,240,164,166,171,,178,184,190,194,199',
'257,260,,,,,,,,,,,,263,,269,271,,,250,253,255,258,261,264,,,,,,,,,,',
',,,257,260,,530,531,,,533,,,,,,263,,269,271,193,198,-537,-537,-537,-537',
'-537,-537,,,237,,180,185,,,,,204,213,217,222,,,,,,,,,241,182,187,189',
'192,197,201,206,210,215,219,226,229,232,236,240,164,166,171,,178,184',
'190,194,199,202,207,211,214,220,225,228,230,234,238,165,167,172,175',
'177,183,188,191,196,203,208,212,216,221,,,,235,239,163,168,173,176,181',
'186,,,,200,205,209,218,223,305,,231,,,,,,,,,,193,198,,,,,,,,,237,,,12',
'180,185,,,,,204,213,217,222,,,,,,,241,,,182,187,189,192,197,201,206',
'210,215,219,226,229,232,236,240,164,166,171,,178,184,190,194,199,202',
'207,211,214,220,225,228,230,234,238,165,167,172,175,177,183,188,191',
'196,203,208,212,216,221,,,,235,239,163,168,173,176,181,186,,,,200,205',
'209,218,223,,,231,,,,,,,,,,193,198,,,,,,,,,237,,,12,180,185,,,,,204',
'213,217,222,,,,,,,241,,,182,187,189,192,197,201,206,210,215,219,226',
'229,232,236,240,164,166,171,,178,184,190,194,199,202,207,211,214,220',
'225,228,230,234,238,165,167,172,175,177,183,188,191,196,203,208,212',
'216,221,,,,235,239,163,168,173,176,181,186,,,,200,205,209,218,223,224',
'227,231,233,,,,,,,,,193,198,,,,,,,,,237,,180,185,,,,,204,213,217,222',
',,,,,,,,241,182,187,189,192,197,201,206,210,215,219,226,229,232,236',
'240,164,166,171,,178,184,190,194,199,202,207,211,214,220,225,228,230',
'234,238,165,167,172,175,177,183,188,191,196,203,208,212,216,221,123',
'83,,235,239,163,168,173,176,181,186,,,,200,205,209,218,223,,,231,,,',
',,,,26,32,193,198,50,55,58,64,70,,124,,237,,100,106,,,,24,,36,43,47',
'116,117,65,71,,,,,241,130,107,6,10,17,21,30,,,,,57,63,69,76,85,86,90',
'93,98,132,4,11,,23,29,34,,,,,119,,121,80,,92,96,131,134,8,12,18,22,31',
'35,41,79,83,,,,,,,,,,,,,,,,369,,,,,,,,,,,,26,32,,45,50,55,58,64,70,',
'124,,,,100,106,,,,24,,36,43,47,51,62,65,71,,,,,,101,107,6,10,17,21,30',
',,,,57,63,69,76,85,86,90,93,98,,4,11,,23,29,34,,,,,119,,121,80,,92,96',
'79,83,8,12,18,22,31,35,41,,,,,,,,,,,,,,,,242,,243,,,26,32,,45,50,55',
'58,64,70,,124,,,,100,106,,,,24,,36,43,47,51,62,65,71,,,,,,101,107,6',
'10,17,21,30,,,,,57,63,69,76,85,86,90,93,98,,4,11,,23,29,34,,,,,119,',
'121,80,,92,96,79,83,8,12,18,22,31,35,41,,,,,,,,,,,,,,,,,,369,,,26,32',
',45,50,55,58,64,70,78,124,,,,100,106,,,,24,,36,43,47,51,62,65,71,,,',
',,101,107,6,10,17,21,30,38,,,52,57,63,69,76,85,86,90,93,98,,4,11,,23',
'29,34,,,,,67,,77,80,,92,96,104,,8,12,18,22,31,35,41,79,83,,,,,,,,,,',
',,,462,,,,,,,,,,,,,,26,32,,45,50,55,58,64,70,78,81,,,,100,106,,,,24',
',36,43,47,51,62,65,71,,,,,,101,107,6,10,17,21,30,38,,,52,57,63,69,76',
'85,86,90,93,98,,4,11,,23,29,34,,,,,67,,77,80,,92,96,104,,8,12,18,22',
'31,35,41,-513,-513,,,,,,,,,,,,,,462,,,,,,,,,,,,,,-513,-513,,,-513,-513',
'-513,-513,-513,,-513,,,,-513,-513,,,,-513,,-513,-513,-513,-513,-513',
'-513,-513,,,,,,-513,-513,-513,-513,-513,-513,-513,,,,,-513,-513,-513',
'-513,-513,-513,-513,-513,-513,-513,-513,-513,,-513,-513,-513,123,83',
',,-513,,-513,-513,,-513,-513,-513,-513,-513,-513,-513,-513,-513,-513',
'-513,,,,,,,-513,,,26,32,,-513,50,55,58,64,70,,124,,,,100,106,,,,24,',
'36,43,47,116,117,65,71,,,,,,130,107,6,10,17,21,30,,,,,57,63,69,76,85',
'86,90,93,98,132,4,11,,23,29,34,-516,-516,,,119,,121,80,,92,96,131,134',
'8,12,18,22,31,35,41,,,,,,,,,,-516,-516,,110,-516,-516,-516,-516,-516',
',-516,,,,-516,-516,,,,-516,,-516,-516,-516,-516,-516,-516,-516,,,,,',
'-516,-516,-516,-516,-516,-516,-516,,,,,-516,-516,-516,-516,-516,-516',
'-516,-516,-516,-516,-516,-516,,-516,-516,-516,123,83,,,-516,,-516,-516',
',-516,-516,-516,-516,-516,-516,-516,-516,-516,-516,-516,,,,,,,,,,26',
'32,,-516,50,55,58,64,70,,124,,,,100,106,,,,24,,36,43,47,116,117,65,71',
',,,,,130,107,6,10,17,21,30,,,,,57,63,69,76,85,86,90,93,98,132,4,11,',
'23,29,34,123,83,,,119,,121,80,,92,96,131,134,8,12,18,22,31,35,41,,,',
',,,,,,26,32,,110,50,55,58,64,70,,124,,,,100,106,,,,24,,36,43,47,116',
'117,65,71,,,,,,130,107,6,10,17,21,30,,,,,57,63,69,76,85,86,90,93,98',
'132,4,11,,23,29,34,-512,-512,,,119,,121,80,,92,96,131,134,8,12,18,22',
'31,35,41,,,,,,,,,,-512,-512,,110,-512,-512,-512,-512,-512,,-512,,,,-512',
'-512,,,,-512,,-512,-512,-512,-512,-512,-512,-512,,,,,,-512,-512,-512',
'-512,-512,-512,-512,,,,,-512,-512,-512,-512,-512,-512,-512,-512,-512',
'-512,-512,-512,,-512,-512,-512,123,83,,,-512,,-512,-512,,-512,-512,-512',
'-512,-512,-512,-512,-512,-512,-512,-512,,,,,,,-512,,,26,32,,-512,50',
'55,58,64,70,,124,,,,100,106,,,,24,,36,43,47,116,117,65,71,,,,,,130,107',
'6,10,17,21,30,,,,,57,63,69,76,85,86,90,93,98,132,4,11,,23,29,34,-517',
'-517,,,119,,121,80,,92,96,131,134,8,12,18,22,31,35,41,,,,,,,,,,-517',
'-517,,110,-517,-517,-517,-517,-517,,-517,,,,-517,-517,,,,-517,,-517',
'-517,-517,-517,-517,-517,-517,,,,,,-517,-517,-517,-517,-517,-517,-517',
',,,,-517,-517,-517,-517,-517,-517,-517,-517,-517,-517,-517,-517,,-517',
'-517,-517,123,83,,,-517,,-517,-517,,-517,-517,-517,-517,-517,-517,-517',
'-517,-517,-517,-517,,,,,,,,,,26,32,,-517,50,55,58,64,70,,124,,,,100',
'106,,,,24,,36,43,47,116,117,65,71,,,,,,130,107,6,10,17,21,30,,,,,57',
'63,69,76,85,86,90,93,98,132,4,11,,23,29,34,-511,-511,,,119,,121,80,',
'92,96,131,134,8,12,18,22,31,35,41,,,,,,,,,,-511,-511,,110,-511,-511',
'-511,-511,-511,,-511,,,,-511,-511,,,,-511,,-511,-511,-511,-511,-511',
'-511,-511,,,,,,-511,-511,-511,-511,-511,-511,-511,,,,,-511,-511,-511',
'-511,-511,-511,-511,-511,-511,-511,-511,-511,,-511,-511,-511,123,83',
',,-511,,-511,-511,,-511,-511,-511,-511,-511,-511,-511,-511,-511,-511',
'-511,,,,,,,-511,,,26,32,,-511,50,55,58,64,70,,124,,,,100,106,,,,24,',
'36,43,47,116,117,65,71,,,,,,130,293,282,10,17,21,30,,,,,57,63,69,76',
'85,86,90,93,98,,4,11,,23,29,34,123,83,,,119,,121,80,,92,96,,,8,12,18',
'22,31,35,41,,,,,,,,,,26,32,,597,50,55,58,64,70,,124,,,,100,106,,,,24',
',36,43,47,116,117,65,71,,353,,,,130,107,6,10,17,21,30,,,,,57,63,69,76',
'85,86,90,93,98,132,4,11,,23,29,34,-515,-515,-98,747,119,,121,80,,92',
'96,131,134,8,12,18,22,31,35,41,,,,,,,354,,,-515,-515,,110,-515,-515',
'-515,-515,-515,,-515,,,,-515,-515,,,,-515,,-515,-515,-515,-515,-515',
'-515,-515,,,,,,-515,-515,-515,-515,-515,-515,-515,,,,,-515,-515,-515',
'-515,-515,-515,-515,-515,-515,-515,-515,-515,,-515,-515,-515,-514,-514',
'-96,775,-515,,-515,-515,,-515,-515,-515,-515,-515,-515,-515,-515,-515',
'-515,-515,,,,,,,,,,-514,-514,,-515,-514,-514,-514,-514,-514,,-514,,',
',-514,-514,,,,-514,,-514,-514,-514,-514,-514,-514,-514,,,,,,-514,-514',
'-514,-514,-514,-514,-514,,,,,-514,-514,-514,-514,-514,-514,-514,-514',
'-514,-514,-514,-514,,-514,-514,-514,123,83,,,-514,,-514,-514,,-514,-514',
'-514,-514,-514,-514,-514,-514,-514,-514,-514,,,,,,,,,,26,32,,-514,50',
'55,58,64,70,,124,,,,100,106,,,,24,,36,43,47,116,117,65,71,,,,,,130,107',
'6,10,17,21,30,,,,,57,63,69,76,85,86,90,93,98,132,4,11,,23,29,34,,,,',
'119,,121,80,,92,96,131,134,8,12,18,22,31,35,41,,,322,,,,,,,,,,404,79',
'83,,,,,,,,,,,,,,,,,,,,,,,,,,,,26,32,,45,50,55,58,64,70,78,124,,,,100',
'106,,,,24,,36,43,47,51,62,65,71,,,,,,101,107,6,10,17,21,30,38,,,52,57',
'63,69,76,85,86,90,93,98,,4,11,,23,29,34,,,,,67,,77,80,,92,96,104,322',
'8,12,18,22,31,35,41,,,,79,83,,,,,,,,,,,,,,,,,,,,,,,,,,,,26,32,,45,50',
'55,58,64,70,78,124,,,,100,106,,,,24,,36,43,47,51,62,65,71,,,,,,101,107',
'6,10,17,21,30,38,,,52,57,63,69,76,85,86,90,93,98,,4,11,,23,29,34,123',
'291,,,67,,77,80,,92,96,104,,8,12,18,22,31,35,41,,,,,,,,,,283,,,,,,58',
'64,70,,124,,,,100,106,,,,24,,36,43,47,116,117,65,71,,,,,,130,293,282',
'10,17,21,30,,,,,57,63,69,76,85,86,90,93,98,,4,11,,23,29,34,322,,,,374',
',121,80,,92,96,79,83,8,12,18,22,31,35,41,,,,,,,,,,,402,,,,,,,,,,26,32',
',45,50,55,58,64,70,78,124,,,,100,106,,,,24,,36,43,47,51,62,65,71,,,',
',,101,107,6,10,17,21,30,38,,,52,57,63,69,76,85,86,90,93,98,,4,11,,23',
'29,34,,,,,67,,77,80,,92,96,104,322,8,12,18,22,31,35,41,,,,79,83,,,,',
',,,,,,,,,,,,,,,,,,,,,,,26,32,,45,50,55,58,64,70,78,124,,,,100,106,,',
',24,,36,43,47,51,62,65,71,,,,,,101,107,6,10,17,21,30,38,,,52,57,63,69',
'76,85,86,90,93,98,,4,11,,23,29,34,,,,,67,,77,80,,92,96,104,322,8,12',
'18,22,31,35,41,,,,79,83,,,,,,,,,,,,,,,,,,,,,,,,,,,,26,32,,45,50,55,58',
'64,70,78,124,,,,100,106,,,,24,,36,43,47,51,62,65,71,,,,,,101,107,6,10',
'17,21,30,38,,,52,57,63,69,76,85,86,90,93,98,,4,11,,23,29,34,,,,,67,',
'77,80,,92,96,104,322,8,12,18,22,31,35,41,,,,79,83,,,,,,,,,,,,,,,,,,',
',,,,,,,,,26,32,,45,50,55,58,64,70,78,124,,,,100,106,,,,24,,36,43,47',
'51,62,65,71,,,,,,101,107,6,10,17,21,30,38,,,52,57,63,69,76,85,86,90',
'93,98,,4,11,,23,29,34,,,,,67,,77,80,,92,96,104,322,8,12,18,22,31,35',
'41,,,,79,83,,,,,,,,,,,,,,,,,,,,,,,,,,,,26,32,,45,50,55,58,64,70,78,124',
',,,100,106,,,,24,,36,43,47,51,62,65,71,,,,,,101,107,6,10,17,21,30,38',
',,52,57,63,69,76,85,86,90,93,98,,4,11,,23,29,34,,,,,67,,77,80,,92,96',
'104,322,8,12,18,22,31,35,41,,,,79,83,,,,,,,,,,,,,,,,,,,,,,,,,,,,26,32',
',45,50,55,58,64,70,78,124,,,,100,106,,,,24,,36,43,47,51,62,65,71,,,',
',,101,107,6,10,17,21,30,38,,,52,57,63,69,76,85,86,90,93,98,,4,11,,23',
'29,34,,,,,67,,77,80,,92,96,104,15,8,12,18,22,31,35,41,,,,79,83,,,,,',
',,,,,,,,,,,,,,,,,,,,,,26,32,,45,50,55,58,64,70,78,81,,,,100,106,,,,24',
',36,43,47,51,62,65,71,,,,,,101,107,6,10,17,21,30,38,,,52,57,63,69,76',
'85,86,90,93,98,,4,11,,23,29,34,,,,,67,,77,80,,92,96,104,322,8,12,18',
'22,31,35,41,,,,79,83,,,,,,,,,,,,,,,,,,,,,,,,,,,,26,32,,45,50,55,58,64',
'70,78,124,,,,100,106,,,,24,,36,43,47,51,62,65,71,,,,,,101,107,6,10,17',
'21,30,38,,,52,57,63,69,76,85,86,90,93,98,,4,11,,23,29,34,,,,,67,,77',
'80,,92,96,104,322,8,12,18,22,31,35,41,,,,79,83,,,,,,,,,,,,,,,,,,,,,',
',,,,,,26,32,,45,50,55,58,64,70,78,124,,,,100,106,,,,24,,36,43,47,51',
'62,65,71,,,,,,101,107,6,10,17,21,30,38,,,52,57,63,69,76,85,86,90,93',
'98,,4,11,,23,29,34,,,,,67,,77,80,,92,96,104,322,8,12,18,22,31,35,41',
',,,79,83,,,,,,,,,,,,,,,,,,,,,,,,,,,,26,32,,45,50,55,58,64,70,78,124',
',,,100,106,,,,24,,36,43,47,51,62,65,71,,,,,,101,107,6,10,17,21,30,38',
',,52,57,63,69,76,85,86,90,93,98,,4,11,,23,29,34,,,,,67,,77,80,,92,96',
'104,322,8,12,18,22,31,35,41,,,,79,83,,,,,,,,,,,,,,,,,,,,,,,,,,,,26,32',
',45,50,55,58,64,70,78,124,,,,100,106,,,,24,,36,43,47,51,62,65,71,,,',
',,101,107,6,10,17,21,30,38,,,52,57,63,69,76,85,86,90,93,98,,4,11,,23',
'29,34,,,,,67,,77,80,,92,96,104,322,8,12,18,22,31,35,41,,,,79,83,,,,',
',,,,,,,,,,,,,,,,,,,,,,,26,32,,45,50,55,58,64,70,78,124,,,,100,106,,',
',24,,36,43,47,51,62,65,71,,,,,,101,107,6,10,17,21,30,38,,,52,57,63,69',
'76,85,86,90,93,98,,4,11,,23,29,34,,,,,67,,77,80,,92,96,104,322,8,12',
'18,22,31,35,41,,,,79,83,,,,,,,,,,,,,,,,,,,,,,,,,,,,26,32,,45,50,55,58',
'64,70,78,124,,,,100,106,,,,24,,36,43,47,51,62,65,71,,,,,,101,107,6,10',
'17,21,30,38,,,52,57,63,69,76,85,86,90,93,98,,4,11,,23,29,34,,,,,67,',
'77,80,,92,96,104,322,8,12,18,22,31,35,41,,,,79,83,,,,,,,,,,,,,,,,,,',
',,,,,,,,,26,32,,45,50,55,58,64,70,78,124,,,,100,106,,,,24,,36,43,47',
'51,62,65,71,,,,,,101,107,6,10,17,21,30,38,,,52,57,63,69,76,85,86,90',
'93,98,,4,11,,23,29,34,,,,,67,,363,80,,92,96,104,322,8,12,18,22,31,35',
'41,,,,79,83,,,,,,,,,,,,,,,,,,,,,,,,,,,,26,32,,45,50,55,58,64,70,78,124',
',,,100,106,,,,24,,36,43,47,51,62,65,71,,,,,,101,107,6,10,17,21,30,38',
',,52,57,63,69,76,85,86,90,93,98,,4,11,,23,29,34,,,,,67,,77,80,,92,96',
'104,322,8,12,18,22,31,35,41,,,,79,83,,,,,,,,,,,,,,,,,,,,,,,,,,,,26,32',
',45,50,55,58,64,70,78,124,,,,100,106,,,,24,,36,43,47,51,62,65,71,,,',
',,101,107,6,10,17,21,30,38,,,52,57,63,69,76,85,86,90,93,98,,4,11,,23',
'29,34,,,,,67,,77,80,,92,96,104,322,8,12,18,22,31,35,41,,,,79,83,,,,',
',,,,,,,,,,,,,,,,,,,,,,,26,32,,45,50,55,58,64,70,78,124,,,,100,106,,',
',24,,36,43,47,51,62,65,71,,,,,,101,107,6,10,17,21,30,38,,,52,57,63,69',
'76,85,86,90,93,98,,4,11,,23,29,34,,,,,67,,363,80,,92,96,104,322,8,12',
'18,22,31,35,41,,,,79,83,,,,,,,,,,,,,,,,,,,,,,,,,,,,26,32,,45,50,55,58',
'64,70,78,124,,,,100,106,,,,24,,36,43,47,51,62,65,71,,,,,,101,107,6,10',
'17,21,30,38,,,52,57,63,69,76,85,86,90,93,98,,4,11,,23,29,34,,,,,67,',
'77,80,,92,96,104,322,8,12,18,22,31,35,41,,,,79,83,,,,,,,,,,,,,,,,,,',
',,,,,,,,,26,32,,45,50,55,58,64,70,78,124,,,,100,106,,,,24,,36,43,47',
'51,62,65,71,,,,,,101,107,6,10,17,21,30,38,,,52,57,63,69,76,85,86,90',
'93,98,,4,11,,23,29,34,,,,,67,,77,80,,92,96,104,322,8,12,18,22,31,35',
'41,,,,79,83,,,,,,,,,,,,,,,,,,,,,,,,,,,,26,32,,45,50,55,58,64,70,78,124',
',,,100,106,,,,24,,36,43,47,51,62,65,71,,,,,,101,107,6,10,17,21,30,38',
',,52,57,63,69,76,85,86,90,93,98,,4,11,,23,29,34,,,,,67,,77,80,,92,96',
'104,322,8,12,18,22,31,35,41,,,,79,83,,,,,,,,,,,,,,,,,,,,,,,,,,,,26,32',
',45,50,55,58,64,70,78,124,,,,100,106,,,,24,,36,43,47,51,62,65,71,,,',
',,101,107,6,10,17,21,30,38,,,52,57,63,69,76,85,86,90,93,98,,4,11,,23',
'29,34,,,,,67,,77,80,,92,96,104,322,8,12,18,22,31,35,41,,,,79,83,,,,',
',,,,,,,,,,,,,,,,,,,,,,,26,32,,45,50,55,58,64,70,78,124,,,,100,106,,',
',24,,36,43,47,51,62,65,71,,,,,,101,107,6,10,17,21,30,38,,,52,57,63,69',
'76,85,86,90,93,98,,4,11,,23,29,34,123,291,,,67,,77,80,,92,96,104,,8',
'12,18,22,31,35,41,,,,,,,,,,283,,,,,,58,64,70,,124,,,,100,106,,,,24,',
'36,43,47,116,117,65,71,,,,,,130,293,282,10,17,21,30,,,,,57,63,69,76',
'85,86,90,93,98,,4,11,,23,29,34,322,,,,374,,121,80,,92,96,79,83,8,12',
'18,22,31,35,41,,,,,,,,,,,609,,,,,,,,,,26,32,,45,50,55,58,64,70,78,124',
',,,100,106,,,,24,,36,43,47,51,62,65,71,,,,,,101,107,6,10,17,21,30,38',
',,52,57,63,69,76,85,86,90,93,98,,4,11,,23,29,34,,,,,67,,363,80,,92,96',
'104,322,8,12,18,22,31,35,41,,,,79,83,,,,,,,,,,,,,,,,,,,,,,,,,,,,26,32',
',45,50,55,58,64,70,78,124,,,,100,106,,,,24,,36,43,47,51,62,65,71,,,',
',,101,107,6,10,17,21,30,38,,,52,57,63,69,76,85,86,90,93,98,,4,11,,23',
'29,34,,,,,67,,77,80,,92,96,104,322,8,12,18,22,31,35,41,,,,79,83,,,,',
',,,,,,,,,,,,,,,,,,,,,,,26,32,,45,50,55,58,64,70,78,124,,,,100,106,,',
',24,,36,43,47,51,62,65,71,,,,,,101,107,6,10,17,21,30,38,,,52,57,63,69',
'76,85,86,90,93,98,,4,11,,23,29,34,,,,,67,,77,80,,92,96,104,322,8,12',
'18,22,31,35,41,,,,79,83,,,,,,,,,,,,,,,,,,,,,,,,,,,,26,32,,45,50,55,58',
'64,70,78,124,,,,100,106,,,,24,,36,43,47,51,62,65,71,,,,,,101,107,6,10',
'17,21,30,38,,,52,57,63,69,76,85,86,90,93,98,,4,11,,23,29,34,,,,,67,',
'77,80,,92,96,104,322,8,12,18,22,31,35,41,,,,79,83,,,,,,,,,,,,,,,,,,',
',,,,,,,,,26,32,,45,50,55,58,64,70,78,124,,,,100,106,,,,24,,36,43,47',
'51,62,65,71,,,,,,101,107,6,10,17,21,30,38,,,52,57,63,69,76,85,86,90',
'93,98,,4,11,,23,29,34,,,,,67,,77,80,,92,96,104,322,8,12,18,22,31,35',
'41,,,,79,83,,,,,,,,,,,,,,,,,,,,,,,,,,,,26,32,,45,50,55,58,64,70,78,124',
',,,100,106,,,,24,,36,43,47,51,62,65,71,,,,,,101,107,6,10,17,21,30,38',
',,52,57,63,69,76,85,86,90,93,98,308,4,11,,23,29,34,,123,291,,67,,77',
'80,,92,96,104,,8,12,18,22,31,35,41,,,,,,,,,,,283,,,,,,58,64,70,,124',
',,,100,106,,,,24,,36,43,47,116,117,65,71,,,,,,130,293,282,10,17,21,30',
',,,,57,63,69,311,85,86,90,313,98,,4,11,,23,29,34,123,83,,,309,,121,80',
',92,96,,,8,12,18,22,31,35,41,,,,,,,,,,26,32,,,50,55,58,64,70,,124,,',
',100,106,,,,24,,36,43,47,116,117,65,71,,,,,,130,107,6,10,17,21,30,,',
',,57,63,69,76,85,86,90,93,98,132,4,11,,23,29,34,123,83,,,119,,121,80',
',92,96,131,134,8,12,18,22,31,35,41,,,,,,,,,,26,32,,,50,55,58,64,70,',
'124,,,,100,106,,,,24,,36,43,47,116,117,65,71,,,,,,130,293,282,10,17',
'21,30,,,,,57,63,69,76,85,86,90,93,98,,4,11,,23,29,34,123,83,,,119,,121',
'80,,92,96,,,8,12,18,22,31,35,41,,,,,,,,,,26,32,,,50,55,58,64,70,,124',
',,,100,106,,,,24,,36,43,47,116,117,65,71,,,,,,130,293,282,10,17,21,30',
',,,,57,63,69,76,85,86,90,93,98,,4,11,,23,29,34,123,83,,,119,,121,80',
',92,96,,,8,12,18,22,31,35,41,,,,,,,,,,26,32,,,50,55,58,64,70,,124,,',
',100,106,,,,24,,36,43,47,116,117,65,71,,,,,,130,293,282,10,17,21,30',
',,,,57,63,69,76,85,86,90,93,98,,4,11,,23,29,34,123,83,,,119,,121,80',
',92,96,,,8,12,18,22,31,35,41,,,,,,,,,,26,32,,,50,55,58,64,70,,124,,',
',100,106,,,,24,,36,43,47,116,117,65,71,,,,,,130,293,282,10,17,21,30',
',,,,57,63,69,76,85,86,90,93,98,,4,11,,23,29,34,123,83,,,119,,121,80',
',92,96,,,8,12,18,22,31,35,41,,,,,,,,,,26,32,,,50,55,58,64,70,,124,,',
',100,106,,,,24,,36,43,47,116,117,65,71,,,,,,130,293,282,10,17,21,30',
',,,,57,63,69,76,85,86,90,93,98,,4,11,,23,29,34,123,83,,,119,,121,80',
',92,96,,,8,12,18,22,31,35,41,,,,,,,,,,26,32,,,50,55,58,64,70,,124,,',
',100,106,,,,24,,36,43,47,116,117,65,71,,,,,,130,293,282,10,17,21,30',
',,,,57,63,69,76,85,86,90,93,98,,4,11,,23,29,34,123,83,,,119,,121,80',
',92,96,,,8,12,18,22,31,35,41,,,,,,,,,,26,32,,,50,55,58,64,70,,124,,',
',100,106,,,,24,,36,43,47,116,117,65,71,,,,,,130,293,282,10,17,21,30',
',,,,57,63,69,76,85,86,90,93,98,,4,11,,23,29,34,123,83,,,119,,121,80',
',92,96,,,8,12,18,22,31,35,41,,,,,,,,,,26,32,,,50,55,58,64,70,,124,,',
',100,106,,,,24,,36,43,47,116,117,65,71,,,,,,130,293,282,10,17,21,30',
',,,,57,63,69,76,85,86,90,93,98,,4,11,,23,29,34,123,83,,,119,,121,80',
',92,96,,,8,12,18,22,31,35,41,,,,,,,,,,26,32,,,50,55,58,64,70,,124,,',
',100,106,,,,24,,36,43,47,116,117,65,71,,,,,,130,293,282,10,17,21,30',
',,,,57,63,69,76,85,86,90,93,98,,4,11,,23,29,34,123,83,,,119,,121,80',
',92,96,,,8,12,18,22,31,35,41,,,,,,,,,,26,32,,,50,55,58,64,70,,124,,',
',100,106,,,,24,,36,43,47,116,117,65,71,,,,,,130,293,282,10,17,21,30',
',,,,57,63,69,76,85,86,90,93,98,,4,11,,23,29,34,123,83,,,119,,121,80',
',92,96,,,8,12,18,22,31,35,41,,,,,,,,,,26,32,,,50,55,58,64,70,,124,,',
',100,106,,,,24,,36,43,47,116,117,65,71,,,,,,130,293,282,10,17,21,30',
',,,,57,63,69,76,85,86,90,93,98,,4,11,,23,29,34,123,83,,,119,,121,80',
',92,96,,,8,12,18,22,31,35,41,,,,,,,,,,26,32,,,50,55,58,64,70,,124,,',
',100,106,,,,24,,36,43,47,116,117,65,71,,,,,,130,293,282,10,17,21,30',
',,,,57,63,69,76,85,86,90,93,98,,4,11,,23,29,34,123,83,,,119,,121,80',
',92,96,,,8,12,18,22,31,35,41,,,,,,,,,,26,32,,,50,55,58,64,70,,124,,',
',100,106,,,,24,,36,43,47,116,117,65,71,,,,,,130,293,282,10,17,21,30',
',,,,57,63,69,76,85,86,90,93,98,,4,11,,23,29,34,123,83,,,119,,121,80',
',92,96,,,8,12,18,22,31,35,41,,,,,,,,,,26,32,,,50,55,58,64,70,,124,,',
',100,106,,,,24,,36,43,47,116,117,65,71,,,,,,130,293,282,10,17,21,30',
',,,,57,63,69,76,85,86,90,93,98,,4,11,,23,29,34,123,83,,,119,,121,80',
',92,96,,,8,12,18,22,31,35,41,,,,,,,,,,26,32,,,50,55,58,64,70,,124,,',
',100,106,,,,24,,36,43,47,116,117,65,71,,,,,,130,293,282,10,17,21,30',
',,,,57,63,69,76,85,86,90,93,98,,4,11,,23,29,34,123,83,,,119,,121,80',
',92,96,,,8,12,18,22,31,35,41,,,,,,,,,,26,32,,,50,55,58,64,70,,124,,',
',100,106,,,,24,,36,43,47,116,117,65,71,,,,,,130,293,282,10,17,21,30',
',,,,57,63,69,76,85,86,90,93,98,,4,11,,23,29,34,123,83,,,119,,121,80',
',92,96,,,8,12,18,22,31,35,41,,,,,,,,,,26,32,,,50,55,58,64,70,,124,,',
',100,106,,,,24,,36,43,47,116,117,65,71,,,,,,130,293,282,10,17,21,30',
',,,,57,63,69,76,85,86,90,93,98,,4,11,,23,29,34,123,83,,,119,,121,80',
',92,96,,,8,12,18,22,31,35,41,,,,,,,,,,26,32,,,50,55,58,64,70,,124,,',
',100,106,,,,24,,36,43,47,116,117,65,71,,,,,,130,293,282,10,17,21,30',
',,,,57,63,69,76,85,86,90,93,98,,4,11,,23,29,34,123,83,,,119,,121,80',
',92,96,,,8,12,18,22,31,35,41,,,,,,,,,,26,32,,,50,55,58,64,70,,124,,',
',100,106,,,,24,,36,43,47,116,117,65,71,,,,,,130,293,282,10,17,21,30',
',,,,57,63,69,76,85,86,90,93,98,,4,11,,23,29,34,123,83,,,119,,121,80',
',92,96,,,8,12,18,22,31,35,41,,,,,,,,,,26,32,,,50,55,58,64,70,,124,,',
',100,106,,,,24,,36,43,47,116,117,65,71,,,,,,130,293,282,10,17,21,30',
',,,,57,63,69,76,85,86,90,93,98,,4,11,,23,29,34,123,291,,,119,,121,80',
',92,96,,,8,12,18,22,31,35,41,,,,,,,,,,283,,,,,,58,64,70,,124,,,,100',
'106,,,,24,,36,43,47,116,117,65,71,,,,,,130,293,282,10,17,21,30,,,,,57',
'63,69,76,85,86,90,93,98,,4,11,,23,29,34,123,83,,,374,,376,80,,92,96',
',,8,12,18,22,31,35,41,,,,,,,,,,26,32,,,50,55,58,64,70,,124,,,,100,106',
',,,24,,36,43,47,116,117,65,71,,,,,,130,293,282,10,17,21,30,,,,,57,63',
'69,76,85,86,90,93,98,,4,11,,23,29,34,123,83,,,119,,121,80,,92,96,,,8',
'12,18,22,31,35,41,,,,,,,,,,26,32,,,50,55,58,64,70,,124,,,,100,106,,',
',24,,36,43,47,116,117,65,71,,,,,,130,293,282,10,17,21,30,,,,,57,63,69',
'76,85,86,90,93,98,,4,11,,23,29,34,123,291,,,119,,121,80,,92,96,,,8,12',
'18,22,31,35,41,,,,,,,,,,283,,,,,,58,64,70,,124,,,,100,106,,,,24,,36',
'43,47,116,117,65,71,,,,,,130,293,282,10,17,21,30,,,,,57,63,69,76,85',
'86,90,93,98,,4,11,,23,29,34,123,83,,,374,,376,80,,92,96,,,8,12,18,22',
'31,35,41,,,,,,,,,,26,32,,,50,55,58,64,70,,124,,,,100,106,,,,24,,36,43',
'47,51,62,65,71,,,,,,101,107,6,10,17,21,30,,,,,57,63,69,76,85,86,90,93',
'98,,4,11,,23,29,34,123,83,,,119,,121,80,,92,96,,,8,12,18,22,31,35,41',
',,,,,,,,,26,32,,,50,55,58,64,70,,124,,,,100,106,,,,24,,36,43,47,51,62',
'65,71,,,,,,101,107,6,10,17,21,30,,,,,57,63,69,76,85,86,90,93,98,,4,11',
',23,29,34,123,83,,,119,,121,80,,92,96,,,8,12,18,22,31,35,41,,,,,,,,',
',26,32,,,50,55,58,64,70,,124,,,,100,106,,,,24,,36,43,47,116,117,65,71',
',,,,,130,293,282,10,17,21,30,,,,,57,63,69,76,85,86,90,93,98,,4,11,,23',
'29,34,123,83,,,119,,121,80,,92,96,,,8,12,18,22,31,35,41,,,,,,,,,,26',
'32,,,50,55,58,64,70,,124,,,,100,106,,,,24,,36,43,47,116,117,65,71,,',
',,,130,293,282,10,17,21,30,,,,,57,63,69,76,85,86,90,93,98,,4,11,,23',
'29,34,123,83,,,119,,121,80,,92,96,,,8,12,18,22,31,35,41,,,,,,,,,,26',
'32,,,50,55,58,64,70,,124,,,,100,106,,,,24,,36,43,47,51,62,65,71,,,,',
',101,107,6,10,17,21,30,,,,,57,63,69,76,85,86,90,93,98,,4,11,,23,29,34',
'123,83,,,119,,121,80,,92,96,,,8,12,18,22,31,35,41,,,,,,,,,,26,32,,,50',
'55,58,64,70,,124,,,,100,106,,,,24,,36,43,47,116,117,65,71,,,,,,130,293',
'282,10,17,21,30,,,,,57,63,69,76,85,86,90,93,98,,4,11,,23,29,34,123,83',
',,119,,121,80,,92,96,,,8,12,18,22,31,35,41,,,,,,,,,,26,32,,,50,55,58',
'64,70,,124,,,,100,106,,,,24,,36,43,47,116,117,65,71,,,,,,130,293,282',
'10,17,21,30,,,,,57,63,69,76,85,86,90,93,98,,4,11,,23,29,34,123,83,,',
'119,,121,80,,92,96,,,8,12,18,22,31,35,41,,,,,,,,,,26,32,,,50,55,58,64',
'70,,124,,,,100,106,,,,24,,36,43,47,116,117,65,71,,,,,,130,293,282,10',
'17,21,30,,,,,57,63,69,76,85,86,90,93,98,,4,11,,23,29,34,123,83,,,119',
',121,80,,92,96,,,8,12,18,22,31,35,41,,,,,,,,,,26,32,,,50,55,58,64,70',
',124,,,,100,106,,,,24,,36,43,47,116,117,65,71,,,,,,130,293,282,10,17',
'21,30,,,,,57,63,69,76,85,86,90,93,98,,4,11,,23,29,34,123,83,,,119,,121',
'80,,92,96,,,8,12,18,22,31,35,41,,,,,,,,,,26,32,,,50,55,58,64,70,,124',
',,,100,106,,,,24,,36,43,47,116,117,65,71,,,,,,130,293,282,10,17,21,30',
',,,,57,63,69,76,85,86,90,93,98,,4,11,,23,29,34,123,83,,,119,,121,80',
',92,96,,,8,12,18,22,31,35,41,,,,,,,,,,26,32,,,50,55,58,64,70,,124,,',
',100,106,,,,24,,36,43,47,116,117,65,71,,,,,,130,293,282,10,17,21,30',
',,,,57,63,69,76,85,86,90,93,98,,4,11,,23,29,34,123,83,,,119,,121,80',
',92,96,,,8,12,18,22,31,35,41,,,,,,,,,,26,32,,,50,55,58,64,70,,124,,',
',100,106,,,,24,,36,43,47,116,117,65,71,,,,,,130,293,282,10,17,21,30',
',,,,57,63,69,76,85,86,90,93,98,,4,11,,23,29,34,79,83,,,119,,121,80,',
'92,96,834,,8,12,18,22,31,35,41,,,,,,,,,,26,32,,45,50,55,58,64,70,,124',
',,,100,106,,,,24,,36,43,47,51,62,65,71,,,,,,101,107,6,10,17,21,30,,',
',,57,63,69,76,85,86,90,93,98,,4,11,,23,29,34,123,83,,,119,,121,80,,92',
'96,,,8,12,18,22,31,35,41,,,,,,,,,,26,32,,,50,55,58,64,70,,124,,,,100',
'106,,,,24,,36,43,47,116,117,65,71,,,,,,130,293,282,10,17,21,30,,,,,57',
'63,69,76,85,86,90,93,98,,4,11,,23,29,34,123,83,,,119,,121,80,,92,96',
',,8,12,18,22,31,35,41,,,,,,,,,,26,32,,,50,55,58,64,70,,124,,,,100,106',
',,,24,,36,43,47,116,117,65,71,,,,,,130,293,282,10,17,21,30,,,,,57,63',
'69,76,85,86,90,93,98,,4,11,,23,29,34,123,83,,,119,,121,80,,92,96,,,8',
'12,18,22,31,35,41,,,,,,,,,,26,32,,,50,55,58,64,70,,124,,,,100,106,,',
',24,,36,43,47,116,117,65,71,,,,,,130,293,282,10,17,21,30,,,,,57,63,69',
'76,85,86,90,93,98,132,4,11,,23,29,34,123,83,,,119,,121,80,,92,96,,134',
'8,12,18,22,31,35,41,,,,,,,,,,26,32,,,50,55,58,64,70,,124,,,,100,106',
',,,24,,36,43,47,116,117,65,71,,,,,,130,293,282,10,17,21,30,,,,,57,63',
'69,76,85,86,90,93,98,132,4,11,,23,29,34,123,83,,,119,,121,80,,92,96',
'643,134,8,12,18,22,31,35,41,,,,,,,,,,26,32,,,50,55,58,64,70,,124,,,',
'100,106,,,,24,,36,43,47,116,117,65,71,,,,,,130,293,282,10,17,21,30,',
',,,57,63,69,76,85,86,90,93,98,,4,11,,23,29,34,79,83,,,119,,121,80,,92',
'96,555,,8,12,18,22,31,35,41,,,,,,,,,,26,32,,45,50,55,58,64,70,,124,',
',,100,106,,,,24,,36,43,47,51,62,65,71,,,,,,101,107,6,10,17,21,30,,,',
',57,63,69,76,85,86,90,93,98,,4,11,,23,29,34,123,83,,,119,,121,80,,92',
'96,,,8,12,18,22,31,35,41,,,,,,,,,,26,32,,,50,55,58,64,70,,124,,,,100',
'106,,,,24,,36,43,47,116,117,65,71,,,,,,130,293,282,10,17,21,30,,,,,57',
'63,69,76,85,86,90,93,98,,4,11,,23,29,34,123,83,,,119,,121,80,,92,96',
'643,,8,12,18,22,31,35,41,,,,,,,,,,26,32,,,50,55,58,64,70,,124,,,,100',
'106,,,,24,,36,43,47,116,117,65,71,,,,,,130,293,282,10,17,21,30,,,,,57',
'63,69,76,85,86,90,93,98,,4,11,,23,29,34,123,83,,,119,,121,80,,92,96',
',,8,12,18,22,31,35,41,,,,,,,,,,26,32,,,50,55,58,64,70,,124,,,,100,106',
',,,24,,36,43,47,116,117,65,71,,,,,,130,107,6,10,17,21,30,,,,,57,63,69',
'76,85,86,90,93,98,132,4,11,,23,29,34,123,291,,,119,,121,80,,92,96,131',
'134,8,12,18,22,31,35,41,,,,,,,,,,283,,,,,,58,64,70,,124,,,,100,106,',
',,24,,36,43,47,116,117,65,71,,,,,,130,293,282,10,17,21,30,,,,,57,63',
'69,76,85,86,90,93,98,,4,11,,23,29,34,123,83,,,320,,121,80,,92,96,,,8',
'12,18,22,31,35,41,,,,,,,,,,26,32,,,50,55,58,64,70,,124,,,,100,106,,',
',24,,36,43,47,116,117,65,71,,,,,,130,293,282,10,17,21,30,,,,,57,63,69',
'76,85,86,90,93,98,,4,11,,23,29,34,123,83,,,119,,121,80,,92,96,,,8,12',
'18,22,31,35,41,,,,,,,,,,26,32,,,50,55,58,64,70,,124,,,,100,106,,,,24',
',36,43,47,116,117,65,71,,,,,,130,293,282,10,17,21,30,,,,,57,63,69,76',
'85,86,90,93,98,,4,11,,23,29,34,123,83,,,119,,121,80,,92,96,,,8,12,18',
'22,31,35,41,,,,,,,,,,26,32,,,50,55,58,64,70,,124,,,,100,106,,,,24,,36',
'43,47,116,117,65,71,,,,,,130,293,282,10,17,21,30,,,,,57,63,69,76,85',
'86,90,93,98,,4,11,,23,29,34,123,83,,,119,,121,80,,92,96,,,8,12,18,22',
'31,35,41,,,,,,,,,,26,32,,,50,55,58,64,70,,124,,,,100,106,,,,24,,36,43',
'47,116,117,65,71,,,,,,130,293,282,10,17,21,30,,,,,57,63,69,76,85,86',
'90,93,98,,4,11,,23,29,34,123,83,,,119,,121,80,,92,96,,,8,12,18,22,31',
'35,41,,,,,,,,,,26,32,,,50,55,58,64,70,,124,,,,100,106,,,,24,,36,43,47',
'116,117,65,71,,,,,,130,293,282,10,17,21,30,,,,,57,63,69,76,85,86,90',
'93,98,,4,11,,23,29,34,123,83,,,119,,121,80,,92,96,,,8,12,18,22,31,35',
'41,,,,,,,,,,26,32,,,50,55,58,64,70,,124,,,,100,106,,,,24,,36,43,47,116',
'117,65,71,,,,,,130,107,6,10,17,21,30,,,,,57,63,69,76,85,86,90,93,98',
'132,4,11,,23,29,34,79,83,,,119,,121,80,,92,96,131,134,8,12,18,22,31',
'35,41,,,,,,,,,,26,32,,45,50,55,58,64,70,78,124,,,,100,106,,,,24,,36',
'43,47,51,62,65,71,,,,,,101,107,6,10,17,21,30,38,,,52,57,63,69,76,85',
'86,90,93,98,,4,11,,23,29,34,123,291,,,67,,77,80,,92,96,104,,8,12,18',
'22,31,35,41,,,,,,,,,,283,,,,,,58,64,70,,124,,,,100,106,,,,24,,36,43',
'47,116,117,65,71,,,,,,130,293,282,10,17,21,30,,,,,57,63,69,76,85,86',
'90,93,98,,4,11,,23,29,34,123,83,,,374,,376,80,,92,96,,,8,12,18,22,31',
'35,41,,,,,,,,,,26,32,,,50,55,58,64,70,,124,,,,100,106,,,,24,,36,43,47',
'116,117,65,71,,,,,,130,293,282,10,17,21,30,,,,,57,63,69,76,85,86,90',
'93,98,,4,11,,23,29,34,79,83,,,119,,121,80,,92,96,131,,8,12,18,22,31',
'35,41,,,,,,,,,,26,32,,45,50,55,58,64,70,,124,,,,100,106,,,,24,,36,43',
'47,51,62,65,71,,,,,,101,107,6,10,17,21,30,,,,,57,63,69,76,85,86,90,93',
'98,,4,11,,23,29,34,79,83,,,119,,121,80,,92,96,,,8,12,18,22,31,35,41',
',,,,,,,,,26,32,,45,50,55,58,64,70,,124,,,,100,106,,,,24,,36,43,47,51',
'62,65,71,,,,,,101,107,6,10,17,21,30,,,,,57,63,69,76,85,86,90,93,98,',
'4,11,,23,29,34,123,83,,,119,,121,80,,92,96,,,8,12,18,22,31,35,41,,,',
',,,,,,26,32,,,50,55,58,64,70,,124,,,,100,106,,,,24,,36,43,47,51,62,65',
'71,,,,,,101,107,6,10,17,21,30,,,,,57,63,69,76,85,86,90,93,98,,4,11,',
'23,29,34,123,291,,,119,,121,80,,92,96,555,,8,12,18,22,31,35,41,,,,,',
',,,,283,,,,,,58,64,70,,124,,,,100,106,,,,24,,36,43,47,116,117,65,71',
',,,,,130,293,282,10,17,21,30,,,,,57,63,69,76,85,86,90,93,98,,4,11,,23',
'29,34,123,83,,,887,,121,80,,92,96,,,8,12,18,22,31,35,41,,,,,,,,,,26',
'32,,,50,55,58,64,70,,124,,,,100,106,,,,24,,36,43,47,116,117,65,71,,',
',,,130,293,282,10,17,21,30,,,,,57,63,69,76,85,86,90,93,98,,4,11,,23',
'29,34,123,83,,,119,,121,80,,92,96,,,8,12,18,22,31,35,41,,,,,,,,,,26',
'32,,,50,55,58,64,70,,124,,,,100,106,,,,24,,36,43,47,116,117,65,71,,',
',,,130,293,282,10,17,21,30,,,,,57,63,69,76,85,86,90,93,98,,4,11,,23',
'29,34,123,83,,,119,,121,80,,92,96,,,8,12,18,22,31,35,41,,,,,,,,,,26',
'32,,,50,55,58,64,70,,124,,,,100,106,,,,24,,36,43,47,116,117,65,71,,',
',,,130,293,282,10,17,21,30,,,,,57,63,69,76,85,86,90,93,98,,4,11,,23',
'29,34,123,83,,,119,,121,80,,92,96,,,8,12,18,22,31,35,41,,,,,,,,,,26',
'32,,,50,55,58,64,70,,124,,,,100,106,,,,24,,36,43,47,51,62,65,71,,,,',
',101,107,6,10,17,21,30,,,,,57,63,69,76,85,86,90,93,98,,4,11,,23,29,34',
'79,83,,,119,,121,80,,92,96,555,,8,12,18,22,31,35,41,,,,,,,,,,26,32,',
'45,50,55,58,64,70,,124,,,,100,106,,,,24,,36,43,47,51,62,65,71,,,,,,101',
'107,6,10,17,21,30,,,,,57,63,69,76,85,86,90,93,98,,4,11,,23,29,34,123',
'83,,,119,,121,80,,92,96,,,8,12,18,22,31,35,41,,,,,,,,,,26,32,,,50,55',
'58,64,70,,124,,,,100,106,,,,24,,36,43,47,116,117,65,71,,,,,,130,293',
'282,10,17,21,30,,,,,57,63,69,76,85,86,90,93,98,,4,11,,23,29,34,79,83',
',,119,,121,80,,92,96,,,8,12,18,22,31,35,41,,,,,,,,,,26,32,,45,50,55',
'58,64,70,,124,,,,100,106,,,,24,,36,43,47,51,62,65,71,,,,,,101,107,6',
'10,17,21,30,,,,,57,63,69,76,85,86,90,93,98,,4,11,,23,29,34,123,83,,',
'119,,121,80,,92,96,,,8,12,18,22,31,35,41,,,,,,,,,,26,32,,,50,55,58,64',
'70,,124,,,,100,106,,,,24,,36,43,47,116,117,65,71,,,,,,130,107,6,10,17',
'21,30,,,,,57,63,69,76,85,86,90,93,98,132,4,11,,23,29,34,123,83,,,119',
',121,80,,92,96,131,134,8,12,18,22,31,35,41,,,,,,,,,,26,32,,,50,55,58',
'64,70,,124,,,,100,106,,,,24,,36,43,47,51,62,65,71,,,,,,101,107,6,10',
'17,21,30,,,,,57,63,69,76,85,86,90,93,98,,4,11,,23,29,34,123,291,,,119',
',121,80,,92,96,,,8,12,18,22,31,35,41,,,,,,,,,,283,,,,,,58,64,70,,124',
',,,100,106,,,,24,,36,43,47,116,117,65,71,,,,,,130,293,282,10,17,21,30',
',,,,57,63,69,76,85,86,90,93,98,,4,11,,23,29,34,79,83,,,374,,376,80,',
'92,96,,,8,12,18,22,31,35,41,,,,,,,,,,26,32,,45,50,55,58,64,70,,124,',
',,100,106,,,,24,,36,43,47,51,62,65,71,,,,,,101,107,6,10,17,21,30,,,',
',57,63,69,76,85,86,90,93,98,,4,11,,23,29,34,79,83,,,119,,121,80,,92',
'96,,,8,12,18,22,31,35,41,,,,,,,,,,26,32,,45,50,55,58,64,70,,124,,,,100',
'106,,,,24,,36,43,47,51,62,65,71,,,,,,101,107,6,10,17,21,30,,,,,57,63',
'69,76,85,86,90,93,98,,4,11,,23,29,34,123,83,,,119,,121,80,,92,96,,,8',
'12,18,22,31,35,41,,,,,,,,,,26,32,,,50,55,58,64,70,,124,,,,100,106,,',
',24,,36,43,47,116,117,65,71,,,,,,130,293,282,10,17,21,30,,,,,57,63,69',
'76,85,86,90,93,98,132,4,11,,23,29,34,123,83,,,119,,121,80,,92,96,,,8',
'12,18,22,31,35,41,,,,,,,,,,26,32,,,50,55,58,64,70,,124,,,,100,106,,',
',24,,36,43,47,116,117,65,71,,,,,,130,293,282,10,17,21,30,,,,,57,63,69',
'76,85,86,90,93,98,132,4,11,,23,29,34,123,291,,,119,,121,80,,92,96,643',
',8,12,18,22,31,35,41,,,,,,,,,,283,,,,,,58,64,70,,124,,,,100,106,,,,24',
',36,43,47,116,117,65,71,,,,,,130,293,282,10,17,21,30,,,,,57,63,69,76',
'85,86,90,93,98,,4,11,,23,29,34,123,83,,,374,,376,80,,92,96,,,8,12,18',
'22,31,35,41,,,,,,,,,,26,32,,,50,55,58,64,70,,124,,,,100,106,,,,24,,36',
'43,47,116,117,65,71,,,,,,130,107,6,10,17,21,30,,,,,57,63,69,76,85,86',
'90,93,98,132,4,11,,23,29,34,123,83,,,119,,121,80,,92,96,131,134,8,12',
'18,22,31,35,41,,,,,,,,,,26,32,,,50,55,58,64,70,,124,,,,100,106,,,,24',
',36,43,47,51,62,65,71,,,,,,101,107,6,10,17,21,30,,,,,57,63,69,76,85',
'86,90,93,98,,4,11,,23,29,34,123,83,,,119,,121,80,,92,96,,,8,12,18,22',
'31,35,41,,,,,,,,,,26,32,,,50,55,58,64,70,,124,,,,100,106,,,,24,,36,43',
'47,116,117,65,71,,,,,,130,293,282,10,17,21,30,,,,,57,63,69,76,85,86',
'90,93,98,132,4,11,,23,29,34,123,83,,,119,,121,80,,92,96,,,8,12,18,22',
'31,35,41,,,,,,,,,,26,32,,,50,55,58,64,70,,124,,,,100,106,,,,24,,36,43',
'47,116,117,65,71,,,,,,130,107,6,10,17,21,30,,,,,57,63,69,76,85,86,90',
'93,98,132,4,11,,23,29,34,79,83,,,119,,121,80,,92,96,131,134,8,12,18',
'22,31,35,41,,,,,,,,,,26,32,,45,50,55,58,64,70,,124,,,,100,106,,,,24',
',36,43,47,51,62,65,71,,,,,,101,107,6,10,17,21,30,,,,,57,63,69,76,85',
'86,90,93,98,,4,11,,23,29,34,123,83,,,119,,121,80,,92,96,,,8,12,18,22',
'31,35,41,,,,,,,,,,26,32,,,50,55,58,64,70,,124,,,,100,106,,,,24,,36,43',
'47,116,117,65,71,,,,,,130,293,282,10,17,21,30,,,,,57,63,69,76,85,86',
'90,93,98,132,4,11,,23,29,34,123,83,,,119,,121,80,,92,96,131,,8,12,18',
'22,31,35,41,,,,,,,,,,26,32,,,50,55,58,64,70,,124,,,,100,106,,,,24,,36',
'43,47,116,117,65,71,,,,,,130,293,282,10,17,21,30,,,,,57,63,69,76,85',
'86,90,93,98,,4,11,,23,29,34,123,83,,,119,,121,80,,92,96,,,8,12,18,22',
'31,35,41,,,,,,,,,,26,32,,,50,55,58,64,70,,124,,,,100,106,,,,24,,36,43',
'47,116,117,65,71,,,,,,130,293,282,10,17,21,30,,,,,57,63,69,76,85,86',
'90,93,98,,4,11,,23,29,34,123,291,,,119,,121,80,,92,96,,,8,12,18,22,31',
'35,41,,,,,,,,,,283,,,,,,58,64,70,,124,,,,100,106,,,,24,,36,43,47,116',
'117,65,71,,,,,,130,293,282,10,17,21,30,,,,,57,63,69,76,85,86,90,93,98',
',4,11,,23,29,34,79,83,,,374,,376,80,,92,96,379,,8,12,18,22,31,35,41',
',,,,,,,,,26,32,,45,50,55,58,64,70,,124,,,,100,106,,,,24,,36,43,47,51',
'62,65,71,,,,,,101,107,6,10,17,21,30,,,,,57,63,69,76,85,86,90,93,98,',
'4,11,,23,29,34,79,83,,,119,,121,80,,92,96,,,8,12,18,22,31,35,41,,,,',
',,,,,26,32,,45,50,55,58,64,70,,124,,,,100,106,,,,24,,36,43,47,51,62',
'65,71,,,,,,101,107,6,10,17,21,30,,,,,57,63,69,76,85,86,90,93,98,,4,11',
',23,29,34,79,83,,,119,,121,80,,92,96,,,8,12,18,22,31,35,41,,,,,,,,,',
'26,32,,45,50,55,58,64,70,,124,,,,100,106,,,,24,,36,43,47,51,62,65,71',
',,,,,101,107,6,10,17,21,30,,,,,57,63,69,76,85,86,90,93,98,,4,11,,23',
'29,34,123,83,,,119,,121,80,,92,96,,,8,12,18,22,31,35,41,,,,,,,,,,26',
'32,,,50,55,58,64,70,,124,,,,100,106,,,,24,,36,43,47,116,117,65,71,,',
',,,130,293,282,10,17,21,30,,,,,57,63,69,76,85,86,90,93,98,,4,11,,23',
'29,34,123,83,,,119,,121,80,,92,96,,,8,12,18,22,31,35,41,,,,,,,,,,26',
'32,,,50,55,58,64,70,,124,,,,100,106,,,,24,,36,43,47,116,117,65,71,,',
',,,130,107,6,10,17,21,30,,,,,57,63,69,76,85,86,90,93,98,132,4,11,,23',
'29,34,123,83,,,119,,121,80,,92,96,131,134,8,12,18,22,31,35,41,,,,,,',
',,,26,32,,,50,55,58,64,70,,124,,,,100,106,,,,24,,36,43,47,116,117,65',
'71,,,,,,130,107,6,10,17,21,30,,,,,57,63,69,76,85,86,90,93,98,132,4,11',
',23,29,34,123,83,,,119,,121,80,,92,96,131,134,8,12,18,22,31,35,41,,',
',,,,,,,26,32,,,50,55,58,64,70,,124,,,,100,106,,,,24,,36,43,47,116,117',
'65,71,,,,,,130,293,282,10,17,21,30,,,,,57,63,69,76,85,86,90,93,98,,4',
'11,,23,29,34,79,83,,,119,,121,80,,92,96,,,8,12,18,22,31,35,41,,,,,,',
',,,26,32,,45,50,55,58,64,70,,124,,,,100,106,,,,24,,36,43,47,51,62,65',
'71,,,,,,101,107,6,10,17,21,30,,,,,57,63,69,76,85,86,90,93,98,,4,11,',
'23,29,34,123,291,,,119,,121,80,,92,96,,,8,12,18,22,31,35,41,,,,,,,,',
',283,,,,,,58,64,70,,124,,,,100,106,,,,24,,36,43,47,116,117,65,71,,,',
',,130,293,282,10,17,21,30,,,,,57,63,69,311,85,86,90,313,98,,4,11,,23',
'29,34,123,83,,,309,,121,80,,92,96,,,8,12,18,22,31,35,41,,,,,,,,,,26',
'32,,,50,55,58,64,70,,124,,,,100,106,,,,24,,36,43,47,116,117,65,71,,',
',,,130,107,6,10,17,21,30,,,,,57,63,69,76,85,86,90,93,98,132,4,11,,23',
'29,34,79,83,,,119,,121,80,,92,96,131,134,8,12,18,22,31,35,41,,,,,,,',
',,26,32,,45,50,55,58,64,70,,124,,,,100,106,,,,24,,36,43,47,51,62,65',
'71,,,,,,101,107,6,10,17,21,30,,,,,57,63,69,76,85,86,90,93,98,,4,11,',
'23,29,34,123,83,,,119,,121,80,,92,96,,,8,12,18,22,31,35,41,,,,,,,,,',
'26,32,,,50,55,58,64,70,,124,,,,100,106,,,,24,,36,43,47,116,117,65,71',
',,,,,130,107,6,10,17,21,30,,,,,57,63,69,76,85,86,90,93,98,132,4,11,',
'23,29,34,123,83,,,119,,121,80,,92,96,131,134,8,12,18,22,31,35,41,,,',
',,,,,,26,32,,,50,55,58,64,70,,124,,,,100,106,,,,24,,36,43,47,116,117',
'65,71,,,,,,130,293,282,10,17,21,30,,,,,57,63,69,76,85,86,90,93,98,,4',
'11,,23,29,34,123,291,,,119,,121,80,,92,96,,,8,12,18,22,31,35,41,,,,',
',,,,,283,,,,,,58,64,70,,124,,,,100,106,,,,24,,36,43,47,51,62,65,71,',
',,,,101,107,6,10,17,21,30,,,,,57,63,69,76,85,86,90,93,98,,4,11,,23,29',
'34,123,83,,,320,,121,80,,92,96,,,8,12,18,22,31,35,41,,,,,,,,,,26,32',
',,50,55,58,64,70,,124,,,,100,106,,,,24,,36,43,47,116,117,65,71,,,,,',
'130,293,282,10,17,21,30,,,,,57,63,69,76,85,86,90,93,98,,4,11,,23,29',
'34,123,291,,,119,,121,80,,92,96,,,8,12,18,22,31,35,41,,,,,,,,,,283,',
',,,,58,64,70,,124,,,,100,106,,,,24,,36,43,47,116,117,65,71,,,,,,130',
'293,282,10,17,21,30,,,,,57,63,69,76,85,86,90,93,98,,4,11,,23,29,34,79',
'83,,,288,,77,80,,92,96,104,,8,12,18,22,31,35,41,,,,,,,,,,26,32,,45,50',
'55,58,64,70,,124,,,,100,106,,,,24,,36,43,47,51,62,65,71,,,,,,101,107',
'6,10,17,21,30,,,,,57,63,69,76,85,86,90,93,98,,4,11,,23,29,34,123,83',
',,119,,121,80,,92,96,,,8,12,18,22,31,35,41,,,,,,,,,,26,32,,,50,55,58',
'64,70,,124,,,,100,106,,,,24,,36,43,47,116,117,65,71,,,,,,130,293,282',
'10,17,21,30,,,,,57,63,69,76,85,86,90,93,98,,4,11,,23,29,34,123,83,,',
'119,,121,80,,92,96,,,8,12,18,22,31,35,41,,,,,,,,,,26,32,,,50,55,58,64',
'70,,124,,,,100,106,,,,24,,36,43,47,51,62,65,71,,,,,,101,107,6,10,17',
'21,30,,,,,57,63,69,76,85,86,90,93,98,,4,11,,23,29,34,79,83,,,119,,121',
'80,,92,96,,,8,12,18,22,31,35,41,,,,,,,,,,26,32,,45,50,55,58,64,70,78',
'81,,,,100,106,,,,24,,36,43,47,51,62,65,71,,,,,,101,107,6,10,17,21,30',
'38,,,52,57,63,69,76,85,86,90,93,98,,4,11,,23,29,34,123,83,,,67,,77,80',
',92,96,104,,8,12,18,22,31,35,41,,,,,,,,,,26,32,,,50,55,58,64,70,,124',
',,,100,106,,,,24,,36,43,47,116,117,65,71,,,,,,130,293,282,10,17,21,30',
',,,,57,63,69,76,85,86,90,93,98,,4,11,,23,29,34,79,83,,,119,,121,80,',
'92,96,,,8,12,18,22,31,35,41,,,,,,,,,,26,32,,45,50,55,58,64,70,,124,',
',,100,106,,,,24,,36,43,47,51,62,65,71,,,,,,101,107,6,10,17,21,30,,,',
',57,63,69,76,85,86,90,93,98,,4,11,,23,29,34,79,83,,,119,,121,80,,92',
'96,,,8,12,18,22,31,35,41,,,,,,,,,,26,32,,45,50,55,58,64,70,78,124,,',
',100,106,,,,24,,36,43,47,51,62,65,71,,,,,,101,107,6,10,17,21,30,38,',
',52,57,63,69,76,85,86,90,93,98,,4,11,,23,29,34,79,83,,,67,,77,80,,92',
'96,104,,8,12,18,22,31,35,41,,,,,,,,,,26,32,,45,50,55,58,64,70,,124,',
',,100,106,,,,24,,36,43,47,51,62,65,71,,,,,,101,107,6,10,17,21,30,,,',
',57,63,69,76,85,86,90,93,98,,4,11,,23,29,34,79,83,,,119,,121,80,,92',
'96,,,8,12,18,22,31,35,41,,,,,,,,,,26,32,,45,50,55,58,64,70,,124,,,,100',
'106,,,,24,,36,43,47,51,62,65,71,,,,,,101,107,6,10,17,21,30,,,,,57,63',
'69,76,85,86,90,93,98,,4,11,,23,29,34,123,83,,,119,,121,80,,92,96,,,8',
'12,18,22,31,35,41,,,,,,,,,,26,32,,,50,55,58,64,70,,124,,,,100,106,,',
',24,,36,43,47,116,117,65,71,,,,,,130,293,282,10,17,21,30,,,,,57,63,69',
'76,85,86,90,93,98,,4,11,,23,29,34,,,,,119,,121,80,,92,96,,,8,12,18,22',
'31,35,41' ]
        racc_action_table = arr = Array.new(18449, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'578,81,764,75,578,578,578,578,578,578,578,578,307,887,578,578,578,578',
'754,578,578,578,578,578,578,578,578,578,578,578,578,578,578,578,578',
'578,578,578,578,578,578,139,307,578,561,561,371,371,594,594,758,758',
'578,578,578,523,523,764,578,578,75,578,575,89,89,935,575,575,575,575',
'575,575,575,575,550,550,575,575,575,575,700,575,575,575,575,575,575',
'575,575,575,575,575,575,575,575,575,575,575,575,575,575,575,575,676',
'578,575,898,681,503,820,159,689,289,151,575,575,575,698,765,764,575',
'575,764,575,585,585,764,343,578,578,578,578,575,139,578,754,578,81,578',
'81,79,935,700,292,935,79,935,307,688,307,309,748,748,343,309,827,686',
'108,108,350,350,583,583,159,151,939,575,320,948,289,503,820,561,765',
'371,289,594,676,758,698,89,523,676,523,676,898,294,898,159,575,575,575',
'575,575,478,478,575,769,575,681,575,550,392,938,769,292,719,478,478',
'478,478,478,373,478,478,478,478,478,478,478,478,478,478,478,478,478',
'478,478,478,478,478,358,358,478,827,765,827,720,765,815,693,585,765',
'719,939,398,939,948,294,948,358,358,358,358,358,358,358,358,358,358',
'358,358,358,358,358,358,358,358,748,358,358,358,358,358,108,354,350',
'719,583,136,318,392,938,392,938,694,695,354,696,279,685,373,815,373',
'815,815,815,815,815,526,719,290,719,719,719,693,318,693,720,719,398',
'815,398,279,279,358,358,815,279,358,618,618,618,618,526,526,290,290',
'478,358,358,275,336,720,720,720,283,283,491,358,720,491,510,510,136',
'8,136,694,8,694,696,244,696,244,857,275,275,275,336,358,358,510,510',
'510,510,510,510,510,510,510,510,510,510,510,510,510,510,510,510,945',
'510,510,510,510,510,873,345,873,857,598,598,491,342,491,491,491,491',
'491,8,311,8,8,8,8,8,346,598,598,697,353,491,857,345,857,857,491,491',
'8,342,305,710,353,8,8,759,759,510,510,305,305,510,346,945,311,945,945',
'945,945,945,491,510,510,344,8,738,710,710,738,276,710,510,945,337,603',
'603,337,311,945,311,311,276,800,311,800,800,800,800,800,344,317,510',
'510,603,603,603,603,603,603,603,603,603,603,603,603,603,603,603,603',
'603,603,919,603,603,603,603,603,706,738,706,738,738,738,738,738,800',
'337,762,337,337,337,337,337,484,484,572,512,738,563,519,563,519,738',
'738,699,337,484,572,484,484,337,337,762,762,380,40,762,684,603,603,512',
'512,603,738,919,377,919,919,919,919,919,337,603,603,321,811,512,705',
'811,380,380,40,603,919,813,912,912,813,683,919,377,377,449,326,449,449',
'449,449,449,321,321,680,603,603,912,912,912,912,912,912,912,912,912',
'912,912,912,912,912,912,912,912,912,905,912,912,912,912,912,811,936',
'811,811,811,811,811,449,327,813,310,813,813,813,813,813,395,278,120',
'811,708,103,103,395,811,811,936,936,813,278,936,338,384,813,813,310',
'310,297,347,384,711,912,912,120,120,912,299,905,922,905,905,905,905',
'905,708,912,912,338,562,851,851,562,297,297,347,912,905,142,541,541',
'142,386,905,922,922,848,848,708,386,708,708,675,19,708,19,912,912,541',
'541,541,541,541,541,541,541,541,541,541,541,541,541,541,541,541,541',
'783,541,541,541,541,541,562,72,562,562,562,562,562,740,740,142,340,142',
'142,142,142,142,845,845,602,562,761,323,669,323,562,562,72,72,142,723',
'74,339,74,142,142,295,340,375,725,295,668,541,541,602,602,541,728,783',
'890,783,783,783,783,783,761,541,541,339,433,295,295,433,375,375,665',
'541,783,914,540,540,914,663,783,890,890,842,842,761,731,761,761,838',
'838,761,735,541,541,540,540,540,540,540,540,540,540,540,540,540,540',
'540,540,540,540,540,540,785,540,540,540,540,540,433,889,433,433,433',
'433,433,568,568,914,888,914,914,914,914,914,486,486,876,433,313,832',
'832,737,433,433,889,889,914,486,293,486,486,914,914,888,888,291,298',
'639,639,540,540,876,876,540,661,785,56,785,785,785,785,785,313,540,540',
'659,440,412,412,440,298,298,298,540,785,916,605,605,896,896,785,56,56',
'776,776,313,742,313,313,595,595,313,743,540,540,605,605,605,605,605',
'605,605,605,605,605,605,605,605,605,605,605,605,605,445,605,605,605',
'605,605,440,288,440,440,440,440,440,170,745,916,284,916,916,916,916',
'916,658,455,455,440,455,749,875,875,440,440,455,455,916,26,26,170,170',
'170,916,875,126,126,282,875,875,605,605,635,635,605,751,445,281,445',
'445,445,445,445,280,605,605,161,796,161,161,161,161,161,657,605,445',
'794,415,415,794,656,445,941,941,865,161,865,865,865,865,161,135,135',
'652,605,605,415,415,415,415,415,415,415,415,415,415,415,415,415,415',
'415,415,415,415,651,415,415,415,415,415,796,763,796,796,796,796,796',
'137,137,794,647,794,794,794,794,794,468,468,642,796,94,94,94,94,252',
'796,610,610,794,468,94,468,468,794,794,468,468,468,468,468,468,415,415',
'768,666,415,666,666,666,666,666,482,482,640,640,415,415,655,641,655',
'655,655,655,666,482,415,482,482,356,356,482,482,482,482,482,482,482',
'482,482,482,482,482,482,482,482,415,415,356,356,356,356,356,356,356',
'356,356,356,356,356,356,356,356,356,356,356,770,356,356,356,356,356',
'692,692,721,721,721,721,771,542,542,542,542,772,721,692,249,692,692',
'542,247,692,692,692,692,692,692,692,692,692,692,692,692,692,692,692',
'692,692,692,638,246,692,632,356,356,631,872,356,872,872,872,872,872',
'477,477,608,787,356,356,160,155,606,799,154,152,872,477,356,477,477',
'509,509,477,477,477,477,477,477,477,477,477,477,477,477,477,477,477',
'356,356,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509',
'509,509,509,140,509,509,509,509,509,691,691,325,325,325,325,351,601',
'809,129,362,125,325,691,123,691,691,122,823,691,691,691,691,691,691',
'691,691,691,691,691,691,691,691,691,691,691,691,364,119,691,118,509',
'509,365,798,509,798,798,798,798,798,480,480,833,114,509,509,109,590',
'839,589,588,105,798,480,509,480,480,529,529,480,480,480,480,480,480',
'480,480,480,480,480,480,480,480,480,509,509,529,529,529,529,529,529',
'529,529,529,529,529,529,529,529,529,529,529,529,367,529,529,529,529',
'529,14,14,374,582,855,378,858,860,91,864,383,866,867,14,868,14,14,14',
'14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,869,393,14',
'871,529,529,396,870,529,870,870,870,870,870,474,474,401,408,529,529',
'560,878,879,881,882,883,870,474,529,474,474,504,504,474,474,474,474',
'474,474,474,474,474,474,474,474,474,884,690,529,529,504,504,504,504',
'504,504,504,504,504,504,504,504,504,504,504,504,504,504,557,504,504',
'504,504,504,329,329,556,430,83,893,894,552,434,549,443,908,446,329,67',
'329,329,66,60,329,329,329,329,329,329,329,329,329,329,329,329,329,329',
'329,329,329,329,448,450,329,52,504,504,49,907,504,907,907,907,907,907',
'471,471,926,41,504,504,929,930,931,932,933,934,907,471,504,471,471,413',
'413,471,471,471,471,471,471,471,471,471,471,471,471,471,538,451,504',
'504,413,413,413,413,413,413,413,413,413,413,413,413,413,413,413,413',
'413,413,937,413,413,413,413,413,333,333,35,459,461,507,2,950,,,,,,333',
',333,333,,,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333',
'333,333,333,,,333,,413,413,,,413,,,,,,469,469,,,413,413,,,,,,,,469,413',
'469,469,506,506,469,469,469,469,469,469,469,469,469,469,469,469,,,,413',
'413,506,506,506,506,506,506,506,506,506,506,506,506,506,506,506,506',
'506,506,,506,506,506,506,506,111,111,,,,,,,,,,,,111,,111,111,111,111',
'111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111',
'111,,,111,,506,506,,,506,,452,,452,452,452,452,452,,506,506,,,,,,,,',
'506,452,,61,61,,452,,,61,61,61,61,,,,,,,,506,506,61,61,61,61,61,61,61',
'61,61,61,61,61,61,61,61,61,61,61,,61,61,61,61,61,61,61,61,61,61,61,61',
'61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,,,,61,61,61,61,61',
'61,61,61,,,,61,61,61,61,61,61,61,61,61,,,,,463,463,,,61,61,,,,,,,,463',
'61,463,463,925,925,463,463,463,463,463,463,463,463,463,463,,,,,,61,61',
'925,925,925,925,925,925,925,925,925,925,925,925,925,925,925,925,925',
'925,,925,925,925,925,925,488,488,,,,,,,,,,,,488,,488,488,,,488,488,488',
'488,488,488,488,488,488,488,488,488,488,488,488,488,488,488,,,488,,925',
'925,,,925,,,,,,466,466,,,925,925,,,,,,,,466,925,466,466,923,923,466',
'466,466,466,466,466,466,466,466,466,,,,,,925,925,923,923,923,923,923',
'923,923,923,923,923,923,923,923,923,923,923,923,923,,923,923,923,923',
'923,296,296,,,,,,,,,,,,296,,296,296,,,296,296,296,296,296,296,296,296',
'296,296,296,296,296,296,296,296,296,296,,470,470,,923,923,,,923,,,,',
',470,,470,470,923,923,470,470,470,470,470,470,678,678,923,,,527,527',
',,,,,,678,,678,678,,678,,,,923,923,527,527,527,527,527,527,527,527,527',
'527,527,527,527,527,527,527,527,527,,527,527,527,527,527,473,473,,,',
',667,,667,667,667,667,667,473,,473,473,,,473,473,473,473,473,473,667',
',,,,667,679,679,,,,,,476,476,,527,527,,679,527,679,679,679,679,,476',
',476,476,527,527,476,476,476,476,476,476,,,527,,,78,78,,,,,78,78,78',
'78,,,,,,,,527,527,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78',
'78,,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78',
'78,78,78,78,78,78,78,,,,78,78,78,78,78,78,78,78,,,,78,78,78,78,78,,',
'78,,,,,,,,,,78,78,,479,479,,,,,,78,,,78,316,316,479,,479,479,,,479,479',
'479,479,479,479,,,78,,,316,316,316,316,316,316,316,316,316,316,316,316',
'316,316,316,316,316,316,,316,316,316,316,316,481,481,,,,,,,,,,,,481',
',481,481,,,481,481,481,481,481,481,,,,,,,,,,,,,,483,483,,316,316,,,316',
',,,,,483,,483,483,316,316,483,483,483,483,483,483,,,316,,592,592,,,',
',592,592,592,592,,,,,,,,,316,592,592,592,592,592,592,592,592,592,592',
'592,592,592,592,592,592,592,592,,592,592,592,592,592,592,592,592,592',
'592,592,592,592,592,592,592,592,592,592,592,592,592,592,592,592,592',
'592,592,592,,,,592,592,592,592,592,592,592,592,,,,592,592,592,592,592',
',,592,,,,,,,,,,592,592,,485,485,,,,,,592,,,592,315,315,485,,485,485',
',,485,485,485,485,485,485,,,592,,,315,315,315,315,315,315,315,315,315',
'315,315,315,315,315,315,315,315,315,,315,315,315,315,315,487,487,,,',
',,,,,,,,487,,487,487,,,487,487,487,487,487,487,,,,,,,,,,,,,,465,465',
',315,315,,,315,,,,,,465,,465,465,315,315,465,465,465,465,465,465,,,315',
',38,38,,,,,38,38,38,38,,,,,,,,,315,38,38,38,38,38,38,38,38,38,38,38',
'38,38,38,38,38,38,38,,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38',
'38,38,38,38,38,38,38,38,38,38,38,38,38,,,,38,38,38,38,38,38,38,38,,',
',38,38,38,38,38,38,,38,,,,,,,,,,38,38,,,,,,,,,38,,,38,515,515,,,,,515',
'515,515,515,,,,,,,38,,,515,515,515,515,515,515,515,515,515,515,515,515',
'515,515,515,515,515,515,,515,515,515,515,515,515,515,515,515,515,515',
'515,515,515,515,515,515,515,515,515,515,515,515,515,515,515,515,515',
'515,,,,515,515,515,515,515,515,515,515,,,,515,515,515,515,515,,,515',
',,,,,,,,,515,515,,,,,,,,,515,,,515,12,12,,,,,12,12,12,12,,,,,,,515,',
',12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,,12,12,12,12',
'12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12',
'12,12,,,,12,12,12,12,12,12,12,12,,,,12,12,12,12,12,12,12,12,12,,,,,',
',,,12,12,,,,,,,,,12,,567,567,,,,,567,567,567,567,,,,,,,,,12,567,567',
'567,567,567,567,567,567,567,567,567,567,567,567,567,567,567,567,,567',
'567,567,567,567,567,567,567,567,567,567,567,567,567,567,567,567,567',
'567,567,567,567,567,567,567,567,567,567,567,404,404,,567,567,567,567',
'567,567,567,567,,,,567,567,567,567,567,,,567,,,,,,,,404,404,567,567',
'404,404,404,404,404,,404,,567,,404,404,,,,404,,404,404,404,404,404,404',
'404,,,,,567,404,404,404,404,404,404,404,,,,,404,404,404,404,404,404',
'404,404,404,404,404,404,,404,404,404,,,,,404,,404,404,,404,404,404,404',
'404,404,404,404,404,404,404,13,13,,,,,,,,,,,,,,,,404,,,,,,,,,,,,13,13',
',13,13,13,13,13,13,,13,,,,13,13,,,,13,,13,13,13,13,13,13,13,,,,,,13',
'13,13,13,13,13,13,,,,,13,13,13,13,13,13,13,13,13,,13,13,,13,13,13,,',
',,13,,13,13,,13,13,368,368,13,13,13,13,13,13,13,,,,,,,,,,,,,,,,13,,13',
',,368,368,,368,368,368,368,368,368,,368,,,,368,368,,,,368,,368,368,368',
'368,368,368,368,,,,,,368,368,368,368,368,368,368,,,,,368,368,368,368',
'368,368,368,368,368,,368,368,,368,368,368,,,,,368,,368,368,,368,368',
'544,544,368,368,368,368,368,368,368,,,,,,,,,,,,,,,,,,368,,,544,544,',
'544,544,544,544,544,544,544,544,,,,544,544,,,,544,,544,544,544,544,544',
'544,544,,,,,,544,544,544,544,544,544,544,544,,,544,544,544,544,544,544',
'544,544,544,544,,544,544,,544,544,544,,,,,544,,544,544,,544,544,544',
',544,544,544,544,544,544,544,360,360,,,,,,,,,,,,,,544,,,,,,,,,,,,,,360',
'360,,360,360,360,360,360,360,360,360,,,,360,360,,,,360,,360,360,360',
'360,360,360,360,,,,,,360,360,360,360,360,360,360,360,,,360,360,360,360',
'360,360,360,360,360,360,,360,360,,360,360,360,,,,,360,,360,360,,360',
'360,360,,360,360,360,360,360,360,360,85,85,,,,,,,,,,,,,,360,,,,,,,,',
',,,,,85,85,,,85,85,85,85,85,,85,,,,85,85,,,,85,,85,85,85,85,85,85,85',
',,,,,85,85,85,85,85,85,85,,,,,85,85,85,85,85,85,85,85,85,85,85,85,,85',
'85,85,6,6,,,85,,85,85,,85,85,85,85,85,85,85,85,85,85,85,,,,,,,85,,,6',
'6,,85,6,6,6,6,6,,6,,,,6,6,,,,6,,6,6,6,6,6,6,6,,,,,,6,6,6,6,6,6,6,,,',
',6,6,6,6,6,6,6,6,6,6,6,6,,6,6,6,576,576,,,6,,6,6,,6,6,6,6,6,6,6,6,6',
'6,6,,,,,,,,,,576,576,,6,576,576,576,576,576,,576,,,,576,576,,,,576,',
'576,576,576,576,576,576,576,,,,,,576,576,576,576,576,576,576,,,,,576',
'576,576,576,576,576,576,576,576,576,576,576,,576,576,576,577,577,,,576',
',576,576,,576,576,576,576,576,576,576,576,576,576,576,,,,,,,,,,577,577',
',576,577,577,577,577,577,,577,,,,577,577,,,,577,,577,577,577,577,577',
'577,577,,,,,,577,577,577,577,577,577,577,,,,,577,577,577,577,577,577',
'577,577,577,577,577,577,,577,577,577,535,535,,,577,,577,577,,577,577',
'577,577,577,577,577,577,577,577,577,,,,,,,,,,535,535,,577,535,535,535',
'535,535,,535,,,,535,535,,,,535,,535,535,535,535,535,535,535,,,,,,535',
'535,535,535,535,535,535,,,,,535,535,535,535,535,535,535,535,535,535',
'535,535,,535,535,535,93,93,,,535,,535,535,,535,535,535,535,535,535,535',
'535,535,535,535,,,,,,,,,,93,93,,535,93,93,93,93,93,,93,,,,93,93,,,,93',
',93,93,93,93,93,93,93,,,,,,93,93,93,93,93,93,93,,,,,93,93,93,93,93,93',
'93,93,93,93,93,93,,93,93,93,532,532,,,93,,93,93,,93,93,93,93,93,93,93',
'93,93,93,93,,,,,,,93,,,532,532,,93,532,532,532,532,532,,532,,,,532,532',
',,,532,,532,532,532,532,532,532,532,,,,,,532,532,532,532,532,532,532',
',,,,532,532,532,532,532,532,532,532,532,532,532,532,,532,532,532,579',
'579,,,532,,532,532,,532,532,532,532,532,532,532,532,532,532,532,,,,',
',,,,,579,579,,532,579,579,579,579,579,,579,,,,579,579,,,,579,,579,579',
'579,579,579,579,579,,,,,,579,579,579,579,579,579,579,,,,,579,579,579',
'579,579,579,579,579,579,579,579,579,,579,579,579,584,584,,,579,,579',
'579,,579,579,579,579,579,579,579,579,579,579,579,,,,,,,,,,584,584,,579',
'584,584,584,584,584,,584,,,,584,584,,,,584,,584,584,584,584,584,584',
'584,,,,,,584,584,584,584,584,584,584,,,,,584,584,584,584,584,584,584',
'584,584,584,584,584,,584,584,584,76,76,,,584,,584,584,,584,584,584,584',
'584,584,584,584,584,584,584,,,,,,,,,,76,76,,584,76,76,76,76,76,,76,',
',,76,76,,,,76,,76,76,76,76,76,76,76,,,,,,76,76,76,76,76,76,76,,,,,76',
'76,76,76,76,76,76,76,76,76,76,76,,76,76,76,372,372,,,76,,76,76,,76,76',
'76,76,76,76,76,76,76,76,76,,,,,,,76,,,372,372,,76,372,372,372,372,372',
',372,,,,372,372,,,,372,,372,372,372,372,372,372,372,,,,,,372,372,372',
'372,372,372,372,,,,,372,372,372,372,372,372,372,372,372,,372,372,,372',
'372,372,68,68,,,372,,372,372,,372,372,,,372,372,372,372,372,372,372',
',,,,,,,,,68,68,,372,68,68,68,68,68,,68,,,,68,68,,,,68,,68,68,68,68,68',
'68,68,,68,,,,68,68,68,68,68,68,68,,,,,68,68,68,68,68,68,68,68,68,68',
'68,68,,68,68,68,637,637,637,637,68,,68,68,,68,68,68,68,68,68,68,68,68',
'68,68,,,,,,,68,,,637,637,,68,637,637,637,637,637,,637,,,,637,637,,,',
'637,,637,637,637,637,637,637,637,,,,,,637,637,637,637,637,637,637,,',
',,637,637,637,637,637,637,637,637,637,637,637,637,,637,637,637,636,636',
'636,636,637,,637,637,,637,637,637,637,637,637,637,637,637,637,637,,',
',,,,,,,636,636,,637,636,636,636,636,636,,636,,,,636,636,,,,636,,636',
'636,636,636,636,636,636,,,,,,636,636,636,636,636,636,636,,,,,636,636',
'636,636,636,636,636,636,636,636,636,636,,636,636,636,107,107,,,636,',
'636,636,,636,636,636,636,636,636,636,636,636,636,636,,,,,,,,,,107,107',
',636,107,107,107,107,107,,107,,,,107,107,,,,107,,107,107,107,107,107',
'107,107,,,,,,107,107,107,107,107,107,107,,,,,107,107,107,107,107,107',
'107,107,107,107,107,107,,107,107,107,,,,,107,,107,107,,107,107,107,107',
'107,107,107,107,107,107,107,,,564,,,,,,,,,,107,564,564,,,,,,,,,,,,,',
',,,,,,,,,,,,,,564,564,,564,564,564,564,564,564,564,564,,,,564,564,,',
',564,,564,564,564,564,564,564,564,,,,,,564,564,564,564,564,564,564,564',
',,564,564,564,564,564,564,564,564,564,564,,564,564,,564,564,564,,,,',
'564,,564,564,,564,564,564,837,564,564,564,564,564,564,564,,,,837,837',
',,,,,,,,,,,,,,,,,,,,,,,,,,,837,837,,837,837,837,837,837,837,837,837',
',,,837,837,,,,837,,837,837,837,837,837,837,837,,,,,,837,837,837,837',
'837,837,837,837,,,837,837,837,837,837,837,837,837,837,837,,837,837,',
'837,837,837,104,104,,,837,,837,837,,837,837,837,,837,837,837,837,837',
'837,837,,,,,,,,,,104,,,,,,104,104,104,,104,,,,104,104,,,,104,,104,104',
'104,104,104,104,104,,,,,,104,104,104,104,104,104,104,,,,,104,104,104',
'104,104,104,104,104,104,,104,104,,104,104,104,573,,,,104,,104,104,,104',
'104,573,573,104,104,104,104,104,104,104,,,,,,,,,,,104,,,,,,,,,,573,573',
',573,573,573,573,573,573,573,573,,,,573,573,,,,573,,573,573,573,573',
'573,573,573,,,,,,573,573,573,573,573,573,573,573,,,573,573,573,573,573',
'573,573,573,573,573,,573,573,,573,573,573,,,,,573,,573,573,,573,573',
'573,332,573,573,573,573,573,573,573,,,,332,332,,,,,,,,,,,,,,,,,,,,,',
',,,,,,332,332,,332,332,332,332,332,332,332,332,,,,332,332,,,,332,,332',
'332,332,332,332,332,332,,,,,,332,332,332,332,332,332,332,332,,,332,332',
'332,332,332,332,332,332,332,332,,332,332,,332,332,332,,,,,332,,332,332',
',332,332,332,831,332,332,332,332,332,332,332,,,,831,831,,,,,,,,,,,,',
',,,,,,,,,,,,,,,831,831,,831,831,831,831,831,831,831,831,,,,831,831,',
',,831,,831,831,831,831,831,831,831,,,,,,831,831,831,831,831,831,831',
'831,,,831,831,831,831,831,831,831,831,831,831,,831,831,,831,831,831',
',,,,831,,831,831,,831,831,831,331,831,831,831,831,831,831,831,,,,331',
'331,,,,,,,,,,,,,,,,,,,,,,,,,,,,331,331,,331,331,331,331,331,331,331',
'331,,,,331,331,,,,331,,331,331,331,331,331,331,331,,,,,,331,331,331',
'331,331,331,331,331,,,331,331,331,331,331,331,331,331,331,331,,331,331',
',331,331,331,,,,,331,,331,331,,331,331,331,626,331,331,331,331,331,331',
'331,,,,626,626,,,,,,,,,,,,,,,,,,,,,,,,,,,,626,626,,626,626,626,626,626',
'626,626,626,,,,626,626,,,,626,,626,626,626,626,626,626,626,,,,,,626',
'626,626,626,626,626,626,626,,,626,626,626,626,626,626,626,626,626,626',
',626,626,,626,626,626,,,,,626,,626,626,,626,626,626,121,626,626,626',
'626,626,626,626,,,,121,121,,,,,,,,,,,,,,,,,,,,,,,,,,,,121,121,,121,121',
'121,121,121,121,121,121,,,,121,121,,,,121,,121,121,121,121,121,121,121',
',,,,,121,121,121,121,121,121,121,121,,,121,121,121,121,121,121,121,121',
'121,121,,121,121,,121,121,121,,,,,121,,121,121,,121,121,121,1,121,121',
'121,121,121,121,121,,,,1,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,,1,1,1,1,1',
'1,1,1,,,,1,1,,,,1,,1,1,1,1,1,1,1,,,,,,1,1,1,1,1,1,1,1,,,1,1,1,1,1,1',
'1,1,1,1,,1,1,,1,1,1,,,,,1,,1,1,,1,1,1,819,1,1,1,1,1,1,1,,,,819,819,',
',,,,,,,,,,,,,,,,,,,,,,,,,,819,819,,819,819,819,819,819,819,819,819,',
',,819,819,,,,819,,819,819,819,819,819,819,819,,,,,,819,819,819,819,819',
'819,819,819,,,819,819,819,819,819,819,819,819,819,819,,819,819,,819',
'819,819,,,,,819,,819,819,,819,819,819,623,819,819,819,819,819,819,819',
',,,623,623,,,,,,,,,,,,,,,,,,,,,,,,,,,,623,623,,623,623,623,623,623,623',
'623,623,,,,623,623,,,,623,,623,623,623,623,623,623,623,,,,,,623,623',
'623,623,623,623,623,623,,,623,623,623,623,623,623,623,623,623,623,,623',
'623,,623,623,623,,,,,623,,623,623,,623,623,623,493,623,623,623,623,623',
'623,623,,,,493,493,,,,,,,,,,,,,,,,,,,,,,,,,,,,493,493,,493,493,493,493',
'493,493,493,493,,,,493,493,,,,493,,493,493,493,493,493,493,493,,,,,',
'493,493,493,493,493,493,493,493,,,493,493,493,493,493,493,493,493,493',
'493,,493,493,,493,493,493,,,,,493,,493,493,,493,493,493,891,493,493',
'493,493,493,493,493,,,,891,891,,,,,,,,,,,,,,,,,,,,,,,,,,,,891,891,,891',
'891,891,891,891,891,891,891,,,,891,891,,,,891,,891,891,891,891,891,891',
'891,,,,,,891,891,891,891,891,891,891,891,,,891,891,891,891,891,891,891',
'891,891,891,,891,891,,891,891,891,,,,,891,,891,891,,891,891,891,574',
'891,891,891,891,891,891,891,,,,574,574,,,,,,,,,,,,,,,,,,,,,,,,,,,,574',
'574,,574,574,574,574,574,574,574,574,,,,574,574,,,,574,,574,574,574',
'574,574,574,574,,,,,,574,574,574,574,574,574,574,574,,,574,574,574,574',
'574,574,574,574,574,574,,574,574,,574,574,574,,,,,574,,574,574,,574',
'574,574,48,574,574,574,574,574,574,574,,,,48,48,,,,,,,,,,,,,,,,,,,,',
',,,,,,,48,48,,48,48,48,48,48,48,48,48,,,,48,48,,,,48,,48,48,48,48,48',
'48,48,,,,,,48,48,48,48,48,48,48,48,,,48,48,48,48,48,48,48,48,48,48,',
'48,48,,48,48,48,,,,,48,,48,48,,48,48,48,376,48,48,48,48,48,48,48,,,',
'376,376,,,,,,,,,,,,,,,,,,,,,,,,,,,,376,376,,376,376,376,376,376,376',
'376,376,,,,376,376,,,,376,,376,376,376,376,376,376,376,,,,,,376,376',
'376,376,376,376,376,376,,,376,376,376,376,376,376,376,376,376,376,,376',
'376,,376,376,376,,,,,376,,376,376,,376,376,376,928,376,376,376,376,376',
'376,376,,,,928,928,,,,,,,,,,,,,,,,,,,,,,,,,,,,928,928,,928,928,928,928',
'928,928,928,928,,,,928,928,,,,928,,928,928,928,928,928,928,928,,,,,',
'928,928,928,928,928,928,928,928,,,928,928,928,928,928,928,928,928,928',
'928,,928,928,,928,928,928,,,,,928,,928,928,,928,928,928,741,928,928',
'928,928,928,928,928,,,,741,741,,,,,,,,,,,,,,,,,,,,,,,,,,,,741,741,,741',
'741,741,741,741,741,741,741,,,,741,741,,,,741,,741,741,741,741,741,741',
'741,,,,,,741,741,741,741,741,741,741,741,,,741,741,741,741,741,741,741',
'741,741,741,,741,741,,741,741,741,,,,,741,,741,741,,741,741,741,77,741',
'741,741,741,741,741,741,,,,77,77,,,,,,,,,,,,,,,,,,,,,,,,,,,,77,77,,77',
'77,77,77,77,77,77,77,,,,77,77,,,,77,,77,77,77,77,77,77,77,,,,,,77,77',
'77,77,77,77,77,77,,,77,77,77,77,77,77,77,77,77,77,,77,77,,77,77,77,',
',,,77,,77,77,,77,77,77,727,77,77,77,77,77,77,77,,,,727,727,,,,,,,,,',
',,,,,,,,,,,,,,,,,,727,727,,727,727,727,727,727,727,727,727,,,,727,727',
',,,727,,727,727,727,727,727,727,727,,,,,,727,727,727,727,727,727,727',
'727,,,727,727,727,727,727,727,727,727,727,727,,727,727,,727,727,727',
',,,,727,,727,727,,727,727,727,707,727,727,727,727,727,727,727,,,,707',
'707,,,,,,,,,,,,,,,,,,,,,,,,,,,,707,707,,707,707,707,707,707,707,707',
'707,,,,707,707,,,,707,,707,707,707,707,707,707,707,,,,,,707,707,707',
'707,707,707,707,707,,,707,707,707,707,707,707,707,707,707,707,,707,707',
',707,707,707,,,,,707,,707,707,,707,707,707,520,707,707,707,707,707,707',
'707,,,,520,520,,,,,,,,,,,,,,,,,,,,,,,,,,,,520,520,,520,520,520,520,520',
'520,520,520,,,,520,520,,,,520,,520,520,520,520,520,520,520,,,,,,520',
'520,520,520,520,520,520,520,,,520,520,520,520,520,520,520,520,520,520',
',520,520,,520,520,520,,,,,520,,520,520,,520,520,520,600,520,520,520',
'520,520,520,520,,,,600,600,,,,,,,,,,,,,,,,,,,,,,,,,,,,600,600,,600,600',
'600,600,600,600,600,600,,,,600,600,,,,600,,600,600,600,600,600,600,600',
',,,,,600,600,600,600,600,600,600,600,,,600,600,600,600,600,600,600,600',
'600,600,,600,600,,600,600,600,,,,,600,,600,600,,600,600,600,805,600',
'600,600,600,600,600,600,,,,805,805,,,,,,,,,,,,,,,,,,,,,,,,,,,,805,805',
',805,805,805,805,805,805,805,805,,,,805,805,,,,805,,805,805,805,805',
'805,805,805,,,,,,805,805,805,805,805,805,805,805,,,805,805,805,805,805',
'805,805,805,805,805,,805,805,,805,805,805,379,379,,,805,,805,805,,805',
'805,805,,805,805,805,805,805,805,805,,,,,,,,,,379,,,,,,379,379,379,',
'379,,,,379,379,,,,379,,379,379,379,379,379,379,379,,,,,,379,379,379',
'379,379,379,379,,,,,379,379,379,379,379,379,379,379,379,,379,379,,379',
'379,379,363,,,,379,,379,379,,379,379,363,363,379,379,379,379,379,379',
'379,,,,,,,,,,,379,,,,,,,,,,363,363,,363,363,363,363,363,363,363,363',
',,,363,363,,,,363,,363,363,363,363,363,363,363,,,,,,363,363,363,363',
'363,363,363,363,,,363,363,363,363,363,363,363,363,363,363,,363,363,',
'363,363,363,,,,,363,,363,363,,363,363,363,428,363,363,363,363,363,363',
'363,,,,428,428,,,,,,,,,,,,,,,,,,,,,,,,,,,,428,428,,428,428,428,428,428',
'428,428,428,,,,428,428,,,,428,,428,428,428,428,428,428,428,,,,,,428',
'428,428,428,428,428,428,428,,,428,428,428,428,428,428,428,428,428,428',
',428,428,,428,428,428,,,,,428,,428,428,,428,428,428,496,428,428,428',
'428,428,428,428,,,,496,496,,,,,,,,,,,,,,,,,,,,,,,,,,,,496,496,,496,496',
'496,496,496,496,496,496,,,,496,496,,,,496,,496,496,496,496,496,496,496',
',,,,,496,496,496,496,496,496,496,496,,,496,496,496,496,496,496,496,496',
'496,496,,496,496,,496,496,496,,,,,496,,496,496,,496,496,496,437,496',
'496,496,496,496,496,496,,,,437,437,,,,,,,,,,,,,,,,,,,,,,,,,,,,437,437',
',437,437,437,437,437,437,437,437,,,,437,437,,,,437,,437,437,437,437',
'437,437,437,,,,,,437,437,437,437,437,437,437,437,,,437,437,437,437,437',
'437,437,437,437,437,,437,437,,437,437,437,,,,,437,,437,437,,437,437',
'437,435,437,437,437,437,437,437,437,,,,435,435,,,,,,,,,,,,,,,,,,,,,',
',,,,,,435,435,,435,435,435,435,435,435,435,435,,,,435,435,,,,435,,435',
'435,435,435,435,435,435,,,,,,435,435,435,435,435,435,435,435,,,435,435',
'435,435,435,435,435,435,435,435,,435,435,,435,435,435,,,,,435,,435,435',
',435,435,435,454,435,435,435,435,435,435,435,,,,454,454,,,,,,,,,,,,',
',,,,,,,,,,,,,,,454,454,,454,454,454,454,454,454,454,454,,,,454,454,',
',,454,,454,454,454,454,454,454,454,,,,,,454,454,454,454,454,454,454',
'454,,,454,454,454,454,454,454,454,454,454,454,39,454,454,,454,454,454',
',39,39,,454,,454,454,,454,454,454,,454,454,454,454,454,454,454,,,,,',
',,,,,39,,,,,,39,39,39,,39,,,,39,39,,,,39,,39,39,39,39,39,39,39,,,,,',
'39,39,39,39,39,39,39,,,,,39,39,39,39,39,39,39,39,39,,39,39,,39,39,39',
'357,357,,,39,,39,39,,39,39,,,39,39,39,39,39,39,39,,,,,,,,,,357,357,',
',357,357,357,357,357,,357,,,,357,357,,,,357,,357,357,357,357,357,357',
'357,,,,,,357,357,357,357,357,357,357,,,,,357,357,357,357,357,357,357',
'357,357,357,357,357,,357,357,357,255,255,,,357,,357,357,,357,357,357',
'357,357,357,357,357,357,357,357,,,,,,,,,,255,255,,,255,255,255,255,255',
',255,,,,255,255,,,,255,,255,255,255,255,255,255,255,,,,,,255,255,255',
'255,255,255,255,,,,,255,255,255,255,255,255,255,255,255,,255,255,,255',
'255,255,256,256,,,255,,255,255,,255,255,,,255,255,255,255,255,255,255',
',,,,,,,,,256,256,,,256,256,256,256,256,,256,,,,256,256,,,,256,,256,256',
'256,256,256,256,256,,,,,,256,256,256,256,256,256,256,,,,,256,256,256',
'256,256,256,256,256,256,,256,256,,256,256,256,257,257,,,256,,256,256',
',256,256,,,256,256,256,256,256,256,256,,,,,,,,,,257,257,,,257,257,257',
'257,257,,257,,,,257,257,,,,257,,257,257,257,257,257,257,257,,,,,,257',
'257,257,257,257,257,257,,,,,257,257,257,257,257,257,257,257,257,,257',
'257,,257,257,257,258,258,,,257,,257,257,,257,257,,,257,257,257,257,257',
'257,257,,,,,,,,,,258,258,,,258,258,258,258,258,,258,,,,258,258,,,,258',
',258,258,258,258,258,258,258,,,,,,258,258,258,258,258,258,258,,,,,258',
'258,258,258,258,258,258,258,258,,258,258,,258,258,258,259,259,,,258',
',258,258,,258,258,,,258,258,258,258,258,258,258,,,,,,,,,,259,259,,,259',
'259,259,259,259,,259,,,,259,259,,,,259,,259,259,259,259,259,259,259',
',,,,,259,259,259,259,259,259,259,,,,,259,259,259,259,259,259,259,259',
'259,,259,259,,259,259,259,260,260,,,259,,259,259,,259,259,,,259,259',
'259,259,259,259,259,,,,,,,,,,260,260,,,260,260,260,260,260,,260,,,,260',
'260,,,,260,,260,260,260,260,260,260,260,,,,,,260,260,260,260,260,260',
'260,,,,,260,260,260,260,260,260,260,260,260,,260,260,,260,260,260,261',
'261,,,260,,260,260,,260,260,,,260,260,260,260,260,260,260,,,,,,,,,,261',
'261,,,261,261,261,261,261,,261,,,,261,261,,,,261,,261,261,261,261,261',
'261,261,,,,,,261,261,261,261,261,261,261,,,,,261,261,261,261,261,261',
'261,261,261,,261,261,,261,261,261,262,262,,,261,,261,261,,261,261,,',
'261,261,261,261,261,261,261,,,,,,,,,,262,262,,,262,262,262,262,262,',
'262,,,,262,262,,,,262,,262,262,262,262,262,262,262,,,,,,262,262,262',
'262,262,262,262,,,,,262,262,262,262,262,262,262,262,262,,262,262,,262',
'262,262,263,263,,,262,,262,262,,262,262,,,262,262,262,262,262,262,262',
',,,,,,,,,263,263,,,263,263,263,263,263,,263,,,,263,263,,,,263,,263,263',
'263,263,263,263,263,,,,,,263,263,263,263,263,263,263,,,,,263,263,263',
'263,263,263,263,263,263,,263,263,,263,263,263,264,264,,,263,,263,263',
',263,263,,,263,263,263,263,263,263,263,,,,,,,,,,264,264,,,264,264,264',
'264,264,,264,,,,264,264,,,,264,,264,264,264,264,264,264,264,,,,,,264',
'264,264,264,264,264,264,,,,,264,264,264,264,264,264,264,264,264,,264',
'264,,264,264,264,265,265,,,264,,264,264,,264,264,,,264,264,264,264,264',
'264,264,,,,,,,,,,265,265,,,265,265,265,265,265,,265,,,,265,265,,,,265',
',265,265,265,265,265,265,265,,,,,,265,265,265,265,265,265,265,,,,,265',
'265,265,265,265,265,265,265,265,,265,265,,265,265,265,266,266,,,265',
',265,265,,265,265,,,265,265,265,265,265,265,265,,,,,,,,,,266,266,,,266',
'266,266,266,266,,266,,,,266,266,,,,266,,266,266,266,266,266,266,266',
',,,,,266,266,266,266,266,266,266,,,,,266,266,266,266,266,266,266,266',
'266,,266,266,,266,266,266,267,267,,,266,,266,266,,266,266,,,266,266',
'266,266,266,266,266,,,,,,,,,,267,267,,,267,267,267,267,267,,267,,,,267',
'267,,,,267,,267,267,267,267,267,267,267,,,,,,267,267,267,267,267,267',
'267,,,,,267,267,267,267,267,267,267,267,267,,267,267,,267,267,267,268',
'268,,,267,,267,267,,267,267,,,267,267,267,267,267,267,267,,,,,,,,,,268',
'268,,,268,268,268,268,268,,268,,,,268,268,,,,268,,268,268,268,268,268',
'268,268,,,,,,268,268,268,268,268,268,268,,,,,268,268,268,268,268,268',
'268,268,268,,268,268,,268,268,268,269,269,,,268,,268,268,,268,268,,',
'268,268,268,268,268,268,268,,,,,,,,,,269,269,,,269,269,269,269,269,',
'269,,,,269,269,,,,269,,269,269,269,269,269,269,269,,,,,,269,269,269',
'269,269,269,269,,,,,269,269,269,269,269,269,269,269,269,,269,269,,269',
'269,269,270,270,,,269,,269,269,,269,269,,,269,269,269,269,269,269,269',
',,,,,,,,,270,270,,,270,270,270,270,270,,270,,,,270,270,,,,270,,270,270',
'270,270,270,270,270,,,,,,270,270,270,270,270,270,270,,,,,270,270,270',
'270,270,270,270,270,270,,270,270,,270,270,270,271,271,,,270,,270,270',
',270,270,,,270,270,270,270,270,270,270,,,,,,,,,,271,271,,,271,271,271',
'271,271,,271,,,,271,271,,,,271,,271,271,271,271,271,271,271,,,,,,271',
'271,271,271,271,271,271,,,,,271,271,271,271,271,271,271,271,271,,271',
'271,,271,271,271,272,272,,,271,,271,271,,271,271,,,271,271,271,271,271',
'271,271,,,,,,,,,,272,272,,,272,272,272,272,272,,272,,,,272,272,,,,272',
',272,272,272,272,272,272,272,,,,,,272,272,272,272,272,272,272,,,,,272',
'272,272,272,272,272,272,272,272,,272,272,,272,272,272,273,273,,,272',
',272,272,,272,272,,,272,272,272,272,272,272,272,,,,,,,,,,273,273,,,273',
'273,273,273,273,,273,,,,273,273,,,,273,,273,273,273,273,273,273,273',
',,,,,273,273,273,273,273,273,273,,,,,273,273,273,273,273,273,273,273',
'273,,273,273,,273,273,273,253,253,,,273,,273,273,,273,273,,,273,273',
'273,273,273,273,273,,,,,,,,,,253,253,,,253,253,253,253,253,,253,,,,253',
'253,,,,253,,253,253,253,253,253,253,253,,,,,,253,253,253,253,253,253',
'253,,,,,253,253,253,253,253,253,253,253,253,,253,253,,253,253,253,767',
'767,,,253,,253,253,,253,253,,,253,253,253,253,253,253,253,,,,,,,,,,767',
',,,,,767,767,767,,767,,,,767,767,,,,767,,767,767,767,767,767,767,767',
',,,,,767,767,767,767,767,767,767,,,,,767,767,767,767,767,767,767,767',
'767,,767,767,,767,767,767,251,251,,,767,,767,767,,767,767,,,767,767',
'767,767,767,767,767,,,,,,,,,,251,251,,,251,251,251,251,251,,251,,,,251',
'251,,,,251,,251,251,251,251,251,251,251,,,,,,251,251,251,251,251,251',
'251,,,,,251,251,251,251,251,251,251,251,251,,251,251,,251,251,251,250',
'250,,,251,,251,251,,251,251,,,251,251,251,251,251,251,251,,,,,,,,,,250',
'250,,,250,250,250,250,250,,250,,,,250,250,,,,250,,250,250,250,250,250',
'250,250,,,,,,250,250,250,250,250,250,250,,,,,250,250,250,250,250,250',
'250,250,250,,250,250,,250,250,250,773,773,,,250,,250,250,,250,250,,',
'250,250,250,250,250,250,250,,,,,,,,,,773,,,,,,773,773,773,,773,,,,773',
'773,,,,773,,773,773,773,773,773,773,773,,,,,,773,773,773,773,773,773',
'773,,,,,773,773,773,773,773,773,773,773,773,,773,773,,773,773,773,753',
'753,,,773,,773,773,,773,773,,,773,773,773,773,773,773,773,,,,,,,,,,753',
'753,,,753,753,753,753,753,,753,,,,753,753,,,,753,,753,753,753,753,753',
'753,753,,,,,,753,753,753,753,753,753,753,,,,,753,753,753,753,753,753',
'753,753,753,,753,753,,753,753,753,750,750,,,753,,753,753,,753,753,,',
'753,753,753,753,753,753,753,,,,,,,,,,750,750,,,750,750,750,750,750,',
'750,,,,750,750,,,,750,,750,750,750,750,750,750,750,,,,,,750,750,750',
'750,750,750,750,,,,,750,750,750,750,750,750,750,750,750,,750,750,,750',
'750,750,248,248,,,750,,750,750,,750,750,,,750,750,750,750,750,750,750',
',,,,,,,,,248,248,,,248,248,248,248,248,,248,,,,248,248,,,,248,,248,248',
'248,248,248,248,248,,,,,,248,248,248,248,248,248,248,,,,,248,248,248',
'248,248,248,248,248,248,,248,248,,248,248,248,747,747,,,248,,248,248',
',248,248,,,248,248,248,248,248,248,248,,,,,,,,,,747,747,,,747,747,747',
'747,747,,747,,,,747,747,,,,747,,747,747,747,747,747,747,747,,,,,,747',
'747,747,747,747,747,747,,,,,747,747,747,747,747,747,747,747,747,,747',
'747,,747,747,747,744,744,,,747,,747,747,,747,747,,,747,747,747,747,747',
'747,747,,,,,,,,,,744,744,,,744,744,744,744,744,,744,,,,744,744,,,,744',
',744,744,744,744,744,744,744,,,,,,744,744,744,744,744,744,744,,,,,744',
'744,744,744,744,744,744,744,744,,744,744,,744,744,744,555,555,,,744',
',744,744,,744,744,,,744,744,744,744,744,744,744,,,,,,,,,,555,555,,,555',
'555,555,555,555,,555,,,,555,555,,,,555,,555,555,555,555,555,555,555',
',,,,,555,555,555,555,555,555,555,,,,,555,555,555,555,555,555,555,555',
'555,,555,555,,555,555,555,775,775,,,555,,555,555,,555,555,,,555,555',
'555,555,555,555,555,,,,,,,,,,775,775,,,775,775,775,775,775,,775,,,,775',
'775,,,,775,,775,775,775,775,775,775,775,,,,,,775,775,775,775,775,775',
'775,,,,,775,775,775,775,775,775,775,775,775,,775,775,,775,775,775,739',
'739,,,775,,775,775,,775,775,,,775,775,775,775,775,775,775,,,,,,,,,,739',
'739,,,739,739,739,739,739,,739,,,,739,739,,,,739,,739,739,739,739,739',
'739,739,,,,,,739,739,739,739,739,739,739,,,,,739,739,739,739,739,739',
'739,739,739,,739,739,,739,739,739,429,429,,,739,,739,739,,739,739,,',
'739,739,739,739,739,739,739,,,,,,,,,,429,429,,,429,429,429,429,429,',
'429,,,,429,429,,,,429,,429,429,429,429,429,429,429,,,,,,429,429,429',
'429,429,429,429,,,,,429,429,429,429,429,429,429,429,429,,429,429,,429',
'429,429,777,777,,,429,,429,429,,429,429,,,429,429,429,429,429,429,429',
',,,,,,,,,777,777,,,777,777,777,777,777,,777,,,,777,777,,,,777,,777,777',
'777,777,777,777,777,,,,,,777,777,777,777,777,777,777,,,,,777,777,777',
'777,777,777,777,777,777,,777,777,,777,777,777,422,422,,,777,,777,777',
',777,777,,,777,777,777,777,777,777,777,,,,,,,,,,422,422,,,422,422,422',
'422,422,,422,,,,422,422,,,,422,,422,422,422,422,422,422,422,,,,,,422',
'422,422,422,422,422,422,,,,,422,422,422,422,422,422,422,422,422,,422',
'422,,422,422,422,730,730,,,422,,422,422,,422,422,,,422,422,422,422,422',
'422,422,,,,,,,,,,730,730,,,730,730,730,730,730,,730,,,,730,730,,,,730',
',730,730,730,730,730,730,730,,,,,,730,730,730,730,730,730,730,,,,,730',
'730,730,730,730,730,730,730,730,,730,730,,730,730,730,390,390,,,730',
',730,730,,730,730,730,,730,730,730,730,730,730,730,,,,,,,,,,390,390',
',390,390,390,390,390,390,,390,,,,390,390,,,,390,,390,390,390,390,390',
'390,390,,,,,,390,390,390,390,390,390,390,,,,,390,390,390,390,390,390',
'390,390,390,,390,390,,390,390,390,778,778,,,390,,390,390,,390,390,,',
'390,390,390,390,390,390,390,,,,,,,,,,778,778,,,778,778,778,778,778,',
'778,,,,778,778,,,,778,,778,778,778,778,778,778,778,,,,,,778,778,778',
'778,778,778,778,,,,,778,778,778,778,778,778,778,778,778,,778,778,,778',
'778,778,421,421,,,778,,778,778,,778,778,,,778,778,778,778,778,778,778',
',,,,,,,,,421,421,,,421,421,421,421,421,,421,,,,421,421,,,,421,,421,421',
'421,421,421,421,421,,,,,,421,421,421,421,421,421,421,,,,,421,421,421',
'421,421,421,421,421,421,,421,421,,421,421,421,420,420,,,421,,421,421',
',421,421,,,421,421,421,421,421,421,421,,,,,,,,,,420,420,,,420,420,420',
'420,420,,420,,,,420,420,,,,420,,420,420,420,420,420,420,420,,,,,,420',
'420,420,420,420,420,420,,,,,420,420,420,420,420,420,420,420,420,420',
'420,420,,420,420,420,418,418,,,420,,420,420,,420,420,,420,420,420,420',
'420,420,420,420,,,,,,,,,,418,418,,,418,418,418,418,418,,418,,,,418,418',
',,,418,,418,418,418,418,418,418,418,,,,,,418,418,418,418,418,418,418',
',,,,418,418,418,418,418,418,418,418,418,418,418,418,,418,418,418,548',
'548,,,418,,418,418,,418,418,418,418,418,418,418,418,418,418,418,,,,',
',,,,,548,548,,,548,548,548,548,548,,548,,,,548,548,,,,548,,548,548,548',
'548,548,548,548,,,,,,548,548,548,548,548,548,548,,,,,548,548,548,548',
'548,548,548,548,548,,548,548,,548,548,548,308,308,,,548,,548,548,,548',
'548,548,,548,548,548,548,548,548,548,,,,,,,,,,308,308,,308,308,308,308',
'308,308,,308,,,,308,308,,,,308,,308,308,308,308,308,308,308,,,,,,308',
'308,308,308,308,308,308,,,,,308,308,308,308,308,308,308,308,308,,308',
'308,,308,308,308,806,806,,,308,,308,308,,308,308,,,308,308,308,308,308',
'308,308,,,,,,,,,,806,806,,,806,806,806,806,806,,806,,,,806,806,,,,806',
',806,806,806,806,806,806,806,,,,,,806,806,806,806,806,806,806,,,,,806',
'806,806,806,806,806,806,806,806,,806,806,,806,806,806,807,807,,,806',
',806,806,,806,806,806,,806,806,806,806,806,806,806,,,,,,,,,,807,807',
',,807,807,807,807,807,,807,,,,807,807,,,,807,,807,807,807,807,807,807',
'807,,,,,,807,807,807,807,807,807,807,,,,,807,807,807,807,807,807,807',
'807,807,,807,807,,807,807,807,414,414,,,807,,807,807,,807,807,,,807',
'807,807,807,807,807,807,,,,,,,,,,414,414,,,414,414,414,414,414,,414',
',,,414,414,,,,414,,414,414,414,414,414,414,414,,,,,,414,414,414,414',
'414,414,414,,,,,414,414,414,414,414,414,414,414,414,414,414,414,,414',
'414,414,808,808,,,414,,414,414,,414,414,414,414,414,414,414,414,414',
'414,414,,,,,,,,,,808,,,,,,808,808,808,,808,,,,808,808,,,,808,,808,808',
'808,808,808,808,808,,,,,,808,808,808,808,808,808,808,,,,,808,808,808',
'808,808,808,808,808,808,,808,808,,808,808,808,134,134,,,808,,808,808',
',808,808,,,808,808,808,808,808,808,808,,,,,,,,,,134,134,,,134,134,134',
'134,134,,134,,,,134,134,,,,134,,134,134,134,134,134,134,134,,,,,,134',
'134,134,134,134,134,134,,,,,134,134,134,134,134,134,134,134,134,,134',
'134,,134,134,134,132,132,,,134,,134,134,,134,134,,,134,134,134,134,134',
'134,134,,,,,,,,,,132,132,,,132,132,132,132,132,,132,,,,132,132,,,,132',
',132,132,132,132,132,132,132,,,,,,132,132,132,132,132,132,132,,,,,132',
'132,132,132,132,132,132,132,132,,132,132,,132,132,132,131,131,,,132',
',132,132,,132,132,,,132,132,132,132,132,132,132,,,,,,,,,,131,131,,,131',
'131,131,131,131,,131,,,,131,131,,,,131,,131,131,131,131,131,131,131',
',,,,,131,131,131,131,131,131,131,,,,,131,131,131,131,131,131,131,131',
'131,,131,131,,131,131,131,411,411,,,131,,131,131,,131,131,,,131,131',
'131,131,131,131,131,,,,,,,,,,411,411,,,411,411,411,411,411,,411,,,,411',
'411,,,,411,,411,411,411,411,411,411,411,,,,,,411,411,411,411,411,411',
'411,,,,,411,411,411,411,411,411,411,411,411,,411,411,,411,411,411,410',
'410,,,411,,411,411,,411,411,,,411,411,411,411,411,411,411,,,,,,,,,,410',
'410,,,410,410,410,410,410,,410,,,,410,410,,,,410,,410,410,410,410,410',
'410,410,,,,,,410,410,410,410,410,410,410,,,,,410,410,410,410,410,410',
'410,410,410,,410,410,,410,410,410,528,528,,,410,,410,410,,410,410,,',
'410,410,410,410,410,410,410,,,,,,,,,,528,528,,,528,528,528,528,528,',
'528,,,,528,528,,,,528,,528,528,528,528,528,528,528,,,,,,528,528,528',
'528,528,528,528,,,,,528,528,528,528,528,528,528,528,528,528,528,528',
',528,528,528,322,322,,,528,,528,528,,528,528,528,528,528,528,528,528',
'528,528,528,,,,,,,,,,322,322,,322,322,322,322,322,322,322,322,,,,322',
'322,,,,322,,322,322,322,322,322,322,322,,,,,,322,322,322,322,322,322',
'322,322,,,322,322,322,322,322,322,322,322,322,322,,322,322,,322,322',
'322,402,402,,,322,,322,322,,322,322,322,,322,322,322,322,322,322,322',
',,,,,,,,,402,,,,,,402,402,402,,402,,,,402,402,,,,402,,402,402,402,402',
'402,402,402,,,,,,402,402,402,402,402,402,402,,,,,402,402,402,402,402',
'402,402,402,402,,402,402,,402,402,402,460,460,,,402,,402,402,,402,402',
',,402,402,402,402,402,402,402,,,,,,,,,,460,460,,,460,460,460,460,460',
',460,,,,460,460,,,,460,,460,460,460,460,460,460,460,,,,,,460,460,460',
'460,460,460,460,,,,,460,460,460,460,460,460,460,460,460,,460,460,,460',
'460,460,400,400,,,460,,460,460,,460,460,460,,460,460,460,460,460,460',
'460,,,,,,,,,,400,400,,400,400,400,400,400,400,,400,,,,400,400,,,,400',
',400,400,400,400,400,400,400,,,,,,400,400,400,400,400,400,400,,,,,400',
'400,400,400,400,400,400,400,400,,400,400,,400,400,400,399,399,,,400',
',400,400,,400,400,,,400,400,400,400,400,400,400,,,,,,,,,,399,399,,399',
'399,399,399,399,399,,399,,,,399,399,,,,399,,399,399,399,399,399,399',
'399,,,,,,399,399,399,399,399,399,399,,,,,399,399,399,399,399,399,399',
'399,399,,399,399,,399,399,399,328,328,,,399,,399,399,,399,399,,,399',
'399,399,399,399,399,399,,,,,,,,,,328,328,,,328,328,328,328,328,,328',
',,,328,328,,,,328,,328,328,328,328,328,328,328,,,,,,328,328,328,328',
'328,328,328,,,,,328,328,328,328,328,328,328,328,328,,328,328,,328,328',
'328,826,826,,,328,,328,328,,328,328,328,,328,328,328,328,328,328,328',
',,,,,,,,,826,,,,,,826,826,826,,826,,,,826,826,,,,826,,826,826,826,826',
'826,826,826,,,,,,826,826,826,826,826,826,826,,,,,826,826,826,826,826',
'826,826,826,826,,826,826,,826,826,826,464,464,,,826,,826,826,,826,826',
',,826,826,826,826,826,826,826,,,,,,,,,,464,464,,,464,464,464,464,464',
',464,,,,464,464,,,,464,,464,464,464,464,464,464,464,,,,,,464,464,464',
'464,464,464,464,,,,,464,464,464,464,464,464,464,464,464,,464,464,,464',
'464,464,834,834,,,464,,464,464,,464,464,,,464,464,464,464,464,464,464',
',,,,,,,,,834,834,,,834,834,834,834,834,,834,,,,834,834,,,,834,,834,834',
'834,834,834,834,834,,,,,,834,834,834,834,834,834,834,,,,,834,834,834',
'834,834,834,834,834,834,,834,834,,834,834,834,570,570,,,834,,834,834',
',834,834,,,834,834,834,834,834,834,834,,,,,,,,,,570,570,,,570,570,570',
'570,570,,570,,,,570,570,,,,570,,570,570,570,570,570,570,570,,,,,,570',
'570,570,570,570,570,570,,,,,570,570,570,570,570,570,570,570,570,,570',
'570,,570,570,570,334,334,,,570,,570,570,,570,570,,,570,570,570,570,570',
'570,570,,,,,,,,,,334,334,,,334,334,334,334,334,,334,,,,334,334,,,,334',
',334,334,334,334,334,334,334,,,,,,334,334,334,334,334,334,334,,,,,334',
'334,334,334,334,334,334,334,334,,334,334,,334,334,334,335,335,,,334',
',334,334,,334,334,334,,334,334,334,334,334,334,334,,,,,,,,,,335,335',
',335,335,335,335,335,335,,335,,,,335,335,,,,335,,335,335,335,335,335',
'335,335,,,,,,335,335,335,335,335,335,335,,,,,335,335,335,335,335,335',
'335,335,335,,335,335,,335,335,335,643,643,,,335,,335,335,,335,335,,',
'335,335,335,335,335,335,335,,,,,,,,,,643,643,,,643,643,643,643,643,',
'643,,,,643,643,,,,643,,643,643,643,643,643,643,643,,,,,,643,643,643',
'643,643,643,643,,,,,643,643,643,643,643,643,643,643,643,,643,643,,643',
'643,643,522,522,,,643,,643,643,,643,643,,,643,643,643,643,643,643,643',
',,,,,,,,,522,522,,522,522,522,522,522,522,,522,,,,522,522,,,,522,,522',
'522,522,522,522,522,522,,,,,,522,522,522,522,522,522,522,,,,,522,522',
'522,522,522,522,522,522,522,,522,522,,522,522,522,110,110,,,522,,522',
'522,,522,522,,,522,522,522,522,522,522,522,,,,,,,,,,110,110,,,110,110',
'110,110,110,,110,,,,110,110,,,,110,,110,110,110,110,110,110,110,,,,',
',110,110,110,110,110,110,110,,,,,110,110,110,110,110,110,110,110,110',
'110,110,110,,110,110,110,846,846,,,110,,110,110,,110,110,110,110,110',
'110,110,110,110,110,110,,,,,,,,,,846,846,,,846,846,846,846,846,,846',
',,,846,846,,,,846,,846,846,846,846,846,846,846,,,,,,846,846,846,846',
'846,846,846,,,,,846,846,846,846,846,846,846,846,846,,846,846,,846,846',
'846,629,629,,,846,,846,846,,846,846,,,846,846,846,846,846,846,846,,',
',,,,,,,629,,,,,,629,629,629,,629,,,,629,629,,,,629,,629,629,629,629',
'629,629,629,,,,,,629,629,629,629,629,629,629,,,,,629,629,629,629,629',
'629,629,629,629,,629,629,,629,629,629,854,854,,,629,,629,629,,629,629',
',,629,629,629,629,629,629,629,,,,,,,,,,854,854,,854,854,854,854,854',
'854,,854,,,,854,854,,,,854,,854,854,854,854,854,854,854,,,,,,854,854',
'854,854,854,854,854,,,,,854,854,854,854,854,854,854,854,854,,854,854',
',854,854,854,102,102,,,854,,854,854,,854,854,,,854,854,854,854,854,854',
'854,,,,,,,,,,102,102,,102,102,102,102,102,102,,102,,,,102,102,,,,102',
',102,102,102,102,102,102,102,,,,,,102,102,102,102,102,102,102,,,,,102',
'102,102,102,102,102,102,102,102,,102,102,,102,102,102,617,617,,,102',
',102,102,,102,102,,,102,102,102,102,102,102,102,,,,,,,,,,617,617,,,617',
'617,617,617,617,,617,,,,617,617,,,,617,,617,617,617,617,617,617,617',
',,,,,617,617,617,617,617,617,617,,,,,617,617,617,617,617,617,617,617',
'617,617,617,617,,617,617,617,615,615,,,617,,617,617,,617,617,,,617,617',
'617,617,617,617,617,,,,,,,,,,615,615,,,615,615,615,615,615,,615,,,,615',
'615,,,,615,,615,615,615,615,615,615,615,,,,,,615,615,615,615,615,615',
'615,,,,,615,615,615,615,615,615,615,615,615,615,615,615,,615,615,615',
'609,609,,,615,,615,615,,615,615,615,,615,615,615,615,615,615,615,,,',
',,,,,,609,,,,,,609,609,609,,609,,,,609,609,,,,609,,609,609,609,609,609',
'609,609,,,,,,609,609,609,609,609,609,609,,,,,609,609,609,609,609,609',
'609,609,609,,609,609,,609,609,609,101,101,,,609,,609,609,,609,609,,',
'609,609,609,609,609,609,609,,,,,,,,,,101,101,,,101,101,101,101,101,',
'101,,,,101,101,,,,101,,101,101,101,101,101,101,101,,,,,,101,101,101',
'101,101,101,101,,,,,101,101,101,101,101,101,101,101,101,101,101,101',
',101,101,101,349,349,,,101,,101,101,,101,101,101,101,101,101,101,101',
'101,101,101,,,,,,,,,,349,349,,,349,349,349,349,349,,349,,,,349,349,',
',,349,,349,349,349,349,349,349,349,,,,,,349,349,349,349,349,349,349',
',,,,349,349,349,349,349,349,349,349,349,,349,349,,349,349,349,96,96',
',,349,,349,349,,349,349,,,349,349,349,349,349,349,349,,,,,,,,,,96,96',
',,96,96,96,96,96,,96,,,,96,96,,,,96,,96,96,96,96,96,96,96,,,,,,96,96',
'96,96,96,96,96,,,,,96,96,96,96,96,96,96,96,96,96,96,96,,96,96,96,604',
'604,,,96,,96,96,,96,96,,,96,96,96,96,96,96,96,,,,,,,,,,604,604,,,604',
'604,604,604,604,,604,,,,604,604,,,,604,,604,604,604,604,604,604,604',
',,,,,604,604,604,604,604,604,604,,,,,604,604,604,604,604,604,604,604',
'604,604,604,604,,604,604,604,95,95,,,604,,604,604,,604,604,604,604,604',
'604,604,604,604,604,604,,,,,,,,,,95,95,,95,95,95,95,95,95,,95,,,,95',
'95,,,,95,,95,95,95,95,95,95,95,,,,,,95,95,95,95,95,95,95,,,,,95,95,95',
'95,95,95,95,95,95,,95,95,,95,95,95,92,92,,,95,,95,95,,95,95,,,95,95',
'95,95,95,95,95,,,,,,,,,,92,92,,,92,92,92,92,92,,92,,,,92,92,,,,92,,92',
'92,92,92,92,92,92,,,,,,92,92,92,92,92,92,92,,,,,92,92,92,92,92,92,92',
'92,92,92,92,92,,92,92,92,863,863,,,92,,92,92,,92,92,92,,92,92,92,92',
'92,92,92,,,,,,,,,,863,863,,,863,863,863,863,863,,863,,,,863,863,,,,863',
',863,863,863,863,863,863,863,,,,,,863,863,863,863,863,863,863,,,,,863',
'863,863,863,863,863,863,863,863,,863,863,,863,863,863,254,254,,,863',
',863,863,,863,863,,,863,863,863,863,863,863,863,,,,,,,,,,254,254,,,254',
'254,254,254,254,,254,,,,254,254,,,,254,,254,254,254,254,254,254,254',
',,,,,254,254,254,254,254,254,254,,,,,254,254,254,254,254,254,254,254',
'254,,254,254,,254,254,254,87,87,,,254,,254,254,,254,254,,,254,254,254',
'254,254,254,254,,,,,,,,,,87,,,,,,87,87,87,,87,,,,87,87,,,,87,,87,87',
'87,87,87,87,87,,,,,,87,87,87,87,87,87,87,,,,,87,87,87,87,87,87,87,87',
'87,,87,87,,87,87,87,84,84,,,87,,87,87,,87,87,87,,87,87,87,87,87,87,87',
',,,,,,,,,84,84,,84,84,84,84,84,84,,84,,,,84,84,,,,84,,84,84,84,84,84',
'84,84,,,,,,84,84,84,84,84,84,84,,,,,84,84,84,84,84,84,84,84,84,,84,84',
',84,84,84,597,597,,,84,,84,84,,84,84,,,84,84,84,84,84,84,84,,,,,,,,',
',597,597,,597,597,597,597,597,597,,597,,,,597,597,,,,597,,597,597,597',
'597,597,597,597,,,,,,597,597,597,597,597,597,597,,,,,597,597,597,597',
'597,597,597,597,597,,597,597,,597,597,597,80,80,,,597,,597,597,,597',
'597,,,597,597,597,597,597,597,597,,,,,,,,,,80,80,,80,80,80,80,80,80',
',80,,,,80,80,,,,80,,80,80,80,80,80,80,80,,,,,,80,80,80,80,80,80,80,',
',,,80,80,80,80,80,80,80,80,80,,80,80,,80,80,80,467,467,,,80,,80,80,',
'80,80,,,80,80,80,80,80,80,80,,,,,,,,,,467,467,,,467,467,467,467,467',
',467,,,,467,467,,,,467,,467,467,467,467,467,467,467,,,,,,467,467,467',
'467,467,467,467,,,,,467,467,467,467,467,467,467,467,467,,467,467,,467',
'467,467,62,62,,,467,,467,467,,467,467,,,467,467,467,467,467,467,467',
',,,,,,,,,62,62,,,62,62,62,62,62,,62,,,,62,62,,,,62,,62,62,62,62,62,62',
'62,,,,,,62,62,62,62,62,62,62,,,,,62,62,62,62,62,62,62,62,62,62,62,62',
',62,62,62,505,505,,,62,,62,62,,62,62,62,62,62,62,62,62,62,62,62,,,,',
',,,,,505,505,,,505,505,505,505,505,,505,,,,505,505,,,,505,,505,505,505',
'505,505,505,505,,,,,,505,505,505,505,505,505,505,,,,,505,505,505,505',
'505,505,505,505,505,505,505,505,,505,505,505,55,55,,,505,,505,505,,505',
'505,505,505,505,505,505,505,505,505,505,,,,,,,,,,55,55,,,55,55,55,55',
'55,,55,,,,55,55,,,,55,,55,55,55,55,55,55,55,,,,,,55,55,55,55,55,55,55',
',,,,55,55,55,55,55,55,55,55,55,,55,55,,55,55,55,370,370,,,55,,55,55',
',55,55,,,55,55,55,55,55,55,55,,,,,,,,,,370,370,,370,370,370,370,370',
'370,,370,,,,370,370,,,,370,,370,370,370,370,370,370,370,,,,,,370,370',
'370,370,370,370,370,,,,,370,370,370,370,370,370,370,370,370,,370,370',
',370,370,370,54,54,,,370,,370,370,,370,370,,,370,370,370,370,370,370',
'370,,,,,,,,,,54,,,,,,54,54,54,,54,,,,54,54,,,,54,,54,54,54,54,54,54',
'54,,,,,,54,54,54,54,54,54,54,,,,,54,54,54,54,54,54,54,54,54,,54,54,',
'54,54,54,924,924,,,54,,54,54,,54,54,,,54,54,54,54,54,54,54,,,,,,,,,',
'924,924,,,924,924,924,924,924,,924,,,,924,924,,,,924,,924,924,924,924',
'924,924,924,,,,,,924,924,924,924,924,924,924,,,,,924,924,924,924,924',
'924,924,924,924,924,924,924,,924,924,924,391,391,,,924,,924,924,,924',
'924,924,924,924,924,924,924,924,924,924,,,,,,,,,,391,391,,391,391,391',
'391,391,391,,391,,,,391,391,,,,391,,391,391,391,391,391,391,391,,,,',
',391,391,391,391,391,391,391,,,,,391,391,391,391,391,391,391,391,391',
',391,391,,391,391,391,51,51,,,391,,391,391,,391,391,,,391,391,391,391',
'391,391,391,,,,,,,,,,51,51,,,51,51,51,51,51,,51,,,,51,51,,,,51,,51,51',
'51,51,51,51,51,,,,,,51,51,51,51,51,51,51,,,,,51,51,51,51,51,51,51,51',
'51,51,51,51,,51,51,51,50,50,,,51,,51,51,,51,51,51,51,51,51,51,51,51',
'51,51,,,,,,,,,,50,50,,,50,50,50,50,50,,50,,,,50,50,,,,50,,50,50,50,50',
'50,50,50,,,,,,50,50,50,50,50,50,50,,,,,50,50,50,50,50,50,50,50,50,,50',
'50,,50,50,50,45,45,,,50,,50,50,,50,50,,,50,50,50,50,50,50,50,,,,,,,',
',,45,,,,,,45,45,45,,45,,,,45,45,,,,45,,45,45,45,45,45,45,45,,,,,,45',
'45,45,45,45,45,45,,,,,45,45,45,45,45,45,45,45,45,,45,45,,45,45,45,32',
'32,,,45,,45,45,,45,45,,,45,45,45,45,45,45,45,,,,,,,,,,32,32,,,32,32',
'32,32,32,,32,,,,32,32,,,,32,,32,32,32,32,32,32,32,,,,,,32,32,32,32,32',
'32,32,,,,,32,32,32,32,32,32,32,32,32,,32,32,,32,32,32,28,28,,,32,,32',
'32,,32,32,,,32,32,32,32,32,32,32,,,,,,,,,,28,,,,,,28,28,28,,28,,,,28',
'28,,,,28,,28,28,28,28,28,28,28,,,,,,28,28,28,28,28,28,28,,,,,28,28,28',
'28,28,28,28,28,28,,28,28,,28,28,28,502,502,,,28,,28,28,,28,28,28,,28',
'28,28,28,28,28,28,,,,,,,,,,502,502,,502,502,502,502,502,502,,502,,,',
'502,502,,,,502,,502,502,502,502,502,502,502,,,,,,502,502,502,502,502',
'502,502,,,,,502,502,502,502,502,502,502,502,502,,502,502,,502,502,502',
'499,499,,,502,,502,502,,502,502,,,502,502,502,502,502,502,502,,,,,,',
',,,499,499,,,499,499,499,499,499,,499,,,,499,499,,,,499,,499,499,499',
'499,499,499,499,,,,,,499,499,499,499,499,499,499,,,,,499,499,499,499',
'499,499,499,499,499,,499,499,,499,499,499,381,381,,,499,,499,499,,499',
'499,,,499,499,499,499,499,499,499,,,,,,,,,,381,381,,,381,381,381,381',
'381,,381,,,,381,381,,,,381,,381,381,381,381,381,381,381,,,,,,381,381',
'381,381,381,381,381,,,,,381,381,381,381,381,381,381,381,381,,381,381',
',381,381,381,15,15,,,381,,381,381,,381,381,,,381,381,381,381,381,381',
'381,,,,,,,,,,15,15,,15,15,15,15,15,15,15,15,,,,15,15,,,,15,,15,15,15',
'15,15,15,15,,,,,,15,15,15,15,15,15,15,15,,,15,15,15,15,15,15,15,15,15',
'15,,15,15,,15,15,15,498,498,,,15,,15,15,,15,15,15,,15,15,15,15,15,15',
'15,,,,,,,,,,498,498,,,498,498,498,498,498,,498,,,,498,498,,,,498,,498',
'498,498,498,498,498,498,,,,,,498,498,498,498,498,498,498,,,,,498,498',
'498,498,498,498,498,498,498,,498,498,,498,498,498,7,7,,,498,,498,498',
',498,498,,,498,498,498,498,498,498,498,,,,,,,,,,7,7,,7,7,7,7,7,7,,7',
',,,7,7,,,,7,,7,7,7,7,7,7,7,,,,,,7,7,7,7,7,7,7,,,,,7,7,7,7,7,7,7,7,7',
',7,7,,7,7,7,387,387,,,7,,7,7,,7,7,,,7,7,7,7,7,7,7,,,,,,,,,,387,387,',
'387,387,387,387,387,387,387,387,,,,387,387,,,,387,,387,387,387,387,387',
'387,387,,,,,,387,387,387,387,387,387,387,387,,,387,387,387,387,387,387',
'387,387,387,387,,387,387,,387,387,387,388,388,,,387,,387,387,,387,387',
'387,,387,387,387,387,387,387,387,,,,,,,,,,388,388,,388,388,388,388,388',
'388,,388,,,,388,388,,,,388,,388,388,388,388,388,388,388,,,,,,388,388',
'388,388,388,388,388,,,,,388,388,388,388,388,388,388,388,388,,388,388',
',388,388,388,389,389,,,388,,388,388,,388,388,,,388,388,388,388,388,388',
'388,,,,,,,,,,389,389,,389,389,389,389,389,389,,389,,,,389,389,,,,389',
',389,389,389,389,389,389,389,,,,,,389,389,389,389,389,389,389,,,,,389',
'389,389,389,389,389,389,389,389,,389,389,,389,389,389,729,729,,,389',
',389,389,,389,389,,,389,389,389,389,389,389,389,,,,,,,,,,729,729,,,729',
'729,729,729,729,,729,,,,729,729,,,,729,,729,729,729,729,729,729,729',
',,,,,729,729,729,729,729,729,729,,,,,729,729,729,729,729,729,729,729',
'729,,729,729,,729,729,729,,,,,729,,729,729,,729,729,,,729,729,729,729',
'729,729,729' ]
        racc_action_check = arr = Array.new(18449, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
   nil,  5930,  1612,   nil,   nil,   nil,  3678, 17972,   310,   nil,
   nil,   nil,  2893,  3171,  1380, 17794,   nil,   nil,   nil,   619,
   nil,   nil,   nil,   nil,   nil,   nil,   874,   nil, 17438,   nil,
   nil,   nil, 17349,   nil,   nil,  1471,   nil,   nil,  2669,  8449,
   430,  1412,   nil,   nil,   nil, 17260,   nil,   nil,  6602,  1524,
 17171, 17082,  1408,   nil, 16815, 16637,   773,   nil,   nil,   nil,
  1499,  1781, 16459,   nil,   nil,   nil,  1497,  1417,  4568,   nil,
   nil,   nil,   615,   nil,   612,   -67,  4390,  7050,  2225,     7,
 16281,     1,   nil,  1361, 16103,  3589,   nil, 16014,   nil,    49,
   nil,  1261, 15747,  4034,  1065, 15658, 15480,   nil,   nil,   nil,
   nil, 15302, 14946,   618,  5158,  1219,   nil,  4835,   143,  1330,
 14590,  1713,   nil,   nil,  1313,   nil,   nil,   nil,  1298,  1219,
   521,  5818,  1159,  1154,   nil,  1153,   962,   nil,   nil,  1176,
   nil, 12988, 12899,   nil, 12810,  1008,   208,  1048,   nil,    27,
  1136,   nil,   639,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    40,  1136,   nil,  1092,  1132,   nil,   nil,   nil,    75,
  1088,   909,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   850,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   215,   nil,  1139,  1044, 10941,  1154,
 10585, 10496,  1054, 10318, 15925,  8627,  8716,  8805,  8894,  8983,
  9072,  9161,  9250,  9339,  9428,  9517,  9606,  9695,  9784,  9873,
  9962, 10051, 10140, 10229,   nil,   234,   427,   nil,   603,   192,
   951,   945,   845,   241,   881,   nil,   nil,   nil,   849,    42,
   197,   728,    74,   726,   117,   656,  2046,   540,   770,   530,
   nil,   nil,   nil,   nil,   nil,   329,   nil,    11, 12365,    62,
   513,   329,   nil,   779,   nil,  2559,  2337,   346,   183,   nil,
    75,   449, 13344,   603,   nil,  1269,   518,   563, 13789,  1491,
   nil,  5594,  5370,  1602, 14234, 14323,   228,   417,   534,   645,
   624,   nil,   288,    23,   338,   282,   301,   541,   nil, 15391,
   145,  1276,   nil,   388,   254,   nil,  1115,  8538,   227,   nil,
  3480,   nil,  1269,  7799,  1172,  1182,   nil,  1247,  3271,   nil,
 16726,    36,  4479,   155,  1294,   651,  6714,   440,  1258,  7699,
   429, 17705,   nil,  1259,   508,   nil,   547, 18061, 18150, 18239,
 11831, 16993,   145,  1294,   nil,   492,  1321,   nil,   174, 13700,
 13611,  1306, 13433,   nil,  3062,   nil,   nil,   nil,  1300,   nil,
 13166, 13077,   874,  1559, 12632,  1004,   nil,   nil, 12187,   nil,
 12098, 12009, 11653,   nil,   nil,   nil,   nil,   nil,  7911, 11475,
  1410,   nil,   nil,   741,  1367,  8247,   nil,  8135,   nil,   nil,
   852,   nil,   nil,  1417,   nil,   899,  1401,   nil,  1394,   483,
  1402,  1491,  1676,   nil,  8359,   867,   nil,   nil,   nil,  1548,
 13522,  1556,   nil,  1875, 13967,  2640,  1986, 16370,  1063,  1653,
  2084,  1542,   nil,  2157,  1431,   nil,  2195,  1209,   190,  2326,
  1320,  2380,  1098,  2418,   508,  2548,   841,  2602,  1935,   nil,
   nil,   303,   nil,  6266,   nil,   nil,  8023,   nil, 17883, 17616,
   nil,   nil, 17527,    39,  1448, 16548,  1670,  1478,   nil,  1226,
   338,   nil,   418,   nil,   nil,  2781,   nil,   nil,   nil,   382,
  7386,   nil, 14501,    45,   nil,   nil,   195,  2114, 13255,  1337,
   nil,   nil,  4123,   nil,   nil,  3945,   nil,   nil,  1441,   nil,
   782,   671,  1163,   nil,  3371,   nil,   nil,   nil, 12276,  1445,
    70,   nil,  1371,   nil,   nil, 11208,  1369,  1435,   nil,   nil,
  1310,    34,   630,   381,  4957,   nil,   nil,  3003,   832,   nil,
 14145,   nil,   493,  5258,  6490,    62,  3767,  3856,     0,  4212,
   nil,   nil,  1249,   147,  4301,   110,   nil,   nil,  1196,  1199,
  1200,   nil,  2447,   nil,    38,   900,   nil, 16192,   385,   nil,
  7498,  1223,   632,   449, 15569,   893,  1083,   nil,  1084, 15213,
  1073,   nil,   nil,   nil,   nil, 15124,   nil, 15035,   314,   nil,
   nil,   nil,   nil,  6154,   nil,   nil,  5706,   nil,   nil, 14768,
   nil,  1074,  1064,   nil,   nil,   979,  4746,  4657,  1061,   854,
  1090,   978,   963, 14412,   nil,   nil,   nil,  1007,   nil,   nil,
   nil,   914,   893,   nil,   nil,  1020,   873,   876,   902,   755,
   nil,   744,   nil,   658,   nil,   651,  1007,  2079,   620,   612,
   nil,   nil,   nil,   nil,   nil,   634,    46,   nil,  2109,  2188,
   562,    93,   nil,   431,   405,   159,    25,   nil,   115,    57,
  1414,  1269,  1158,   169,   216,   153,   219,   270,    48,   390,
    11,   nil,   nil,   nil,   nil,   502,   360,  7274,   557,   nil,
   316,   509,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   173,
   204,  1158,   nil,   641,   nil,   625,   nil,  7162,   711, 18328,
 11742,   665,   nil,   nil,   nil,   664,   nil,   798,   409, 11386,
   721,  6938,   853,   785, 11119,   945,   nil, 11030,   137,   826,
 10852,   983,   nil, 10763,     4,   nil,   nil,   nil,    40,   366,
   nil,   668,   402,   914,   -12,   104,   nil, 10407,   963,    66,
  1097,  1114,  1042, 10674,   nil, 11297,   890, 11564, 11920,   nil,
   nil,   nil,   nil,   677,   nil,   788,   nil,  1085,   nil,   nil,
   nil,   nil,   nil,   nil,   972,   nil,   963,   nil,  1229,  1091,
   373,   nil,   nil,   nil,   nil,  7610, 12454, 12543, 12721,  1248,
   nil,   519,   nil,   528,   nil,   204,   nil,   nil,   nil,  6042,
    40,   nil,   nil,  1237,   nil,   nil, 13878,    98,   nil,   nil,
   nil,  5482,   846,  1195, 14056,   nil,   nil,  5069,   795,  1204,
   nil,   nil,   789,   nil,   nil,   730, 14679,   nil,   678,   nil,
   nil,   662,   nil,   nil, 14857,  1334,   nil,   284,  1259,   nil,
  1337,   nil,   nil, 15836,  1262,   927,  1264,  1265,  1267,  1290,
  1340,  1293,  1118,   326,   nil,   958,   743,   nil,  1311,  1312,
   nil,  1313,  1314,  1315,  1413,   nil,   nil,   -79,   735,   726,
   662,  6378,   nil,  1369,  1447,   nil,   895,   nil,    49,   nil,
   nil,   nil,   nil,   nil,   nil,   566,   nil,  1451,  1375,   nil,
   nil,   nil,   560,   nil,   750,   nil,   861,   nil,   nil,   455,
   nil,   nil,   551,  2003, 16904,  1892,  1496,   nil,  6826,  1421,
  1422,  1423,  1424,  1425,  1426,     8,   504,  1462,   146,   108,
   nil,   955,   nil,   nil,   nil,   344,   nil,   nil,   111,   nil,
  1482,   nil ]

racc_action_default = [
    -2,  -536,  -537,    -1,  -435,  -403,  -382,  -537,  -474,  -260,
  -445,  -436,  -420,  -523,   -46,  -537,  -261,  -444,  -418,   -48,
  -262,  -446,  -420,  -402,  -309,   -49,  -537,  -263,  -537,  -453,
  -447,  -420,  -537,  -264,  -454,  -410,  -307,  -265,  -537,  -537,
   -53,  -416,  -399,  -308,  -266,  -537,  -400,  -310,  -536,  -537,
  -537,  -299,  -537,   -41,  -537,  -537,  -232,  -449,  -311,    -3,
  -537,  -537,  -300,  -448,  -312,  -301,  -537,  -537,  -537,  -450,
  -313,  -302,  -537,   -65,  -523,  -284,  -439,  -536,  -537,  -525,
  -537,  -304,    -5,  -525,  -537,  -268,  -441,   -69,    -6,  -267,
  -440,  -537,  -536,  -442,    -9,  -537,  -536,   -79,  -443,  -398,
  -305,  -276,  -537,   -40,   -77,  -401,  -306,  -279,  -451,  -537,
  -536,  -233,  -243,  -248,  -537,   -63,  -299,  -300,  -537,  -537,
  -537,  -536,  -536,  -537,  -304,  -536,  -267,  -507,  -381,  -253,
  -276,  -537,  -537,  -247,  -537,  -451,  -537,   -47,  -483,  -480,
  -536,  -485,  -474,  -286,  -497,  -494,  -491,  -479,  -477,  -498,
  -476,  -537,  -496,  -475,  -536,  -537,  -493,  -478,  -367,  -537,
  -536,  -537,  -473,  -177,  -134,  -178,  -136,  -161,  -176,  -430,
  -537,  -137,  -160,  -169,  -109,  -155,  -179,  -181,  -142,  -110,
  -130,  -164,  -120,  -185,  -138,  -131,  -151,  -121,  -186,  -122,
  -139,  -165,  -129,  -143,  -140,  -429,  -154,  -123,  -144,  -141,
  -146,  -124,  -156,  -168,  -171,  -147,  -125,  -167,  -172,  -148,
  -126,  -157,  -174,  -152,  -180,  -127,  -166,  -170,  -106,  -128,
  -149,  -159,  -158,  -108,  -432,  -173,  -117,  -431,  -163,  -118,
  -150,  -107,  -119,  -433,  -183,  -175,  -132,  -135,  -184,  -182,
  -133,  -145,  -532,  -533,  -523,  -534,  -537,  -524,  -537,  -537,
  -537,  -537,  -537,  -537,  -537,  -537,  -537,  -537,  -537,  -537,
  -537,  -537,  -537,  -537,  -537,  -537,  -537,  -537,  -537,  -537,
  -537,  -537,  -537,  -537,    -8,  -537,  -536,  -372,  -536,  -537,
  -437,  -438,  -382,  -537,  -537,  -324,  -303,  -325,  -537,  -537,
  -537,  -525,  -267,  -279,  -451,  -537,  -209,  -537,  -537,  -537,
  -111,   -17,  -113,  -112,  -114,  -537,  -104,  -537,  -537,  -537,
  -537,  -101,  -267,  -102,  -451,  -537,  -537,  -537,  -537,   -45,
  -537,  -537,  -537,  -523,   -13,   -14,  -537,  -536,  -537,  -223,
   -51,  -536,  -536,  -208,  -537,  -537,  -176,  -474,  -169,  -179,
  -164,  -503,  -146,  -147,  -537,  -148,  -106,  -107,   -52,  -537,
  -273,   -57,  -283,  -536,  -536,  -375,  -537,  -536,  -537,    -4,
  -524,  -285,   -67,  -536,  -525,  -537,  -115,   -22,  -525,  -526,
  -537,  -525,  -537,  -537,  -537,  -537,  -536,   -92,   -70,   -73,
   -85,  -537,   -81,  -537,  -529,  -234,  -529,  -537,  -537,  -537,
  -537,  -537,  -537,  -537,  -505,  -529,  -537,   -50,  -537,  -537,
  -537,   -75,  -537,  -404,  -525,   -64,   952,  -242,  -525,  -241,
  -537,  -537,  -273,  -537,  -536,  -537,  -252,  -244,  -251,  -245,
  -251,  -537,  -537,  -254,  -510,  -249,  -318,  -319,  -536,  -537,
  -537,  -502,  -469,  -537,  -536,  -536,  -365,  -536,  -495,  -466,
  -537,  -499,  -482,  -537,  -471,  -537,  -480,  -326,  -525,  -337,
  -330,  -537,  -537,  -328,  -536,  -537,  -434,  -421,  -422,  -537,
  -537,  -537,  -535,  -210,  -537,  -213,  -211,  -537,  -218,  -212,
  -219,  -200,  -224,  -220,  -201,  -225,  -221,  -202,  -226,  -222,
  -203,  -214,  -204,  -215,  -198,  -216,  -199,  -217,  -205,  -405,
  -419,  -536,  -354,  -536,  -355,  -357,  -536,  -406,  -537,  -537,
  -437,  -438,  -537,  -273,  -537,  -536,  -537,  -537,  -407,  -537,
  -537,  -409,  -537,  -412,  -408,  -537,   -21,   -20,   -19,  -537,
  -536,  -455,  -537,  -537,  -101,  -103,  -102,  -537,  -536,  -537,
  -514,  -516,  -536,  -515,  -517,  -536,  -414,  -415,  -537,  -273,
  -537,  -537,   -16,   -12,  -524,  -269,  -314,  -390,  -536,  -536,
  -187,   -29,  -537,   -37,  -253,  -537,  -537,  -537,   -30,   -39,
   -38,  -525,  -474,  -537,  -536,  -522,  -521,  -537,  -189,   -31,
  -537,   -58,  -536,  -536,  -536,  -514,  -519,  -537,  -515,  -520,
  -380,  -378,  -525,  -514,  -536,  -515,  -379,    -7,  -525,  -537,
   -66,  -271,  -537,  -282,  -525,   -44,  -270,  -537,  -230,  -316,
  -536,  -315,   -91,  -537,  -536,  -537,  -525,   -82,   -71,  -537,
  -197,   -36,  -274,  -235,  -530,  -531,  -237,  -531,   -27,   -23,
   -24,   -25,   -26,  -536,  -275,  -506,  -536,   -42,   -43,  -537,
   -83,   -78,  -525,  -278,  -238,  -187,  -518,  -272,  -525,  -514,
  -515,  -536,  -255,  -537,  -250,  -508,  -509,  -537,  -487,  -481,
  -492,  -536,  -536,  -501,  -359,  -537,  -525,  -537,  -537,  -536,
  -486,  -536,  -500,  -536,  -484,  -335,  -537,  -537,  -525,  -537,
  -428,  -425,  -426,  -427,  -423,  -537,  -537,  -292,  -227,  -229,
  -537,  -480,  -489,  -536,  -536,  -536,  -536,  -353,  -537,  -537,
  -537,  -206,  -207,  -537,  -518,  -537,  -272,  -525,  -514,  -536,
  -515,  -411,  -413,   -18,  -457,  -537,  -537,  -536,  -101,  -105,
  -102,  -525,   -55,  -239,  -240,  -374,   -54,  -373,  -417,  -514,
  -515,   -15,  -393,  -536,  -392,  -391,  -322,  -536,  -536,  -537,
  -537,  -259,   -28,  -296,  -504,  -525,  -459,  -537,  -474,  -537,
  -196,  -536,  -537,  -537,  -537,   -61,  -377,  -537,  -383,  -537,
  -537,   -59,  -376,  -537,   -68,  -527,  -116,  -281,  -525,  -536,
  -317,   -88,   -90,  -525,  -514,  -515,   -80,  -537,   -74,  -529,
  -536,  -537,   -76,  -537,  -277,  -537,  -383,  -537,  -537,  -246,
  -256,  -290,  -470,  -537,  -467,  -537,  -363,  -360,  -361,  -364,
  -366,  -368,  -369,  -462,  -537,  -464,  -537,  -472,  -537,  -338,
  -333,  -329,  -327,  -424,  -291,  -536,  -537,  -537,  -537,  -537,
  -346,  -344,  -349,  -537,  -351,  -537,  -356,  -371,  -370,  -536,
  -383,  -294,  -456,  -537,  -383,  -395,  -537,  -537,  -323,   -11,
  -397,  -536,  -188,  -257,  -537,  -458,  -297,  -536,  -190,  -537,
  -385,  -384,  -194,   -35,   -62,  -195,  -537,  -528,  -192,   -33,
   -60,  -193,   -34,  -280,  -537,  -537,  -320,   -86,   -72,  -236,
  -537,  -289,   -84,  -537,  -536,  -537,  -536,  -536,  -536,  -336,
  -537,  -331,  -537,  -536,  -255,  -231,  -488,  -358,  -536,  -536,
  -490,  -536,  -536,  -536,  -537,  -295,  -394,  -537,  -537,  -100,
   -93,  -536,  -396,  -258,  -537,   -56,  -191,   -32,  -537,  -287,
  -288,  -468,  -362,  -463,  -460,  -537,  -465,  -537,  -334,  -386,
  -388,  -387,  -537,  -341,  -537,  -343,  -537,  -350,  -347,  -537,
  -352,  -293,   -99,  -537,  -536,  -537,  -536,  -298,  -536,  -536,
  -332,  -536,  -536,  -536,  -536,  -518,   -98,  -525,  -514,  -515,
  -389,  -536,  -461,  -342,  -339,  -537,  -345,  -348,  -383,  -321,
  -536,  -340 ]

clist = [
'82,408,66,461,326,301,631,428,319,549,532,535,169,650,600,330,66,49',
'158,378,564,728,304,136,112,88,348,660,303,244,162,49,417,623,94,419',
'652,571,685,274,384,246,362,661,285,366,370,401,94,66,372,577,448,584',
'360,386,245,748,493,395,496,337,304,364,49,397,174,115,303,112,656,613',
'799,616,407,525,788,801,66,553,112,490,625,855,789,559,112,645,880,436',
'307,385,174,49,686,394,715,170,393,717,373,341,359,365,513,332,683,279',
'577,409,584,392,644,776,644,174,295,245,398,112,143,416,66,567,416,112',
'383,688,112,351,344,515,174,287,787,573,574,49,367,431,829,151,361,74',
'277,909,723,365,827,403,275,520,434,431,298,512,1,318,674,431,195,659',
'59,3,162,284,443,2,405,,,,820,,,,,,,426,,286,,,,,824,,,880,447,,286',
',,,,,286,,,699,,,869,699,,286,,,,,,768,,,675,,,,,,,,699,,,,,,,,,772',
',577,584,,857,,286,,860,,,,,,582,,,,128,,,,,286,507,,,,,,,949,,,,626',
',,459,,,492,552,492,908,,801,,552,,645,,902,245,557,,,551,,709,789,',
',558,,724,699,,,544,,638,,,,,,,569,930,355,,,805,702,809,,407,608,66',
',,547,,362,,,,66,66,630,,,,49,,,362,,668,611,911,,49,49,588,521,543',
'492,492,741,542,409,556,878,162,,66,606,,66,,245,,632,,660,858,,,650',
'112,49,66,407,49,,641,,,587,,,,66,365,,,49,94,,,697,867,660,,,,365,49',
'619,620,621,622,676,,579,,948,409,879,,882,,,711,618,837,112,,,,,,,66',
',844,112,654,,,66,850,66,,,426,,,49,680,,,,,,49,,49,647,66,859,,,,,657',
',658,,,,579,891,407,49,,,,,,705,,665,,669,447,703,,,,,,,,654,,407,,66',
'763,552,66,,304,,,,,409,303,,,,49,,,49,687,,,,932,693,689,737,66,690',
'112,,,,409,128,,,713,286,,713,355,49,,706,928,,630,,,,66,112,722,726',
'749,112,779,,112,,286,,,579,756,49,630,704,579,819,66,707,738,407,174',
',492,735,,66,66,304,721,769,,49,579,303,713,162,,,,,49,49,,,712,579',
'112,716,,,742,743,66,112,409,586,749,736,,940,,,,,,,,49,,,,699,174,112',
',66,,759,66,,,910,,,,,,,,745,49,416,,49,,,751,174,,,770,431,431,771',
',,,,579,431,,431,586,431,823,749,72,,,,,120,120,,,,,,120,749,72,,,654',
'431,431,431,,89,,,,,290,,,447,447,,713,630,,89,,310,,862,,843,66,321',
',,72,849,292,120,852,,310,,,,825,49,,312,120,830,66,,749,312,120,,89',
',426,,545,,312,72,66,49,120,,,,120,822,,375,586,828,,,586,49,726,120',
'162,,286,89,,120,120,839,375,726,,120,,377,120,586,,,714,,,714,286,',
',72,,586,,,377,,,894,,,,,,,,,,,,,66,89,,897,,,,,,937,,,,,66,49,,746',
',,,447,,871,714,873,66,,,49,,,66,,,,886,,432,884,,49,,,,586,,49,,,,892',
'439,,,,,431,444,431,431,431,,,898,,726,677,,,,431,431,,431,431,431,',
',,,,407,,,,66,,,,,,,447,,447,,,749,,,49,,,,,,,,,,926,,,286,,,409,,547',
'286,,431,66,431,431,431,431,,,447,,,,726,746,112,,49,714,,,,431,,,,137',
'941,,,,,137,,286,,,,,579,,,733,,,120,,,,,579,,286,,,,,,,72,,,,,,120',
',,72,72,,120,120,,,,,,,,,89,,,,,120,,,,89,89,,,120,,,72,,371,72,,,137',
',120,,120,,,,,,72,137,,375,,120,89,,137,89,,72,120,120,120,120,,,,781',
',,89,120,120,377,375,651,120,,,,,89,,,,,120,663,,,,,,,,804,377,,,,72',
',,,,,,72,396,72,,,,,,,,,,,,,89,,,821,72,,,89,,89,,684,,,,,,,,,,423,424',
',425,,89,670,,,,,,,,836,,,,,,,,72,,,72,,,,,,120,,,120,,586,,590,,,,593',
',89,596,,89,861,72,,120,,,,,,120,,,,120,,108,120,,,,,,,89,,72,,,,108',
'633,,,,634,,,,,,,,294,,,72,,89,,,,,885,314,72,72,,,120,314,,,108,,,120',
',89,314,,,523,,,664,314,89,89,120,,,72,,,899,120,,,,900,375,108,,,,',
',,561,,,380,,89,72,,,72,,,375,,377,921,,,,,380,,,,,927,,,89,,,89,,594',
'377,595,,108,,,,,,,,,,,,,,554,,137,137,137,137,560,,,,,,,627,628,,,',
',,,,,782,784,,,,,,,793,,795,,797,,,734,72,,,,,,,,,,,,,,,,,810,812,814',
'72,,89,,,,754,,,,,,757,,72,,,120,,,,,89,120,766,,120,,864,,,642,,396',
',646,89,866,,868,375,,648,,,,375,,,,774,,,,,,881,137,883,,,,377,,,,',
',377,,,,,554,790,,,137,72,,,876,,,,,802,,,,,,72,,,,,,,888,89,,,312,72',
',,,,,72,,,,89,,,,,120,,889,,,,,89,120,108,,,,89,,,,,108,108,,,,,,,,',
',929,,,,758,835,,,,931,,933,,725,934,,72,,108,,731,108,,,,,,,853,901',
',903,904,906,108,,,380,89,,950,,,913,915,108,917,918,920,120,,,,72,',
',,,,,380,,,,,,,,,,,,,,,89,,,111,,642,,396,,,,108,,,,,,,108,942,108,943',
'944,946,947,,,,,296,,,,780,,,,108,,,951,,,,,,,329,111,,,,333,,,,,,,111',
',,,,,111,,,,,,,,,,,108,,,108,,,,,,,,,,111,,,,111,,,,,111,,,,,108,111',
',,111,,,,,,,,,,,,,833,,,,,,,108,111,111,,111,,,,,,,,,,,,,,,,108,,,,',
',,,,108,108,,,,,,,,,,,,,,,,,,,,,,,,,,108,,,137,,,,,,380,,,,874,,,,,',
',,,,108,,,108,,,380,,,,,,,,,,,,893,,,,,,,,,,,,,,,,,,,,,463,,465,466',
',468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484',
'485,486,487,488,,,,,,,,,,,,,,,,,,,,108,,,,,,,,,,,,,,,,,,,,108,,,,,,',
',,,,,,,108,550,,,,,,111,,,,,,,,,,,,,,,568,,,,380,,,,111,,380,,,,,,,',
',,,,,598,,,,,,,,,610,,,,,,,,,,108,,,314,,,,,,,,,,111,108,,,,,635,568',
'890,,111,,,108,111,,111,610,111,108,,,,,,111,,,,,,,289,,,,289,,,,,,',
'289,,,,,,,,,,,289,,111,,289,289,678,,,679,,,,,,,,,,108,,,,,,,,,,,,,',
',,,,289,,,691,692,289,,,,289,111,,,,,,,289,,108,,,,,,,,,,,,,,111,,,',
'111,,,111,,,,289,289,,289,,,,,,111,,,,,,,111,,,,,,,,,,,,,,,740,,,,,',
',111,,,,,,,111,,,,,,,,,,,,,,,,,,,,111,,,,,,,,,,,111,,111,,,,,,,,,,,',
',,,,,,,,,,,,,,111,,,,,,,,,,,,,289,,289,289,,289,289,289,289,289,289',
'289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,832,111,,,,,,,,,838,,,,,842,',
',845,,,848,,,851,,,,,,,,,,,,,,,,,,,,,,842,,848,851,,289,,,,,,,289,,',
',,,,,,,,,,,,,,,,111,875,,,289,,,,,,,,289,289,,,,,,,289,,289,289,289',
',,,111,,,289,,,,,,,,,896,,,,,,,,,,,,,,,,,896,,,,,289,,,,289,,,289,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,289,289,,,,,,,,,,,,,,,,,111,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,289,,,,,,,289,,,,,,,,,,,,,,,289,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,289,,,,,,289,,289,,,,,,,,,,,,289,,,,,,,,,,,,,,289',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,289,289,,,,,,,,,289,,,,,,,,289,,,,,,,,,,,,,,,,,,,,289',
',,,,,289,,289,,289,289,,,,,,,,,,,,,,,,,,,,,,,,,,,,289,289,289,,,,,,',
',,,,,,,,,,,289,,,,,,,,289,,,,,,,,,,,,,,,,,,,,,,,,,,,,,289' ]
        racc_goto_table = arr = Array.new(2883, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'7,25,23,91,11,17,49,88,21,13,38,38,53,138,84,36,23,20,119,47,99,14,58',
'19,34,8,36,137,57,19,111,20,68,84,10,68,109,40,108,8,63,6,43,109,20',
'17,32,48,10,23,32,38,104,38,9,65,96,26,41,65,41,53,58,44,20,36,54,39',
'57,34,113,64,105,64,36,51,115,102,23,28,34,132,64,85,116,28,34,142,139',
'118,52,7,54,20,109,7,67,129,79,67,19,76,6,12,132,52,106,129,38,7,38',
'19,69,26,69,54,129,96,19,34,82,7,23,101,7,34,62,113,34,39,100,31,54',
'22,114,41,41,20,18,7,15,117,80,5,120,122,123,12,124,127,128,95,119,7',
'130,131,4,133,134,7,135,136,3,2,111,93,141,1,39,,,,26,,,,,,,96,,59,',
',,,26,,,139,103,,59,,,,,,59,,,38,,,105,38,,59,,,,,,49,,,91,,,,,,,,38',
',,,,,,,,49,,38,38,,26,,59,,14,,,,,,25,,,,66,,,,,59,32,,,,,,,85,,,,88',
',,6,,,7,63,7,105,,102,,63,,142,,115,96,11,,,21,,51,116,,,21,,28,38,',
',9,,25,,,,,,,21,105,66,,,84,132,113,,36,48,23,,,7,,43,,,,23,23,47,,',
',20,,,43,,104,21,14,,20,20,44,96,6,7,7,41,10,7,12,108,111,,23,44,,23',
',96,,36,,137,49,,,138,34,20,23,36,20,,65,,,8,,,,23,12,,,20,10,,,25,109',
'137,,,,12,20,19,19,19,19,63,,54,,26,7,109,,109,,,25,10,99,34,,,,,,,23',
',40,34,7,,,23,40,23,,,96,,,20,32,,,,,,20,,20,12,23,64,,,,,12,,12,,,',
'54,84,36,20,,,,,,11,,103,,12,103,17,,,,,,,,7,,36,,23,25,63,23,,58,,',
',,7,57,,,,20,,,20,111,,,,109,19,12,11,23,12,34,,,,7,66,,,7,59,,7,66',
'20,,19,84,,47,,,,23,34,7,7,32,34,68,,34,,59,,,54,17,20,47,96,54,88,23',
'96,53,36,54,,7,119,,23,23,58,10,65,,20,54,57,7,111,,,,,20,20,,,39,54',
'34,39,,,12,12,23,34,7,66,32,96,,13,,,,,,,,20,,,,38,54,34,,23,,12,23',
',,91,,,,,,,,39,20,7,,20,,,39,54,,,12,7,7,12,,,,,54,7,,7,66,7,11,32,24',
',,,,24,24,,,,,,24,32,24,,,7,7,7,7,,27,,,,,24,,,103,103,,7,47,,27,,24',
',47,,21,23,24,,,24,21,27,24,21,,24,,,,7,20,,27,24,7,23,,32,27,24,,27',
',96,,78,,27,24,23,20,24,,,,24,96,,24,66,12,,,66,20,7,24,111,,59,27,',
'24,24,12,24,7,,24,,27,24,66,,,66,,,66,59,,,24,,66,,,27,,,11,,,,,,,,',
',,,,23,27,,21,,,,,,25,,,,,23,20,,66,,,,103,,103,66,12,23,,,20,,,23,',
',,20,,110,12,,20,,,,66,,20,,,,12,110,,,,,7,110,7,7,7,,,19,,7,78,,,,7',
'7,,7,7,7,,,,,,36,,,,23,,,,,,,103,,103,,,32,,,20,,,,,,,,,,12,,,59,,,7',
',7,59,,7,23,7,7,7,7,,,103,,,,7,66,34,,20,66,,,,7,,,,30,12,,,,,30,,59',
',,,,54,,,78,,,24,,,,,54,,59,,,,,,,24,,,,,,24,,,24,24,,24,24,,,,,,,,',
'27,,,,,24,,,,27,27,,,24,,,24,,30,24,,,30,,24,,24,,,,,,24,30,,24,,24',
'27,,30,27,,24,24,24,24,24,,,,78,,,27,24,24,27,24,107,24,,,,,27,,,,,24',
'107,,,,,,,,78,27,,,,24,,,,,,,24,29,24,,,,,,,,,,,,,27,,,78,24,,,27,,27',
',107,,,,,,,,,,29,29,,29,,27,27,,,,,,,,78,,,,,,,,24,,,24,,,,,,24,,,24',
',66,,45,,,,45,,27,45,,27,78,24,,24,,,,,,24,,,,24,,50,24,,,,,,,27,,24',
',,,50,45,,,,45,,,,,,,,50,,,24,,27,,,,,78,50,24,24,,,24,50,,,50,,,24',
',27,50,,,30,,,45,50,27,27,24,,,24,,,78,24,,,,78,24,50,,,,,,,30,,,50',
',27,24,,,24,,,24,,27,78,,,,,50,,,,,78,,,27,,,27,,30,27,30,,50,,,,,,',
',,,,,,,29,,30,30,30,30,29,,,,,,,30,30,,,,,,,,,110,110,,,,,,,110,,110',
',110,,,45,24,,,,,,,,,,,,,,,,,110,110,110,24,,27,,,,45,,,,,,45,,24,,',
'24,,,,,27,24,45,,24,,107,,,29,,29,,29,27,107,,107,24,,29,,,,24,,,,45',
',,,,,107,30,107,,,,27,,,,,,27,,,,,29,45,,,30,24,,,24,,,,,45,,,,,,24',
',,,,,,24,27,,,27,24,,,,,,24,,,,27,,,,,24,,27,,,,,27,24,50,,,,27,,,,',
'50,50,,,,,,,,,,107,,,,30,45,,,,107,,107,,29,107,,24,,50,,29,50,,,,,',
',45,110,,110,110,110,50,,,50,27,,107,,,110,110,50,110,110,110,24,,,',
'24,,,,,,,50,,,,,,,,,,,,,,,27,,,33,,29,,29,,,,50,,,,,,,50,110,50,110',
'110,110,110,,,,,33,,,,29,,,,50,,,110,,,,,,,33,33,,,,33,,,,,,,33,,,,',
',33,,,,,,,,,,,50,,,50,,,,,,,,,,33,,,,33,,,,,33,,,,,50,33,,,33,,,,,,',
',,,,,,29,,,,,,,50,33,33,,33,,,,,,,,,,,,,,,,50,,,,,,,,,50,50,,,,,,,,',
',,,,,,,,,,,,,,,,,50,,,30,,,,,,50,,,,29,,,,,,,,,,50,,,50,,,50,,,,,,,',
',,,,29,,,,,,,,,,,,,,,,,,,,,33,,33,33,,33,33,33,33,33,33,33,33,33,33',
'33,33,33,33,33,33,33,33,33,33,33,,,,,,,,,,,,,,,,,,,,50,,,,,,,,,,,,,',
',,,,,,50,,,,,,,,,,,,,,50,33,,,,,,33,,,,,,,,,,,,,,,33,,,,50,,,,33,,50',
',,,,,,,,,,,,33,,,,,,,,,33,,,,,,,,,,50,,,50,,,,,,,,,,33,50,,,,,33,33',
'50,,33,,,50,33,,33,33,33,50,,,,,,33,,,,,,,42,,,,42,,,,,,,42,,,,,,,,',
',,42,,33,,42,42,33,,,33,,,,,,,,,,50,,,,,,,,,,,,,,,,,,42,,,33,33,42,',
',,42,33,,,,,,,42,,50,,,,,,,,,,,,,,33,,,,33,,,33,,,,42,42,,42,,,,,,33',
',,,,,,33,,,,,,,,,,,,,,,33,,,,,,,33,,,,,,,33,,,,,,,,,,,,,,,,,,,,33,,',
',,,,,,,,33,,33,,,,,,,,,,,,,,,,,,,,,,,,,,33,,,,,,,,,,,,,42,,42,42,,42',
'42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,33,33,,,,,,,,,33,,,,,33,,,33',
',,33,,,33,,,,,,,,,,,,,,,,,,,,,,33,,33,33,,42,,,,,,,42,,,,,,,,,,,,,,',
',,,,33,33,,,42,,,,,,,,42,42,,,,,,,42,,42,42,42,,,,33,,,42,,,,,,,,,33',
',,,,,,,,,,,,,,,,33,,,,,42,,,,42,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,42',
'42,,,,,,,,,,,,,,,,,33,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,42,,,,,,,42,,,',
',,,,,,,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,42,,,,,,42,,42,',
',,,,,,,,,,42,,,,,,,,,,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,42,42,,,,,,,,,42,,,,,',
',,42,,,,,,,,,,,,,,,,,,,,42,,,,,,42,,42,,42,42,,,,,,,,,,,,,,,,,,,,,,',
',,,,,42,42,42,,,,,,,,,,,,,,,,,,42,,,,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,42' ]
        racc_goto_check = arr = Array.new(2883, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_goto_pointer = [
   nil,   167,   163,   161,   156,   142,    28,    -1,    24,   -20,
    33,   -44,    26,  -318,  -528,  -588,   nil,   -33,    60,    16,
    16,   -37,   105,     1,   664,  -109,  -525,   686,  -249,  1004,
   946,  -170,   -33,  1611,    18,   nil,   -36,   nil,  -305,    61,
  -314,  -218,  2019,   -35,   -14,   809,   nil,   -68,   -57,  -396,
  1197,  -234,    51,     0,    54,   nil,   nil,   -10,   -16,   153,
   nil,   nil,    34,   -52,  -313,   -37,   246,  -436,   -90,  -306,
   nil,   nil,   nil,   nil,   nil,   nil,    40,   nil,   412,     2,
    67,   nil,   112,   nil,  -359,  -676,   nil,   nil,  -129,   nil,
   nil,  -243,   nil,   137,   nil,  -156,    43,   nil,   nil,  -317,
    69,  -221,  -590,    29,  -109,  -594,  -385,   634,  -453,  -397,
   704,    22,   nil,  -364,  -521,  -579,  -571,   133,   -62,    10,
   125,   nil,  -728,  -402,  -575,   nil,   nil,    44,   132,    85,
   119,  -143,  -194,   116,  -297,   148,  -279,  -413,  -420,  -725,
   nil,     7,  -333 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   324,   nil,   247,
   325,   nil,   327,   nil,   856,   nil,   323,   nil,   nil,   nil,
   114,    53,    60,   118,   297,   nil,   nil,   126,   nil,   129,
   103,   nil,   589,    14,    19,    25,   113,    40,   695,   nil,
   nil,   nil,    68,    73,   nil,   nil,    87,    91,    97,   nil,
   135,   306,   nil,   300,   534,   179,   302,    42,    46,    56,
   249,   252,   nil,   122,   nil,   125,   580,   752,   nil,   133,
     9,    16,    20,    27,    33,    37,    44,    48,   nil,   nil,
   352,    75,   nil,    84,   nil,   nil,    95,   102,   nil,     7,
    13,   nil,    28,   nil,    39,   nil,   601,    54,    61,   nil,
   nil,   nil,   453,   138,   nil,   450,   nil,   154,   nil,   160,
   nil,   653,   494,   nil,   nil,   nil,   147,   nil,   nil,   563,
   nil,   581,   nil,   nil,   nil,    99,   105,     5,   nil,   nil,
   nil,   nil,   457,   nil,   nil,   nil,   140,   141,   146,   682,
   152,   155,   127 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 140, :_reduce_1,
  0, 143, :_reduce_2,
  2, 141, :_reduce_3,
  2, 142, :_reduce_4,
  1, 144, :_reduce_5,
  1, 144, :_reduce_6,
  3, 144, :_reduce_7,
  2, 144, :_reduce_8,
  1, 147, :_reduce_9,
  1, 147, :_reduce_none,
  4, 150, :_reduce_11,
  2, 151, :_reduce_12,
  1, 155, :_reduce_13,
  1, 155, :_reduce_14,
  3, 155, :_reduce_15,
  2, 155, :_reduce_none,
  0, 170, :_reduce_17,
  4, 149, :_reduce_18,
  3, 149, :_reduce_none,
  3, 149, :_reduce_none,
  3, 149, :_reduce_none,
  2, 149, :_reduce_none,
  3, 149, :_reduce_23,
  3, 149, :_reduce_24,
  3, 149, :_reduce_none,
  3, 149, :_reduce_none,
  3, 149, :_reduce_none,
  4, 149, :_reduce_none,
  3, 149, :_reduce_29,
  3, 149, :_reduce_none,
  3, 149, :_reduce_none,
  6, 149, :_reduce_none,
  5, 149, :_reduce_none,
  5, 149, :_reduce_none,
  5, 149, :_reduce_none,
  3, 149, :_reduce_none,
  3, 149, :_reduce_none,
  3, 149, :_reduce_none,
  3, 149, :_reduce_none,
  1, 149, :_reduce_none,
  1, 169, :_reduce_none,
  3, 169, :_reduce_none,
  3, 169, :_reduce_none,
  3, 169, :_reduce_none,
  2, 169, :_reduce_none,
  1, 169, :_reduce_none,
  1, 158, :_reduce_none,
  1, 160, :_reduce_none,
  1, 160, :_reduce_none,
  2, 160, :_reduce_50,
  2, 160, :_reduce_none,
  2, 160, :_reduce_none,
  1, 174, :_reduce_none,
  4, 174, :_reduce_none,
  4, 174, :_reduce_none,
  4, 179, :_reduce_none,
  2, 173, :_reduce_57,
  3, 173, :_reduce_none,
  4, 173, :_reduce_59,
  5, 173, :_reduce_none,
  4, 173, :_reduce_none,
  5, 173, :_reduce_none,
  2, 173, :_reduce_63,
  2, 173, :_reduce_64,
  1, 161, :_reduce_none,
  3, 161, :_reduce_none,
  1, 183, :_reduce_none,
  3, 183, :_reduce_none,
  1, 182, :_reduce_none,
  2, 182, :_reduce_none,
  3, 182, :_reduce_none,
  5, 182, :_reduce_none,
  2, 182, :_reduce_none,
  4, 182, :_reduce_none,
  2, 182, :_reduce_none,
  4, 182, :_reduce_none,
  1, 182, :_reduce_none,
  3, 182, :_reduce_none,
  1, 186, :_reduce_none,
  3, 186, :_reduce_none,
  2, 185, :_reduce_none,
  3, 185, :_reduce_none,
  1, 188, :_reduce_none,
  3, 188, :_reduce_none,
  1, 187, :_reduce_none,
  4, 187, :_reduce_none,
  3, 187, :_reduce_none,
  3, 187, :_reduce_none,
  3, 187, :_reduce_none,
  3, 187, :_reduce_none,
  2, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 159, :_reduce_none,
  4, 159, :_reduce_94,
  3, 159, :_reduce_95,
  3, 159, :_reduce_none,
  3, 159, :_reduce_none,
  3, 159, :_reduce_none,
  2, 159, :_reduce_none,
  1, 159, :_reduce_none,
  1, 190, :_reduce_101,
  1, 190, :_reduce_102,
  2, 191, :_reduce_103,
  1, 191, :_reduce_104,
  3, 191, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_109,
  1, 192, :_reduce_110,
  1, 195, :_reduce_none,
  1, 195, :_reduce_none,
  1, 156, :_reduce_none,
  1, 156, :_reduce_none,
  1, 157, :_reduce_none,
  3, 157, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  3, 172, :_reduce_187,
  5, 172, :_reduce_none,
  3, 172, :_reduce_189,
  5, 172, :_reduce_none,
  6, 172, :_reduce_none,
  5, 172, :_reduce_none,
  5, 172, :_reduce_none,
  5, 172, :_reduce_none,
  5, 172, :_reduce_none,
  4, 172, :_reduce_none,
  3, 172, :_reduce_none,
  3, 172, :_reduce_none,
  3, 172, :_reduce_none,
  3, 172, :_reduce_200,
  3, 172, :_reduce_201,
  3, 172, :_reduce_202,
  3, 172, :_reduce_203,
  3, 172, :_reduce_204,
  3, 172, :_reduce_205,
  4, 172, :_reduce_none,
  4, 172, :_reduce_none,
  2, 172, :_reduce_none,
  2, 172, :_reduce_209,
  3, 172, :_reduce_210,
  3, 172, :_reduce_211,
  3, 172, :_reduce_212,
  3, 172, :_reduce_213,
  3, 172, :_reduce_214,
  3, 172, :_reduce_215,
  3, 172, :_reduce_216,
  3, 172, :_reduce_217,
  3, 172, :_reduce_218,
  3, 172, :_reduce_219,
  3, 172, :_reduce_220,
  3, 172, :_reduce_221,
  3, 172, :_reduce_222,
  2, 172, :_reduce_223,
  3, 172, :_reduce_224,
  3, 172, :_reduce_225,
  0, 199, :_reduce_226,
  4, 172, :_reduce_227,
  0, 200, :_reduce_228,
  4, 172, :_reduce_229,
  3, 172, :_reduce_none,
  6, 172, :_reduce_none,
  1, 172, :_reduce_none,
  1, 168, :_reduce_none,
  1, 201, :_reduce_none,
  2, 201, :_reduce_none,
  4, 201, :_reduce_none,
  2, 201, :_reduce_none,
  3, 205, :_reduce_238,
  1, 206, :_reduce_239,
  1, 206, :_reduce_none,
  1, 164, :_reduce_241,
  1, 164, :_reduce_none,
  1, 175, :_reduce_243,
  2, 175, :_reduce_244,
  2, 175, :_reduce_245,
  4, 175, :_reduce_246,
  1, 175, :_reduce_247,
  1, 178, :_reduce_none,
  2, 208, :_reduce_249,
  2, 207, :_reduce_250,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 202, :_reduce_253,
  2, 202, :_reduce_254,
  3, 202, :_reduce_255,
  4, 202, :_reduce_256,
  3, 167, :_reduce_none,
  4, 167, :_reduce_none,
  2, 167, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  3, 198, :_reduce_none,
  3, 198, :_reduce_none,
  3, 198, :_reduce_271,
  3, 198, :_reduce_272,
  2, 198, :_reduce_273,
  3, 198, :_reduce_274,
  3, 198, :_reduce_275,
  1, 198, :_reduce_276,
  4, 198, :_reduce_277,
  3, 198, :_reduce_278,
  1, 198, :_reduce_279,
  5, 198, :_reduce_none,
  4, 198, :_reduce_none,
  3, 198, :_reduce_none,
  2, 198, :_reduce_283,
  1, 198, :_reduce_284,
  2, 198, :_reduce_285,
  2, 198, :_reduce_none,
  6, 198, :_reduce_287,
  6, 198, :_reduce_288,
  5, 198, :_reduce_none,
  5, 198, :_reduce_none,
  5, 198, :_reduce_291,
  4, 198, :_reduce_292,
  7, 198, :_reduce_none,
  5, 198, :_reduce_294,
  6, 198, :_reduce_none,
  4, 198, :_reduce_296,
  5, 198, :_reduce_297,
  7, 198, :_reduce_298,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 163, :_reduce_none,
  1, 216, :_reduce_none,
  1, 222, :_reduce_none,
  1, 225, :_reduce_none,
  1, 226, :_reduce_none,
  1, 228, :_reduce_none,
  1, 229, :_reduce_none,
  1, 231, :_reduce_none,
  1, 233, :_reduce_none,
  1, 236, :_reduce_none,
  1, 237, :_reduce_none,
  1, 217, :_reduce_none,
  1, 223, :_reduce_none,
  1, 223, :_reduce_none,
  2, 223, :_reduce_none,
  1, 227, :_reduce_none,
  1, 227, :_reduce_none,
  1, 224, :_reduce_320,
  5, 224, :_reduce_321,
  1, 153, :_reduce_322,
  2, 153, :_reduce_323,
  1, 232, :_reduce_none,
  1, 232, :_reduce_none,
  1, 241, :_reduce_none,
  3, 241, :_reduce_none,
  1, 244, :_reduce_none,
  3, 244, :_reduce_none,
  1, 243, :_reduce_none,
  4, 243, :_reduce_none,
  6, 243, :_reduce_none,
  3, 243, :_reduce_none,
  5, 243, :_reduce_none,
  2, 243, :_reduce_none,
  4, 243, :_reduce_none,
  1, 243, :_reduce_none,
  3, 243, :_reduce_none,
  6, 245, :_reduce_none,
  8, 245, :_reduce_none,
  4, 245, :_reduce_none,
  6, 245, :_reduce_none,
  4, 245, :_reduce_none,
  2, 245, :_reduce_none,
  6, 245, :_reduce_none,
  2, 245, :_reduce_none,
  4, 245, :_reduce_none,
  6, 245, :_reduce_none,
  2, 245, :_reduce_none,
  4, 245, :_reduce_none,
  2, 245, :_reduce_none,
  4, 245, :_reduce_none,
  1, 245, :_reduce_none,
  1, 180, :_reduce_354,
  1, 180, :_reduce_none,
  3, 251, :_reduce_none,
  1, 251, :_reduce_none,
  4, 251, :_reduce_358,
  1, 252, :_reduce_none,
  2, 252, :_reduce_none,
  1, 253, :_reduce_none,
  3, 253, :_reduce_none,
  1, 254, :_reduce_none,
  1, 254, :_reduce_none,
  2, 221, :_reduce_none,
  4, 256, :_reduce_none,
  1, 256, :_reduce_none,
  3, 257, :_reduce_none,
  3, 257, :_reduce_none,
  4, 259, :_reduce_none,
  4, 259, :_reduce_371,
  2, 176, :_reduce_372,
  4, 176, :_reduce_none,
  4, 176, :_reduce_none,
  2, 220, :_reduce_375,
  4, 220, :_reduce_376,
  4, 220, :_reduce_377,
  3, 220, :_reduce_378,
  3, 220, :_reduce_none,
  3, 220, :_reduce_none,
  2, 220, :_reduce_381,
  1, 220, :_reduce_382,
  4, 220, :_reduce_383,
  4, 219, :_reduce_384,
  4, 219, :_reduce_385,
  5, 230, :_reduce_386,
  1, 261, :_reduce_387,
  1, 261, :_reduce_none,
  6, 152, :_reduce_none,
  1, 152, :_reduce_none,
  1, 262, :_reduce_none,
  1, 262, :_reduce_none,
  1, 262, :_reduce_none,
  2, 263, :_reduce_none,
  1, 263, :_reduce_none,
  2, 154, :_reduce_none,
  1, 154, :_reduce_none,
  1, 209, :_reduce_none,
  1, 209, :_reduce_none,
  1, 209, :_reduce_none,
  1, 210, :_reduce_none,
  1, 265, :_reduce_none,
  1, 265, :_reduce_none,
  2, 265, :_reduce_none,
  3, 266, :_reduce_405,
  3, 211, :_reduce_406,
  3, 212, :_reduce_none,
  3, 213, :_reduce_none,
  3, 213, :_reduce_none,
  0, 269, :_reduce_none,
  3, 269, :_reduce_none,
  1, 270, :_reduce_none,
  2, 270, :_reduce_none,
  3, 214, :_reduce_none,
  3, 214, :_reduce_none,
  0, 272, :_reduce_416,
  3, 272, :_reduce_none,
  0, 267, :_reduce_418,
  2, 267, :_reduce_419,
  0, 268, :_reduce_420,
  2, 268, :_reduce_421,
  1, 271, :_reduce_422,
  2, 271, :_reduce_423,
  3, 271, :_reduce_424,
  1, 273, :_reduce_none,
  1, 273, :_reduce_none,
  1, 273, :_reduce_none,
  1, 273, :_reduce_none,
  2, 196, :_reduce_429,
  1, 274, :_reduce_none,
  1, 274, :_reduce_none,
  1, 274, :_reduce_none,
  1, 274, :_reduce_none,
  3, 197, :_reduce_none,
  1, 264, :_reduce_435,
  1, 264, :_reduce_436,
  2, 264, :_reduce_none,
  2, 264, :_reduce_none,
  1, 189, :_reduce_439,
  1, 189, :_reduce_440,
  1, 189, :_reduce_441,
  1, 189, :_reduce_442,
  1, 189, :_reduce_443,
  1, 189, :_reduce_444,
  1, 189, :_reduce_445,
  1, 189, :_reduce_446,
  1, 189, :_reduce_447,
  1, 189, :_reduce_448,
  1, 189, :_reduce_449,
  1, 189, :_reduce_450,
  1, 215, :_reduce_none,
  1, 162, :_reduce_none,
  1, 166, :_reduce_none,
  1, 166, :_reduce_none,
  1, 234, :_reduce_455,
  3, 234, :_reduce_456,
  2, 234, :_reduce_457,
  3, 238, :_reduce_458,
  2, 238, :_reduce_459,
  6, 258, :_reduce_460,
  8, 258, :_reduce_461,
  4, 258, :_reduce_462,
  6, 258, :_reduce_463,
  4, 258, :_reduce_464,
  6, 258, :_reduce_465,
  2, 258, :_reduce_466,
  4, 258, :_reduce_467,
  6, 258, :_reduce_468,
  2, 258, :_reduce_469,
  4, 258, :_reduce_470,
  2, 258, :_reduce_471,
  4, 258, :_reduce_472,
  1, 258, :_reduce_473,
  0, 258, :_reduce_474,
  1, 255, :_reduce_none,
  1, 255, :_reduce_none,
  1, 255, :_reduce_none,
  1, 255, :_reduce_none,
  1, 242, :_reduce_none,
  1, 242, :_reduce_480,
  3, 242, :_reduce_481,
  2, 242, :_reduce_482,
  1, 276, :_reduce_483,
  3, 276, :_reduce_none,
  1, 246, :_reduce_485,
  3, 246, :_reduce_486,
  3, 277, :_reduce_none,
  3, 278, :_reduce_none,
  1, 247, :_reduce_none,
  3, 247, :_reduce_none,
  1, 275, :_reduce_none,
  3, 275, :_reduce_none,
  1, 279, :_reduce_none,
  1, 279, :_reduce_none,
  2, 248, :_reduce_none,
  1, 248, :_reduce_none,
  1, 280, :_reduce_none,
  1, 280, :_reduce_none,
  2, 250, :_reduce_499,
  3, 250, :_reduce_500,
  2, 249, :_reduce_501,
  1, 249, :_reduce_none,
  1, 239, :_reduce_none,
  3, 239, :_reduce_none,
  1, 218, :_reduce_505,
  2, 218, :_reduce_506,
  1, 204, :_reduce_507,
  3, 204, :_reduce_508,
  3, 281, :_reduce_509,
  2, 281, :_reduce_510,
  1, 181, :_reduce_none,
  1, 181, :_reduce_none,
  1, 181, :_reduce_none,
  1, 177, :_reduce_none,
  1, 177, :_reduce_none,
  1, 177, :_reduce_none,
  1, 177, :_reduce_none,
  1, 260, :_reduce_none,
  1, 260, :_reduce_none,
  1, 260, :_reduce_none,
  1, 240, :_reduce_none,
  1, 240, :_reduce_none,
  0, 145, :_reduce_none,
  1, 145, :_reduce_none,
  0, 171, :_reduce_none,
  1, 171, :_reduce_none,
  2, 184, :_reduce_none,
  2, 165, :_reduce_none,
  0, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 235, :_reduce_none,
  1, 235, :_reduce_none,
  1, 148, :_reduce_none,
  2, 148, :_reduce_none,
  0, 146, :_reduce_none ]

racc_reduce_n = 537

racc_shift_n = 952

racc_token_table = {
  false => 0,
  :error => 1,
  :tLOWEST => 2,
  :tLBRACE_ARG => 3,
  :tLSHFT => 4,
  :tRSHFT => 5,
  :kIF_MOD => 6,
  :kUNLESS_MOD => 7,
  :kWHILE_MOD => 8,
  :kUNTIL_MOD => 9,
  :kOR => 10,
  :kAND => 11,
  :kNOT => 12,
  :kDEFined => 13,
  "=" => 14,
  :tOP_ASGN => 15,
  :kRESCUE_MOD => 16,
  "?" => 17,
  ":" => 18,
  :tDOT2 => 19,
  :tDOT3 => 20,
  :tOROP => 21,
  :tANDOP => 22,
  :tCMP => 23,
  :tEQ => 24,
  :tEQQ => 25,
  :tNEQ => 26,
  :tMATCH => 27,
  :tNMATCH => 28,
  ">" => 29,
  :tGEQ => 30,
  "<" => 31,
  :tLEQ => 32,
  "|" => 33,
  "^" => 34,
  "&" => 35,
  "+" => 36,
  "-" => 37,
  "*" => 38,
  "/" => 39,
  "%" => 40,
  :tUMINUS_NUM => 41,
  :tUMINUS => 42,
  :tPOW => 43,
  "!" => 44,
  "~" => 45,
  :tUPLUS => 46,
  :kCLASS => 47,
  :kMODULE => 48,
  :kDEF => 49,
  :kUNDEF => 50,
  :kBEGIN => 51,
  :kRESCUE => 52,
  :kENSURE => 53,
  :kEND => 54,
  :kIF => 55,
  :kUNLESS => 56,
  :kTHEN => 57,
  :kELSIF => 58,
  :kELSE => 59,
  :kCASE => 60,
  :kWHEN => 61,
  :kWHILE => 62,
  :kUNTIL => 63,
  :kFOR => 64,
  :kBREAK => 65,
  :kNEXT => 66,
  :kREDO => 67,
  :kRETRY => 68,
  :kIN => 69,
  :kDO => 70,
  :kDO_COND => 71,
  :kDO_BLOCK => 72,
  :kDO_LAMBDA => 73,
  :kRETURN => 74,
  :kYIELD => 75,
  :kSUPER => 76,
  :kSELF => 77,
  :kNIL => 78,
  :kTRUE => 79,
  :kFALSE => 80,
  :kALIAS => 81,
  :kDEFINED => 82,
  :klBEGIN => 83,
  :klEND => 84,
  :k__LINE__ => 85,
  :k__FILE__ => 86,
  :k__ENCODING__ => 87,
  :tIDENTIFIER => 88,
  :tFID => 89,
  :tGVAR => 90,
  :tIVAR => 91,
  :tCONSTANT => 92,
  :tCVAR => 93,
  :tLABEL => 94,
  :tINTEGER => 95,
  :tFLOAT => 96,
  :tSTRING_CONTENT => 97,
  :tCHAR => 98,
  :tNTH_REF => 99,
  :tBACK_REF => 100,
  :tREGEXP_END => 101,
  :tAREF => 102,
  :tASET => 103,
  :tCOLON2 => 104,
  :tCOLON3 => 105,
  :tASSOC => 106,
  :tLPAREN => 107,
  :tLPAREN_ARG => 108,
  :tRPAREN => 109,
  :tLBRACK => 110,
  :tLBRACE => 111,
  :tSTAR => 112,
  :tAMPER => 113,
  :tLAMBDA => 114,
  :tSYMBEG => 115,
  :tSTRING_BEG => 116,
  :tXSTRING_BEG => 117,
  :tREGEXP_BEG => 118,
  :tWORDS_BEG => 119,
  :tQWORDS_BEG => 120,
  :tSTRING_DBEG => 121,
  :tSTRING_DVAR => 122,
  :tSTRING_END => 123,
  :tLAMBEG => 124,
  :tSTRING => 125,
  :tXSTRING_END => 126,
  "{" => 127,
  "}" => 128,
  "[" => 129,
  "." => 130,
  "," => 131,
  "`" => 132,
  "(" => 133,
  ")" => 134,
  "]" => 135,
  ";" => 136,
  " " => 137,
  "\\n" => 138 }

racc_nt_base = 139

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "tLOWEST",
  "tLBRACE_ARG",
  "tLSHFT",
  "tRSHFT",
  "kIF_MOD",
  "kUNLESS_MOD",
  "kWHILE_MOD",
  "kUNTIL_MOD",
  "kOR",
  "kAND",
  "kNOT",
  "kDEFined",
  "\"=\"",
  "tOP_ASGN",
  "kRESCUE_MOD",
  "\"?\"",
  "\":\"",
  "tDOT2",
  "tDOT3",
  "tOROP",
  "tANDOP",
  "tCMP",
  "tEQ",
  "tEQQ",
  "tNEQ",
  "tMATCH",
  "tNMATCH",
  "\">\"",
  "tGEQ",
  "\"<\"",
  "tLEQ",
  "\"|\"",
  "\"^\"",
  "\"&\"",
  "\"+\"",
  "\"-\"",
  "\"*\"",
  "\"/\"",
  "\"%\"",
  "tUMINUS_NUM",
  "tUMINUS",
  "tPOW",
  "\"!\"",
  "\"~\"",
  "tUPLUS",
  "kCLASS",
  "kMODULE",
  "kDEF",
  "kUNDEF",
  "kBEGIN",
  "kRESCUE",
  "kENSURE",
  "kEND",
  "kIF",
  "kUNLESS",
  "kTHEN",
  "kELSIF",
  "kELSE",
  "kCASE",
  "kWHEN",
  "kWHILE",
  "kUNTIL",
  "kFOR",
  "kBREAK",
  "kNEXT",
  "kREDO",
  "kRETRY",
  "kIN",
  "kDO",
  "kDO_COND",
  "kDO_BLOCK",
  "kDO_LAMBDA",
  "kRETURN",
  "kYIELD",
  "kSUPER",
  "kSELF",
  "kNIL",
  "kTRUE",
  "kFALSE",
  "kALIAS",
  "kDEFINED",
  "klBEGIN",
  "klEND",
  "k__LINE__",
  "k__FILE__",
  "k__ENCODING__",
  "tIDENTIFIER",
  "tFID",
  "tGVAR",
  "tIVAR",
  "tCONSTANT",
  "tCVAR",
  "tLABEL",
  "tINTEGER",
  "tFLOAT",
  "tSTRING_CONTENT",
  "tCHAR",
  "tNTH_REF",
  "tBACK_REF",
  "tREGEXP_END",
  "tAREF",
  "tASET",
  "tCOLON2",
  "tCOLON3",
  "tASSOC",
  "tLPAREN",
  "tLPAREN_ARG",
  "tRPAREN",
  "tLBRACK",
  "tLBRACE",
  "tSTAR",
  "tAMPER",
  "tLAMBDA",
  "tSYMBEG",
  "tSTRING_BEG",
  "tXSTRING_BEG",
  "tREGEXP_BEG",
  "tWORDS_BEG",
  "tQWORDS_BEG",
  "tSTRING_DBEG",
  "tSTRING_DVAR",
  "tSTRING_END",
  "tLAMBEG",
  "tSTRING",
  "tXSTRING_END",
  "\"{\"",
  "\"}\"",
  "\"[\"",
  "\".\"",
  "\",\"",
  "\"`\"",
  "\"(\"",
  "\")\"",
  "\"]\"",
  "\";\"",
  "\" \"",
  "\"\\\\n\"",
  "$start",
  "target",
  "program",
  "top_compstmt",
  "@1",
  "top_stmts",
  "opt_terms",
  "none",
  "top_stmt",
  "terms",
  "stmt",
  "bodystmt",
  "compstmt",
  "opt_rescue",
  "opt_else",
  "opt_ensure",
  "stmts",
  "fitem",
  "undef_list",
  "expr_value",
  "lhs",
  "command_call",
  "mlhs",
  "var_lhs",
  "primary_value",
  "opt_call_args",
  "rbracket",
  "backref",
  "mrhs",
  "arg_value",
  "expr",
  "@2",
  "opt_nl",
  "arg",
  "command",
  "block_command",
  "call_args",
  "block_call",
  "operation2",
  "command_args",
  "cmd_brace_block",
  "opt_block_param",
  "operation",
  "mlhs_basic",
  "mlhs_inner",
  "rparen",
  "mlhs_head",
  "mlhs_item",
  "mlhs_node",
  "mlhs_post",
  "variable",
  "cname",
  "cpath",
  "fname",
  "op",
  "reswords",
  "fsym",
  "symbol",
  "dsym",
  "primary",
  "@3",
  "@4",
  "aref_args",
  "args",
  "trailer",
  "assocs",
  "paren_args",
  "opt_paren_args",
  "opt_block_arg",
  "block_arg",
  "literal",
  "strings",
  "xstring",
  "regexp",
  "words",
  "qwords",
  "var_ref",
  "k_begin",
  "k_end",
  "assoc_list",
  "brace_block",
  "method_call",
  "lambda",
  "k_if",
  "then",
  "if_tail",
  "k_unless",
  "k_while",
  "do",
  "k_until",
  "k_case",
  "case_body",
  "k_for",
  "for_var",
  "k_class",
  "superclass",
  "term",
  "k_module",
  "k_def",
  "f_arglist",
  "singleton",
  "dot_or_colon",
  "f_marg",
  "f_norm_arg",
  "f_margs",
  "f_marg_list",
  "block_param",
  "f_arg",
  "f_block_optarg",
  "f_rest_arg",
  "opt_f_block_arg",
  "f_block_arg",
  "block_param_def",
  "opt_bv_decl",
  "bv_decls",
  "bvar",
  "f_bad_arg",
  "f_larglist",
  "lambda_body",
  "f_args",
  "do_block",
  "operation3",
  "cases",
  "exc_list",
  "exc_var",
  "numeric",
  "string",
  "string1",
  "string_contents",
  "xstring_contents",
  "word_list",
  "word",
  "string_content",
  "qword_list",
  "string_dvar",
  "sym",
  "f_optarg",
  "f_arg_item",
  "f_opt",
  "f_block_opt",
  "restarg_mark",
  "blkarg_mark",
  "assoc" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 75)
  def _reduce_1(val, _values, result)
                        # puts 'well, we got here..'
                    # puts val[0]
                    @parser_result = val[0]
                    result = val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 83)
  def _reduce_2(val, _values, result)
                        self.lex_state = :EXPR_BEG
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 87)
  def _reduce_3(val, _values, result)
                        # puts 'program'
                    # puts val[1]
                    result = val[1]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 94)
  def _reduce_4(val, _values, result)
                        # puts 'top_compstmt'
                    # puts val[0]
                    # puts val[1]
                    result = val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 102)
  def _reduce_5(val, _values, result)
                        result = []
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 106)
  def _reduce_6(val, _values, result)
                        result = [val[0]]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 110)
  def _reduce_7(val, _values, result)
                        result = val[0] + [val[2]]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 114)
  def _reduce_8(val, _values, result)
                        result = val[1]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 119)
  def _reduce_9(val, _values, result)
                        result = val[0]
                  
    result
  end
.,.,

# reduce 10 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 125)
  def _reduce_11(val, _values, result)
                        result = val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 130)
  def _reduce_12(val, _values, result)
                        result = val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 135)
  def _reduce_13(val, _values, result)
                        result = []
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 139)
  def _reduce_14(val, _values, result)
                        result = [val[0]]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 143)
  def _reduce_15(val, _values, result)
                        result = val[0] + [val[2]]
		              
    result
  end
.,.,

# reduce 16 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 149)
  def _reduce_17(val, _values, result)
                        self.lex_state = :EXPR_FNAME
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 154)
  def _reduce_18(val, _values, result)
                      
    result
  end
.,.,

# reduce 19 omitted

# reduce 20 omitted

# reduce 21 omitted

# reduce 22 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 161)
  def _reduce_23(val, _values, result)
                		    result = node :if_mod, :stmt => val[0], :expr => val[2]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 165)
  def _reduce_24(val, _values, result)
                		    result = node :unless_mod, :stmt => val[0], :expr => val[2]
            		  
    result
  end
.,.,

# reduce 25 omitted

# reduce 26 omitted

# reduce 27 omitted

# reduce 28 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 173)
  def _reduce_29(val, _values, result)
                		    result = node :assign, :lhs => val[0], :rhs => val[2]
            		  
    result
  end
.,.,

# reduce 30 omitted

# reduce 31 omitted

# reduce 32 omitted

# reduce 33 omitted

# reduce 34 omitted

# reduce 35 omitted

# reduce 36 omitted

# reduce 37 omitted

# reduce 38 omitted

# reduce 39 omitted

# reduce 40 omitted

# reduce 41 omitted

# reduce 42 omitted

# reduce 43 omitted

# reduce 44 omitted

# reduce 45 omitted

# reduce 46 omitted

# reduce 47 omitted

# reduce 48 omitted

# reduce 49 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 200)
  def _reduce_50(val, _values, result)
                  	    result = node :return, :call_args => val[1]
              	  
    result
  end
.,.,

# reduce 51 omitted

# reduce 52 omitted

# reduce 53 omitted

# reduce 54 omitted

# reduce 55 omitted

# reduce 56 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 213)
  def _reduce_57(val, _values, result)
                        # command call - no brackets/recv
          		      result = node :call, :recv => nil, :meth => val[0], :call_args => val[1]
                  
    result
  end
.,.,

# reduce 58 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 219)
  def _reduce_59(val, _values, result)
              		      result = node :call, :recv => val[0], :meth => val[2], :call_args => val[3]
                  
    result
  end
.,.,

# reduce 60 omitted

# reduce 61 omitted

# reduce 62 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 226)
  def _reduce_63(val, _values, result)
          		          result = node :super, :call_args => val[1]
      		        
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 230)
  def _reduce_64(val, _values, result)
            	          result = node :yield, :call_args => val[1]
        	        
    result
  end
.,.,

# reduce 65 omitted

# reduce 66 omitted

# reduce 67 omitted

# reduce 68 omitted

# reduce 69 omitted

# reduce 70 omitted

# reduce 71 omitted

# reduce 72 omitted

# reduce 73 omitted

# reduce 74 omitted

# reduce 75 omitted

# reduce 76 omitted

# reduce 77 omitted

# reduce 78 omitted

# reduce 79 omitted

# reduce 80 omitted

# reduce 81 omitted

# reduce 82 omitted

# reduce 83 omitted

# reduce 84 omitted

# reduce 85 omitted

# reduce 86 omitted

# reduce 87 omitted

# reduce 88 omitted

# reduce 89 omitted

# reduce 90 omitted

# reduce 91 omitted

# reduce 92 omitted

# reduce 93 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 271)
  def _reduce_94(val, _values, result)
    		                result = node :call, :recv => val[0], :meth => '[]', :args => val[2]
		              
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 275)
  def _reduce_95(val, _values, result)
              		      result = node :call, :recv => val[0], :meth => val[2]
                  
    result
  end
.,.,

# reduce 96 omitted

# reduce 97 omitted

# reduce 98 omitted

# reduce 99 omitted

# reduce 100 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 285)
  def _reduce_101(val, _values, result)
                        puts 'ERROR: cant use identifier for class/mod name'
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 289)
  def _reduce_102(val, _values, result)
                		    result = val[0]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 295)
  def _reduce_103(val, _values, result)
                      
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 298)
  def _reduce_104(val, _values, result)
      	                result = node :path, :cname => val[0]
  	              
    result
  end
.,.,

# reduce 105 omitted

# reduce 106 omitted

# reduce 107 omitted

# reduce 108 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 307)
  def _reduce_109(val, _values, result)
    		                self.lex_state = :EXPR_END
		                result = val[0]
		              
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 312)
  def _reduce_110(val, _values, result)
    		                self.lex_state = :EXPR_END
		                result = val[0]
		              
    result
  end
.,.,

# reduce 111 omitted

# reduce 112 omitted

# reduce 113 omitted

# reduce 114 omitted

# reduce 115 omitted

# reduce 116 omitted

# reduce 117 omitted

# reduce 118 omitted

# reduce 119 omitted

# reduce 120 omitted

# reduce 121 omitted

# reduce 122 omitted

# reduce 123 omitted

# reduce 124 omitted

# reduce 125 omitted

# reduce 126 omitted

# reduce 127 omitted

# reduce 128 omitted

# reduce 129 omitted

# reduce 130 omitted

# reduce 131 omitted

# reduce 132 omitted

# reduce 133 omitted

# reduce 134 omitted

# reduce 135 omitted

# reduce 136 omitted

# reduce 137 omitted

# reduce 138 omitted

# reduce 139 omitted

# reduce 140 omitted

# reduce 141 omitted

# reduce 142 omitted

# reduce 143 omitted

# reduce 144 omitted

# reduce 145 omitted

# reduce 146 omitted

# reduce 147 omitted

# reduce 148 omitted

# reduce 149 omitted

# reduce 150 omitted

# reduce 151 omitted

# reduce 152 omitted

# reduce 153 omitted

# reduce 154 omitted

# reduce 155 omitted

# reduce 156 omitted

# reduce 157 omitted

# reduce 158 omitted

# reduce 159 omitted

# reduce 160 omitted

# reduce 161 omitted

# reduce 162 omitted

# reduce 163 omitted

# reduce 164 omitted

# reduce 165 omitted

# reduce 166 omitted

# reduce 167 omitted

# reduce 168 omitted

# reduce 169 omitted

# reduce 170 omitted

# reduce 171 omitted

# reduce 172 omitted

# reduce 173 omitted

# reduce 174 omitted

# reduce 175 omitted

# reduce 176 omitted

# reduce 177 omitted

# reduce 178 omitted

# reduce 179 omitted

# reduce 180 omitted

# reduce 181 omitted

# reduce 182 omitted

# reduce 183 omitted

# reduce 184 omitted

# reduce 185 omitted

# reduce 186 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 348)
  def _reduce_187(val, _values, result)
                        result = node :assign, :lhs => val[0], :rhs => val[2]
                  
    result
  end
.,.,

# reduce 188 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 353)
  def _reduce_189(val, _values, result)
                		    result = node :op_asgn, :lhs => val[0], :op => val[1], :rhs => val[2]
            		  
    result
  end
.,.,

# reduce 190 omitted

# reduce 191 omitted

# reduce 192 omitted

# reduce 193 omitted

# reduce 194 omitted

# reduce 195 omitted

# reduce 196 omitted

# reduce 197 omitted

# reduce 198 omitted

# reduce 199 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 367)
  def _reduce_200(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '+', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 371)
  def _reduce_201(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '-', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 375)
  def _reduce_202(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '*', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 379)
  def _reduce_203(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '/', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 383)
  def _reduce_204(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '%', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 387)
  def _reduce_205(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '**', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

# reduce 206 omitted

# reduce 207 omitted

# reduce 208 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 394)
  def _reduce_209(val, _values, result)
                		    result = node :call, :recv => val[1], :meth => '-@', :call_args => []
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 398)
  def _reduce_210(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '|', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 402)
  def _reduce_211(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '^', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 406)
  def _reduce_212(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '&', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 410)
  def _reduce_213(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '<=>', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 414)
  def _reduce_214(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '>', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 418)
  def _reduce_215(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '>=', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 422)
  def _reduce_216(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '<', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 426)
  def _reduce_217(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '<=', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 430)
  def _reduce_218(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '==', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 434)
  def _reduce_219(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '===', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 438)
  def _reduce_220(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '!=', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 442)
  def _reduce_221(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '=~', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 446)
  def _reduce_222(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '!~', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 450)
  def _reduce_223(val, _values, result)
                		    result = node :call, :recv => val[1], :meth => '~', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 454)
  def _reduce_224(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '<<', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 458)
  def _reduce_225(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '>>', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 462)
  def _reduce_226(val, _values, result)
                          # weird? unless break here, it throws an error? hmm...
                      # we must use val[3] then as this counts as one match....
              		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 468)
  def _reduce_227(val, _values, result)
                		    result = node :andop, :lhs => val[0], :rhs => val[3]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 472)
  def _reduce_228(val, _values, result)
                        # weird? unless break here, it throws an error? hmm...
                    # we must use val[3] then as this counts as one match....
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 478)
  def _reduce_229(val, _values, result)
                		    result = node :orop, :lhs => val[0], :rhs => val[3]
            		  
    result
  end
.,.,

# reduce 230 omitted

# reduce 231 omitted

# reduce 232 omitted

# reduce 233 omitted

# reduce 234 omitted

# reduce 235 omitted

# reduce 236 omitted

# reduce 237 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 493)
  def _reduce_238(val, _values, result)
                        result = val[1]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 498)
  def _reduce_239(val, _values, result)
                        result = node :call_args, :args => nil
                  
    result
  end
.,.,

# reduce 240 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 504)
  def _reduce_241(val, _values, result)
                        result = node :call_args, :args => nil
                  
    result
  end
.,.,

# reduce 242 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 510)
  def _reduce_243(val, _values, result)
                		    result = node :call_args, :args => [val[0]]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 514)
  def _reduce_244(val, _values, result)
                		    result = node :call_args, :args => val[0], :block_arg => val[1]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 518)
  def _reduce_245(val, _values, result)
                		    result = node :call_args, :assocs => val[0], :block_arg => val[1]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 522)
  def _reduce_246(val, _values, result)
                		    result = node :call_args, :args => val[0], :assocs => val[2], :block_arg => val[3]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 526)
  def _reduce_247(val, _values, result)
                		    result = node :call_args, :block_arg => val[0]
            		  
    result
  end
.,.,

# reduce 248 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 533)
  def _reduce_249(val, _values, result)
                        result = self.node :block_arg, :arg => val[1]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 538)
  def _reduce_250(val, _values, result)
                        resul = val[1]
                  
    result
  end
.,.,

# reduce 251 omitted

# reduce 252 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 545)
  def _reduce_253(val, _values, result)
                        result = [val[0]]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 549)
  def _reduce_254(val, _values, result)
    		                result = [val[1]]
		              
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 553)
  def _reduce_255(val, _values, result)
    		                result = val[0] + [val[2]]
		              
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 557)
  def _reduce_256(val, _values, result)
    		                result = val[0] + [val[3]]
		              
    result
  end
.,.,

# reduce 257 omitted

# reduce 258 omitted

# reduce 259 omitted

# reduce 260 omitted

# reduce 261 omitted

# reduce 262 omitted

# reduce 263 omitted

# reduce 264 omitted

# reduce 265 omitted

# reduce 266 omitted

# reduce 267 omitted

# reduce 268 omitted

# reduce 269 omitted

# reduce 270 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 577)
  def _reduce_271(val, _values, result)
                		    result = node :lparen, :stmt => val[1]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 581)
  def _reduce_272(val, _values, result)
                		    result = node :colon2, :lhs => val[0], :rhs => val[2]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 585)
  def _reduce_273(val, _values, result)
                		    result = node :colon3, :rhs => val[1]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 589)
  def _reduce_274(val, _values, result)
                		    result = node :array, :args => val[1]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 593)
  def _reduce_275(val, _values, result)
                		    result = node :assoc_list, :list => val[1]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 597)
  def _reduce_276(val, _values, result)
                		    result = node :return
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 601)
  def _reduce_277(val, _values, result)
            	          result = node :yield, :call_args => val[2]
        	        
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 605)
  def _reduce_278(val, _values, result)
            	          result = node :yield
        	        
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 609)
  def _reduce_279(val, _values, result)
            	          result = node :yield
        	        
    result
  end
.,.,

# reduce 280 omitted

# reduce 281 omitted

# reduce 282 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 616)
  def _reduce_283(val, _values, result)
                        # puts 1
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 620)
  def _reduce_284(val, _values, result)
                		    # puts 2
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 624)
  def _reduce_285(val, _values, result)
                		    val[0][:brace_block] = val[1]
            		    result = val[0]
            		  
    result
  end
.,.,

# reduce 286 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 630)
  def _reduce_287(val, _values, result)
                		    result = self.node :if, :expr => val[1], :stmt => val[3], :tail => val[4]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 634)
  def _reduce_288(val, _values, result)
                		    result = self.node :unless, :expr => val[1], :stmt => val[3], :tail => val[4]
            		  
    result
  end
.,.,

# reduce 289 omitted

# reduce 290 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 640)
  def _reduce_291(val, _values, result)
                		    result = node :case, :expr => val[1], :body => val[3]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 644)
  def _reduce_292(val, _values, result)
                		    result = node :case, :expr => nil, :body => val[2]
            		  
    result
  end
.,.,

# reduce 293 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 649)
  def _reduce_294(val, _values, result)
                		    result = self.node_class(:cpath => val[1], :superclass => val[2], :bodystmt => val[3])
            		  
    result
  end
.,.,

# reduce 295 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 654)
  def _reduce_296(val, _values, result)
                		    result = self.node_module(:cpath => val[1], :body => val[2])
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 658)
  def _reduce_297(val, _values, result)
                		    result = self.node :def, :fname => val[1], :arglist => val[2], :bodystmt => val[3]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 662)
  def _reduce_298(val, _values, result)
                		    result = self.node :def, :singleton => val[1], :fname => val[3], :arglist => val[4], :bodystmt => val[5]
            		  
    result
  end
.,.,

# reduce 299 omitted

# reduce 300 omitted

# reduce 301 omitted

# reduce 302 omitted

# reduce 303 omitted

# reduce 304 omitted

# reduce 305 omitted

# reduce 306 omitted

# reduce 307 omitted

# reduce 308 omitted

# reduce 309 omitted

# reduce 310 omitted

# reduce 311 omitted

# reduce 312 omitted

# reduce 313 omitted

# reduce 314 omitted

# reduce 315 omitted

# reduce 316 omitted

# reduce 317 omitted

# reduce 318 omitted

# reduce 319 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 702)
  def _reduce_320(val, _values, result)
                        result = val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 706)
  def _reduce_321(val, _values, result)
                  	    result = [self.node(:elsif, :expr => val[1], :stmt => val[3])] + val[4]
              	  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 711)
  def _reduce_322(val, _values, result)
                        result = []
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 715)
  def _reduce_323(val, _values, result)
                  	    result = [self.node(:else, :stmt => val[1])]
              	  
    result
  end
.,.,

# reduce 324 omitted

# reduce 325 omitted

# reduce 326 omitted

# reduce 327 omitted

# reduce 328 omitted

# reduce 329 omitted

# reduce 330 omitted

# reduce 331 omitted

# reduce 332 omitted

# reduce 333 omitted

# reduce 334 omitted

# reduce 335 omitted

# reduce 336 omitted

# reduce 337 omitted

# reduce 338 omitted

# reduce 339 omitted

# reduce 340 omitted

# reduce 341 omitted

# reduce 342 omitted

# reduce 343 omitted

# reduce 344 omitted

# reduce 345 omitted

# reduce 346 omitted

# reduce 347 omitted

# reduce 348 omitted

# reduce 349 omitted

# reduce 350 omitted

# reduce 351 omitted

# reduce 352 omitted

# reduce 353 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 755)
  def _reduce_354(val, _values, result)
                        result = nil
                  
    result
  end
.,.,

# reduce 355 omitted

# reduce 356 omitted

# reduce 357 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 763)
  def _reduce_358(val, _values, result)
                		    result = val[1]
            		  
    result
  end
.,.,

# reduce 359 omitted

# reduce 360 omitted

# reduce 361 omitted

# reduce 362 omitted

# reduce 363 omitted

# reduce 364 omitted

# reduce 365 omitted

# reduce 366 omitted

# reduce 367 omitted

# reduce 368 omitted

# reduce 369 omitted

# reduce 370 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 786)
  def _reduce_371(val, _values, result)
                        result = node :brace_block, :params => val[1], :stmt => val[2]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 791)
  def _reduce_372(val, _values, result)
                        val[0][:brace_block] = val[1]
                    result = val[0]
                  
    result
  end
.,.,

# reduce 373 omitted

# reduce 374 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 799)
  def _reduce_375(val, _values, result)
                        result = node :call, :recv => nil, :meth => val[0], :call_args => val[1]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 803)
  def _reduce_376(val, _values, result)
                        result = node :call, :recv => val[0], :meth => val[2], :call_args => val[3]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 807)
  def _reduce_377(val, _values, result)
                  	    puts 'SCOOOBY DOOOOOOOOOOOOOOOOOOOOOOOOOOOOO 2'
              	  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 811)
  def _reduce_378(val, _values, result)
                  	    puts 'SCOOOBY DOOOOOOOOOOOOOOOOOOOOOOOOOOOOO 3'
              	  
    result
  end
.,.,

# reduce 379 omitted

# reduce 380 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 817)
  def _reduce_381(val, _values, result)
                		    result = node :super, :call_args => val[1]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 821)
  def _reduce_382(val, _values, result)
                		    result = node :super, :call_args => nil
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 825)
  def _reduce_383(val, _values, result)
                        result = node :call, :recv => val[0], :meth => '[]', :call_args => val[2]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 832)
  def _reduce_384(val, _values, result)
                      
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 835)
  def _reduce_385(val, _values, result)
                		    result = node :brace_block, :params => val[1], :stmt => val[2]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 840)
  def _reduce_386(val, _values, result)
                        result = [node(:when, :args => val[1], :stmt => val[3])] + val[4]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 845)
  def _reduce_387(val, _values, result)
                        result = val[0]
                  
    result
  end
.,.,

# reduce 388 omitted

# reduce 389 omitted

# reduce 390 omitted

# reduce 391 omitted

# reduce 392 omitted

# reduce 393 omitted

# reduce 394 omitted

# reduce 395 omitted

# reduce 396 omitted

# reduce 397 omitted

# reduce 398 omitted

# reduce 399 omitted

# reduce 400 omitted

# reduce 401 omitted

# reduce 402 omitted

# reduce 403 omitted

# reduce 404 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 874)
  def _reduce_405(val, _values, result)
                        result = node :string, :value => val[1], :beg => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 879)
  def _reduce_406(val, _values, result)
                        result = node :xstring, :value => val[1]
                  
    result
  end
.,.,

# reduce 407 omitted

# reduce 408 omitted

# reduce 409 omitted

# reduce 410 omitted

# reduce 411 omitted

# reduce 412 omitted

# reduce 413 omitted

# reduce 414 omitted

# reduce 415 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 898)
  def _reduce_416(val, _values, result)
                        # none..
                    result = []
                  
    result
  end
.,.,

# reduce 417 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 905)
  def _reduce_418(val, _values, result)
                        # none..
                    result = []
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 910)
  def _reduce_419(val, _values, result)
                		    result = val[0] + [val[1]]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 915)
  def _reduce_420(val, _values, result)
                        # none..
                    result = []
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 920)
  def _reduce_421(val, _values, result)
                		    result = val[0] + [val[1]]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 925)
  def _reduce_422(val, _values, result)
                        result = node :string_content, :value => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 929)
  def _reduce_423(val, _values, result)
                        result = node :string_dvar, :value => val[1]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 933)
  def _reduce_424(val, _values, result)
                        result = node :string_dbeg, :value => val[1]
                  
    result
  end
.,.,

# reduce 425 omitted

# reduce 426 omitted

# reduce 427 omitted

# reduce 428 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 943)
  def _reduce_429(val, _values, result)
                        result = node :symbol, :name => val[1]
                  
    result
  end
.,.,

# reduce 430 omitted

# reduce 431 omitted

# reduce 432 omitted

# reduce 433 omitted

# reduce 434 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 955)
  def _reduce_435(val, _values, result)
                        result = node :numeric, :value => val[0], :float => false
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 959)
  def _reduce_436(val, _values, result)
                        result = node :numeric, :value => val[0], :float => true
                  
    result
  end
.,.,

# reduce 437 omitted

# reduce 438 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 966)
  def _reduce_439(val, _values, result)
                        result = node :identifier, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 970)
  def _reduce_440(val, _values, result)
                        result = node :ivar, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 974)
  def _reduce_441(val, _values, result)
                        result = node :gvar, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 978)
  def _reduce_442(val, _values, result)
                        result = node :constant, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 982)
  def _reduce_443(val, _values, result)
                        result = node :cvar, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 986)
  def _reduce_444(val, _values, result)
                        result = node :nil, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 990)
  def _reduce_445(val, _values, result)
                        result = node :self, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 994)
  def _reduce_446(val, _values, result)
                        result = node :true, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 998)
  def _reduce_447(val, _values, result)
                        result = node :false, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1002)
  def _reduce_448(val, _values, result)
                        result = node :__FILE__, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1006)
  def _reduce_449(val, _values, result)
                        result = node :__LINE__, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1010)
  def _reduce_450(val, _values, result)
                        result = node :__ENCODING__, :name => val[0]
                  
    result
  end
.,.,

# reduce 451 omitted

# reduce 452 omitted

# reduce 453 omitted

# reduce 454 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1022)
  def _reduce_455(val, _values, result)
                        result = nil
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1026)
  def _reduce_456(val, _values, result)
                		    result = node :superclass, :expr => val[1]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1028)
  def _reduce_457(val, _values, result)
     puts 'OMFG' 
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1032)
  def _reduce_458(val, _values, result)
                        result = val[1]
                    self.lex_state = :EXPR_BEG
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1037)
  def _reduce_459(val, _values, result)
                        result = val[0]
                    self.lex_state = :EXPR_BEG
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1043)
  def _reduce_460(val, _values, result)
                 		    result = node :arg, :arg => val[0], :optarg => val[2], :rest_arg => val[4], :opt_block_arg => val[5]
             		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1047)
  def _reduce_461(val, _values, result)
                 		    result = node :arg, :arg => val[0], :optarg => val[2], :rest_arg => val[4], :arg2 => val[6], :opt_block_arg => val[7]
             		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1051)
  def _reduce_462(val, _values, result)
                  	    result = node :arg, :arg => val[0], :optarg => val[2], :opt_block_arg => val[3]
              	  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1055)
  def _reduce_463(val, _values, result)
                  	    result = node :arg, :arg => val[0], :optarg => val[2], :arg2 => val[4], :opt_block_arg => val[5]
              	  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1059)
  def _reduce_464(val, _values, result)
                		    result = node :arg, :arg => val[0], :rest_arg => val[2], :opt_block_arg => val[3]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1063)
  def _reduce_465(val, _values, result)
                		    result = node :arg, :arg => val[0], :rest_arg => val[2], :arg2 => val[4], :opt_block_arg => val[5]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1067)
  def _reduce_466(val, _values, result)
                 		    result = node :arg, :arg => val[0], :opt_block_arg => val[1]
             		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1071)
  def _reduce_467(val, _values, result)
                		    result = node :optarg, :optarg => val[0], :rest_arg => val[2], :opt_block_arg => val[3]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1075)
  def _reduce_468(val, _values, result)
                		    result = node :optarg, :optarg => val[0], :rest_arg => val[2], :arg => val[4], :opt_block_arg => val[5]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1079)
  def _reduce_469(val, _values, result)
                 		    result = node :optarg, :optarg => val[0], :opt_block_arg => val[1]
             		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1083)
  def _reduce_470(val, _values, result)
                 		    result = node :optarg, :optarg => val[0], :arg => val[2], :opt_block_arg => val[3]
             		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1087)
  def _reduce_471(val, _values, result)
                 		    result = node :rest_arg, :rest_arg => val[0], :opt_block_arg => val[1]
             		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1091)
  def _reduce_472(val, _values, result)
                 		    result = node :rest_arg, :rest_arg => val[0], :arg => val[2], :opt_block_arg => val[3]
             		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1095)
  def _reduce_473(val, _values, result)
                 		    result = node :arg, :opt_block_arg => val[0]
             		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1099)
  def _reduce_474(val, _values, result)
                  	    # none...
              	    result = nil
              	  
    result
  end
.,.,

# reduce 475 omitted

# reduce 476 omitted

# reduce 477 omitted

# reduce 478 omitted

# reduce 479 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1111)
  def _reduce_480(val, _values, result)
                        # result = val[0]
              	    result = node :norm_arg, :value => val[0]
              	  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1117)
  def _reduce_481(val, _values, result)
                      
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1120)
  def _reduce_482(val, _values, result)
                        result = node :label_arg, :name => val[0], :value => val[1]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1125)
  def _reduce_483(val, _values, result)
                        result = val[0]
                  
    result
  end
.,.,

# reduce 484 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1131)
  def _reduce_485(val, _values, result)
                        result = [val[0]]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1135)
  def _reduce_486(val, _values, result)
                        # val[0] + val[2]
                    result = val[0] + [val[2]]
            		  
    result
  end
.,.,

# reduce 487 omitted

# reduce 488 omitted

# reduce 489 omitted

# reduce 490 omitted

# reduce 491 omitted

# reduce 492 omitted

# reduce 493 omitted

# reduce 494 omitted

# reduce 495 omitted

# reduce 496 omitted

# reduce 497 omitted

# reduce 498 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1160)
  def _reduce_499(val, _values, result)
                        result = val[1]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1164)
  def _reduce_500(val, _values, result)
                        result = node :label_arg, :name => val[0], :value => val[1]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1169)
  def _reduce_501(val, _values, result)
                        result = val[1]
                  
    result
  end
.,.,

# reduce 502 omitted

# reduce 503 omitted

# reduce 504 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1178)
  def _reduce_505(val, _values, result)
                        result = []
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1182)
  def _reduce_506(val, _values, result)
                  	    result = val[0]
              	  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1187)
  def _reduce_507(val, _values, result)
                        result = [val[0]]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1191)
  def _reduce_508(val, _values, result)
                		    result = val[0] + [val[2]]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1196)
  def _reduce_509(val, _values, result)
                        result = node :assoc, :key => val[0], :value => val[2]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1200)
  def _reduce_510(val, _values, result)
                        result = node :label_assoc, :key => val[0], :value => val[1]
                  
    result
  end
.,.,

# reduce 511 omitted

# reduce 512 omitted

# reduce 513 omitted

# reduce 514 omitted

# reduce 515 omitted

# reduce 516 omitted

# reduce 517 omitted

# reduce 518 omitted

# reduce 519 omitted

# reduce 520 omitted

# reduce 521 omitted

# reduce 522 omitted

# reduce 523 omitted

# reduce 524 omitted

# reduce 525 omitted

# reduce 526 omitted

# reduce 527 omitted

# reduce 528 omitted

# reduce 529 omitted

# reduce 530 omitted

# reduce 531 omitted

# reduce 532 omitted

# reduce 533 omitted

# reduce 534 omitted

# reduce 535 omitted

# reduce 536 omitted

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class RubyParser
  end   # module Vienna


