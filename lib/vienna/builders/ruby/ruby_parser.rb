#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.6
# from Racc grammer file "".
#

require 'racc/parser.rb'


# require 'ctokenizer'
require 'strscan'

module Vienna
  class RubyParser < Racc::Parser

module_eval(<<'...end ruby_parser.rb.y/module_eval...', 'ruby_parser.rb.y', 1224)


...end ruby_parser.rb.y/module_eval...
##### State transition tables begin ###

clist = [
'-10,-515,-66,396,397,-515,-515,-515,-515,-515,-515,396,397,-96,737,-515',
'-515,499,-515,-515,-515,-515,-515,-515,-515,-515,-515,-515,-515,-515',
'-515,-515,-515,-515,-515,-515,-515,-515,-515,-515,-515,-515,396,397',
'-515,502,396,397,396,397,-100,377,802,-515,-515,-515,-94,836,430,-515',
'-515,-270,-515,-97,746,-270,-270,-270,-270,-270,-270,-515,425,-98,740',
'-270,-270,-95,-270,-270,-270,-270,-270,-270,-270,-270,-270,-270,-270',
'-270,-270,-270,-270,-270,-270,-270,-270,-270,-270,-270,-270,-270,-97',
'338,-270,-515,494,587,552,429,613,338,606,-270,-270,-270,136,610,495',
'-270,-270,-80,-270,-87,-93,-449,454,569,-515,-515,-515,-515,-88,344',
'554,-515,-10,-515,-10,-515,344,344,-95,743,-99,567,426,537,344,-93,450',
'451,356,-89,358,496,-95,611,-95,261,339,268,271,272,610,-270,426,587',
'339,-92,356,438,358,536,110,-86,344,356,344,358,-87,-97,-89,-97,528',
'-270,356,-94,358,-270,-270,-270,-90,526,527,-270,147,-270,-266,-270',
'-515,-266,-266,-266,-266,-266,-266,-266,587,606,-89,-85,-266,-266,-266',
'-266,-266,-266,-266,-266,-266,-266,-266,-266,-266,-266,-266,-266,-266',
'-266,-266,-266,-266,-266,-266,-266,-266,-266,-266,-515,587,-266,-87',
'-85,-96,-87,356,606,358,-87,-266,-266,-266,-98,-96,-266,-266,-266,-270',
'-266,-442,-87,-94,-91,-97,775,-94,587,-94,-266,-266,-266,-89,-515,356',
'-89,358,-99,356,-89,358,494,856,-270,-270,-270,-442,356,-97,358,-270',
'-100,-95,495,438,708,-515,630,-515,-515,-515,494,-266,613,-266,-515',
'62,72,110,-441,610,658,356,495,358,-90,-88,-512,-511,356,-511,358,-266',
'-96,-86,-96,-266,-266,-266,-266,800,-443,-266,-266,-266,-441,-266,24',
'30,-91,42,47,51,54,60,67,356,127,358,801,-89,98,104,-92,-87,494,22,-443',
'34,40,44,48,58,61,68,503,426,495,136,505,100,106,5,8,15,19,28,386,387',
'388,389,53,59,66,74,80,81,86,91,96,613,4,9,454,21,27,32,610,-444,648',
'356,120,358,123,77,-301,90,94,118,72,6,10,16,20,29,33,38,450,451,356',
'805,358,-380,440,-444,144,148,150,153,154,-301,-301,356,701,358,261',
'343,-534,-534,24,30,344,156,47,51,54,60,67,147,127,356,807,358,98,104',
'356,-380,358,22,809,34,40,44,116,117,61,68,136,261,-446,268,271,131',
'106,5,8,15,19,28,-380,810,-380,-380,53,59,66,74,80,81,86,91,96,133,4',
'9,-446,21,27,32,261,657,-534,-534,120,-270,123,77,648,90,94,132,134',
'6,10,16,20,29,33,38,62,72,521,440,-270,144,148,150,153,154,-270,-270',
'584,356,-512,358,-447,344,-270,396,397,646,156,595,797,-436,845,708',
'147,-270,-270,24,30,-512,42,47,51,54,60,67,344,127,-447,-270,-270,98',
'104,-512,596,597,22,-436,34,40,44,48,58,61,68,-509,396,397,-95,774,100',
'106,5,8,15,19,28,396,397,-439,344,53,59,66,74,80,81,86,91,96,796,4,9',
'-271,21,27,32,312,816,-439,-251,120,582,123,77,-439,90,94,62,72,6,10',
'16,20,29,33,38,821,-271,-271,284,285,-509,313,-439,-439,506,440,-509',
'144,148,150,153,443,344,-94,857,-100,420,24,30,-445,42,47,51,54,60,67',
'76,78,630,507,508,98,104,351,845,708,22,788,34,40,44,48,58,61,68,-445',
'624,136,863,421,100,106,5,8,15,19,28,36,352,353,49,53,59,66,74,80,81',
'86,91,96,-252,4,9,-271,21,27,32,-99,567,62,72,64,344,75,77,521,90,94',
'103,344,6,10,16,20,29,33,38,511,-271,-271,-93,-449,440,828,144,148,150',
'153,154,829,24,30,582,42,47,51,54,60,67,76,127,156,416,512,98,104,-448',
'147,619,22,791,34,40,44,48,58,61,68,456,457,788,-515,569,100,106,5,8',
'15,19,28,36,-448,-448,49,53,59,66,74,80,81,86,91,96,608,4,9,454,21,27',
'32,599,837,594,110,64,-515,75,77,454,90,94,103,510,6,10,16,20,29,33',
'38,450,451,489,195,199,204,213,592,-515,591,-515,-515,450,451,-511,582',
'169,176,181,185,188,191,196,201,206,210,215,218,224,227,230,234,238',
'163,165,170,786,178,183,189,193,198,202,207,211,214,219,223,226,228',
'232,236,164,166,171,174,177,182,187,190,194,203,208,212,216,220,-265',
'344,459,233,237,162,322,324,325,327,184,454,-65,-271,329,330,331,332',
'221,81,86,333,96,415,784,-265,-265,460,461,540,344,192,197,-265,569',
'450,451,513,-271,-271,440,235,144,148,150,153,443,782,416,417,195,199',
'204,213,507,541,781,765,-265,-265,708,239,321,169,176,181,185,188,191',
'196,201,206,210,215,218,224,227,230,234,238,163,165,170,660,178,183',
'189,193,198,202,207,211,214,219,223,226,228,232,236,164,166,171,174',
'177,182,187,190,194,203,208,212,216,220,904,521,-448,233,237,162,167',
'172,175,180,184,454,344,914,200,205,209,217,221,521,765,229,539,521',
'535,507,508,-448,-448,344,421,192,197,523,521,450,451,452,915,916,440',
'235,144,148,150,153,443,858,419,195,199,204,213,777,521,144,148,150',
'153,445,516,239,169,176,181,185,188,191,196,201,206,210,215,218,224',
'227,230,234,238,163,165,170,630,178,183,189,193,198,202,207,211,214',
'219,223,226,228,232,236,164,166,171,174,177,182,187,190,194,203,208',
'212,216,220,344,865,498,233,237,162,167,172,175,180,184,497,765,400',
'200,205,209,217,221,311,344,229,870,440,458,144,148,150,153,443,758',
'192,197,455,440,521,144,148,150,153,443,235,445,110,10,668,669,442,670',
'195,199,204,213,445,27,32,449,437,789,-253,435,239,169,176,181,185,188',
'191,196,201,206,210,215,218,224,227,230,234,238,163,165,170,434,178',
'183,189,193,198,202,207,211,214,219,223,226,228,232,236,164,166,171',
'174,177,182,187,190,194,203,208,212,216,220,887,431,521,233,237,162',
'167,172,175,180,184,344,421,765,200,205,209,217,221,521,-80,229,419',
'440,414,144,148,150,153,443,344,192,197,788,440,788,144,148,150,153',
'443,235,445,899,10,900,749,442,865,195,199,204,213,445,777,344,144,148',
'150,153,788,239,169,176,181,185,188,191,196,201,206,210,215,218,224',
'227,230,234,238,163,165,170,521,178,183,189,193,198,202,207,211,214',
'219,223,226,228,232,236,164,166,171,174,177,182,187,190,194,203,208',
'212,216,220,261,411,906,233,237,162,167,172,175,180,184,908,788,911',
'200,205,209,217,221,788,440,229,144,148,150,153,443,386,387,388,389',
'192,197,386,387,388,389,385,913,445,410,235,343,385,10,386,387,388,389',
'195,199,204,213,409,405,385,-254,521,708,717,521,239,169,176,181,185',
'188,191,196,201,206,210,215,218,224,227,230,234,238,163,165,170,-231',
'178,183,189,193,198,202,207,211,214,219,223,226,228,232,236,164,166',
'171,174,177,182,187,190,194,203,208,212,216,220,865,16,378,233,237,162',
'167,172,175,180,184,344,722,347,200,205,209,217,221,222,225,229,231',
'440,346,144,148,150,153,443,729,192,197,341,440,523,144,148,150,153',
'443,235,445,336,386,387,388,389,788,195,199,204,213,445,385,865,788',
'939,788,788,320,239,169,176,181,185,188,191,196,201,206,210,215,218',
'224,227,230,234,238,163,165,170,314,178,183,189,193,198,202,207,211',
'214,219,223,226,228,232,236,164,166,171,174,177,182,187,190,194,203',
'208,212,216,220,344,299,732,233,237,162,167,172,175,180,184,-251,282',
'109,200,205,209,217,221,-513,-513,229,788,,,,,,,,,192,197,,,,,,,,,235',
',,10,,,,,,-513,-513,,,-513,-513,-513,-513,-513,,-513,239,,,-513,-513',
',,,-513,,-513,-513,-513,-513,-513,-513,-513,,,136,,,-513,-513,-513,-513',
'-513,-513,-513,,,,,-513,-513,-513,-513,-513,-513,-513,-513,-513,-513',
'-513,-513,,-513,-513,-513,,,118,72,-513,,-513,-513,,-513,-513,-513,-513',
'-513,-513,-513,-513,-513,-513,-513,,,,,,440,,144,148,150,153,154,-513',
'24,30,,,47,51,54,60,67,,127,156,,,98,104,,147,,22,,34,40,44,116,117',
'61,68,,,136,,,131,106,5,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,133',
'4,9,,21,27,32,,,-514,-514,120,,123,77,,90,94,132,134,6,10,16,20,29,33',
'38,,,,,,440,,144,148,150,153,154,400,-514,-514,,,-514,-514,-514,-514',
'-514,,-514,156,,,-514,-514,,147,,-514,,-514,-514,-514,-514,-514,-514',
'-514,,,136,,,-514,-514,-514,-514,-514,-514,-514,,,,,-514,-514,-514,-514',
'-514,-514,-514,-514,-514,-514,-514,-514,,-514,-514,-514,,,118,72,-514',
',-514,-514,,-514,-514,-514,-514,-514,-514,-514,-514,-514,-514,-514,',
',,,,440,,144,148,150,153,154,-514,24,30,,,47,51,54,60,67,,127,156,,',
'98,104,,147,,22,,34,40,44,116,117,61,68,,,136,,,131,106,5,8,15,19,28',
',,,,53,59,66,74,80,81,86,91,96,133,4,9,,21,27,32,,,118,72,120,,123,77',
',90,94,132,134,6,10,16,20,29,33,38,,,,,,440,,144,148,150,153,154,110',
'24,30,,,47,51,54,60,67,,127,156,,,98,104,,147,,22,,34,40,44,116,117',
'61,68,,,136,,,131,106,5,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,133',
'4,9,,21,27,32,,,118,72,120,,123,77,,90,94,132,134,6,10,16,20,29,33,38',
',,,,,440,,144,148,150,153,154,110,24,30,,,47,51,54,60,67,,127,156,,',
'98,104,,147,,22,,34,40,44,116,117,61,68,,,136,,,131,106,5,8,15,19,28',
',,,,53,59,66,74,80,81,86,91,96,133,4,9,,21,27,32,,,118,72,120,,123,77',
',90,94,132,134,6,10,16,20,29,33,38,,,,,,440,,144,148,150,153,154,110',
'24,30,,,47,51,54,60,67,,127,156,,,98,104,,147,,22,,34,40,44,116,117',
'61,68,,,,,,131,106,5,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,133,4',
'9,,21,27,32,,,,,120,,123,77,,90,94,132,134,6,10,16,20,29,33,38,,,,,',
',118,72,,,,261,110,268,271,272,274,276,253,256,258,259,262,264,266,269',
'273,275,277,254,255,257,260,263,265,267,270,24,30,278,,47,51,54,60,67',
',127,,,,98,104,,,,22,,34,40,44,116,117,61,68,-508,338,,,,131,106,5,8',
'15,19,28,,,,,53,59,66,74,80,81,86,91,96,133,4,9,,21,27,32,,,-436,,120',
',123,77,,90,94,132,134,6,10,16,20,29,33,38,118,72,,,,-508,339,-436,-436',
',,-508,110,,,,261,344,268,271,272,274,-534,-534,-534,-534,-534,-534',
',,,24,30,,,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117,61',
'68,-515,,,,,131,106,5,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,133',
'4,9,,21,27,32,,,-515,,120,,123,77,,90,94,132,134,6,10,16,20,29,33,38',
'-511,-511,-96,772,,-515,,-515,-515,,,-511,110,261,,268,271,272,274,276',
'253,256,258,259,262,264,266,269,273,275,277,-511,-511,,,-511,-511,-511',
'-511,-511,,-511,,,,-511,-511,,,,-511,,-511,-511,-511,-511,-511,-511',
'-511,,,,,,-511,-511,-511,-511,-511,-511,-511,,,,,-511,-511,-511,-511',
'-511,-511,-511,-511,-511,-511,-511,-511,,-511,-511,-511,,,,,-511,,-511',
'-511,,-511,-511,-511,-511,-511,-511,-511,-511,-511,-511,-511,-512,-512',
'-98,740,,,,,,,,261,-511,268,271,272,274,276,253,256,258,259,262,264',
'266,269,273,275,277,254,,-512,-512,,,-512,-512,-512,-512,-512,,-512',
',,,-512,-512,,,,-512,,-512,-512,-512,-512,-512,-512,-512,,,,,,-512,-512',
'-512,-512,-512,-512,-512,,,,,-512,-512,-512,-512,-512,-512,-512,-512',
'-512,-512,-512,-512,,-512,-512,-512,,,118,72,-512,,-512,-512,,-512,-512',
'-512,-512,-512,-512,-512,-512,-512,-512,-512,261,,268,271,272,274,-534',
'-534,-534,-534,-534,-534,-512,24,30,,,47,51,54,60,67,,127,,,,98,104',
',,,22,,34,40,44,116,117,61,68,,,,,,131,251,240,8,15,19,28,,,,,53,59',
'66,74,80,81,86,91,96,,4,9,,21,27,32,,,-508,-508,120,,123,77,,90,94,',
',6,10,16,20,29,33,38,261,,268,271,272,274,-534,-534,-534,-534,-534,-534',
'584,-508,-508,,,-508,-508,-508,-508,-508,,-508,,,,-508,-508,,,,-508',
',-508,-508,-508,-508,-508,-508,-508,,-508,,,,-508,-508,-508,-508,-508',
'-508,-508,,,,,-508,-508,-508,-508,-508,-508,-508,-508,-508,-508,-508',
'-508,,-508,-508,-508,,,-509,-509,-508,,-508,-508,,-508,-508,-508,-508',
'-508,-508,-508,-508,-508,-508,-508,,,,,,,-508,,,,,,-508,-509,-509,,',
'-509,-509,-509,-509,-509,,-509,,,,-509,-509,,,,-509,,-509,-509,-509',
'-509,-509,-509,-509,,-509,,,,-509,-509,-509,-509,-509,-509,-509,,,,',
'-509,-509,-509,-509,-509,-509,-509,-509,-509,-509,-509,-509,,-509,-509',
'-509,118,249,,,-509,,-509,-509,,-509,-509,-509,-509,-509,-509,-509,-509',
'-509,-509,-509,,,,,,,-509,,,,,242,-509,,,,,54,60,67,,127,,,,98,104,',
',,22,,34,40,44,116,117,61,68,,,,,,131,251,240,8,15,19,28,,,,,53,59,66',
'74,80,81,86,91,96,,4,9,,21,27,32,118,249,,,369,,123,77,,90,94,,,6,10',
'16,20,29,33,38,,,,,,,,,,,601,242,,,,,,54,60,67,,127,,,,98,104,,,,22',
',34,40,44,116,117,61,68,,,,,,131,251,240,8,15,19,28,,,,,53,59,66,74',
'80,81,86,91,96,300,4,9,,21,27,32,,,62,72,369,,123,77,,90,94,,,6,10,16',
'20,29,33,38,,,,,,,,,,,399,,,24,30,,42,47,51,54,60,67,76,127,,,,98,104',
',,,22,,34,40,44,48,58,61,68,,,,,,100,106,5,8,15,19,28,36,,,49,53,59',
'66,74,80,81,86,91,96,300,4,9,,21,27,32,,,62,72,64,,363,77,,90,94,103',
',6,10,16,20,29,33,38,261,,268,271,272,274,-534,-534,-534,-534,-534,-534',
',24,30,,42,47,51,54,60,67,76,127,,,,98,104,,,,22,,34,40,44,48,58,61',
'68,,,,,,100,106,5,8,15,19,28,36,,,49,53,59,66,74,80,81,86,91,96,300',
'4,9,,21,27,32,,,62,72,64,,75,77,,90,94,103,,6,10,16,20,29,33,38,261',
',268,271,272,274,276,253,256,258,259,262,,24,30,,42,47,51,54,60,67,76',
'127,,,,98,104,,,,22,,34,40,44,48,58,61,68,,,,,,100,106,5,8,15,19,28',
'36,,,49,53,59,66,74,80,81,86,91,96,300,4,9,,21,27,32,,,62,72,64,,75',
'77,,90,94,103,,6,10,16,20,29,33,38,261,,268,271,272,274,-534,-534,-534',
'-534,-534,-534,,24,30,,42,47,51,54,60,67,76,127,,,,98,104,,,,22,,34',
'40,44,48,58,61,68,,,,,,100,106,5,8,15,19,28,36,,,49,53,59,66,74,80,81',
'86,91,96,300,4,9,,21,27,32,,,62,72,64,,75,77,,90,94,103,,6,10,16,20',
'29,33,38,261,,268,271,272,274,-534,-534,-534,-534,-534,-534,,24,30,',
'42,47,51,54,60,67,76,127,,,,98,104,,,,22,,34,40,44,48,58,61,68,,,,,',
'100,106,5,8,15,19,28,36,,,49,53,59,66,74,80,81,86,91,96,300,4,9,,21',
'27,32,,,62,72,64,,75,77,,90,94,103,,6,10,16,20,29,33,38,261,,268,271',
'272,274,276,253,256,258,259,262,,24,30,,42,47,51,54,60,67,76,127,,,',
'98,104,,,,22,,34,40,44,48,58,61,68,,,,,,100,106,5,8,15,19,28,36,,,49',
'53,59,66,74,80,81,86,91,96,300,4,9,,21,27,32,,,62,72,64,,75,77,,90,94',
'103,,6,10,16,20,29,33,38,261,,268,271,272,274,276,253,256,258,259,262',
',24,30,,42,47,51,54,60,67,76,127,,,,98,104,,,,22,,34,40,44,48,58,61',
'68,,,,,,100,106,5,8,15,19,28,36,,,49,53,59,66,74,80,81,86,91,96,300',
'4,9,,21,27,32,,,62,72,64,,75,77,,90,94,103,,6,10,16,20,29,33,38,261',
',268,271,272,274,276,253,256,258,259,262,,24,30,,42,47,51,54,60,67,76',
'127,,,,98,104,,,,22,,34,40,44,48,58,61,68,,,,,,100,106,5,8,15,19,28',
'36,,,49,53,59,66,74,80,81,86,91,96,300,4,9,,21,27,32,,,62,72,64,,75',
'77,,90,94,103,,6,10,16,20,29,33,38,,,,,,,,,,,,,,24,30,,42,47,51,54,60',
'67,76,127,,,,98,104,,,,22,,34,40,44,48,58,61,68,,,,,,100,106,5,8,15',
'19,28,36,,,49,53,59,66,74,80,81,86,91,96,300,4,9,,21,27,32,,,62,72,64',
',75,77,,90,94,103,,6,10,16,20,29,33,38,,,,,,,,,,,,,,24,30,,42,47,51',
'54,60,67,76,127,,,,98,104,,,,22,,34,40,44,48,58,61,68,,,,,,100,106,5',
'8,15,19,28,36,,,49,53,59,66,74,80,81,86,91,96,300,4,9,,21,27,32,,,62',
'72,64,,363,77,,90,94,103,,6,10,16,20,29,33,38,,,,,,,,,,,,,,24,30,,42',
'47,51,54,60,67,76,127,,,,98,104,,,,22,,34,40,44,48,58,61,68,,,,,,100',
'106,5,8,15,19,28,36,,,49,53,59,66,74,80,81,86,91,96,300,4,9,,21,27,32',
',,62,72,64,,75,77,,90,94,103,,6,10,16,20,29,33,38,,,,,,,,,,,,,,24,30',
',42,47,51,54,60,67,76,127,,,,98,104,,,,22,,34,40,44,48,58,61,68,,,,',
',100,106,5,8,15,19,28,36,,,49,53,59,66,74,80,81,86,91,96,300,4,9,,21',
'27,32,,,62,72,64,,75,77,,90,94,103,,6,10,16,20,29,33,38,,,,,,,,,,,,',
',24,30,,42,47,51,54,60,67,76,127,,,,98,104,,,,22,,34,40,44,48,58,61',
'68,,,,,,100,106,5,8,15,19,28,36,,,49,53,59,66,74,80,81,86,91,96,300',
'4,9,,21,27,32,,,62,72,64,,75,77,,90,94,103,,6,10,16,20,29,33,38,,,,',
',,,,,,,,,24,30,,42,47,51,54,60,67,76,127,,,,98,104,,,,22,,34,40,44,48',
'58,61,68,,,,,,100,106,5,8,15,19,28,36,,,49,53,59,66,74,80,81,86,91,96',
'300,4,9,,21,27,32,,,62,72,64,,75,77,,90,94,103,,6,10,16,20,29,33,38',
',,,,,,,,,,,,,24,30,,42,47,51,54,60,67,76,127,,,,98,104,,,,22,,34,40',
'44,48,58,61,68,,,,,,100,106,5,8,15,19,28,36,,,49,53,59,66,74,80,81,86',
'91,96,300,4,9,,21,27,32,,,62,72,64,,75,77,,90,94,103,,6,10,16,20,29',
'33,38,,,,,,,,,,,,,,24,30,,42,47,51,54,60,67,76,127,,,,98,104,,,,22,',
'34,40,44,48,58,61,68,,,,,,100,106,5,8,15,19,28,36,,,49,53,59,66,74,80',
'81,86,91,96,300,4,9,,21,27,32,,,62,72,64,,363,77,,90,94,103,,6,10,16',
'20,29,33,38,,,,,,,,,,,,,,24,30,,42,47,51,54,60,67,76,127,,,,98,104,',
',,22,,34,40,44,48,58,61,68,,,,,,100,106,5,8,15,19,28,36,,,49,53,59,66',
'74,80,81,86,91,96,300,4,9,,21,27,32,,,62,72,64,,75,77,,90,94,103,,6',
'10,16,20,29,33,38,,,,,,,,,,,,,,24,30,,42,47,51,54,60,67,76,127,,,,98',
'104,,,,22,,34,40,44,48,58,61,68,,,,,,100,106,5,8,15,19,28,36,,,49,53',
'59,66,74,80,81,86,91,96,300,4,9,,21,27,32,,,62,72,64,,75,77,,90,94,103',
',6,10,16,20,29,33,38,,,,,,,,,,,,,,24,30,,42,47,51,54,60,67,76,127,,',
',98,104,,,,22,,34,40,44,48,58,61,68,,,,,,100,106,5,8,15,19,28,36,,,49',
'53,59,66,74,80,81,86,91,96,300,4,9,,21,27,32,,,62,72,64,,75,77,,90,94',
'103,,6,10,16,20,29,33,38,,,,,,,,,,,,,,24,30,,42,47,51,54,60,67,76,127',
',,,98,104,,,,22,,34,40,44,48,58,61,68,,,,,,100,106,5,8,15,19,28,36,',
',49,53,59,66,74,80,81,86,91,96,300,4,9,,21,27,32,,,62,72,64,,75,77,',
'90,94,103,,6,10,16,20,29,33,38,,,,,,,,,,,,,,24,30,,42,47,51,54,60,67',
'76,127,,,,98,104,,,,22,,34,40,44,48,58,61,68,,,,,,100,106,5,8,15,19',
'28,36,,,49,53,59,66,74,80,81,86,91,96,300,4,9,,21,27,32,,,62,72,64,',
'75,77,,90,94,103,,6,10,16,20,29,33,38,,,,,,,,,,,,,,24,30,,42,47,51,54',
'60,67,76,127,,,,98,104,,,,22,,34,40,44,48,58,61,68,,,,,,100,106,5,8',
'15,19,28,36,,,49,53,59,66,74,80,81,86,91,96,300,4,9,,21,27,32,,,62,72',
'64,,75,77,,90,94,103,,6,10,16,20,29,33,38,,,,,,,,,,,,,,24,30,,42,47',
'51,54,60,67,76,127,,,,98,104,,,,22,,34,40,44,48,58,61,68,,,,,,100,106',
'5,8,15,19,28,36,,,49,53,59,66,74,80,81,86,91,96,300,4,9,,21,27,32,,',
'62,72,64,,75,77,,90,94,103,,6,10,16,20,29,33,38,,,,,,,,,,,,,,24,30,',
'42,47,51,54,60,67,76,127,,,,98,104,,,,22,,34,40,44,48,58,61,68,,,,,',
'100,106,5,8,15,19,28,36,,,49,53,59,66,74,80,81,86,91,96,13,4,9,,21,27',
'32,,,62,72,64,,75,77,,90,94,103,,6,10,16,20,29,33,38,,,,,,,,,,,,,,24',
'30,,42,47,51,54,60,67,76,78,,,,98,104,,,,22,,34,40,44,48,58,61,68,,',
',,,100,106,5,8,15,19,28,36,,,49,53,59,66,74,80,81,86,91,96,300,4,9,',
'21,27,32,,,62,72,64,,75,77,,90,94,103,,6,10,16,20,29,33,38,,,,,,,,,',
',,,,24,30,,42,47,51,54,60,67,76,127,,,,98,104,,,,22,,34,40,44,48,58',
'61,68,,,,,,100,106,5,8,15,19,28,36,,,49,53,59,66,74,80,81,86,91,96,300',
'4,9,,21,27,32,,,62,72,64,,75,77,,90,94,103,,6,10,16,20,29,33,38,,,,',
',,,,,,,,,24,30,,42,47,51,54,60,67,76,127,,,,98,104,,,,22,,34,40,44,48',
'58,61,68,,,,,,100,106,5,8,15,19,28,36,,,49,53,59,66,74,80,81,86,91,96',
'300,4,9,,21,27,32,,,62,72,64,,75,77,,90,94,103,,6,10,16,20,29,33,38',
',,,,,,,,,,,,,24,30,,42,47,51,54,60,67,76,127,,,,98,104,,,,22,,34,40',
'44,48,58,61,68,,,,,,100,106,5,8,15,19,28,36,,,49,53,59,66,74,80,81,86',
'91,96,300,4,9,,21,27,32,,,62,72,64,,75,77,,90,94,103,,6,10,16,20,29',
'33,38,,,,,,,,,,,,,,24,30,,42,47,51,54,60,67,76,127,,,,98,104,,,,22,',
'34,40,44,48,58,61,68,,,,,,100,106,5,8,15,19,28,36,,,49,53,59,66,74,80',
'81,86,91,96,,4,9,,21,27,32,,,,,64,,75,77,,90,94,103,,6,10,16,20,29,33',
'38,169,176,181,185,188,191,196,201,206,210,215,218,224,227,230,234,238',
'163,165,170,,178,183,189,193,198,169,176,181,185,188,191,196,201,206',
'210,215,218,224,227,230,234,238,163,165,170,,178,183,189,193,198,,,',
',,,,,,,,,,,,529,530,,,532,,,,,,,,,,192,197,,,,,,,,,235,,719,571,,,720',
',,,,,,,,,192,197,,,239,110,,,,261,235,268,271,272,274,276,253,256,258',
'259,262,264,266,269,273,275,277,254,255,257,239,110,169,176,181,185',
'188,191,196,201,206,210,215,218,224,227,230,234,238,163,165,170,,178',
'183,189,193,198,169,176,181,185,188,191,196,201,206,210,215,218,224',
'227,230,234,238,163,165,170,,178,183,189,193,198,,,,,,,,,,,,,,,,638',
'571,,,639,,,,,,,,,,192,197,,,,,,,,,235,,641,530,,,642,,,,,,,,,,192,197',
',,239,110,,,,261,235,268,271,272,274,276,253,256,258,259,262,264,266',
'269,273,275,277,254,255,257,239,110,169,176,181,185,188,191,196,201',
'206,210,215,218,224,227,230,234,238,163,165,170,,178,183,189,193,198',
'169,176,181,185,188,191,196,201,206,210,215,218,224,227,230,234,238',
'163,165,170,,178,183,189,193,198,,,,,,,,,,,,,,,,578,530,,,580,,,,,,',
',,,192,197,,,,,,,,,235,,570,571,,,573,,,,,,,,,,192,197,,,239,110,,,',
'261,235,268,271,272,274,276,253,256,258,259,262,264,266,269,273,275',
'277,254,,,239,110,169,176,181,185,188,191,196,201,206,210,215,218,224',
'227,230,234,238,163,165,170,,178,183,189,193,198,169,176,181,185,188',
'191,196,201,206,210,215,218,224,227,230,234,238,163,165,170,,178,183',
'189,193,198,,,,,,,,,,,,,,,,673,571,,,675,,,,,,,,,,192,197,,,,,,,,,235',
',677,530,,,679,,,,,,,,,,192,197,,,239,110,,,,261,235,268,271,272,274',
'276,253,256,258,259,262,264,266,269,273,,,,,,239,110,169,176,181,185',
'188,191,196,201,206,210,215,218,224,227,230,234,238,163,165,170,,178',
'183,189,193,198,169,176,181,185,188,191,196,201,206,210,215,218,224',
'227,230,234,238,163,165,170,,178,183,189,193,198,,,,,,,,,,,,,,,,929',
'571,,,930,,,,,,,,,,192,197,,,,,,,,,235,,529,530,,,532,,,,,,,,,,192,197',
',,239,110,,,,261,235,268,271,272,274,276,253,256,258,259,262,264,266',
'269,273,,,,,,239,110,169,176,181,185,188,191,196,201,206,210,215,218',
'224,227,230,234,238,163,165,170,,178,183,189,193,198,169,176,181,185',
'188,191,196,201,206,210,215,218,224,227,230,234,238,163,165,170,,178',
'183,189,193,198,,,,,,,,,,,,,,,,638,571,,,639,,,,,,,,,,192,197,,,,,,',
',,235,,755,530,,,756,,,,,,,,,,192,197,,,239,110,,,,,235,,,,,,,,,,,,',
',,,,,,,239,110,169,176,181,185,188,191,196,201,206,210,215,218,224,227',
'230,234,238,163,165,170,,178,183,189,193,198,169,176,181,185,188,191',
'196,201,206,210,215,218,224,227,230,234,238,163,165,170,,178,183,189',
'193,198,,,,,,,,,,,,,,,,719,571,,,720,,,,,,,,,,192,197,,,,,,,,,235,,752',
'571,,,753,,,,,,,,,,192,197,,,239,110,,,,,235,,,,,,,,,,,,,,,,,,,,239',
'110,169,176,181,185,188,191,196,201,206,210,215,218,224,227,230,234',
'238,163,165,170,,178,183,189,193,198,169,176,181,185,188,191,196,201',
'206,210,215,218,224,227,230,234,238,163,165,170,,178,183,189,193,198',
',,,,,,,,,,,,,,,932,530,,,933,,,,,,,,,,192,197,,,,,,,,,235,,695,571,',
',697,,,,,,,,,,192,197,,,239,110,,,,,235,,,,,,,,,,,,,,,,,,,,239,110,169',
'176,181,185,188,191,196,201,206,210,215,218,224,227,230,234,238,163',
'165,170,,178,183,189,193,198,169,176,181,185,188,191,196,201,206,210',
'215,218,224,227,230,234,238,163,165,170,,178,183,189,193,198,,,,,,,',
',,,,,,,,641,530,,,642,,,,,,,,,,192,197,,,,,,,,,235,,529,530,,,532,,',
',,,,,,,192,197,136,,239,110,,152,,136,235,,,,152,,,,,,,,,,,,,,,,239',
'169,176,181,185,188,191,196,201,206,210,215,218,224,227,230,234,238',
'163,165,170,,178,183,189,193,198,682,,144,148,150,153,154,138,,144,148',
'150,153,154,,,,,,156,,,118,72,143,147,156,,,,,143,147,,,,,,,,,529,530',
',,532,,,648,,,,549,24,30,192,197,47,51,54,60,67,,127,,235,,98,104,,',
',22,,34,40,44,48,58,61,68,,,,,239,100,106,5,8,15,19,28,,,,,53,59,66',
'74,80,81,86,91,96,,4,9,,21,27,32,118,249,,,120,,123,77,,90,94,,,6,10',
'16,20,29,33,38,,,,,,,,,,,,242,,,,,,54,60,67,,127,,,,98,104,,,,22,,34',
'40,44,116,117,61,68,,,,,,131,251,240,8,15,19,28,,,,,53,59,66,74,80,81',
'86,91,96,,4,9,,21,27,32,118,72,,,318,,123,77,,90,94,,,6,10,16,20,29',
'33,38,,,,,,,,,,,,24,30,,,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40',
'44,116,117,61,68,,,,,,131,251,240,8,15,19,28,,,,,53,59,66,74,80,81,86',
'91,96,,4,9,,21,27,32,118,72,,,120,,123,77,,90,94,,,6,10,16,20,29,33',
'38,,,,,,,,,,,,24,30,,,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44',
'116,117,61,68,,,,,,131,251,240,8,15,19,28,,,,,53,59,66,74,80,81,86,91',
'96,,4,9,,21,27,32,118,72,,,120,,123,77,,90,94,,,6,10,16,20,29,33,38',
',,,,,,,,,,,24,30,,,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116',
'117,61,68,,,,,,131,251,240,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96',
',4,9,,21,27,32,118,72,,,120,,123,77,,90,94,,,6,10,16,20,29,33,38,,,',
',,,,,,,,24,30,,,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117',
'61,68,,,,,,131,251,240,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4',
'9,,21,27,32,118,72,,,120,,123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,',
',,,,,24,30,,,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117,61',
'68,,,,,,131,251,240,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,',
'21,27,32,118,72,,,120,,123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,,,,',
',,24,30,,,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117,61,68',
',,,,,131,251,240,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21',
'27,32,118,72,,,120,,123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24',
'30,,,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117,61,68,,,',
',,131,251,240,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27',
'32,118,72,,,120,,123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30',
',,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117,61,68,,,,,,131',
'251,240,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,118',
'72,,,120,,123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47',
'51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117,61,68,,,,,,131,251',
'240,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,118,72',
',,120,,123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47,51',
'54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117,61,68,,,,,,131,251,240',
'8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,118,72,,,120',
',123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47,51,54,60',
'67,,127,,,,98,104,,,,22,,34,40,44,116,117,61,68,,,,,,131,251,240,8,15',
'19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,118,72,,,120,,123',
'77,,90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47,51,54,60,67,,127',
',,,98,104,,,,22,,34,40,44,116,117,61,68,,,,,,131,251,240,8,15,19,28',
',,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,118,72,,,120,,123,77,',
'90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47,51,54,60,67,,127,',
',,98,104,,,,22,,34,40,44,116,117,61,68,,,,,,131,251,240,8,15,19,28,',
',,,53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,118,72,,,120,,123,77,,90',
'94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47,51,54,60,67,,127,,,,98',
'104,,,,22,,34,40,44,116,117,61,68,,,,,,131,251,240,8,15,19,28,,,,,53',
'59,66,74,80,81,86,91,96,,4,9,,21,27,32,118,72,,,120,,123,77,,90,94,',
',6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47,51,54,60,67,,127,,,,98,104',
',,,22,,34,40,44,116,117,61,68,,,,,,131,251,240,8,15,19,28,,,,,53,59',
'66,74,80,81,86,91,96,,4,9,,21,27,32,118,72,,,120,,123,77,,90,94,,,6',
'10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47,51,54,60,67,,127,,,,98,104,',
',,22,,34,40,44,116,117,61,68,,,,,,131,251,240,8,15,19,28,,,,,53,59,66',
'74,80,81,86,91,96,,4,9,,21,27,32,118,72,,,120,,123,77,,90,94,,,6,10',
'16,20,29,33,38,,,,,,,,,,,,24,30,,,47,51,54,60,67,,127,,,,98,104,,,,22',
',34,40,44,116,117,61,68,,,,,,131,251,240,8,15,19,28,,,,,53,59,66,74',
'80,81,86,91,96,,4,9,,21,27,32,118,72,,,120,,123,77,,90,94,,,6,10,16',
'20,29,33,38,,,,,,,,,,,,24,30,,,47,51,54,60,67,,127,,,,98,104,,,,22,',
'34,40,44,116,117,61,68,,,,,,131,251,240,8,15,19,28,,,,,53,59,66,74,80',
'81,86,91,96,,4,9,,21,27,32,118,72,,,120,,123,77,,90,94,,,6,10,16,20',
'29,33,38,,,,,,,,,,,,24,30,,,47,51,54,60,67,,127,,,,98,104,,,,22,,34',
'40,44,116,117,61,68,,,,,,131,251,240,8,15,19,28,,,,,53,59,66,74,80,81',
'86,91,96,,4,9,,21,27,32,118,72,,,120,,123,77,,90,94,,,6,10,16,20,29',
'33,38,,,,,,,,,,,,24,30,,,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40',
'44,116,117,61,68,,,,,,131,251,240,8,15,19,28,,,,,53,59,66,74,80,81,86',
'91,96,,4,9,,21,27,32,118,72,,,120,,123,77,,90,94,,,6,10,16,20,29,33',
'38,,,,,,,,,,,,24,30,,,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44',
'116,117,61,68,,,,,,131,251,240,8,15,19,28,,,,,53,59,66,74,80,81,86,91',
'96,,4,9,,21,27,32,118,72,,,120,,123,77,,90,94,,,6,10,16,20,29,33,38',
',,,,,,,,,,,24,30,,,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116',
'117,61,68,,,,,,131,251,240,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96',
',4,9,,21,27,32,118,72,,,120,,123,77,,90,94,,,6,10,16,20,29,33,38,,,',
',,,,,,,,24,30,,,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117',
'61,68,,,,,,131,251,240,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4',
'9,,21,27,32,118,72,,,120,,123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,',
',,,,,24,30,,,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117,61',
'68,,,,,,131,251,240,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,',
'21,27,32,118,72,,,120,,123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,,,,',
',,24,30,,,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117,61,68',
',,,,,131,251,240,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21',
'27,32,118,72,,,120,,123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24',
'30,,,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117,61,68,,,',
',,131,251,240,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27',
'32,118,249,,,120,,123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,242',
',,,,,54,60,67,,127,,,,98,104,,,,22,,34,40,44,48,58,61,68,,,,,,100,106',
'5,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,118,249,',
',318,,123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,242,,,,,,54,60',
'67,,127,,,,98,104,,,,22,,34,40,44,116,117,61,68,,,,,,131,251,240,8,15',
'19,28,,,,,53,59,66,290,80,81,86,293,96,,4,9,,21,27,32,118,72,,,288,',
'123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47,51,54,60,67',
',127,,,,98,104,,,,22,,34,40,44,116,117,61,68,,,,,,131,106,5,8,15,19',
'28,,,,,53,59,66,74,80,81,86,91,96,133,4,9,,21,27,32,118,72,,,120,,123',
'77,,90,94,132,134,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47,51,54,60',
'67,,127,,,,98,104,,,,22,,34,40,44,116,117,61,68,,,,,,131,251,240,8,15',
'19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,118,72,,,120,,123',
'77,,90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47,51,54,60,67,,127',
',,,98,104,,,,22,,34,40,44,116,117,61,68,,,,,,131,251,240,8,15,19,28',
',,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,62,72,,,120,,123,77,,90',
'94,547,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,42,47,51,54,60,67,,127',
',,,98,104,,,,22,,34,40,44,48,58,61,68,,,,,,100,106,5,8,15,19,28,,,,',
'53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,118,72,,,120,,123,77,,90,94',
',,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47,51,54,60,67,,127,,,,98,104',
',,,22,,34,40,44,116,117,61,68,,,,,,131,251,240,8,15,19,28,,,,,53,59',
'66,74,80,81,86,91,96,,4,9,,21,27,32,118,72,,,120,,123,77,,90,94,,,6',
'10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47,51,54,60,67,,127,,,,98,104,',
',,22,,34,40,44,116,117,61,68,,,,,,131,251,240,8,15,19,28,,,,,53,59,66',
'74,80,81,86,91,96,,4,9,,21,27,32,118,72,,,120,,123,77,,90,94,,,6,10',
'16,20,29,33,38,,,,,,,,,,,,24,30,,,47,51,54,60,67,,127,,,,98,104,,,,22',
',34,40,44,116,117,61,68,,,,,,131,251,240,8,15,19,28,,,,,53,59,66,74',
'80,81,86,91,96,,4,9,,21,27,32,62,72,,,120,,123,77,,90,94,,,6,10,16,20',
'29,33,38,,,,,,,,,,,,24,30,,42,47,51,54,60,67,,127,,,,98,104,,,,22,,34',
'40,44,48,58,61,68,,,,,,100,106,5,8,15,19,28,,,,,53,59,66,74,80,81,86',
'91,96,,4,9,,21,27,32,62,72,,,120,,123,77,,90,94,,,6,10,16,20,29,33,38',
',,,,,,,,,,,24,30,,42,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,48',
'58,61,68,,,,,,100,106,5,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4',
'9,,21,27,32,118,72,,,120,,123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,',
',,,,,24,30,,,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117,61',
'68,,,,,,131,106,5,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,133,4,9',
',21,27,32,118,72,,,120,,123,77,,90,94,132,134,6,10,16,20,29,33,38,,',
',,,,,,,,,24,30,,,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117',
'61,68,,,,,,131,251,240,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4',
'9,,21,27,32,62,72,,,120,,123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,,',
',,,,24,30,,42,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,48,58,61',
'68,,,,,,100,106,5,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21',
'27,32,118,72,,,120,,123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24',
'30,,,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117,61,68,,,',
',,131,251,240,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27',
'32,118,249,,,120,,123,77,,90,94,,,6,10,16,20,29,33,38,,,,,292,,,,,,',
'242,,,,,,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117,61,68,,,,,',
'131,251,240,8,15,19,28,,,,,53,59,66,290,80,81,86,293,96,,4,9,,21,27',
'32,62,72,,,288,,123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30',
',42,47,51,54,60,67,76,127,,,,98,104,,,,22,,34,40,44,48,58,61,68,,,,',
',100,106,5,8,15,19,28,36,,,49,53,59,66,74,80,81,86,91,96,,4,9,,21,27',
'32,118,72,,,64,,75,77,,90,94,103,,6,10,16,20,29,33,38,,,,,,,,,,,,24',
'30,,,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117,61,68,,,',
',,131,106,5,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,133,4,9,,21,27',
'32,118,249,,,120,,123,77,,90,94,132,134,6,10,16,20,29,33,38,,,,,,,,',
',,,242,,,,,,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117,61,68,,',
',,,131,251,240,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27',
'32,118,72,,,879,,123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30',
',,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117,61,68,,,,,,131',
'251,240,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,118',
'72,,,120,,123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47',
'51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117,61,68,,,,,,131,251',
'240,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,118,72',
',,120,,123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47,51',
'54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117,61,68,,,,,,131,251,240',
'8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,118,72,,,120',
',123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47,51,54,60',
'67,,127,,,,98,104,,,,22,,34,40,44,116,117,61,68,,,,,,131,251,240,8,15',
'19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,62,72,,,120,,123',
'77,,90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,42,47,51,54,60,67',
'76,78,,,,98,104,,,,22,,34,40,44,48,58,61,68,,,,,,100,106,5,8,15,19,28',
'36,,,49,53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,118,72,,,64,,75,77',
',90,94,103,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47,51,54,60,67,,127',
',,,98,104,,,,22,,34,40,44,116,117,61,68,,,,,,131,106,5,8,15,19,28,,',
',,53,59,66,74,80,81,86,91,96,133,4,9,,21,27,32,118,249,,,120,,123,77',
',90,94,132,134,6,10,16,20,29,33,38,,,,,,,,,,,,242,,,,,,54,60,67,,127',
',,,98,104,,,,22,,34,40,44,116,117,61,68,,,,,,131,251,240,8,15,19,28',
',,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,118,72,,,369,,371,77,',
'90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47,51,54,60,67,,127,',
',,98,104,,,,22,,34,40,44,116,117,61,68,,,,,,131,251,240,8,15,19,28,',
',,,53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,118,249,,,120,,123,77,',
'90,94,637,,6,10,16,20,29,33,38,,,,,,,,,,,,242,,,,,,54,60,67,,127,,,',
'98,104,,,,22,,34,40,44,116,117,61,68,,,,,,131,251,240,8,15,19,28,,,',
',53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,118,72,,,369,,371,77,,90',
'94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47,51,54,60,67,,127,,,,98',
'104,,,,22,,34,40,44,116,117,61,68,,,,,,131,106,5,8,15,19,28,,,,,53,59',
'66,74,80,81,86,91,96,133,4,9,,21,27,32,118,72,,,120,,123,77,,90,94,132',
'134,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47,51,54,60,67,,127,,,,98',
'104,,,,22,,34,40,44,48,58,61,68,,,,,,100,106,5,8,15,19,28,,,,,53,59',
'66,74,80,81,86,91,96,,4,9,,21,27,32,62,72,,,120,,123,77,,90,94,547,',
'6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,42,47,51,54,60,67,,127,,,,98,104',
',,,22,,34,40,44,48,58,61,68,,,,,,100,106,5,8,15,19,28,,,,,53,59,66,74',
'80,81,86,91,96,,4,9,,21,27,32,118,72,,,120,,123,77,,90,94,,,6,10,16',
'20,29,33,38,,,,,,,,,,,,24,30,,,47,51,54,60,67,,127,,,,98,104,,,,22,',
'34,40,44,116,117,61,68,,,,,,131,251,240,8,15,19,28,,,,,53,59,66,74,80',
'81,86,91,96,,4,9,,21,27,32,62,72,,,120,,123,77,,90,94,,,6,10,16,20,29',
'33,38,,,,,,,,,,,,24,30,,42,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40',
'44,48,58,61,68,,,,,,100,106,5,8,15,19,28,,,,,53,59,66,74,80,81,86,91',
'96,,4,9,,21,27,32,118,72,,,120,,123,77,,90,94,,,6,10,16,20,29,33,38',
',,,,,,,,,,,24,30,,,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116',
'117,61,68,,,,,,131,251,240,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96',
'133,4,9,,21,27,32,118,72,,,120,,123,77,,90,94,637,,6,10,16,20,29,33',
'38,,,,,,,,,,,,24,30,,,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44',
'116,117,61,68,,,,,,131,251,240,8,15,19,28,,,,,53,59,66,74,80,81,86,91',
'96,133,4,9,,21,27,32,118,249,,,120,,123,77,,90,94,,,6,10,16,20,29,33',
'38,,,,,,,,,,,,242,,,,,,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117',
'61,68,,,,,,131,251,240,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4',
'9,,21,27,32,118,72,,,369,,371,77,,90,94,,,6,10,16,20,29,33,38,,,,,,',
',,,,,24,30,,,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117,61',
'68,,,,,,131,251,240,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,',
'21,27,32,118,72,,,120,,123,77,,90,94,132,,6,10,16,20,29,33,38,,,,,,',
',,,,,24,30,,,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117,61',
'68,,,,,,131,251,240,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,',
'21,27,32,118,72,,,120,,123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,,,,',
',,24,30,,,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117,61,68',
',,,,,131,251,240,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21',
'27,32,118,72,,,120,,123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24',
'30,,,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117,61,68,,,',
',,131,106,5,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,133,4,9,,21,27',
'32,118,72,,,120,,123,77,,90,94,132,134,6,10,16,20,29,33,38,,,,,,,,,',
',,24,30,,,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117,61,68',
',,,,,131,251,240,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21',
'27,32,62,72,,,120,,123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24',
'30,,42,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,48,58,61,68,,,',
',,100,106,5,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27,32',
'62,72,,,120,,123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,42',
'47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,48,58,61,68,,,,,,100,106',
'5,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,62,72,,,120',
',123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,42,47,51,54,60',
'67,,127,,,,98,104,,,,22,,34,40,44,48,58,61,68,,,,,,100,106,5,8,15,19',
'28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,62,72,,,120,,123,77',
',90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,42,47,51,54,60,67,,127',
',,,98,104,,,,22,,34,40,44,48,58,61,68,,,,,,100,106,5,8,15,19,28,,,,',
'53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,118,249,,,120,,123,77,,90',
'94,,,6,10,16,20,29,33,38,,,,,,,,,,,,242,,,,,,54,60,67,,127,,,,98,104',
',,,22,,34,40,44,116,117,61,68,,,,,,131,251,240,8,15,19,28,,,,,53,59',
'66,74,80,81,86,91,96,,4,9,,21,27,32,118,72,,,369,,371,77,,90,94,,,6',
'10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47,51,54,60,67,,127,,,,98,104,',
',,22,,34,40,44,116,117,61,68,,,,,,131,251,240,8,15,19,28,,,,,53,59,66',
'74,80,81,86,91,96,,4,9,,21,27,32,118,72,,,120,,123,77,,90,94,,,6,10',
'16,20,29,33,38,,,,,,,,,,,,24,30,,,47,51,54,60,67,,127,,,,98,104,,,,22',
',34,40,44,48,58,61,68,,,,,,100,106,5,8,15,19,28,,,,,53,59,66,74,80,81',
'86,91,96,,4,9,,21,27,32,118,249,,,120,,123,77,,90,94,547,,6,10,16,20',
'29,33,38,,,,,,,,,,,,242,,,,,,54,60,67,,127,,,,98,104,,,,22,,34,40,44',
'116,117,61,68,,,,,,131,251,240,8,15,19,28,,,,,53,59,66,74,80,81,86,91',
'96,,4,9,,21,27,32,62,72,,,369,,371,77,,90,94,374,,6,10,16,20,29,33,38',
',,,,,,,,,,,24,30,,42,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,48',
'58,61,68,,,,,,100,106,5,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4',
'9,,21,27,32,118,72,,,120,,123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,',
',,,,,24,30,,,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117,61',
'68,,,,,,131,251,240,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,',
'21,27,32,118,72,,,120,,123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,,,,',
',,24,30,,,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117,61,68',
',,,,,131,251,240,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21',
'27,32,118,72,,,120,,123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24',
'30,,,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117,61,68,,,',
',,131,251,240,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27',
'32,118,72,,,120,,123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30',
',,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117,61,68,,,,,,131',
'251,240,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,118',
'72,,,120,,123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47',
'51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117,61,68,,,,,,131,106',
'5,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,133,4,9,,21,27,32,62,72',
',,120,,123,77,,90,94,132,134,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,42',
'47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,48,58,61,68,,,,,,100,106',
'5,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,62,72,,,120',
',123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,42,47,51,54,60',
'67,,127,,,,98,104,,,,22,,34,40,44,48,58,61,68,,,,,,100,106,5,8,15,19',
'28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,118,72,,,120,,123,77',
',90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47,51,54,60,67,,127',
',,,98,104,,,,22,,34,40,44,116,117,61,68,,,,,,131,251,240,8,15,19,28',
',,,,53,59,66,74,80,81,86,91,96,133,4,9,,21,27,32,118,72,,,120,,123,77',
',90,94,,134,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47,51,54,60,67,,127',
',,,98,104,,,,22,,34,40,44,48,58,61,68,,,,,,100,106,5,8,15,19,28,,,,',
'53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,118,72,,,120,,123,77,,90,94',
',,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47,51,54,60,67,,127,,,,98,104',
',,,22,,34,40,44,116,117,61,68,,,,,,131,106,5,8,15,19,28,,,,,53,59,66',
'74,80,81,86,91,96,133,4,9,,21,27,32,118,249,,,120,,123,77,,90,94,132',
'134,6,10,16,20,29,33,38,,,,,,,,,,,,242,,,,,,54,60,67,,127,,,,98,104',
',,,22,,34,40,44,116,117,61,68,,,,,,131,251,240,8,15,19,28,,,,,53,59',
'66,74,80,81,86,91,96,,4,9,,21,27,32,118,72,,,246,,75,77,,90,94,103,',
'6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47,51,54,60,67,,127,,,,98,104',
',,,22,,34,40,44,116,117,61,68,,,,,,131,106,5,8,15,19,28,,,,,53,59,66',
'74,80,81,86,91,96,133,4,9,,21,27,32,118,72,,,120,,123,77,,90,94,132',
'134,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47,51,54,60,67,,127,,,,98',
'104,,,,22,,34,40,44,116,117,61,68,,,,,,131,251,240,8,15,19,28,,,,,53',
'59,66,74,80,81,86,91,96,133,4,9,,21,27,32,62,72,,,120,,123,77,,90,94',
'637,134,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,42,47,51,54,60,67,,127',
',,,98,104,,,,22,,34,40,44,48,58,61,68,,,,,,100,106,5,8,15,19,28,,,,',
'53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,118,72,,,120,,123,77,,90,94',
',,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47,51,54,60,67,,127,,,,98,104',
',,,22,,34,40,44,48,58,61,68,,,,,,100,106,5,8,15,19,28,,,,,53,59,66,74',
'80,81,86,91,96,,4,9,,21,27,32,118,72,,,120,,123,77,,90,94,,,6,10,16',
'20,29,33,38,,,,,,,,,,,,24,30,,,47,51,54,60,67,,127,,,,98,104,,,,22,',
'34,40,44,116,117,61,68,,,,,,131,106,5,8,15,19,28,,,,,53,59,66,74,80',
'81,86,91,96,133,4,9,,21,27,32,118,72,,,120,,123,77,,90,94,132,134,6',
'10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47,51,54,60,67,,127,,,,98,104,',
',,22,,34,40,44,48,58,61,68,,,,,,100,106,5,8,15,19,28,,,,,53,59,66,74',
'80,81,86,91,96,,4,9,,21,27,32,118,72,,,120,,123,77,,90,94,,,6,10,16',
'20,29,33,38,,,,,,,,,,,,24,30,,,47,51,54,60,67,,127,,,,98,104,,,,22,',
'34,40,44,116,117,61,68,,,,,,131,251,240,8,15,19,28,,,,,53,59,66,74,80',
'81,86,91,96,,4,9,,21,27,32,118,72,,,120,,123,77,,90,94,,,6,10,16,20',
'29,33,38,,,,,,,,,,,,24,30,,,47,51,54,60,67,,127,,,,98,104,,,,22,,34',
'40,44,116,117,61,68,,,,,,131,251,240,8,15,19,28,,,,,53,59,66,74,80,81',
'86,91,96,133,4,9,,21,27,32,118,72,,,120,,123,77,,90,94,,,6,10,16,20',
'29,33,38,,,,,,,,,,,,24,30,,,47,51,54,60,67,,127,,,,98,104,,,,22,,34',
'40,44,116,117,61,68,,,,,,131,251,240,8,15,19,28,,,,,53,59,66,74,80,81',
'86,91,96,,4,9,,21,27,32,62,72,,,120,,123,77,,90,94,,,6,10,16,20,29,33',
'38,,,,,,,,,,,,24,30,,42,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44',
'48,58,61,68,,,,,,100,106,5,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96',
',4,9,,21,27,32,118,72,,,120,,123,77,,90,94,,,6,10,16,20,29,33,38,,,',
',,,,,,,,24,30,,,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117',
'61,68,,,,,,131,251,240,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4',
'9,,21,27,32,118,249,,,120,,123,77,,90,94,,,6,10,16,20,29,33,38,,,,,',
',,,,,,242,,,,,,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117,61,68',
',,,,,131,251,240,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21',
'27,32,118,72,,,369,,371,77,,90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24',
'30,,,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117,61,68,,,',
',,131,251,240,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27',
'32,118,72,,,120,,123,77,,90,94,824,,6,10,16,20,29,33,38,,,,,,,,,,,,24',
'30,,,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,48,58,61,68,,,,,',
'100,106,5,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,118',
'72,,,120,,123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47',
'51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117,61,68,,,,,,131,251',
'240,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,118,72',
',,120,,123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47,51',
'54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117,61,68,,,,,,131,251,240',
'8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,118,72,,,120',
',123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47,51,54,60',
'67,,127,,,,98,104,,,,22,,34,40,44,48,58,61,68,,,,,,100,106,5,8,15,19',
'28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,118,72,,,120,,123,77',
',90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47,51,54,60,67,,127',
',,,98,104,,,,22,,34,40,44,116,117,61,68,,,,,,131,251,240,8,15,19,28',
',,,,53,59,66,74,80,81,86,91,96,133,4,9,,21,27,32,62,72,,,120,,123,77',
',90,94,132,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,42,47,51,54,60,67',
'76,127,,,,98,104,,,,22,,34,40,44,48,58,61,68,,,,,,100,106,5,8,15,19',
'28,36,,,49,53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,62,72,,,64,,75',
'77,,90,94,103,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,42,47,51,54,60',
'67,,127,,,,98,104,,,,22,,34,40,44,48,58,61,68,,,,,,100,106,5,8,15,19',
'28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,62,72,,,120,,123,77',
',90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,42,47,51,54,60,67,,127',
',,,98,104,,,,22,,34,40,44,48,58,61,68,,,,,,100,106,5,8,15,19,28,,,,',
'53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,62,72,,,120,,123,77,,90,94',
',,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,42,47,51,54,60,67,,127,,,,98',
'104,,,,22,,34,40,44,48,58,61,68,,,,,,100,106,5,8,15,19,28,,,,,53,59',
'66,74,80,81,86,91,96,,4,9,,21,27,32,118,72,,,120,,123,77,,90,94,,,6',
'10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47,51,54,60,67,,127,,,,98,104,',
',,22,,34,40,44,116,117,61,68,,,,,,131,251,240,8,15,19,28,,,,,53,59,66',
'74,80,81,86,91,96,,4,9,136,21,27,32,,152,,136,120,,123,77,152,90,94',
',,6,10,16,20,29,33,38,,,,,,,,,,,136,,,,,152,,,,,136,,,,,152,,,,,,138',
',144,148,150,153,154,138,,144,148,150,153,154,,136,,,,156,152,,136,',
'143,147,156,152,,,,143,147,,138,,144,148,150,153,154,,,,138,549,144',
'148,150,153,154,136,140,156,,,152,,143,147,136,,,156,,152,,,143,147',
'138,,144,148,150,153,154,138,,144,148,150,153,154,,,136,,,156,,152,',
'136,143,147,156,,152,,,143,147,,,,682,,144,148,150,153,154,,,138,,144',
'148,150,153,154,,,,156,,,,,143,147,,,156,,,,,143,147,682,,144,148,150',
'153,154,682,,144,148,150,153,154,,,,,,156,,,,,143,147,156,,,,,143,147',
'261,,268,271,272,274,276,253,256,258,259,262,264,266,269,273,275,277',
'254,255,257,260,263,265,267,270,,261,278,268,271,272,274,276,253,256',
'258,259,262,264,266,269,273,275,277,254,255,257,260,263,265,267,270',
',261,278,268,271,272,274,276,253,256,258,259,262,264,266,269,273,275',
'277,254,255,257,260,263,265,267,270,,261,278,268,271,272,274,276,253',
'256,258,259,262,264,266,269,273,275,277,254,255,257,260,263,265,267',
'270,,261,278,268,271,272,274,276,253,256,258,259,262,264,266,269,273',
'275,277,254,255,257,260,263,265,267,270,,261,278,268,271,272,274,276',
'253,256,258,259,262,264,266,269,273,275,277,254,255,257,260,263,265',
'267,270,,261,278,268,271,272,274,276,253,256,258,259,262,264,266,269',
'273,275,277,254,255,257,260,263,265,267,270,,261,278,268,271,272,274',
'276,253,256,258,259,262,264,266,269,273,275,277,254,255,257,260,263',
'265,267,270,261,,268,271,272,274,276,253,256,258,259,262,264,266,269',
'273,275,277,254,255,257,260,263,261,,268,271,272,274,276,253,256,258',
'259,262,264,266,269,273,275,277,254,255,257,260,263,261,,268,271,272',
'274,276,253,256,258,259,262,264,266,269,273,275,277,254,255,257,260',
'263' ]
        racc_action_table = arr = Array.new(17859, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'78,570,750,548,548,570,570,570,570,570,570,563,563,570,570,570,570,287',
'570,570,570,570,570,570,570,570,570,570,570,570,570,570,570,570,570',
'570,570,570,570,570,570,570,509,509,570,287,747,747,368,368,85,85,682',
'570,570,570,741,741,141,570,570,573,570,580,580,573,573,573,573,573',
'573,570,138,573,573,573,573,932,573,573,573,573,573,573,573,573,573',
'573,573,573,573,573,573,573,573,573,573,573,573,573,573,573,933,56,573',
'570,338,376,328,141,391,247,379,573,573,573,154,391,338,573,573,750',
'573,755,108,108,283,744,570,570,570,570,570,548,328,570,78,570,78,570',
'447,563,578,578,347,347,682,315,676,252,283,283,287,756,287,283,932',
'381,932,484,56,484,484,484,381,573,138,817,247,85,509,154,509,315,247',
'741,747,379,368,379,755,933,580,933,311,720,376,942,376,573,573,573',
'573,311,311,573,154,573,80,573,719,80,80,80,80,80,80,80,768,672,756',
'252,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80',
'80,80,80,80,80,719,360,80,755,108,929,755,817,395,817,755,80,80,80,675',
'673,80,80,80,720,80,322,578,799,347,642,642,942,891,942,80,80,80,756',
'719,672,756,672,458,550,756,550,282,768,720,720,720,322,768,679,768',
'720,250,677,282,443,893,719,893,719,719,719,339,80,762,80,719,107,107',
'678,324,762,441,395,339,395,675,673,675,673,360,929,360,80,929,799,929',
'80,80,80,80,680,325,80,80,80,324,80,107,107,458,107,107,107,107,107',
'107,891,107,891,681,679,107,107,250,677,569,107,325,107,107,107,107',
'107,107,107,288,440,569,796,288,107,107,107,107,107,107,107,614,614',
'614,614,107,107,107,107,107,107,107,107,107,382,107,107,514,107,107',
'107,382,327,684,499,107,499,107,107,52,107,107,400,400,107,107,107,107',
'107,107,107,514,514,301,685,301,847,796,327,796,796,796,796,796,52,52',
'107,514,107,478,62,478,478,400,400,62,796,400,400,400,400,400,796,400',
'402,686,402,400,400,694,847,694,400,687,400,400,400,400,400,400,400',
'788,482,329,482,482,400,400,400,400,400,400,400,847,689,847,847,400',
'400,400,400,400,400,400,400,400,400,400,400,329,400,400,400,481,439',
'481,481,400,697,400,400,427,400,400,400,400,400,400,400,400,400,400',
'400,343,343,693,788,930,788,788,788,788,788,697,697,462,71,697,71,331',
'400,753,361,361,426,788,370,666,332,748,748,788,930,930,343,343,930',
'343,343,343,343,343,343,698,343,331,753,753,343,343,753,370,370,343',
'332,343,343,343,343,343,343,343,293,564,564,641,641,343,343,343,343',
'343,343,343,102,102,333,407,343,343,343,343,343,343,343,343,343,665',
'343,343,913,343,343,343,37,703,293,706,343,404,343,343,333,343,343,357',
'357,343,343,343,343,343,343,343,709,913,913,24,24,293,37,293,293,289',
'789,293,789,789,789,789,789,343,773,773,128,128,357,357,330,357,357',
'357,357,357,357,357,357,403,289,289,357,357,69,935,935,357,664,357,357',
'357,357,357,357,357,330,398,899,789,393,357,357,357,357,357,357,357',
'357,69,69,357,357,357,357,357,357,357,357,357,357,723,357,357,505,357',
'357,357,411,411,519,519,357,725,357,357,727,357,357,357,661,357,357',
'357,357,357,357,357,297,505,505,135,135,899,730,899,899,899,899,899',
'731,519,519,357,519,519,519,519,519,519,519,519,899,297,297,519,519',
'882,899,390,519,659,519,519,519,519,519,519,519,242,242,656,752,738',
'519,519,519,519,519,519,519,519,882,882,519,519,519,519,519,519,519',
'519,519,519,380,519,519,280,519,519,519,373,742,369,674,519,752,519',
'519,295,519,519,519,295,519,519,519,519,519,519,519,280,280,280,46,46',
'46,46,367,752,365,752,752,295,295,752,519,46,46,46,46,46,46,46,46,46',
'46,46,46,46,46,46,46,46,46,46,46,654,46,46,46,46,46,46,46,46,46,46,46',
'46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,881,364,248,46',
'46,46,46,46,46,46,46,298,362,594,46,46,46,46,46,46,46,46,46,122,652',
'881,881,248,248,319,754,46,46,372,348,298,298,298,594,594,442,46,442',
'442,442,442,442,651,122,122,553,553,553,553,319,319,650,759,372,372',
'760,46,46,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553',
'553,553,553,553,553,442,553,553,553,553,553,553,553,553,553,553,553',
'553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553',
'553,869,761,375,553,553,553,553,553,553,553,553,161,649,880,553,553',
'553,553,553,763,764,553,318,767,314,869,869,375,375,640,636,553,553',
'305,304,161,161,161,880,880,791,553,791,791,791,791,791,778,634,36,36',
'36,36,858,631,858,858,858,858,791,299,553,36,36,36,36,36,36,36,36,36',
'36,36,36,36,36,36,36,36,36,36,36,629,36,36,36,36,36,36,36,36,36,36,36',
'36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,627,792,285,36',
'36,36,36,36,36,36,36,284,626,251,36,36,36,36,36,36,249,36,803,156,246',
'156,156,156,156,156,600,36,36,241,658,814,658,658,658,658,658,36,156',
'240,36,451,451,156,451,525,525,525,525,658,451,451,158,151,658,823,146',
'36,525,525,525,525,525,525,525,525,525,525,525,525,525,525,525,525,525',
'525,525,525,145,525,525,525,525,525,525,525,525,525,525,525,525,525',
'525,525,525,525,525,525,525,525,525,525,525,525,525,525,525,525,831',
'142,844,525,525,525,525,525,525,525,525,598,130,848,525,525,525,525',
'525,849,590,525,124,445,121,445,445,445,445,445,589,525,525,859,660',
'860,660,660,660,660,660,525,445,861,525,862,588,445,864,76,76,76,76',
'660,648,577,648,648,648,648,866,525,76,76,76,76,76,76,76,76,76,76,76',
'76,76,76,76,76,76,76,76,76,867,76,76,76,76,76,76,76,76,76,76,76,76,76',
'76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,868,120,871,76,76,76',
'76,76,76,76,76,872,874,875,76,76,76,76,76,876,900,76,900,900,900,900',
'900,303,303,303,303,76,76,702,702,702,702,303,879,900,119,76,118,702',
'76,93,93,93,93,10,10,10,10,114,109,93,885,886,524,537,538,76,10,10,10',
'10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,542,10,10,10,10,10',
'10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10',
'10,901,92,88,10,10,10,10,10,10,10,10,72,544,64,10,10,10,10,10,10,10',
'10,10,865,63,865,865,865,865,865,555,10,10,57,863,917,863,863,863,863',
'863,10,865,49,517,517,517,517,923,592,592,592,592,863,517,924,925,926',
'927,928,45,10,592,592,592,592,592,592,592,592,592,592,592,592,592,592',
'592,592,592,592,592,592,38,592,592,592,592,592,592,592,592,592,592,592',
'592,592,592,592,592,592,592,592,592,592,592,592,592,592,592,592,592',
'592,931,33,561,592,592,592,592,592,592,592,592,560,17,2,592,592,592',
'592,592,571,571,592,944,,,,,,,,,592,592,,,,,,,,,592,,,592,,,,,,571,571',
',,571,571,571,571,571,,571,592,,,571,571,,,,571,,571,571,571,571,571',
'571,571,,,809,,,571,571,571,571,571,571,571,,,,,571,571,571,571,571',
'571,571,571,571,571,571,571,,571,571,571,,,106,106,571,,571,571,,571',
'571,571,571,571,571,571,571,571,571,571,,,,,,809,,809,809,809,809,809',
'571,106,106,,,106,106,106,106,106,,106,809,,,106,106,,809,,106,,106',
'106,106,106,106,106,106,,,939,,,106,106,106,106,106,106,106,,,,,106',
'106,106,106,106,106,106,106,106,106,106,106,,106,106,106,,,576,576,106',
',106,106,,106,106,106,106,106,106,106,106,106,106,106,,,,,,939,,939',
'939,939,939,939,106,576,576,,,576,576,576,576,576,,576,939,,,576,576',
',939,,576,,576,576,576,576,576,576,576,,,784,,,576,576,576,576,576,576',
'576,,,,,576,576,576,576,576,576,576,576,576,576,576,576,,576,576,576',
',,534,534,576,,576,576,,576,576,576,576,576,576,576,576,576,576,576',
',,,,,784,,784,784,784,784,784,576,534,534,,,534,534,534,534,534,,534',
'784,,,534,534,,784,,534,,534,534,534,534,534,534,534,,,437,,,534,534',
'534,534,534,534,534,,,,,534,534,534,534,534,534,534,534,534,534,534',
'534,,534,534,534,,,572,572,534,,534,534,,534,534,534,534,534,534,534',
'534,534,534,534,,,,,,437,,437,437,437,437,437,534,572,572,,,572,572',
'572,572,572,,572,437,,,572,572,,437,,572,,572,572,572,572,572,572,572',
',,911,,,572,572,572,572,572,572,572,,,,,572,572,572,572,572,572,572',
'572,572,572,572,572,,572,572,572,,,579,579,572,,572,572,,572,572,572',
'572,572,572,572,572,572,572,572,,,,,,911,,911,911,911,911,911,572,579',
'579,,,579,579,579,579,579,,579,911,,,579,579,,911,,579,,579,579,579',
'579,579,579,579,,,908,,,579,579,579,579,579,579,579,,,,,579,579,579',
'579,579,579,579,579,579,579,579,579,,579,579,579,,,531,531,579,,579',
'579,,579,579,579,579,579,579,579,579,579,579,579,,,,,,908,,908,908,908',
'908,908,579,531,531,,,531,531,531,531,531,,531,908,,,531,531,,908,,531',
',531,531,531,531,531,531,531,,,,,,531,531,531,531,531,531,531,,,,,531',
'531,531,531,531,531,531,531,531,531,531,531,,531,531,531,,,,,531,,531',
'531,,531,531,531,531,531,531,531,531,531,531,531,,,,,,,65,65,,,,471',
'531,471,471,471,471,471,471,471,471,471,471,471,471,471,471,471,471',
'471,471,471,471,471,471,471,471,65,65,471,,65,65,65,65,65,,65,,,,65',
'65,,,,65,,65,65,65,65,65,65,65,290,65,,,,65,65,65,65,65,65,65,,,,,65',
'65,65,65,65,65,65,65,65,65,65,65,,65,65,65,,,290,,65,,65,65,,65,65,65',
'65,65,65,65,65,65,65,65,5,5,,,,290,65,290,290,,,290,65,,,,486,471,486',
'486,486,486,486,486,486,486,486,486,,,,5,5,,,5,5,5,5,5,,5,,,,5,5,,,',
'5,,5,5,5,5,5,5,5,695,,,,,5,5,5,5,5,5,5,,,,,5,5,5,5,5,5,5,5,5,5,5,5,',
'5,5,5,,,695,,5,,5,5,,5,5,5,5,5,5,5,5,5,5,5,638,638,638,638,,695,,695',
'695,,,695,5,464,,464,464,464,464,464,464,464,464,464,464,464,464,464',
'464,464,464,638,638,,,638,638,638,638,638,,638,,,,638,638,,,,638,,638',
'638,638,638,638,638,638,,,,,,638,638,638,638,638,638,638,,,,,638,638',
'638,638,638,638,638,638,638,638,638,638,,638,638,638,,,,,638,,638,638',
',638,638,638,638,638,638,638,638,638,638,638,639,639,639,639,,,,,,,',
'467,638,467,467,467,467,467,467,467,467,467,467,467,467,467,467,467',
'467,467,,639,639,,,639,639,639,639,639,,639,,,,639,639,,,,639,,639,639',
'639,639,639,639,639,,,,,,639,639,639,639,639,639,639,,,,,639,639,639',
'639,639,639,639,639,639,639,639,639,,639,639,639,,,359,359,639,,639',
'639,,639,639,639,639,639,639,639,639,639,639,639,466,,466,466,466,466',
'466,466,466,466,466,466,639,359,359,,,359,359,359,359,359,,359,,,,359',
'359,,,,359,,359,359,359,359,359,359,359,,,,,,359,359,359,359,359,359',
'359,,,,,359,359,359,359,359,359,359,359,359,,359,359,,359,359,359,,',
'74,74,359,,359,359,,359,359,,,359,359,359,359,359,359,359,472,,472,472',
'472,472,472,472,472,472,472,472,359,74,74,,,74,74,74,74,74,,74,,,,74',
'74,,,,74,,74,74,74,74,74,74,74,,74,,,,74,74,74,74,74,74,74,,,,,74,74',
'74,74,74,74,74,74,74,74,74,74,,74,74,74,,,91,91,74,,74,74,,74,74,74',
'74,74,74,74,74,74,74,74,,,,,,,74,,,,,,74,91,91,,,91,91,91,91,91,,91',
',,,91,91,,,,91,,91,91,91,91,91,91,91,,91,,,,91,91,91,91,91,91,91,,,',
',91,91,91,91,91,91,91,91,91,91,91,91,,91,91,91,374,374,,,91,,91,91,',
'91,91,91,91,91,91,91,91,91,91,91,,,,,,,91,,,,,374,91,,,,,374,374,374',
',374,,,,374,374,,,,374,,374,374,374,374,374,374,374,,,,,,374,374,374',
'374,374,374,374,,,,,374,374,374,374,374,374,374,374,374,,374,374,,374',
'374,374,103,103,,,374,,374,374,,374,374,,,374,374,374,374,374,374,374',
',,,,,,,,,,374,103,,,,,,103,103,103,,103,,,,103,103,,,,103,,103,103,103',
'103,103,103,103,,,,,,103,103,103,103,103,103,103,,,,,103,103,103,103',
'103,103,103,103,103,75,103,103,,103,103,103,,,75,75,103,,103,103,,103',
'103,,,103,103,103,103,103,103,103,,,,,,,,,,,103,,,75,75,,75,75,75,75',
'75,75,75,75,,,,75,75,,,,75,,75,75,75,75,75,75,75,,,,,,75,75,75,75,75',
'75,75,75,,,75,75,75,75,75,75,75,75,75,75,430,75,75,,75,75,75,,,430,430',
'75,,75,75,,75,75,75,,75,75,75,75,75,75,75,469,,469,469,469,469,469,469',
'469,469,469,469,,430,430,,430,430,430,430,430,430,430,430,,,,430,430',
',,,430,,430,430,430,430,430,430,430,,,,,,430,430,430,430,430,430,430',
'430,,,430,430,430,430,430,430,430,430,430,430,429,430,430,,430,430,430',
',,429,429,430,,430,430,,430,430,430,,430,430,430,430,430,430,430,476',
',476,476,476,476,476,476,476,476,476,476,,429,429,,429,429,429,429,429',
'429,429,429,,,,429,429,,,,429,,429,429,429,429,429,429,429,,,,,,429',
'429,429,429,429,429,429,429,,,429,429,429,429,429,429,429,429,429,429',
'699,429,429,,429,429,429,,,699,699,429,,429,429,,429,429,429,,429,429',
'429,429,429,429,429,468,,468,468,468,468,468,468,468,468,468,468,,699',
'699,,699,699,699,699,699,699,699,699,,,,699,699,,,,699,,699,699,699',
'699,699,699,699,,,,,,699,699,699,699,699,699,699,699,,,699,699,699,699',
'699,699,699,699,699,699,708,699,699,,699,699,699,,,708,708,699,,699',
'699,,699,699,699,,699,699,699,699,699,699,699,463,,463,463,463,463,463',
'463,463,463,463,463,,708,708,,708,708,708,708,708,708,708,708,,,,708',
'708,,,,708,,708,708,708,708,708,708,708,,,,,,708,708,708,708,708,708',
'708,708,,,708,708,708,708,708,708,708,708,708,708,450,708,708,,708,708',
'708,,,450,450,708,,708,708,,708,708,708,,708,708,708,708,708,708,708',
'474,,474,474,474,474,474,474,474,474,474,474,,450,450,,450,450,450,450',
'450,450,450,450,,,,450,450,,,,450,,450,450,450,450,450,450,450,,,,,',
'450,450,450,450,450,450,450,450,,,450,450,450,450,450,450,450,450,450',
'450,736,450,450,,450,450,450,,,736,736,450,,450,450,,450,450,450,,450',
'450,450,450,450,450,450,479,,479,479,479,479,479,479,479,479,479,479',
',736,736,,736,736,736,736,736,736,736,736,,,,736,736,,,,736,,736,736',
'736,736,736,736,736,,,,,,736,736,736,736,736,736,736,736,,,736,736,736',
'736,736,736,736,736,736,736,621,736,736,,736,736,736,,,621,621,736,',
'736,736,,736,736,736,,736,736,736,736,736,736,736,483,,483,483,483,483',
'483,483,483,483,483,483,,621,621,,621,621,621,621,621,621,621,621,,',
',621,621,,,,621,,621,621,621,621,621,621,621,,,,,,621,621,621,621,621',
'621,621,621,,,621,621,621,621,621,621,621,621,621,621,607,621,621,,621',
'621,621,,,607,607,621,,621,621,,621,621,621,,621,621,621,621,621,621',
'621,,,,,,,,,,,,,,607,607,,607,607,607,607,607,607,607,607,,,,607,607',
',,,607,,607,607,607,607,607,607,607,,,,,,607,607,607,607,607,607,607',
'607,,,607,607,607,607,607,607,607,607,607,607,371,607,607,,607,607,607',
',,371,371,607,,607,607,,607,607,607,,607,607,607,607,607,607,607,,,',
',,,,,,,,,,371,371,,371,371,371,371,371,371,371,371,,,,371,371,,,,371',
',371,371,371,371,371,371,371,,,,,,371,371,371,371,371,371,371,371,,',
'371,371,371,371,371,371,371,371,371,371,602,371,371,,371,371,371,,,602',
'602,371,,371,371,,371,371,371,,371,371,371,371,371,371,371,,,,,,,,,',
',,,,602,602,,602,602,602,602,602,602,602,602,,,,602,602,,,,602,,602',
'602,602,602,602,602,602,,,,,,602,602,602,602,602,602,602,602,,,602,602',
'602,602,602,602,602,602,602,602,556,602,602,,602,602,602,,,556,556,602',
',602,602,,602,602,602,,602,602,602,602,602,602,602,,,,,,,,,,,,,,556',
'556,,556,556,556,556,556,556,556,556,,,,556,556,,,,556,,556,556,556',
'556,556,556,556,,,,,,556,556,556,556,556,556,556,556,,,556,556,556,556',
'556,556,556,556,556,556,586,556,556,,556,556,556,,,586,586,556,,556',
'556,,556,556,556,,556,556,556,556,556,556,556,,,,,,,,,,,,,,586,586,',
'586,586,586,586,586,586,586,586,,,,586,586,,,,586,,586,586,586,586,586',
'586,586,,,,,,586,586,586,586,586,586,586,586,,,586,586,586,586,586,586',
'586,586,586,586,919,586,586,,586,586,586,,,919,919,586,,586,586,,586',
'586,586,,586,586,586,586,586,586,586,,,,,,,,,,,,,,919,919,,919,919,919',
'919,919,919,919,919,,,,919,919,,,,919,,919,919,919,919,919,919,919,',
',,,,919,919,919,919,919,919,919,919,,,919,919,919,919,919,919,919,919',
'919,919,883,919,919,,919,919,919,,,883,883,919,,919,919,,919,919,919',
',919,919,919,919,919,919,919,,,,,,,,,,,,,,883,883,,883,883,883,883,883',
'883,883,883,,,,883,883,,,,883,,883,883,883,883,883,883,883,,,,,,883',
'883,883,883,883,883,883,883,,,883,883,883,883,883,883,883,883,883,883',
'363,883,883,,883,883,883,,,363,363,883,,883,883,,883,883,883,,883,883',
'883,883,883,883,883,,,,,,,,,,,,,,363,363,,363,363,363,363,363,363,363',
'363,,,,363,363,,,,363,,363,363,363,363,363,363,363,,,,,,363,363,363',
'363,363,363,363,363,,,363,363,363,363,363,363,363,363,363,363,492,363',
'363,,363,363,363,,,492,492,363,,363,363,,363,363,363,,363,363,363,363',
'363,363,363,,,,,,,,,,,,,,492,492,,492,492,492,492,492,492,492,492,,',
',492,492,,,,492,,492,492,492,492,492,492,492,,,,,,492,492,492,492,492',
'492,492,492,,,492,492,492,492,492,492,492,492,492,492,500,492,492,,492',
'492,492,,,500,500,492,,492,492,,492,492,492,,492,492,492,492,492,492',
'492,,,,,,,,,,,,,,500,500,,500,500,500,500,500,500,500,500,,,,500,500',
',,,500,,500,500,500,500,500,500,500,,,,,,500,500,500,500,500,500,500',
'500,,,500,500,500,500,500,500,500,500,500,500,35,500,500,,500,500,500',
',,35,35,500,,500,500,,500,500,500,,500,500,500,500,500,500,500,,,,,',
',,,,,,,,35,35,,35,35,35,35,35,35,35,35,,,,35,35,,,,35,,35,35,35,35,35',
'35,35,,,,,,35,35,35,35,35,35,35,35,,,35,35,35,35,35,35,35,35,35,35,551',
'35,35,,35,35,35,,,551,551,35,,35,35,,35,35,35,,35,35,35,35,35,35,35',
',,,,,,,,,,,,,551,551,,551,551,551,551,551,551,551,551,,,,551,551,,,',
'551,,551,551,551,551,551,551,551,,,,,,551,551,551,551,551,551,551,551',
',,551,551,551,551,551,551,551,551,551,551,336,551,551,,551,551,551,',
',336,336,551,,551,551,,551,551,551,,551,551,551,551,551,551,551,,,,',
',,,,,,,,,336,336,,336,336,336,336,336,336,336,336,,,,336,336,,,,336',
',336,336,336,336,336,336,336,,,,,,336,336,336,336,336,336,336,336,,',
'336,336,336,336,336,336,336,336,336,336,123,336,336,,336,336,336,,,123',
'123,336,,336,336,,336,336,336,,336,336,336,336,336,336,336,,,,,,,,,',
',,,,123,123,,123,123,123,123,123,123,123,123,,,,123,123,,,,123,,123',
'123,123,123,123,123,123,,,,,,123,123,123,123,123,123,123,123,,,123,123',
'123,123,123,123,123,123,123,123,316,123,123,,123,123,123,,,316,316,123',
',123,123,,123,123,123,,123,123,123,123,123,123,123,,,,,,,,,,,,,,316',
'316,,316,316,316,316,316,316,316,316,,,,316,316,,,,316,,316,316,316',
'316,316,316,316,,,,,,316,316,316,316,316,316,316,316,,,316,316,316,316',
'316,316,316,316,316,316,855,316,316,,316,316,316,,,855,855,316,,316',
'316,,316,316,316,,316,316,316,316,316,316,316,,,,,,,,,,,,,,855,855,',
'855,855,855,855,855,855,855,855,,,,855,855,,,,855,,855,855,855,855,855',
'855,855,,,,,,855,855,855,855,855,855,855,855,,,855,855,855,855,855,855',
'855,855,855,855,1,855,855,,855,855,855,,,1,1,855,,855,855,,855,855,855',
',855,855,855,855,855,855,855,,,,,,,,,,,,,,1,1,,1,1,1,1,1,1,1,1,,,,1',
'1,,,,1,,1,1,1,1,1,1,1,,,,,,1,1,1,1,1,1,1,1,,,1,1,1,1,1,1,1,1,1,1,798',
'1,1,,1,1,1,,,798,798,1,,1,1,,1,1,1,,1,1,1,1,1,1,1,,,,,,,,,,,,,,798,798',
',798,798,798,798,798,798,798,798,,,,798,798,,,,798,,798,798,798,798',
'798,798,798,,,,,,798,798,798,798,798,798,798,798,,,798,798,798,798,798',
'798,798,798,798,798,827,798,798,,798,798,798,,,827,827,798,,798,798',
',798,798,798,,798,798,798,798,798,798,798,,,,,,,,,,,,,,827,827,,827',
'827,827,827,827,827,827,827,,,,827,827,,,,827,,827,827,827,827,827,827',
'827,,,,,,827,827,827,827,827,827,827,827,,,827,827,827,827,827,827,827',
'827,827,827,821,827,827,,827,827,827,,,821,821,827,,827,827,,827,827',
'827,,827,827,827,827,827,827,827,,,,,,,,,,,,,,821,821,,821,821,821,821',
'821,821,821,821,,,,821,821,,,,821,,821,821,821,821,821,821,821,,,,,',
'821,821,821,821,821,821,821,821,,,821,821,821,821,821,821,821,821,821',
'821,557,821,821,,821,821,821,,,557,557,821,,821,821,,821,821,821,,821',
'821,821,821,821,821,821,,,,,,,,,,,,,,557,557,,557,557,557,557,557,557',
'557,557,,,,557,557,,,,557,,557,557,557,557,557,557,557,,,,,,557,557',
'557,557,557,557,557,557,,,557,557,557,557,557,557,557,557,557,557,,557',
'557,,557,557,557,,,,,557,,557,557,,557,557,557,,557,557,557,557,557',
'557,557,541,541,541,541,541,541,541,541,541,541,541,541,541,541,541',
'541,541,541,541,541,,541,541,541,541,541,904,904,904,904,904,904,904',
'904,904,904,904,904,904,904,904,904,904,904,904,904,,904,904,904,904',
'904,,,,,,,,,,,,,,,,541,541,,,541,,,,,,,,,,541,541,,,,,,,,,541,,904,904',
',,904,,,,,,,,,,904,904,,,541,541,,,,473,904,473,473,473,473,473,473',
'473,473,473,473,473,473,473,473,473,473,473,473,473,904,904,415,415',
'415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415',
'415,,415,415,415,415,415,417,417,417,417,417,417,417,417,417,417,417',
'417,417,417,417,417,417,417,417,417,,417,417,417,417,417,,,,,,,,,,,',
',,,,415,415,,,415,,,,,,,,,,415,415,,,,,,,,,415,,417,417,,,417,,,,,,',
',,,417,417,,,415,415,,,,470,417,470,470,470,470,470,470,470,470,470',
'470,470,470,470,470,470,470,470,470,470,417,417,353,353,353,353,353',
'353,353,353,353,353,353,353,353,353,353,353,353,353,353,353,,353,353',
'353,353,353,351,351,351,351,351,351,351,351,351,351,351,351,351,351',
'351,351,351,351,351,351,,351,351,351,351,351,,,,,,,,,,,,,,,,353,353',
',,353,,,,,,,,,,353,353,,,,,,,,,353,,351,351,,,351,,,,,,,,,,351,351,',
',353,353,,,,465,351,465,465,465,465,465,465,465,465,465,465,465,465',
'465,465,465,465,465,,,351,351,459,459,459,459,459,459,459,459,459,459',
'459,459,459,459,459,459,459,459,459,459,,459,459,459,459,459,461,461',
'461,461,461,461,461,461,461,461,461,461,461,461,461,461,461,461,461',
'461,,461,461,461,461,461,,,,,,,,,,,,,,,,459,459,,,459,,,,,,,,,,459,459',
',,,,,,,,459,,461,461,,,461,,,,,,,,,,461,461,,,459,459,,,,487,461,487',
'487,487,487,487,487,487,487,487,487,487,487,487,487,,,,,,461,461,914',
'914,914,914,914,914,914,914,914,914,914,914,914,914,914,914,914,914',
'914,914,,914,914,914,914,914,508,508,508,508,508,508,508,508,508,508',
'508,508,508,508,508,508,508,508,508,508,,508,508,508,508,508,,,,,,,',
',,,,,,,,914,914,,,914,,,,,,,,,,914,914,,,,,,,,,914,,508,508,,,508,,',
',,,,,,,508,508,,,914,914,,,,485,508,485,485,485,485,485,485,485,485',
'485,485,485,485,485,485,,,,,,508,508,511,511,511,511,511,511,511,511',
'511,511,511,511,511,511,511,511,511,511,511,511,,511,511,511,511,511',
'597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597',
'597,597,597,,597,597,597,597,597,,,,,,,,,,,,,,,,511,511,,,511,,,,,,',
',,,511,511,,,,,,,,,511,,597,597,,,597,,,,,,,,,,597,597,,,511,511,,,',
',597,,,,,,,,,,,,,,,,,,,,597,597,540,540,540,540,540,540,540,540,540',
'540,540,540,540,540,540,540,540,540,540,540,,540,540,540,540,540,595',
'595,595,595,595,595,595,595,595,595,595,595,595,595,595,595,595,595',
'595,595,,595,595,595,595,595,,,,,,,,,,,,,,,,540,540,,,540,,,,,,,,,,540',
'540,,,,,,,,,540,,595,595,,,595,,,,,,,,,,595,595,,,540,540,,,,,595,,',
',,,,,,,,,,,,,,,,,595,595,916,916,916,916,916,916,916,916,916,916,916',
'916,916,916,916,916,916,916,916,916,,916,916,916,916,916,506,506,506',
'506,506,506,506,506,506,506,506,506,506,506,506,506,506,506,506,506',
',506,506,506,506,506,,,,,,,,,,,,,,,,916,916,,,916,,,,,,,,,,916,916,',
',,,,,,,916,,506,506,,,506,,,,,,,,,,506,506,,,916,916,,,,,506,,,,,,,',
',,,,,,,,,,,,506,506,512,512,512,512,512,512,512,512,512,512,512,512',
'512,512,512,512,512,512,512,512,,512,512,512,512,512,312,312,312,312',
'312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,,312',
'312,312,312,312,,,,,,,,,,,,,,,,512,512,,,512,,,,,,,,,,512,512,,,,,,',
',,512,,312,312,,,312,,,,,,,,,,312,312,495,,512,512,,495,,728,312,,,',
'728,,,,,,,,,,,,,,,,312,313,313,313,313,313,313,313,313,313,313,313,313',
'313,313,313,313,313,313,313,313,,313,313,313,313,313,495,,495,495,495',
'495,495,728,,728,728,728,728,728,,,,,,495,,,346,346,495,495,728,,,,',
'728,728,,,,,,,,,313,313,,,313,,,495,,,,728,346,346,313,313,346,346,346',
'346,346,,346,,313,,346,346,,,,346,,346,346,346,346,346,346,346,,,,,313',
'346,346,346,346,346,346,346,,,,,346,346,346,346,346,346,346,346,346',
',346,346,,346,346,346,802,802,,,346,,346,346,,346,346,,,346,346,346',
'346,346,346,346,,,,,,,,,,,,802,,,,,,802,802,802,,802,,,,802,802,,,,802',
',802,802,802,802,802,802,802,,,,,,802,802,802,802,802,802,802,,,,,802',
'802,802,802,802,802,802,802,802,,802,802,,802,802,802,253,253,,,802',
',802,802,,802,802,,,802,802,802,802,802,802,802,,,,,,,,,,,,253,253,',
',253,253,253,253,253,,253,,,,253,253,,,,253,,253,253,253,253,253,253',
'253,,,,,,253,253,253,253,253,253,253,,,,,253,253,253,253,253,253,253',
'253,253,,253,253,,253,253,253,254,254,,,253,,253,253,,253,253,,,253',
'253,253,253,253,253,253,,,,,,,,,,,,254,254,,,254,254,254,254,254,,254',
',,,254,254,,,,254,,254,254,254,254,254,254,254,,,,,,254,254,254,254',
'254,254,254,,,,,254,254,254,254,254,254,254,254,254,,254,254,,254,254',
'254,255,255,,,254,,254,254,,254,254,,,254,254,254,254,254,254,254,,',
',,,,,,,,,255,255,,,255,255,255,255,255,,255,,,,255,255,,,,255,,255,255',
'255,255,255,255,255,,,,,,255,255,255,255,255,255,255,,,,,255,255,255',
'255,255,255,255,255,255,,255,255,,255,255,255,256,256,,,255,,255,255',
',255,255,,,255,255,255,255,255,255,255,,,,,,,,,,,,256,256,,,256,256',
'256,256,256,,256,,,,256,256,,,,256,,256,256,256,256,256,256,256,,,,',
',256,256,256,256,256,256,256,,,,,256,256,256,256,256,256,256,256,256',
',256,256,,256,256,256,257,257,,,256,,256,256,,256,256,,,256,256,256',
'256,256,256,256,,,,,,,,,,,,257,257,,,257,257,257,257,257,,257,,,,257',
'257,,,,257,,257,257,257,257,257,257,257,,,,,,257,257,257,257,257,257',
'257,,,,,257,257,257,257,257,257,257,257,257,,257,257,,257,257,257,258',
'258,,,257,,257,257,,257,257,,,257,257,257,257,257,257,257,,,,,,,,,,',
',258,258,,,258,258,258,258,258,,258,,,,258,258,,,,258,,258,258,258,258',
'258,258,258,,,,,,258,258,258,258,258,258,258,,,,,258,258,258,258,258',
'258,258,258,258,,258,258,,258,258,258,259,259,,,258,,258,258,,258,258',
',,258,258,258,258,258,258,258,,,,,,,,,,,,259,259,,,259,259,259,259,259',
',259,,,,259,259,,,,259,,259,259,259,259,259,259,259,,,,,,259,259,259',
'259,259,259,259,,,,,259,259,259,259,259,259,259,259,259,,259,259,,259',
'259,259,260,260,,,259,,259,259,,259,259,,,259,259,259,259,259,259,259',
',,,,,,,,,,,260,260,,,260,260,260,260,260,,260,,,,260,260,,,,260,,260',
'260,260,260,260,260,260,,,,,,260,260,260,260,260,260,260,,,,,260,260',
'260,260,260,260,260,260,260,,260,260,,260,260,260,261,261,,,260,,260',
'260,,260,260,,,260,260,260,260,260,260,260,,,,,,,,,,,,261,261,,,261',
'261,261,261,261,,261,,,,261,261,,,,261,,261,261,261,261,261,261,261',
',,,,,261,261,261,261,261,261,261,,,,,261,261,261,261,261,261,261,261',
'261,,261,261,,261,261,261,262,262,,,261,,261,261,,261,261,,,261,261',
'261,261,261,261,261,,,,,,,,,,,,262,262,,,262,262,262,262,262,,262,,',
',262,262,,,,262,,262,262,262,262,262,262,262,,,,,,262,262,262,262,262',
'262,262,,,,,262,262,262,262,262,262,262,262,262,,262,262,,262,262,262',
'263,263,,,262,,262,262,,262,262,,,262,262,262,262,262,262,262,,,,,,',
',,,,,263,263,,,263,263,263,263,263,,263,,,,263,263,,,,263,,263,263,263',
'263,263,263,263,,,,,,263,263,263,263,263,263,263,,,,,263,263,263,263',
'263,263,263,263,263,,263,263,,263,263,263,264,264,,,263,,263,263,,263',
'263,,,263,263,263,263,263,263,263,,,,,,,,,,,,264,264,,,264,264,264,264',
'264,,264,,,,264,264,,,,264,,264,264,264,264,264,264,264,,,,,,264,264',
'264,264,264,264,264,,,,,264,264,264,264,264,264,264,264,264,,264,264',
',264,264,264,265,265,,,264,,264,264,,264,264,,,264,264,264,264,264,264',
'264,,,,,,,,,,,,265,265,,,265,265,265,265,265,,265,,,,265,265,,,,265',
',265,265,265,265,265,265,265,,,,,,265,265,265,265,265,265,265,,,,,265',
'265,265,265,265,265,265,265,265,,265,265,,265,265,265,266,266,,,265',
',265,265,,265,265,,,265,265,265,265,265,265,265,,,,,,,,,,,,266,266,',
',266,266,266,266,266,,266,,,,266,266,,,,266,,266,266,266,266,266,266',
'266,,,,,,266,266,266,266,266,266,266,,,,,266,266,266,266,266,266,266',
'266,266,,266,266,,266,266,266,267,267,,,266,,266,266,,266,266,,,266',
'266,266,266,266,266,266,,,,,,,,,,,,267,267,,,267,267,267,267,267,,267',
',,,267,267,,,,267,,267,267,267,267,267,267,267,,,,,,267,267,267,267',
'267,267,267,,,,,267,267,267,267,267,267,267,267,267,,267,267,,267,267',
'267,268,268,,,267,,267,267,,267,267,,,267,267,267,267,267,267,267,,',
',,,,,,,,,268,268,,,268,268,268,268,268,,268,,,,268,268,,,,268,,268,268',
'268,268,268,268,268,,,,,,268,268,268,268,268,268,268,,,,,268,268,268',
'268,268,268,268,268,268,,268,268,,268,268,268,269,269,,,268,,268,268',
',268,268,,,268,268,268,268,268,268,268,,,,,,,,,,,,269,269,,,269,269',
'269,269,269,,269,,,,269,269,,,,269,,269,269,269,269,269,269,269,,,,',
',269,269,269,269,269,269,269,,,,,269,269,269,269,269,269,269,269,269',
',269,269,,269,269,269,270,270,,,269,,269,269,,269,269,,,269,269,269',
'269,269,269,269,,,,,,,,,,,,270,270,,,270,270,270,270,270,,270,,,,270',
'270,,,,270,,270,270,270,270,270,270,270,,,,,,270,270,270,270,270,270',
'270,,,,,270,270,270,270,270,270,270,270,270,,270,270,,270,270,270,271',
'271,,,270,,270,270,,270,270,,,270,270,270,270,270,270,270,,,,,,,,,,',
',271,271,,,271,271,271,271,271,,271,,,,271,271,,,,271,,271,271,271,271',
'271,271,271,,,,,,271,271,271,271,271,271,271,,,,,271,271,271,271,271',
'271,271,271,271,,271,271,,271,271,271,133,133,,,271,,271,271,,271,271',
',,271,271,271,271,271,271,271,,,,,,,,,,,,133,133,,,133,133,133,133,133',
',133,,,,133,133,,,,133,,133,133,133,133,133,133,133,,,,,,133,133,133',
'133,133,133,133,,,,,133,133,133,133,133,133,133,133,133,,133,133,,133',
'133,133,273,273,,,133,,133,133,,133,133,,,133,133,133,133,133,133,133',
',,,,,,,,,,,273,273,,,273,273,273,273,273,,273,,,,273,273,,,,273,,273',
'273,273,273,273,273,273,,,,,,273,273,273,273,273,273,273,,,,,273,273',
'273,273,273,273,273,273,273,,273,273,,273,273,273,274,274,,,273,,273',
'273,,273,273,,,273,273,273,273,273,273,273,,,,,,,,,,,,274,274,,,274',
'274,274,274,274,,274,,,,274,274,,,,274,,274,274,274,274,274,274,274',
',,,,,274,274,274,274,274,274,274,,,,,274,274,274,274,274,274,274,274',
'274,,274,274,,274,274,274,275,275,,,274,,274,274,,274,274,,,274,274',
'274,274,274,274,274,,,,,,,,,,,,275,275,,,275,275,275,275,275,,275,,',
',275,275,,,,275,,275,275,275,275,275,275,275,,,,,,275,275,275,275,275',
'275,275,,,,,275,275,275,275,275,275,275,275,275,,275,275,,275,275,275',
'276,276,,,275,,275,275,,275,275,,,275,275,275,275,275,275,275,,,,,,',
',,,,,276,276,,,276,276,276,276,276,,276,,,,276,276,,,,276,,276,276,276',
'276,276,276,276,,,,,,276,276,276,276,276,276,276,,,,,276,276,276,276',
'276,276,276,276,276,,276,276,,276,276,276,277,277,,,276,,276,276,,276',
'276,,,276,276,276,276,276,276,276,,,,,,,,,,,,277,277,,,277,277,277,277',
'277,,277,,,,277,277,,,,277,,277,277,277,277,277,277,277,,,,,,277,277',
'277,277,277,277,277,,,,,277,277,277,277,277,277,277,277,277,,277,277',
',277,277,277,278,278,,,277,,277,277,,277,277,,,277,277,277,277,277,277',
'277,,,,,,,,,,,,278,278,,,278,278,278,278,278,,278,,,,278,278,,,,278',
',278,278,278,278,278,278,278,,,,,,278,278,278,278,278,278,278,,,,,278',
'278,278,278,278,278,278,278,278,,278,278,,278,278,278,42,42,,,278,,278',
'278,,278,278,,,278,278,278,278,278,278,278,,,,,,,,,,,,42,,,,,,42,42',
'42,,42,,,,42,42,,,,42,,42,42,42,42,42,42,42,,,,,,42,42,42,42,42,42,42',
',,,,42,42,42,42,42,42,42,42,42,,42,42,,42,42,42,41,41,,,42,,42,42,,42',
'42,,,42,42,42,42,42,42,42,,,,,,,,,,,,41,,,,,,41,41,41,,41,,,,41,41,',
',,41,,41,41,41,41,41,41,41,,,,,,41,41,41,41,41,41,41,,,,,41,41,41,41',
'41,41,41,41,41,,41,41,,41,41,41,507,507,,,41,,41,41,,41,41,,,41,41,41',
'41,41,41,41,,,,,,,,,,,,507,507,,,507,507,507,507,507,,507,,,,507,507',
',,,507,,507,507,507,507,507,507,507,,,,,,507,507,507,507,507,507,507',
',,,,507,507,507,507,507,507,507,507,507,507,507,507,,507,507,507,132',
'132,,,507,,507,507,,507,507,507,507,507,507,507,507,507,507,507,,,,',
',,,,,,,132,132,,,132,132,132,132,132,,132,,,,132,132,,,,132,,132,132',
'132,132,132,132,132,,,,,,132,132,132,132,132,132,132,,,,,132,132,132',
'132,132,132,132,132,132,,132,132,,132,132,132,523,523,,,132,,132,132',
',132,132,,,132,132,132,132,132,132,132,,,,,,,,,,,,523,523,,,523,523',
'523,523,523,,523,,,,523,523,,,,523,,523,523,523,523,523,523,523,,,,',
',523,523,523,523,523,523,523,,,,,523,523,523,523,523,523,523,523,523',
',523,523,,523,523,523,502,502,,,523,,523,523,,523,523,523,,523,523,523',
'523,523,523,523,,,,,,,,,,,,502,502,,502,502,502,502,502,502,,502,,,',
'502,502,,,,502,,502,502,502,502,502,502,502,,,,,,502,502,502,502,502',
'502,502,,,,,502,502,502,502,502,502,502,502,502,,502,502,,502,502,502',
'47,47,,,502,,502,502,,502,502,,,502,502,502,502,502,502,502,,,,,,,,',
',,,47,47,,,47,47,47,47,47,,47,,,,47,47,,,,47,,47,47,47,47,47,47,47,',
',,,,47,47,47,47,47,47,47,,,,,47,47,47,47,47,47,47,47,47,,47,47,,47,47',
'47,498,498,,,47,,47,47,,47,47,,,47,47,47,47,47,47,47,,,,,,,,,,,,498',
'498,,,498,498,498,498,498,,498,,,,498,498,,,,498,,498,498,498,498,498',
'498,498,,,,,,498,498,498,498,498,498,498,,,,,498,498,498,498,498,498',
'498,498,498,,498,498,,498,498,498,497,497,,,498,,498,498,,498,498,,',
'498,498,498,498,498,498,498,,,,,,,,,,,,497,497,,,497,497,497,497,497',
',497,,,,497,497,,,,497,,497,497,497,497,497,497,497,,,,,,497,497,497',
'497,497,497,497,,,,,497,497,497,497,497,497,497,497,497,,497,497,,497',
'497,497,292,292,,,497,,497,497,,497,497,,,497,497,497,497,497,497,497',
',,,,,,,,,,,292,292,,292,292,292,292,292,292,,292,,,,292,292,,,,292,',
'292,292,292,292,292,292,292,,,,,,292,292,292,292,292,292,292,,,,,292',
'292,292,292,292,292,292,292,292,,292,292,,292,292,292,397,397,,,292',
',292,292,,292,292,,,292,292,292,292,292,292,292,,,,,,,,,,,,397,397,',
'397,397,397,397,397,397,,397,,,,397,397,,,,397,,397,397,397,397,397',
'397,397,,,,,,397,397,397,397,397,397,397,,,,,397,397,397,397,397,397',
'397,397,397,,397,397,,397,397,397,48,48,,,397,,397,397,,397,397,,,397',
'397,397,397,397,397,397,,,,,,,,,,,,48,48,,,48,48,48,48,48,,48,,,,48',
'48,,,,48,,48,48,48,48,48,48,48,,,,,,48,48,48,48,48,48,48,,,,,48,48,48',
'48,48,48,48,48,48,48,48,48,,48,48,48,51,51,,,48,,48,48,,48,48,48,48',
'48,48,48,48,48,48,48,,,,,,,,,,,,51,51,,,51,51,51,51,51,,51,,,,51,51',
',,,51,,51,51,51,51,51,51,51,,,,,,51,51,51,51,51,51,51,,,,,51,51,51,51',
'51,51,51,51,51,,51,51,,51,51,51,584,584,,,51,,51,51,,51,51,,,51,51,51',
'51,51,51,51,,,,,,,,,,,,584,584,,584,584,584,584,584,584,,584,,,,584',
'584,,,,584,,584,584,584,584,584,584,584,,,,,,584,584,584,584,584,584',
'584,,,,,584,584,584,584,584,584,584,584,584,,584,584,,584,584,584,30',
'30,,,584,,584,584,,584,584,,,584,584,584,584,584,584,584,,,,,,,,,,,',
'30,30,,,30,30,30,30,30,,30,,,,30,30,,,,30,,30,30,30,30,30,30,30,,,,',
',30,30,30,30,30,30,30,,,,,30,30,30,30,30,30,30,30,30,,30,30,,30,30,30',
'26,26,,,30,,30,30,,30,30,,,30,30,30,30,30,30,30,,,,,26,,,,,,,26,,,,',
',26,26,26,,26,,,,26,26,,,,26,,26,26,26,26,26,26,26,,,,,,26,26,26,26',
'26,26,26,,,,,26,26,26,26,26,26,26,26,26,,26,26,,26,26,26,300,300,,,26',
',26,26,,26,26,,,26,26,26,26,26,26,26,,,,,,,,,,,,300,300,,300,300,300',
'300,300,300,300,300,,,,300,300,,,,300,,300,300,300,300,300,300,300,',
',,,,300,300,300,300,300,300,300,300,,,300,300,300,300,300,300,300,300',
'300,300,,300,300,,300,300,300,596,596,,,300,,300,300,,300,300,300,,300',
'300,300,300,300,300,300,,,,,,,,,,,,596,596,,,596,596,596,596,596,,596',
',,,596,596,,,,596,,596,596,596,596,596,596,596,,,,,,596,596,596,596',
'596,596,596,,,,,596,596,596,596,596,596,596,596,596,596,596,596,,596',
'596,596,816,816,,,596,,596,596,,596,596,596,596,596,596,596,596,596',
'596,596,,,,,,,,,,,,816,,,,,,816,816,816,,816,,,,816,816,,,,816,,816',
'816,816,816,816,816,816,,,,,,816,816,816,816,816,816,816,,,,,816,816',
'816,816,816,816,816,816,816,,816,816,,816,816,816,775,775,,,816,,816',
'816,,816,816,,,816,816,816,816,816,816,816,,,,,,,,,,,,775,775,,,775',
'775,775,775,775,,775,,,,775,775,,,,775,,775,775,775,775,775,775,775',
',,,,,775,775,775,775,775,775,775,,,,,775,775,775,775,775,775,775,775',
'775,,775,775,,775,775,775,774,774,,,775,,775,775,,775,775,,,775,775',
'775,775,775,775,775,,,,,,,,,,,,774,774,,,774,774,774,774,774,,774,,',
',774,774,,,,774,,774,774,774,774,774,774,774,,,,,,774,774,774,774,774',
'774,774,,,,,774,774,774,774,774,774,774,774,774,,774,774,,774,774,774',
'772,772,,,774,,774,774,,774,774,,,774,774,774,774,774,774,774,,,,,,',
',,,,,772,772,,,772,772,772,772,772,,772,,,,772,772,,,,772,,772,772,772',
'772,772,772,772,,,,,,772,772,772,772,772,772,772,,,,,772,772,772,772',
'772,772,772,772,772,,772,772,,772,772,772,272,272,,,772,,772,772,,772',
'772,,,772,772,772,772,772,772,772,,,,,,,,,,,,272,272,,,272,272,272,272',
'272,,272,,,,272,272,,,,272,,272,272,272,272,272,272,272,,,,,,272,272',
'272,272,272,272,272,,,,,272,272,272,272,272,272,272,272,272,,272,272',
',272,272,272,13,13,,,272,,272,272,,272,272,,,272,272,272,272,272,272',
'272,,,,,,,,,,,,13,13,,13,13,13,13,13,13,13,13,,,,13,13,,,,13,,13,13',
'13,13,13,13,13,,,,,,13,13,13,13,13,13,13,13,,,13,13,13,13,13,13,13,13',
'13,13,,13,13,,13,13,13,58,58,,,13,,13,13,,13,13,13,,13,13,13,13,13,13',
'13,,,,,,,,,,,,58,58,,,58,58,58,58,58,,58,,,,58,58,,,,58,,58,58,58,58',
'58,58,58,,,,,,58,58,58,58,58,58,58,,,,,58,58,58,58,58,58,58,58,58,58',
'58,58,,58,58,58,601,601,,,58,,58,58,,58,58,58,58,58,58,58,58,58,58,58',
',,,,,,,,,,,601,,,,,,601,601,601,,601,,,,601,601,,,,601,,601,601,601',
'601,601,601,601,,,,,,601,601,601,601,601,601,601,,,,,601,601,601,601',
'601,601,601,601,601,,601,601,,601,601,601,856,856,,,601,,601,601,,601',
'601,,,601,601,601,601,601,601,601,,,,,,,,,,,,856,856,,,856,856,856,856',
'856,,856,,,,856,856,,,,856,,856,856,856,856,856,856,856,,,,,,856,856',
'856,856,856,856,856,,,,,856,856,856,856,856,856,856,856,856,,856,856',
',856,856,856,765,765,,,856,,856,856,,856,856,856,,856,856,856,856,856',
'856,856,,,,,,,,,,,,765,,,,,,765,765,765,,765,,,,765,765,,,,765,,765',
'765,765,765,765,765,765,,,,,,765,765,765,765,765,765,765,,,,,765,765',
'765,765,765,765,765,765,765,,765,765,,765,765,765,915,915,,,765,,765',
'765,,765,765,,,765,765,765,765,765,765,765,,,,,,,,,,,,915,915,,,915',
'915,915,915,915,,915,,,,915,915,,,,915,,915,915,915,915,915,915,915',
',,,,,915,915,915,915,915,915,915,,,,,915,915,915,915,915,915,915,915',
'915,915,915,915,,915,915,915,320,320,,,915,,915,915,,915,915,915,915',
'915,915,915,915,915,915,915,,,,,,,,,,,,320,320,,,320,320,320,320,320',
',320,,,,320,320,,,,320,,320,320,320,320,320,320,320,,,,,,320,320,320',
'320,320,320,320,,,,,320,320,320,320,320,320,320,320,320,,320,320,,320',
'320,320,321,321,,,320,,320,320,,320,320,320,,320,320,320,320,320,320',
'320,,,,,,,,,,,,321,321,,321,321,321,321,321,321,,321,,,,321,321,,,,321',
',321,321,321,321,321,321,321,,,,,,321,321,321,321,321,321,321,,,,,321',
'321,321,321,321,321,321,321,321,,321,321,,321,321,321,567,567,,,321',
',321,321,,321,321,,,321,321,321,321,321,321,321,,,,,,,,,,,,567,567,',
',567,567,567,567,567,,567,,,,567,567,,,,567,,567,567,567,567,567,567',
'567,,,,,,567,567,567,567,567,567,567,,,,,567,567,567,567,567,567,567',
'567,567,,567,567,,567,567,567,396,396,,,567,,567,567,,567,567,,,567',
'567,567,567,567,567,567,,,,,,,,,,,,396,396,,396,396,396,396,396,396',
',396,,,,396,396,,,,396,,396,396,396,396,396,396,396,,,,,,396,396,396',
'396,396,396,396,,,,,396,396,396,396,396,396,396,396,396,,396,396,,396',
'396,396,611,611,,,396,,396,396,,396,396,,,396,396,396,396,396,396,396',
',,,,,,,,,,,611,611,,,611,611,611,611,611,,611,,,,611,611,,,,611,,611',
'611,611,611,611,611,611,,,,,,611,611,611,611,611,611,611,,,,,611,611',
'611,611,611,611,611,611,611,611,611,611,,611,611,611,613,613,,,611,',
'611,611,,611,611,611,,611,611,611,611,611,611,611,,,,,,,,,,,,613,613',
',,613,613,613,613,613,,613,,,,613,613,,,,613,,613,613,613,613,613,613',
'613,,,,,,613,613,613,613,613,613,613,,,,,613,613,613,613,613,613,613',
'613,613,613,613,613,,613,613,613,624,624,,,613,,613,613,,613,613,,,613',
'613,613,613,613,613,613,,,,,,,,,,,,624,,,,,,624,624,624,,624,,,,624',
'624,,,,624,,624,624,624,624,624,624,624,,,,,,624,624,624,624,624,624',
'624,,,,,624,624,624,624,624,624,624,624,624,,624,624,,624,624,624,630',
'630,,,624,,624,624,,624,624,,,624,624,624,624,624,624,624,,,,,,,,,,',
',630,630,,,630,630,630,630,630,,630,,,,630,630,,,,630,,630,630,630,630',
'630,630,630,,,,,,630,630,630,630,630,630,630,,,,,630,630,630,630,630',
'630,630,630,630,,630,630,,630,630,630,637,637,,,630,,630,630,,630,630',
'630,,630,630,630,630,630,630,630,,,,,,,,,,,,637,637,,,637,637,637,637',
'637,,637,,,,637,637,,,,637,,637,637,637,637,637,637,637,,,,,,637,637',
'637,637,637,637,637,,,,,637,637,637,637,637,637,637,637,637,,637,637',
',637,637,637,547,547,,,637,,637,637,,637,637,,,637,637,637,637,637,637',
'637,,,,,,,,,,,,547,547,,,547,547,547,547,547,,547,,,,547,547,,,,547',
',547,547,547,547,547,547,547,,,,,,547,547,547,547,547,547,547,,,,,547',
'547,547,547,547,547,547,547,547,,547,547,,547,547,547,460,460,,,547',
',547,547,,547,547,,,547,547,547,547,547,547,547,,,,,,,,,,,,460,460,',
',460,460,460,460,460,,460,,,,460,460,,,,460,,460,460,460,460,460,460',
'460,,,,,,460,460,460,460,460,460,460,,,,,460,460,460,460,460,460,460',
'460,460,460,460,460,,460,460,460,134,134,,,460,,460,460,,460,460,460',
'460,460,460,460,460,460,460,460,,,,,,,,,,,,134,134,,,134,134,134,134',
'134,,134,,,,134,134,,,,134,,134,134,134,134,134,134,134,,,,,,134,134',
'134,134,134,134,134,,,,,134,134,134,134,134,134,134,134,134,,134,134',
',134,134,134,455,455,,,134,,134,134,,134,134,,,134,134,134,134,134,134',
'134,,,,,,,,,,,,455,455,,455,455,455,455,455,455,,455,,,,455,455,,,,455',
',455,455,455,455,455,455,455,,,,,,455,455,455,455,455,455,455,,,,,455',
'455,455,455,455,455,455,455,455,,455,455,,455,455,455,73,73,,,455,,455',
'455,,455,455,,,455,455,455,455,455,455,455,,,,,,,,,,,,73,73,,73,73,73',
'73,73,73,,73,,,,73,73,,,,73,,73,73,73,73,73,73,73,,,,,,73,73,73,73,73',
'73,73,,,,,73,73,73,73,73,73,73,73,73,,73,73,,73,73,73,89,89,,,73,,73',
'73,,73,73,,,73,73,73,73,73,73,73,,,,,,,,,,,,89,89,,89,89,89,89,89,89',
',89,,,,89,89,,,,89,,89,89,89,89,89,89,89,,,,,,89,89,89,89,89,89,89,',
',,,89,89,89,89,89,89,89,89,89,,89,89,,89,89,89,77,77,,,89,,89,89,,89',
'89,,,89,89,89,89,89,89,89,,,,,,,,,,,,77,77,,77,77,77,77,77,77,,77,,',
',77,77,,,,77,,77,77,77,77,77,77,77,,,,,,77,77,77,77,77,77,77,,,,,77',
'77,77,77,77,77,77,77,77,,77,77,,77,77,77,758,758,,,77,,77,77,,77,77',
',,77,77,77,77,77,77,77,,,,,,,,,,,,758,,,,,,758,758,758,,758,,,,758,758',
',,,758,,758,758,758,758,758,758,758,,,,,,758,758,758,758,758,758,758',
',,,,758,758,758,758,758,758,758,758,758,,758,758,,758,758,758,857,857',
',,758,,758,758,,758,758,,,758,758,758,758,758,758,758,,,,,,,,,,,,857',
'857,,,857,857,857,857,857,,857,,,,857,857,,,,857,,857,857,857,857,857',
'857,857,,,,,,857,857,857,857,857,857,857,,,,,857,857,857,857,857,857',
'857,857,857,,857,857,,857,857,857,341,341,,,857,,857,857,,857,857,,',
'857,857,857,857,857,857,857,,,,,,,,,,,,341,341,,,341,341,341,341,341',
',341,,,,341,341,,,,341,,341,341,341,341,341,341,341,,,,,,341,341,341',
'341,341,341,341,,,,,341,341,341,341,341,341,341,341,341,,341,341,,341',
'341,341,82,82,,,341,,341,341,,341,341,341,,341,341,341,341,341,341,341',
',,,,,,,,,,,82,,,,,,82,82,82,,82,,,,82,82,,,,82,,82,82,82,82,82,82,82',
',,,,,82,82,82,82,82,82,82,,,,,82,82,82,82,82,82,82,82,82,,82,82,,82',
'82,82,345,345,,,82,,82,82,,82,82,82,,82,82,82,82,82,82,82,,,,,,,,,,',
',345,345,,345,345,345,345,345,345,,345,,,,345,345,,,,345,,345,345,345',
'345,345,345,345,,,,,,345,345,345,345,345,345,345,,,,,345,345,345,345',
'345,345,345,345,345,,345,345,,345,345,345,800,800,,,345,,345,345,,345',
'345,,,345,345,345,345,345,345,345,,,,,,,,,,,,800,800,,,800,800,800,800',
'800,,800,,,,800,800,,,,800,,800,800,800,800,800,800,800,,,,,,800,800',
'800,800,800,800,800,,,,,800,800,800,800,800,800,800,800,800,,800,800',
',800,800,800,425,425,,,800,,800,800,,800,800,,,800,800,800,800,800,800',
'800,,,,,,,,,,,,425,425,,,425,425,425,425,425,,425,,,,425,425,,,,425',
',425,425,425,425,425,425,425,,,,,,425,425,425,425,425,425,425,,,,,425',
'425,425,425,425,425,425,425,425,,425,425,,425,425,425,421,421,,,425',
',425,425,,425,425,,,425,425,425,425,425,425,425,,,,,,,,,,,,421,421,',
',421,421,421,421,421,,421,,,,421,421,,,,421,,421,421,421,421,421,421',
'421,,,,,,421,421,421,421,421,421,421,,,,,421,421,421,421,421,421,421',
'421,421,,421,421,,421,421,421,824,824,,,421,,421,421,,421,421,,,421',
'421,421,421,421,421,421,,,,,,,,,,,,824,824,,,824,824,824,824,824,,824',
',,,824,824,,,,824,,824,824,824,824,824,824,824,,,,,,824,824,824,824',
'824,824,824,,,,,824,824,824,824,824,824,824,824,824,,824,824,,824,824',
'824,352,352,,,824,,824,824,,824,824,,,824,824,824,824,824,824,824,,',
',,,,,,,,,352,352,,,352,352,352,352,352,,352,,,,352,352,,,,352,,352,352',
'352,352,352,352,352,,,,,,352,352,352,352,352,352,352,,,,,352,352,352',
'352,352,352,352,352,352,352,352,352,,352,352,352,845,845,,,352,,352',
'352,,352,352,352,352,352,352,352,352,352,352,352,,,,,,,,,,,,845,845',
',845,845,845,845,845,845,,845,,,,845,845,,,,845,,845,845,845,845,845',
'845,845,,,,,,845,845,845,845,845,845,845,,,,,845,845,845,845,845,845',
'845,845,845,,845,845,,845,845,845,389,389,,,845,,845,845,,845,845,,',
'845,845,845,845,845,845,845,,,,,,,,,,,,389,389,,389,389,389,389,389',
'389,,389,,,,389,389,,,,389,,389,389,389,389,389,389,389,,,,,,389,389',
'389,389,389,389,389,,,,,389,389,389,389,389,389,389,389,389,,389,389',
',389,389,389,419,419,,,389,,389,389,,389,389,,,389,389,389,389,389,389',
'389,,,,,,,,,,,,419,419,,,419,419,419,419,419,,419,,,,419,419,,,,419',
',419,419,419,419,419,419,419,,,,,,419,419,419,419,419,419,419,,,,,419',
'419,419,419,419,419,419,419,419,419,419,419,,419,419,419,836,836,,,419',
',419,419,,419,419,,419,419,419,419,419,419,419,419,,,,,,,,,,,,836,836',
',,836,836,836,836,836,,836,,,,836,836,,,,836,,836,836,836,836,836,836',
'836,,,,,,836,836,836,836,836,836,836,,,,,836,836,836,836,836,836,836',
'836,836,,836,836,,836,836,836,416,416,,,836,,836,836,,836,836,,,836',
'836,836,836,836,836,836,,,,,,,,,,,,416,416,,,416,416,416,416,416,,416',
',,,416,416,,,,416,,416,416,416,416,416,416,416,,,,,,416,416,416,416',
'416,416,416,,,,,416,416,416,416,416,416,416,416,416,416,416,416,,416',
'416,416,11,11,,,416,,416,416,,416,416,416,416,416,416,416,416,416,416',
'416,,,,,,,,,,,,11,,,,,,11,11,11,,11,,,,11,11,,,,11,,11,11,11,11,11,11',
'11,,,,,,11,11,11,11,11,11,11,,,,,11,11,11,11,11,11,11,11,11,,11,11,',
'11,11,11,110,110,,,11,,11,11,,11,11,11,,11,11,11,11,11,11,11,,,,,,,',
',,,,110,110,,,110,110,110,110,110,,110,,,,110,110,,,,110,,110,110,110',
'110,110,110,110,,,,,,110,110,110,110,110,110,110,,,,,110,110,110,110',
'110,110,110,110,110,110,110,110,,110,110,110,414,414,,,110,,110,110',
',110,110,110,110,110,110,110,110,110,110,110,,,,,,,,,,,,414,414,,,414',
'414,414,414,414,,414,,,,414,414,,,,414,,414,414,414,414,414,414,414',
',,,,,414,414,414,414,414,414,414,,,,,414,414,414,414,414,414,414,414',
'414,414,414,414,,414,414,414,101,101,,,414,,414,414,,414,414,414,414',
'414,414,414,414,414,414,414,,,,,,,,,,,,101,101,,101,101,101,101,101',
'101,,101,,,,101,101,,,,101,,101,101,101,101,101,101,101,,,,,,101,101',
'101,101,101,101,101,,,,,101,101,101,101,101,101,101,101,101,,101,101',
',101,101,101,746,746,,,101,,101,101,,101,101,,,101,101,101,101,101,101',
'101,,,,,,,,,,,,746,746,,,746,746,746,746,746,,746,,,,746,746,,,,746',
',746,746,746,746,746,746,746,,,,,,746,746,746,746,746,746,746,,,,,746',
'746,746,746,746,746,746,746,746,,746,746,,746,746,746,100,100,,,746',
',746,746,,746,746,,,746,746,746,746,746,746,746,,,,,,,,,,,,100,100,',
',100,100,100,100,100,,100,,,,100,100,,,,100,,100,100,100,100,100,100',
'100,,,,,,100,100,100,100,100,100,100,,,,,100,100,100,100,100,100,100',
'100,100,100,100,100,,100,100,100,743,743,,,100,,100,100,,100,100,100',
'100,100,100,100,100,100,100,100,,,,,,,,,,,,743,743,,,743,743,743,743',
'743,,743,,,,743,743,,,,743,,743,743,743,743,743,743,743,,,,,,743,743',
'743,743,743,743,743,,,,,743,743,743,743,743,743,743,743,743,,743,743',
',743,743,743,410,410,,,743,,743,743,,743,743,,,743,743,743,743,743,743',
'743,,,,,,,,,,,,410,410,,,410,410,410,410,410,,410,,,,410,410,,,,410',
',410,410,410,410,410,410,410,,,,,,410,410,410,410,410,410,410,,,,,410',
'410,410,410,410,410,410,410,410,,410,410,,410,410,410,94,94,,,410,,410',
'410,,410,410,,,410,410,410,410,410,410,410,,,,,,,,,,,,94,94,,,94,94',
'94,94,94,,94,,,,94,94,,,,94,,94,94,94,94,94,94,94,,,,,,94,94,94,94,94',
'94,94,,,,,94,94,94,94,94,94,94,94,94,94,94,94,,94,94,94,409,409,,,94',
',94,94,,94,94,,,94,94,94,94,94,94,94,,,,,,,,,,,,409,409,,,409,409,409',
'409,409,,409,,,,409,409,,,,409,,409,409,409,409,409,409,409,,,,,,409',
'409,409,409,409,409,409,,,,,409,409,409,409,409,409,409,409,409,,409',
'409,,409,409,409,84,84,,,409,,409,409,,409,409,,,409,409,409,409,409',
'409,409,,,,,,,,,,,,84,84,,84,84,84,84,84,84,,84,,,,84,84,,,,84,,84,84',
'84,84,84,84,84,,,,,,84,84,84,84,84,84,84,,,,,84,84,84,84,84,84,84,84',
'84,,84,84,,84,84,84,721,721,,,84,,84,84,,84,84,,,84,84,84,84,84,84,84',
',,,,,,,,,,,721,721,,,721,721,721,721,721,,721,,,,721,721,,,,721,,721',
'721,721,721,721,721,721,,,,,,721,721,721,721,721,721,721,,,,,721,721',
'721,721,721,721,721,721,721,,721,721,,721,721,721,399,399,,,721,,721',
'721,,721,721,,,721,721,721,721,721,721,721,,,,,,,,,,,,399,,,,,,399,399',
'399,,399,,,,399,399,,,,399,,399,399,399,399,399,399,399,,,,,,399,399',
'399,399,399,399,399,,,,,399,399,399,399,399,399,399,399,399,,399,399',
',399,399,399,722,722,,,399,,399,399,,399,399,,,399,399,399,399,399,399',
'399,,,,,,,,,,,,722,722,,,722,722,722,722,722,,722,,,,722,722,,,,722',
',722,722,722,722,722,722,722,,,,,,722,722,722,722,722,722,722,,,,,722',
'722,722,722,722,722,722,722,722,,722,722,,722,722,722,377,377,,,722',
',722,722,,722,722,722,,722,722,722,722,722,722,722,,,,,,,,,,,,377,377',
',,377,377,377,377,377,,377,,,,377,377,,,,377,,377,377,377,377,377,377',
'377,,,,,,377,377,377,377,377,377,377,,,,,377,377,377,377,377,377,377',
'377,377,,377,377,,377,377,377,734,734,,,377,,377,377,,377,377,,,377',
'377,377,377,377,377,377,,,,,,,,,,,,734,734,,,734,734,734,734,734,,734',
',,,734,734,,,,734,,734,734,734,734,734,734,734,,,,,,734,734,734,734',
'734,734,734,,,,,734,734,734,734,734,734,734,734,734,,734,734,,734,734',
'734,740,740,,,734,,734,734,,734,734,,,734,734,734,734,734,734,734,,',
',,,,,,,,,740,740,,,740,740,740,740,740,,740,,,,740,740,,,,740,,740,740',
'740,740,740,740,740,,,,,,740,740,740,740,740,740,740,,,,,740,740,740',
'740,740,740,740,740,740,,740,740,,740,740,740,737,737,,,740,,740,740',
',740,740,,,740,740,740,740,740,740,740,,,,,,,,,,,,737,737,,,737,737',
'737,737,737,,737,,,,737,737,,,,737,,737,737,737,737,737,737,737,,,,',
',737,737,737,737,737,737,737,,,,,737,737,737,737,737,737,737,737,737',
',737,737,,737,737,737,90,90,,,737,,737,737,,737,737,,,737,737,737,737',
'737,737,737,,,,,,,,,,,,90,90,,,90,90,90,90,90,,90,,,,90,90,,,,90,,90',
'90,90,90,90,90,90,,,,,,90,90,90,90,90,90,90,,,,,90,90,90,90,90,90,90',
'90,90,90,90,90,,90,90,90,385,385,,,90,,90,90,,90,90,90,,90,90,90,90',
'90,90,90,,,,,,,,,,,,385,385,,385,385,385,385,385,385,385,385,,,,385',
'385,,,,385,,385,385,385,385,385,385,385,,,,,,385,385,385,385,385,385',
'385,385,,,385,385,385,385,385,385,385,385,385,385,,385,385,,385,385',
'385,386,386,,,385,,385,385,,385,385,385,,385,385,385,385,385,385,385',
',,,,,,,,,,,386,386,,386,386,386,386,386,386,,386,,,,386,386,,,,386,',
'386,386,386,386,386,386,386,,,,,,386,386,386,386,386,386,386,,,,,386',
'386,386,386,386,386,386,386,386,,386,386,,386,386,386,387,387,,,386',
',386,386,,386,386,,,386,386,386,386,386,386,386,,,,,,,,,,,,387,387,',
'387,387,387,387,387,387,,387,,,,387,387,,,,387,,387,387,387,387,387',
'387,387,,,,,,387,387,387,387,387,387,387,,,,,387,387,387,387,387,387',
'387,387,387,,387,387,,387,387,387,388,388,,,387,,387,387,,387,387,,',
'387,387,387,387,387,387,387,,,,,,,,,,,,388,388,,388,388,388,388,388',
'388,,388,,,,388,388,,,,388,,388,388,388,388,388,388,388,,,,,,388,388',
'388,388,388,388,388,,,,,388,388,388,388,388,388,388,388,388,,388,388',
',388,388,388,420,420,,,388,,388,388,,388,388,,,388,388,388,388,388,388',
'388,,,,,,,,,,,,420,420,,,420,420,420,420,420,,420,,,,420,420,,,,420',
',420,420,420,420,420,420,420,,,,,,420,420,420,420,420,420,420,,,,,420',
'420,420,420,420,420,420,420,420,,420,420,323,420,420,420,,323,,6,420',
',420,420,6,420,420,,,420,420,420,420,420,420,420,,,,,,,,,,,549,,,,,549',
',,,,786,,,,,786,,,,,,323,,323,323,323,323,323,6,,6,6,6,6,6,,140,,,,323',
'140,,449,,323,323,6,449,,,,6,6,,549,,549,549,549,549,549,,,,786,323',
'786,786,786,786,786,906,6,549,,,906,,549,549,434,,,786,,434,,,786,786',
'140,,140,140,140,140,140,449,,449,449,449,449,449,,,807,,,140,,807,',
'805,140,140,449,,805,,,449,449,,,,906,,906,906,906,906,906,,,434,,434',
'434,434,434,434,,,,906,,,,,906,906,,,434,,,,,434,434,807,,807,807,807',
'807,807,805,,805,805,805,805,805,,,,,,807,,,,,807,807,805,,,,,805,805',
'488,,488,488,488,488,488,488,488,488,488,488,488,488,488,488,488,488',
'488,488,488,488,488,488,488,488,,691,488,691,691,691,691,691,691,691',
'691,691,691,691,691,691,691,691,691,691,691,691,691,691,691,691,691',
',337,691,337,337,337,337,337,337,337,337,337,337,337,337,337,337,337',
'337,337,337,337,337,337,337,337,337,,690,337,690,690,690,690,690,690',
'690,690,690,690,690,690,690,690,690,690,690,690,690,690,690,690,690',
'690,,12,690,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12',
'12,12,12,12,12,,334,12,334,334,334,334,334,334,334,334,334,334,334,334',
'334,334,334,334,334,334,334,334,334,334,334,334,,111,334,111,111,111',
'111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111',
'111,111,111,111,,296,111,296,296,296,296,296,296,296,296,296,296,296',
'296,296,296,296,296,296,296,296,296,296,296,296,296,480,,480,480,480',
'480,480,480,480,480,480,480,480,480,480,480,480,480,480,480,480,480',
'480,475,,475,475,475,475,475,475,475,475,475,475,475,475,475,475,475',
'475,475,475,475,475,475,477,,477,477,477,477,477,477,477,477,477,477',
'477,477,477,477,477,477,477,477,477,477,477' ]
        racc_action_check = arr = Array.new(17859, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
   nil,  5367,  1577,   nil,   nil,  2359, 17320,   nil,   nil,   nil,
  1381, 15156, 17668, 11789,   nil,   nil,   nil,  1504,   nil,   nil,
   nil,   nil,   nil,   nil,   538,   nil, 11061,   nil,   nil,   nil,
 10970,   nil,   nil,  1428,   nil,  4809,  1045,   506,  1397,   nil,
   nil,  9787,  9696,   nil,   nil,  1500,   820, 10242, 10697,  1368,
   nil, 10788,   301,   nil,   nil,   nil,    33,  1473, 11880,   nil,
   nil,   nil,   303,  1463,  1373,  2248,   nil,   nil,   nil,   564,
   nil,   396,  1325, 13518,  2767,  3135,  1269, 13700,     0,   nil,
   198,   nil, 14064,   nil, 16066,    38,   nil,   nil,  1323, 13609,
 16794,  2860,  1337,  1381, 15884,   nil,   nil,   nil,   nil,   nil,
 15611, 15429,   582,  3042,   nil,   nil,  1666,   296,   112,  1394,
 15247, 17722,   nil,   nil,  1381,   nil,   nil,   nil,  1249,  1367,
  1249,  1121,   810,  5088,  1119,   nil,   nil,   nil,   638,   nil,
  1134,   nil,  9969,  9059, 13336,   723,   nil,   nil,    60,   nil,
 17383,   -15,  1141,   nil,   nil,  1067,  1088,   nil,   nil,   nil,
   nil,  1042,   nil,   nil,    83,   nil,  1051,   nil,  1041,   nil,
   nil,   918,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
  1026,  1080,   678,   nil,   nil,   nil,  1048,    41,   789,   998,
   222,   996,    80,  7330,  7421,  7512,  7603,  7694,  7785,  7876,
  7967,  8058,  8149,  8240,  8331,  8422,  8513,  8604,  8695,  8786,
  8877,  8968, 11698,  9150,  9241,  9332,  9423,  9514,  9605,   nil,
   704,   nil,   262,    29,  1084,  1075,   nil,    16,   277,   535,
  2247,   nil, 10515,   508,   nil,   716, 17749,   628,   805,   941,
 11152,   283,   nil,  1363,   984,   985,   nil,   nil,   nil,   nil,
   nil,    94,  6977,  7089,   905,    50,  5181,   nil,   934,   816,
 12335, 12426,   156, 17313,   205,   227,   nil,   294,     4,   365,
   550,   431,   440,   488, 17695,   nil,  4995, 17614,    87,   282,
   nil, 13973,   nil,   509,   nil, 14155,  7148,   132,   922,   nil,
   nil,  6143, 14610,  6117,   nil,   nil,   nil,   611,   nil,  2674,
   183,   530,   891,  4530,   754,   700,   nil,   701,    40,   715,
   438,  3972,   820,   674,  2951,   902,    50, 16430,   nil,    41,
   663,    26,   259,   nil,   nil, 16885, 16976, 17067, 17158, 14792,
   635,   -21,   nil,   578,   nil,   176, 12608, 10606,   550, 16248,
   398,   nil,   314,   602,   479,   nil,   nil,   455,   nil, 15975,
 15793,   700,   nil,   nil, 15338,  5978, 15065,  6004,   nil, 14883,
 17249, 14428,   nil,   nil,   nil, 14337,   452,   371,   nil,  3321,
  3228,   nil,   nil,   nil, 17428,   nil,   nil,  1890,   nil,   412,
   260,   180,   843,   206,   nil,  1163,   nil,     2,   nil, 17390,
  3600,  1071,   nil,   nil,   nil, 13427,   nil,   nil,   208,  6256,
 13245,  6282,   398,  3520,  2478,  6239,  2687,  2587,  3427,  3241,
  6100,  2248,  2780,  5961,  3613, 17798,  3334, 17821,   420,  3706,
 17775,   484,   453,  3799,   144,  6517,  2370,  6378, 17560,   nil,
   nil,   nil,  4623,   nil,   nil,  7048,   nil, 10424, 10333,   264,
  4716,   nil, 10151,   nil,   nil,   604,  6838,  9878,  6421,    34,
   nil,  6534,  6951,   nil,   296,   nil,   nil,  1492,   nil,   704,
   nil,   nil,   nil, 10060,  1339,  1157,   nil,   nil,   nil,   nil,
   nil,  2131,   nil,   nil,  1852,   nil,   nil,  1262,  1346,   nil,
  6673,  5839,  1291,   nil,  1333,   nil,   nil, 13154,    -5, 17347,
   142,  4902,   nil,   933,   nil,  1354,  4158,  5739,   nil,   nil,
  1444,  1432,   nil,     3,   571,   nil,   nil, 12517,   nil,   336,
     1,  1573,  1945,    61,   nil,   nil,  1759,  1145,   130,  2038,
    51,   nil,   nil,   nil, 10879,   nil,  4251,   nil,  1217,  1120,
  1117,   nil,  1493,   nil,   800,  6699, 11243,  6560,  1101,   nil,
  1015, 11971,  4065,   nil,   nil,   nil,   nil,  3879,   nil,   nil,
   nil, 12699,   nil, 12790,   373,   nil,   nil,   nil,   nil,   nil,
   nil,  3786,   nil,   nil, 12881,   nil,   997,   978,   nil,  1025,
 12972,  1004,   nil,   nil,   921,   nil,   928, 13063,  2470,  2581,
   895,   569,   252,   nil,   nil,   nil,   nil,   nil,  1194,   878,
   819,   884,   784,   nil,   730,   nil,   644,   nil,  1062,   634,
  1174,   586,   nil,   nil,   541,   472,   415,   nil,   nil,   nil,
   nil,   nil,   138,   185,   675,   184,    10,   223,   175,   219,
   314,   295,    40,   nil,   263,   289,   320,   328,   nil,   449,
 17641, 17587,   nil,   467,   319,  2358,   nil,   400,   421,  3414,
   nil,   nil,  1369,   505,   nil,   nil,   482,   nil,  3507,   577,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   169,
   154, 16157, 16339,   574,   nil,   579,   nil,   666,  7055,   nil,
   684,   616,   nil,   nil, 16521,   nil,  3693, 16703,   774,   nil,
 16612,    44,   671, 15702,   124,   nil, 15520,    38,   487,   nil,
   -10,   nil,   706,   433,   783,   111,   141,   nil, 13791,   817,
   892,   951,   172,   969,   893, 12153,   nil,   973,   151,   nil,
   nil,   nil, 11607,   636, 11516, 11425,   nil,   nil,   920,   nil,
   nil,   nil,   nil,   nil,  1797,   nil, 17357,   nil,   434,   552,
   nil,   956,   986,   nil,   nil,   nil,   335,   nil,  5460,   193,
 14246,   nil,  7239,  1107,   nil, 17461,   nil, 17454,   nil,  1611,
   nil,   nil,   nil,   nil,  1097,   nil, 11334,   110,   nil,   nil,
   nil,  5646,   nil,  1044, 14519,   nil,   nil,  5553,   nil,   nil,
   nil,  1100,   nil,   nil,   nil,   nil, 14974,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,  1176, 14701,   nil,   352,  1110,  1193,
   nil,   nil,   nil,   nil,   nil,  5274, 12062, 13882,   969,  1130,
  1132,  1140,  1142,  1398,  1145,  1387,  1157,  1256,  1325,   900,
   nil,  1211,  1220,   nil,  1221,  1222,  1228,   nil,   nil,  1286,
   913,   787,   657,  4437,   nil,  1265,  1343,   nil,   nil,   nil,
   nil,   210,   nil,   236,   nil,   nil,   nil,   nil,   nil,   649,
  1272,  1321,   nil,   nil,  5865,   nil, 17419,   nil,  2076,   nil,
   nil,  1983,   nil,   502,  6395, 12244,  6812,  1435,   nil,  4344,
   nil,   nil,   nil,  1369,  1376,  1377,  1378,  1379,  1380,   187,
   419,  1426,    20,    45,   nil,   611,   nil,   nil,   nil,  1704,
   nil,   nil,   130,   nil,  1455,   nil ]

racc_action_default = [
    -2,  -533,  -534,    -1,  -432,  -379,  -471,  -260,  -442,  -433,
  -417,  -534,   -46,  -534,  -261,  -441,  -415,   -48,  -262,  -443,
  -417,  -399,  -307,   -49,  -534,  -263,  -534,  -450,  -444,  -417,
  -534,  -264,  -451,  -407,  -305,  -533,  -534,   -53,  -413,  -396,
  -306,  -534,  -534,  -397,  -308,  -534,  -534,  -534,  -297,  -534,
   -41,  -534,  -230,  -446,  -309,    -3,  -282,  -534,  -298,  -445,
  -310,  -299,  -522,  -534,  -534,  -534,  -447,  -311,  -300,  -534,
   -65,  -520,  -522,  -534,  -436,  -533,  -534,  -534,  -302,    -5,
  -510,  -438,   -69,    -6,  -534,  -265,  -437,  -395,  -534,  -534,
  -533,  -439,  -398,    -9,  -533,   -79,  -440,  -400,  -303,  -258,
  -274,  -534,   -40,   -77,  -304,  -259,  -277,  -520,  -448,  -534,
  -533,  -231,  -241,  -246,  -534,   -63,  -297,  -298,  -534,  -534,
  -534,  -533,  -534,  -533,  -533,  -504,  -378,  -302,  -265,  -245,
  -251,  -274,  -534,  -534,  -534,  -448,  -494,  -488,  -477,  -476,
  -471,  -534,  -493,  -491,  -474,  -533,  -534,  -495,  -473,  -365,
  -472,  -533,  -490,  -475,  -534,  -470,  -534,  -480,  -533,  -482,
  -284,  -534,  -177,  -134,  -178,  -136,  -161,  -176,  -427,  -120,
  -137,  -160,  -169,  -109,  -155,  -179,  -121,  -181,  -142,  -110,
  -164,  -122,  -185,  -138,  -151,  -129,  -426,  -186,  -123,  -139,
  -165,  -124,  -143,  -140,  -154,  -171,  -125,  -144,  -141,  -152,
  -146,  -126,  -156,  -168,  -170,  -147,  -127,  -167,  -172,  -148,
  -128,  -157,  -174,  -158,  -180,  -117,  -166,  -106,  -118,  -149,
  -159,  -108,  -429,  -173,  -119,  -428,  -163,  -130,  -150,  -107,
  -131,  -430,  -183,  -175,  -132,  -135,  -184,  -182,  -133,  -145,
  -379,  -534,  -534,  -322,  -301,  -323,  -534,  -534,  -534,  -522,
  -265,  -277,  -448,  -534,  -534,  -534,  -534,  -534,  -534,  -534,
  -534,  -534,  -534,  -534,  -534,  -534,  -534,  -534,  -534,  -534,
  -534,  -534,  -534,  -534,  -534,  -534,  -534,  -534,  -534,    -8,
  -534,  -369,  -533,  -534,  -434,  -435,  -104,  -534,  -534,  -534,
  -101,  -265,  -534,  -102,  -448,  -534,  -209,  -534,  -534,  -534,
  -534,  -520,   -13,   -14,  -534,  -533,  -111,   -17,  -113,  -112,
  -114,  -534,  -534,  -534,  -534,  -534,  -533,   -45,  -534,  -534,
  -534,  -534,  -176,  -471,  -169,  -179,  -500,  -164,  -534,  -146,
  -147,  -148,  -106,  -107,  -223,   -51,  -533,  -208,  -533,  -533,
  -283,  -534,   -52,  -522,  -523,  -534,  -534,  -271,   -57,  -281,
  -372,  -534,  -533,  -534,  -531,    -4,  -529,  -521,  -530,  -534,
  -534,   -47,   -67,  -533,  -522,  -534,  -115,   -22,  -522,  -534,
  -534,  -533,   -92,   -70,   -73,   -85,  -534,  -534,   -81,  -534,
  -534,  -526,  -526,  -232,  -401,  -534,  -534,  -534,  -534,  -534,
  -534,  -526,  -502,  -534,   -50,  -534,  -534,  -534,   -75,  -534,
  -522,   -64,  -520,  -534,  -521,   946,  -240,  -522,  -239,  -534,
  -534,  -271,  -250,  -242,  -249,  -534,  -533,  -534,  -243,  -249,
  -534,  -534,  -252,  -507,  -247,  -534,  -534,  -533,  -363,  -533,
  -533,  -492,  -499,  -463,  -534,  -496,  -468,  -534,  -479,  -534,
  -477,  -328,  -335,  -534,  -326,  -534,  -324,  -522,  -466,  -534,
  -533,  -534,  -431,  -418,  -419,  -534,  -434,  -435,  -271,  -534,
  -533,  -534,  -534,  -218,  -212,  -224,  -219,  -225,  -220,  -221,
  -200,  -522,  -222,  -201,  -214,  -202,  -215,  -203,  -198,  -216,
  -204,  -199,  -227,  -217,  -226,  -210,  -213,  -211,  -205,  -402,
  -416,  -352,  -533,  -353,  -355,  -533,  -403,  -534,  -534,  -534,
  -533,  -452,  -534,  -101,  -103,  -102,  -534,  -533,  -534,  -534,
  -404,  -534,  -534,  -406,  -534,  -409,  -405,   -16,   -12,  -521,
  -267,  -312,  -387,  -533,  -533,  -534,   -21,   -20,   -19,  -511,
  -513,  -533,  -512,  -514,  -533,  -411,  -412,  -534,  -534,  -271,
  -534,  -534,  -187,   -29,  -534,   -37,  -251,  -534,  -522,  -471,
  -534,  -533,  -519,  -534,  -518,  -534,  -533,  -533,   -30,   -39,
   -38,  -534,  -280,  -522,   -44,  -189,   -31,  -534,   -58,  -533,
  -511,  -516,  -534,  -512,  -377,  -375,  -517,  -522,  -511,  -533,
  -512,  -376,  -532,    -7,  -534,  -228,  -533,  -314,  -313,  -522,
   -66,  -269,  -534,  -268,   -91,  -534,  -533,  -534,  -522,   -82,
   -71,  -534,  -533,  -197,   -36,  -316,  -317,  -533,  -272,  -233,
  -527,  -528,  -235,  -528,   -27,   -23,   -24,   -25,   -26,  -273,
  -503,  -533,   -43,   -42,  -534,   -83,   -78,  -522,  -276,  -534,
  -534,  -534,  -236,  -187,  -533,  -248,  -253,  -534,  -515,  -270,
  -522,  -511,  -512,  -505,  -506,  -484,  -478,  -357,  -534,  -522,
  -534,  -534,  -533,  -498,  -533,  -483,  -533,  -497,  -534,  -333,
  -534,  -522,  -481,  -489,  -533,  -533,  -534,  -425,  -422,  -423,
  -424,  -420,  -534,  -515,  -534,  -270,  -522,  -511,  -533,  -512,
  -534,  -534,  -477,  -486,  -533,  -533,  -533,  -533,  -351,  -534,
  -206,  -207,  -454,  -534,  -534,  -101,  -105,  -102,  -522,  -533,
  -410,  -408,   -15,  -533,  -390,  -389,  -388,  -320,  -533,  -533,
   -18,   -55,  -238,  -237,  -371,   -54,  -370,  -414,  -294,  -511,
  -512,  -534,  -534,  -257,  -501,  -522,  -456,  -534,  -471,   -28,
  -534,  -534,  -524,  -279,  -534,  -196,  -533,  -534,   -61,  -374,
  -534,  -380,  -534,  -534,   -59,  -373,  -534,  -522,  -533,  -315,
   -68,  -116,   -88,   -90,  -522,  -511,  -512,   -80,  -534,   -74,
  -533,  -534,  -526,  -534,   -76,  -534,  -275,  -534,  -534,  -290,
  -244,  -254,  -534,  -380,  -534,  -534,  -362,  -361,  -358,  -359,
  -364,  -366,  -367,  -461,  -534,  -459,  -534,  -469,  -534,  -331,
  -327,  -534,  -336,  -325,  -467,  -464,  -534,  -421,  -533,  -380,
  -534,  -368,  -534,  -534,  -344,  -342,  -347,  -534,  -349,  -534,
  -354,  -292,  -453,  -380,  -534,  -392,  -534,  -534,  -321,   -11,
  -394,  -533,  -188,  -255,  -534,  -455,  -295,  -533,  -382,  -381,
  -190,  -534,  -194,   -35,   -62,  -195,  -534,  -525,  -192,   -33,
   -60,  -193,   -34,  -278,  -534,  -534,  -318,   -86,   -72,  -534,
  -287,  -234,  -288,   -84,  -289,  -533,  -534,  -534,  -534,  -533,
  -533,  -533,  -329,  -534,  -334,  -534,  -533,  -534,  -229,  -485,
  -356,  -533,  -533,  -487,  -533,  -533,  -533,  -293,  -391,  -534,
  -534,  -100,   -93,  -533,  -393,  -256,  -534,   -56,  -191,   -32,
  -285,  -534,  -286,  -533,  -253,  -360,  -462,  -460,  -457,  -534,
  -534,  -332,  -465,  -291,  -534,  -339,  -534,  -341,  -534,  -348,
  -345,  -534,  -350,   -99,  -534,  -533,  -534,  -533,  -296,  -533,
  -383,  -385,  -384,  -533,  -330,  -533,  -533,  -533,  -533,  -515,
   -98,  -522,  -511,  -512,  -386,  -533,  -458,  -340,  -337,  -534,
  -343,  -346,  -380,  -319,  -533,  -338 ]

clist = [
'79,524,407,345,413,149,551,418,244,112,317,335,709,359,63,168,381,115',
'126,173,586,342,354,244,304,663,63,447,355,568,155,655,741,373,83,446',
'602,631,244,244,310,398,790,531,534,173,279,307,63,93,382,323,112,792',
'391,173,652,626,354,357,649,93,112,394,403,609,612,686,309,112,492,665',
'504,406,607,620,362,348,350,244,310,776,572,643,579,173,779,366,63,383',
'621,545,364,392,873,773,844,490,428,390,244,287,635,161,112,326,684',
'635,309,408,112,160,559,283,112,515,316,687,401,553,412,361,295,412',
'380,368,556,557,689,328,714,799,361,716,525,245,63,361,778,427,367,819',
'141,340,432,71,572,281,579,361,432,920,703,813,817,361,384,432,280,500',
'298,514,1,315,155,671,186,654,55,3,241,439,2,,,,,,,,,,,360,864,,,,,',
'462,,678,873,376,,,,,379,,,,,,,,,,847,,395,,,,,,402,,,,,,,,,,,,,,,,',
',,,,501,678,,,,678,577,,544,,849,790,,,354,126,,,901,,518,759,350,,',
'767,,,,544,,,,572,579,,,,,643,,,,491,764,943,,,,,543,519,696,776,,924',
'705,,895,,,,,,,,522,538,,,640,558,,,600,63,566,406,661,803,,,,659,,',
'446,,,,678,63,605,700,,,,,,491,491,,509,,,,,604,605,155,517,63,625,408',
'676,354,,,112,736,,629,576,,663,627,362,,581,798,,548,63,244,362,,634',
',63,871,,406,589,922,,,63,655,942,,598,,583,563,,564,,,244,,63,698,',
',655,,112,93,,,861,,,827,680,,,408,848,,,834,112,,,406,576,840,647,872',
'855,875,581,,,614,361,361,361,361,,,,,63,63,622,623,851,,,544,692,,',
',,,,,,408,699,,,63,112,,,,576,,406,,,,581,,,883,433,,,,,,436,,,,754',
'693,,448,,,647,,615,616,617,618,,726,,361,,63,408,,,,,112,,63,,576,',
'770,742,688,576,581,704,707,,581,,921,926,310,713,,63,713,173,112,710',
'446,112,446,727,,,711,712,,715,712,725,576,361,919,625,,581,,768,309',
'728,406,,,173,,63,672,,702,491,63,63,762,,155,,625,112,,713,,,742,,112',
'738,739,,,,,,744,712,,,408,310,,244,63,112,173,,751,576,,,,,,581,,694',
'934,,63,,742,69,,63,244,122,605,309,,,,248,,69,,747,412,63,,,,,742,',
',,289,,812,,678,,,,432,69,432,,432,,,289,319,,,,432,432,122,,,862,,446',
',,,,122,,713,,,,,122,647,432,432,432,739,814,,122,712,69,,122,742,,',
',370,,122,815,,,833,122,,820,625,,839,63,,842,,853,122,122,,370,63,',
'122,122,,,122,,85,,,,,,,,,,250,69,85,446,,446,,,707,,63,,,155,,291,244',
',,,707,,,244,85,,,,,,291,291,,,,,,,,,446,,,,108,,,,,,,,,,252,,108,,',
',244,,,,85,889,,,931,294,,372,63,,244,,,886,108,,,,,,294,294,,,,294',
',,372,520,,63,,,,,,63,,,,,,,,,,,85,,,,,,108,432,432,432,,,,375,432,',
',63,,432,432,742,432,432,432,,,406,,,,,,,375,,,,,,,707,361,,,63,,,,',
',,,,108,,,,122,,,,576,408,,522,69,,112,,,432,576,432,432,432,432,,581',
',,63,69,707,,,122,122,,,,,432,,,,,,656,,,,69,,891,,,122,,122,664,122',
'122,,,,,,122,,,,,69,,,,,,69,,,,393,783,,785,69,787,,370,,,122,,,794',
'795,,,,69,122,122,122,122,685,,,,,,122,122,,370,122,804,806,808,,422',
'423,424,,,,85,,,,,122,,,,,,,,,,,85,,69,69,,,,,,,,,,,,,,,,,85,,718,69',
',,,,122,,,,,122,,,,,108,,,85,,,,,,85,,,,,,,108,85,,,372,,,,,,,69,,,',
'85,,,,69,108,122,,,,,122,,,372,,,,,45,,,,69,,,108,,,243,,45,108,,,122',
',,122,,108,,,375,85,85,769,,,,,,,45,108,69,,,,,69,69,,,,85,667,,375',
',,,,,,,122,,,896,897,898,,122,,,902,,122,,69,905,907,45,909,910,912',
'546,108,108,122,,,,,370,69,85,811,,,69,,,,85,,,560,108,,,,,,69,,,370',
',,,,,85,,,,,,,45,826,936,,937,938,940,941,,,,,,,,,,,,,108,,,945,,85',
',,108,,85,85,,,,850,,852,,,,854,859,,860,,,108,,,636,,,,866,393,,644',
',,85,645,69,,,874,,876,,,,69,,,,372,85,,,108,,85,,,108,108,,,877,,,562',
',,,85,,,372,69,122,,,,,,122,,,122,,,590,,108,,593,,890,,,370,,892,,',
',,370,375,108,,,,,108,,,,,,903,,,,,,,628,108,,,375,,,632,,923,,706,918',
'69,,,925,869,927,,,928,,,,85,,,,45,,880,,,85,723,69,,,,,,69,,,45,,662',
',944,,122,,,,,,,,,122,,85,,,45,,,,,69,,,,,,,,,108,,,,,372,,45,,108,',
',372,45,,,,,,69,636,45,393,,,,,,,,,,,,,45,,108,,546,,,,,,85,771,,111',
'291,,122,,,,69,,,,375,,,,881,,,375,,85,724,,,,296,85,,,,,45,45,,,,733',
',,,,,334,111,,,337,,,,,108,45,111,85,294,,,,,111,,750,,,,,,,882,,757',
',,108,,,,,,108,,85,823,,111,,,,111,,,,,45,111,,,,,766,111,45,,,111,',
',108,,,,,,,,,,85,,,45,780,,,,,111,111,111,,,,,793,,108,,,,,,,,,,,,,',
',,,45,,,,,45,45,,,,,,,,,,,,,108,,,,,,,365,,,,,,885,,,45,,,,,,,,,,825',
',,,,,45,,,,,45,,,,,,,,894,,,843,,,45,,,,365,,,,,,,,,,,,,,,,,,,,,463',
'464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480',
'481,482,483,484,485,486,487,488,,,,,,,,,,,,,,,,,,,,,,,,,,,,45,,,,,,',
',,45,,,,,542,,,,,,,,,,,,,,,,,,,,,111,,45,,,565,,,,,,111,,,,,,,585,,',
',,,,,,,,,,,,,,,603,,,,,,,,,,,,,,,,,,,247,,,,111,,,,,45,,,,633,565,247',
',,111,247,111,,,111,603,111,,878,,111,247,,45,,,,247,,45,,247,,,,,,',
',,555,,,,,,,,,,,,,,,111,,45,,,,,247,,,,,365,,,247,,,,247,365,,,,,,,',
'247,,45,,,,,,,690,691,,,,,,,,,111,,,,,,,,,,247,247,247,,,,111,,,45,',
',,,111,,,111,,,,650,651,,,,,,,,111,,,,,,,,,,,,666,,,,,,,,735,,,,,111',
',,,,,,111,,,,,,,,,,,,,,,,,111,,,,,681,,,,,,,,,,111,,111,,,,,,,,,,,,',
',,,,111,,,,,,,111,247,247,247,247,247,247,247,247,247,247,247,247,247',
'247,247,247,247,247,247,247,247,247,247,247,247,247,,730,731,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,748,,,,,,,,,,,,,,,,760,,,,,761,,,,,822,111,,,,',
',,,763,,,,830,,,832,,,835,,,838,247,,841,,,,,,,,,,,,,247,,,,,,,,,,,',
',832,,838,841,,,,,,,,,247,,,,,,,,,,247,247,,,,247,868,,,,247,247,247',
',,,247,,,,,,,818,,,,,,,111,,,,,,,,,,,,888,,,,,,,,,831,,,,,,,,,,,111',
'888,,,,,,,,,,,,,,,,,,,,,,,,,247,247,,,,,,,,,,,,,,,,,,,,,,,,867,247,',
',,,,,111,,,,,,,,,,,,,,,884,,247,,,,,,,,,,,,,,,,,,,,247,,,,,,,,,,,,893',
',,,,,,,,,,,,,,,,,,,,,247,,,,,,917,,,,247,,247,,,,,,,,,,,247,,,,,,247',
',,,,,,247,,,,,,935,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,247,247,,,,,,,,,,,,247,,,,,,247,,,,,,,,',
',,,,,,,,,247,,,,,,,247,,,,,,,247,,247,247,,,,,,,,,,,,,,,,,,,,,,,,,247',
',247,,,,,,,,,,,,,,247,,,,,,,,247,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,247',
'247' ]
        racc_goto_table = arr = Array.new(2767, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'7,13,25,32,66,117,97,66,59,34,21,36,14,32,23,53,61,39,64,54,82,36,94',
'59,11,136,23,102,6,40,109,135,26,47,8,101,82,89,59,59,58,48,100,38,38',
'54,8,17,23,10,63,53,34,103,63,54,107,49,94,9,111,10,34,36,6,62,62,106',
'57,34,41,107,51,36,86,62,43,39,64,59,58,114,38,140,38,54,113,17,23,7',
'86,28,44,7,137,26,83,130,116,77,59,52,67,127,34,74,104,67,57,7,34,80',
'28,127,34,130,52,107,39,99,7,30,127,7,60,30,41,41,111,98,65,26,30,65',
'31,22,23,30,112,117,18,15,115,78,7,5,38,118,38,30,7,120,121,26,122,30',
'125,7,126,93,128,129,4,131,109,132,133,134,3,2,91,139,1,,,,,,,,,,,19',
'103,,,,,,32,,38,137,19,,,,,19,,,,,,,,,,26,,19,,,,,,19,,,,,,,,,,,,,,',
',,,,,,94,38,,,,38,25,,61,,14,100,,,94,64,,,103,,6,49,64,,,89,,,,61,',
',,38,38,,,,,140,,,,7,49,83,,,,,21,9,51,114,,103,28,,113,,,,,,,,7,11',
',,25,21,,,48,23,21,36,102,111,,,,101,,,101,,,,38,23,94,130,,,,,,7,7',
',30,,,,,21,94,109,10,23,47,7,25,94,,,34,41,,6,54,,136,36,43,,64,86,',
'30,23,59,43,,63,,23,106,,36,44,14,,,23,135,26,,44,,8,30,,30,,,59,,23',
'25,,,135,,34,10,,,107,,,97,32,,,7,49,,,40,34,,,36,54,40,7,107,82,107',
'64,,,10,30,30,30,30,,,,,23,23,30,30,62,,,61,94,,,,,,,,,7,94,,,23,34',
',,,54,,36,,,,64,,,82,108,,,,,,108,,,,25,11,,108,,,7,,19,19,19,19,,94',
',30,,23,7,,,,,34,,23,,54,,66,32,109,54,64,7,7,,64,,89,107,58,7,,23,7',
'54,34,17,101,34,101,11,,,39,64,,39,64,117,54,30,82,47,,64,,61,57,53',
'36,,,54,,23,19,,10,7,23,23,63,,109,,47,34,,7,,,32,,34,39,64,,,,,,39',
'64,,,7,58,,59,23,34,54,,17,54,,,,,,64,,19,13,,23,,32,24,,23,59,24,94',
'57,,,,24,,24,,30,7,23,,,,,32,,,,24,,94,,38,,,,7,24,7,,7,,,24,24,,,,7',
'7,24,,,101,,101,,,,,24,,7,,,,,24,7,7,7,7,64,11,,24,64,24,,24,32,,,,24',
',24,7,,,21,24,,7,47,,21,23,,21,,47,24,24,,24,23,,24,24,,,24,,27,,,,',
',,,,,27,24,27,101,,101,,,7,,23,,,109,,27,59,,,,7,,,59,27,,,,,,27,27',
',,,,,,,,101,,,,50,,,,,,,,,,50,,50,,,,59,,,,27,21,,,25,50,,27,23,,59',
',,11,50,,,,,,50,50,,,,50,,,27,76,,23,,,,,,23,,,,,,,,,,,27,,,,,,50,7',
'7,7,,,,50,7,,,23,,7,7,32,7,7,7,,,36,,,,,,,50,,,,,,,7,30,,,23,,,,,,,',
',50,,,,24,,,,54,7,,7,24,,34,,,7,54,7,7,7,7,,64,,,23,24,7,,,24,24,,,',
',7,,,,,,105,,,,24,,19,,,24,,24,105,24,24,,,,,,24,,,,,24,,,,,,24,,,,29',
'108,,108,24,108,,24,,,24,,,108,108,,,,24,24,24,24,24,105,,,,,,24,24',
',24,24,108,108,108,,29,29,29,,,,27,,,,,24,,,,,,,,,,,27,,24,24,,,,,,',
',,,,,,,,,,27,,76,24,,,,,24,,,,,24,,,,,50,,,27,,,,,,27,,,,,,,50,27,,',
'27,,,,,,,24,,,,27,,,,24,50,24,,,,,24,,,27,,,,,20,,,,24,,,50,,,20,,20',
'50,,,24,,,24,,50,,,50,27,27,76,,,,,,,20,50,24,,,,,24,24,,,,27,27,,50',
',,,,,,,24,,,108,108,108,,24,,,108,,24,,24,108,108,20,108,108,108,29',
'50,50,24,,,,,24,24,27,76,,,24,,,,27,,,29,50,,,,,,24,,,24,,,,,,27,,,',
',,,20,76,108,,108,108,108,108,,,,,,,,,,,,,50,,,108,,27,,,50,,27,27,',
',,76,,76,,,,76,105,,105,,,50,,,29,,,,105,29,,29,,,27,29,24,,,105,,105',
',,,24,,,,27,27,,,50,,27,,,50,50,,,76,,,45,,,,27,,,27,24,24,,,,,,24,',
',24,,,45,,50,,45,,76,,,24,,76,,,,,24,50,50,,,,,50,,,,,,76,,,,,,,45,50',
',,50,,,45,,105,,29,76,24,,,105,24,105,,,105,,,,27,,,,20,,24,,,27,29',
'24,,,,,,24,,,20,,45,,105,,24,,,,,,,,,24,,27,,,20,,,,,24,,,,,,,,,50,',
',,,27,,20,,50,,,27,20,,,,,,24,29,20,29,,,,,,,,,,,,,20,,50,,29,,,,,,27',
'29,,33,27,,24,,,,24,,,,50,,,,27,,,50,,27,45,,,,33,27,,,,,20,20,,,,45',
',,,,,33,33,,,33,,,,,50,20,33,27,50,,,,,33,,45,,,,,,,50,,45,,,50,,,,',
',50,,27,29,,33,,,,33,,,,,20,33,,,,,45,33,20,,,33,,,50,,,,,,,,,,27,,',
'20,45,,,,,33,33,33,,,,,45,,50,,,,,,,,,,,,,,,,,20,,,,,20,20,,,,,,,,,',
',,,50,,,,,,,12,,,,,,29,,,20,,,,,,,,,,45,,,,,,20,,,,,20,,,,,,,,29,,,45',
',,20,,,,12,,,,,,,,,,,,,,,,,,,,,33,33,33,33,33,33,33,33,33,33,33,33,33',
'33,33,33,33,33,33,33,33,33,33,33,33,33,,,,,,,,,,,,,,,,,,,,,,,,,,,,20',
',,,,,,,,20,,,,,33,,,,,,,,,,,,,,,,,,,,,33,,20,,,33,,,,,,33,,,,,,,33,',
',,,,,,,,,,,,,,,,33,,,,,,,,,,,,,,,,,,,42,,,,33,,,,,20,,,,33,33,42,,,33',
'42,33,,,33,33,33,,20,,33,42,,20,,,,42,,20,,42,,,,,,,,,12,,,,,,,,,,,',
',,,33,,20,,,,,42,,,,,12,,,42,,,,42,12,,,,,,,,42,,20,,,,,,,33,33,,,,',
',,,,33,,,,,,,,,,42,42,42,,,,33,,,20,,,,,33,,,33,,,,12,12,,,,,,,,33,',
',,,,,,,,,,12,,,,,,,,33,,,,,33,,,,,,,33,,,,,,,,,,,,,,,,,33,,,,,12,,,',
',,,,,,33,,33,,,,,,,,,,,,,,,,,33,,,,,,,33,42,42,42,42,42,42,42,42,42',
'42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,,12,12,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,12,,,,,,,,,,,,,,,,12,,,,,12,,,,,33,33,,,,,,,,12,,',
',33,,,33,,,33,,,33,42,,33,,,,,,,,,,,,,42,,,,,,,,,,,,,33,,33,33,,,,,',
',,,42,,,,,,,,,,42,42,,,,42,33,,,,42,42,42,,,,42,,,,,,,12,,,,,,,33,,',
',,,,,,,,,33,,,,,,,,,12,,,,,,,,,,,33,33,,,,,,,,,,,,,,,,,,,,,,,,,42,42',
',,,,,,,,,,,,,,,,,,,,,,,12,42,,,,,,,33,,,,,,,,,,,,,,,12,,42,,,,,,,,,',
',,,,,,,,,,42,,,,,,,,,,,,12,,,,,,,,,,,,,,,,,,,,,,42,,,,,,12,,,,42,,42',
',,,,,,,,,,42,,,,,,42,,,,,,,42,,,,,,12,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,42,42,,,,,,,,,,,,42,',
',,,,42,,,,,,,,,,,,,,,,,,42,,,,,,,42,,,,,,,42,,42,42,,,,,,,,,,,,,,,,',
',,,,,,,,42,,42,,,,,,,,,,,,,,42,,,,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,42,42' ]
        racc_goto_check = arr = Array.new(2767, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_goto_pointer = [
   nil,   172,   169,   167,   162,   144,   -43,    -1,    33,   -12,
    48,   -11,  1633,  -304,  -512,  -568,   nil,    11,    64,   110,
  1131,   -32,   124,    13,   617,  -108,  -545,   728,  -229,   890,
    48,  -173,   -59,  1524,     4,   nil,   -37,   nil,  -269,    12,
  -319,  -212,  1909,     1,    17,  1002,   nil,   -49,   -62,  -342,
   782,  -216,    75,     5,     9,   nil,   nil,    32,     4,    -3,
    34,   -74,  -316,   -40,    13,  -401,  -117,  -312,   nil,   nil,
   nil,   nil,   nil,   nil,    59,   nil,   528,     5,    87,   nil,
   105,   nil,  -340,  -652,   nil,   nil,  -305,   nil,   nil,  -366,
   nil,   159,   nil,  -128,   -49,   nil,   nil,  -317,    83,  -209,
  -616,  -121,  -129,  -607,  -389,   512,  -428,  -378,   333,    24,
   nil,  -367,  -510,  -562,  -567,   136,   -43,    -1,   130,   nil,
  -742,  -371,  -549,   nil,   nil,    64,   142,    93,   127,  -137,
  -183,   125,  -286,   156,  -267,  -403,  -424,  -713,   nil,    17,
  -336 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   302,   nil,   404,
   303,   nil,   305,   nil,   846,   nil,   301,   nil,   nil,   nil,
   114,    50,    57,   119,   297,   nil,   nil,   128,   nil,   130,
   102,   nil,   561,    12,    17,    23,   113,    37,   674,   nil,
   nil,   nil,    65,    70,   nil,   nil,    82,    88,    95,   nil,
   135,   286,   nil,   306,   533,   179,   308,    39,    43,    52,
   nil,   121,   nil,   124,   574,   745,   nil,   129,    99,   105,
     7,    14,    18,    25,    31,    35,   nil,   nil,   349,    56,
   nil,    73,   nil,   nil,    84,    89,   nil,   101,   107,   nil,
    11,   nil,    26,   nil,   588,    41,    46,   nil,   nil,   nil,
   444,   157,   nil,   441,   nil,   145,   nil,   151,   nil,   653,
   493,   nil,   nil,   nil,   139,   nil,   nil,   550,   nil,   575,
   nil,   nil,   nil,    87,    92,    97,   nil,   nil,   nil,   nil,
   453,   nil,   nil,   nil,   158,   159,   137,   683,   142,   146,
   125 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 140, :_reduce_1,
  0, 143, :_reduce_2,
  2, 141, :_reduce_3,
  2, 142, :_reduce_4,
  1, 144, :_reduce_5,
  1, 144, :_reduce_6,
  3, 144, :_reduce_7,
  2, 144, :_reduce_8,
  1, 147, :_reduce_9,
  1, 147, :_reduce_none,
  4, 150, :_reduce_11,
  2, 151, :_reduce_12,
  1, 155, :_reduce_13,
  1, 155, :_reduce_14,
  3, 155, :_reduce_15,
  2, 155, :_reduce_none,
  0, 170, :_reduce_17,
  4, 149, :_reduce_18,
  3, 149, :_reduce_none,
  3, 149, :_reduce_none,
  3, 149, :_reduce_none,
  2, 149, :_reduce_none,
  3, 149, :_reduce_23,
  3, 149, :_reduce_24,
  3, 149, :_reduce_none,
  3, 149, :_reduce_none,
  3, 149, :_reduce_none,
  4, 149, :_reduce_none,
  3, 149, :_reduce_29,
  3, 149, :_reduce_none,
  3, 149, :_reduce_none,
  6, 149, :_reduce_none,
  5, 149, :_reduce_none,
  5, 149, :_reduce_none,
  5, 149, :_reduce_none,
  3, 149, :_reduce_none,
  3, 149, :_reduce_none,
  3, 149, :_reduce_none,
  3, 149, :_reduce_none,
  1, 149, :_reduce_none,
  1, 169, :_reduce_none,
  3, 169, :_reduce_none,
  3, 169, :_reduce_none,
  3, 169, :_reduce_none,
  2, 169, :_reduce_none,
  1, 169, :_reduce_none,
  1, 158, :_reduce_none,
  1, 160, :_reduce_none,
  1, 160, :_reduce_none,
  2, 160, :_reduce_50,
  2, 160, :_reduce_none,
  2, 160, :_reduce_none,
  1, 174, :_reduce_none,
  4, 174, :_reduce_none,
  4, 174, :_reduce_none,
  4, 179, :_reduce_none,
  2, 173, :_reduce_57,
  3, 173, :_reduce_none,
  4, 173, :_reduce_59,
  5, 173, :_reduce_none,
  4, 173, :_reduce_none,
  5, 173, :_reduce_none,
  2, 173, :_reduce_63,
  2, 173, :_reduce_64,
  1, 161, :_reduce_none,
  3, 161, :_reduce_none,
  1, 183, :_reduce_none,
  3, 183, :_reduce_none,
  1, 182, :_reduce_none,
  2, 182, :_reduce_none,
  3, 182, :_reduce_none,
  5, 182, :_reduce_none,
  2, 182, :_reduce_none,
  4, 182, :_reduce_none,
  2, 182, :_reduce_none,
  4, 182, :_reduce_none,
  1, 182, :_reduce_none,
  3, 182, :_reduce_none,
  1, 186, :_reduce_none,
  3, 186, :_reduce_none,
  2, 185, :_reduce_none,
  3, 185, :_reduce_none,
  1, 188, :_reduce_none,
  3, 188, :_reduce_none,
  1, 187, :_reduce_none,
  4, 187, :_reduce_none,
  3, 187, :_reduce_none,
  3, 187, :_reduce_none,
  3, 187, :_reduce_none,
  3, 187, :_reduce_none,
  2, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 159, :_reduce_none,
  4, 159, :_reduce_94,
  3, 159, :_reduce_95,
  3, 159, :_reduce_none,
  3, 159, :_reduce_none,
  3, 159, :_reduce_none,
  2, 159, :_reduce_none,
  1, 159, :_reduce_none,
  1, 190, :_reduce_101,
  1, 190, :_reduce_102,
  2, 191, :_reduce_103,
  1, 191, :_reduce_104,
  3, 191, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_109,
  1, 192, :_reduce_110,
  1, 195, :_reduce_none,
  1, 195, :_reduce_none,
  1, 156, :_reduce_none,
  1, 156, :_reduce_none,
  1, 157, :_reduce_none,
  3, 157, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  3, 172, :_reduce_187,
  5, 172, :_reduce_none,
  3, 172, :_reduce_189,
  5, 172, :_reduce_none,
  6, 172, :_reduce_none,
  5, 172, :_reduce_none,
  5, 172, :_reduce_none,
  5, 172, :_reduce_none,
  5, 172, :_reduce_none,
  4, 172, :_reduce_none,
  3, 172, :_reduce_none,
  3, 172, :_reduce_none,
  3, 172, :_reduce_none,
  3, 172, :_reduce_200,
  3, 172, :_reduce_201,
  3, 172, :_reduce_202,
  3, 172, :_reduce_203,
  3, 172, :_reduce_204,
  3, 172, :_reduce_205,
  4, 172, :_reduce_none,
  4, 172, :_reduce_none,
  2, 172, :_reduce_none,
  2, 172, :_reduce_209,
  3, 172, :_reduce_210,
  3, 172, :_reduce_211,
  3, 172, :_reduce_212,
  3, 172, :_reduce_213,
  3, 172, :_reduce_214,
  3, 172, :_reduce_215,
  3, 172, :_reduce_216,
  3, 172, :_reduce_217,
  3, 172, :_reduce_218,
  3, 172, :_reduce_219,
  3, 172, :_reduce_220,
  3, 172, :_reduce_221,
  3, 172, :_reduce_222,
  2, 172, :_reduce_223,
  3, 172, :_reduce_224,
  3, 172, :_reduce_225,
  3, 172, :_reduce_none,
  3, 172, :_reduce_none,
  3, 172, :_reduce_none,
  6, 172, :_reduce_none,
  1, 172, :_reduce_none,
  1, 168, :_reduce_none,
  1, 199, :_reduce_none,
  2, 199, :_reduce_none,
  4, 199, :_reduce_none,
  2, 199, :_reduce_none,
  3, 203, :_reduce_236,
  1, 204, :_reduce_237,
  1, 204, :_reduce_none,
  1, 164, :_reduce_239,
  1, 164, :_reduce_none,
  1, 175, :_reduce_241,
  2, 175, :_reduce_242,
  2, 175, :_reduce_243,
  4, 175, :_reduce_244,
  1, 175, :_reduce_245,
  1, 178, :_reduce_none,
  2, 206, :_reduce_247,
  2, 205, :_reduce_248,
  1, 205, :_reduce_none,
  1, 205, :_reduce_none,
  1, 200, :_reduce_251,
  2, 200, :_reduce_252,
  3, 200, :_reduce_253,
  4, 200, :_reduce_254,
  3, 167, :_reduce_none,
  4, 167, :_reduce_none,
  2, 167, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  3, 198, :_reduce_none,
  3, 198, :_reduce_none,
  3, 198, :_reduce_269,
  3, 198, :_reduce_270,
  2, 198, :_reduce_271,
  3, 198, :_reduce_272,
  3, 198, :_reduce_273,
  1, 198, :_reduce_274,
  4, 198, :_reduce_275,
  3, 198, :_reduce_276,
  1, 198, :_reduce_277,
  5, 198, :_reduce_none,
  4, 198, :_reduce_none,
  3, 198, :_reduce_none,
  2, 198, :_reduce_281,
  1, 198, :_reduce_282,
  2, 198, :_reduce_283,
  2, 198, :_reduce_none,
  6, 198, :_reduce_285,
  6, 198, :_reduce_286,
  5, 198, :_reduce_none,
  5, 198, :_reduce_none,
  5, 198, :_reduce_289,
  4, 198, :_reduce_290,
  7, 198, :_reduce_none,
  5, 198, :_reduce_292,
  6, 198, :_reduce_none,
  4, 198, :_reduce_294,
  5, 198, :_reduce_295,
  7, 198, :_reduce_296,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 163, :_reduce_none,
  1, 214, :_reduce_none,
  1, 220, :_reduce_none,
  1, 223, :_reduce_none,
  1, 224, :_reduce_none,
  1, 226, :_reduce_none,
  1, 227, :_reduce_none,
  1, 229, :_reduce_none,
  1, 231, :_reduce_none,
  1, 234, :_reduce_none,
  1, 235, :_reduce_none,
  1, 215, :_reduce_none,
  1, 221, :_reduce_none,
  1, 221, :_reduce_none,
  2, 221, :_reduce_none,
  1, 225, :_reduce_none,
  1, 225, :_reduce_none,
  1, 222, :_reduce_318,
  5, 222, :_reduce_319,
  1, 153, :_reduce_320,
  2, 153, :_reduce_321,
  1, 230, :_reduce_none,
  1, 230, :_reduce_none,
  1, 239, :_reduce_none,
  3, 239, :_reduce_none,
  1, 242, :_reduce_none,
  3, 242, :_reduce_none,
  1, 241, :_reduce_none,
  4, 241, :_reduce_none,
  6, 241, :_reduce_none,
  3, 241, :_reduce_none,
  5, 241, :_reduce_none,
  2, 241, :_reduce_none,
  4, 241, :_reduce_none,
  1, 241, :_reduce_none,
  3, 241, :_reduce_none,
  6, 243, :_reduce_none,
  8, 243, :_reduce_none,
  4, 243, :_reduce_none,
  6, 243, :_reduce_none,
  4, 243, :_reduce_none,
  2, 243, :_reduce_none,
  6, 243, :_reduce_none,
  2, 243, :_reduce_none,
  4, 243, :_reduce_none,
  6, 243, :_reduce_none,
  2, 243, :_reduce_none,
  4, 243, :_reduce_none,
  2, 243, :_reduce_none,
  4, 243, :_reduce_none,
  1, 243, :_reduce_none,
  1, 180, :_reduce_352,
  1, 180, :_reduce_none,
  3, 249, :_reduce_none,
  1, 249, :_reduce_none,
  4, 249, :_reduce_356,
  1, 250, :_reduce_none,
  2, 250, :_reduce_none,
  1, 251, :_reduce_none,
  3, 251, :_reduce_none,
  1, 252, :_reduce_none,
  1, 252, :_reduce_none,
  2, 219, :_reduce_none,
  4, 254, :_reduce_none,
  1, 254, :_reduce_none,
  3, 255, :_reduce_none,
  3, 255, :_reduce_none,
  4, 257, :_reduce_none,
  2, 176, :_reduce_none,
  4, 176, :_reduce_none,
  4, 176, :_reduce_none,
  2, 218, :_reduce_372,
  4, 218, :_reduce_373,
  4, 218, :_reduce_374,
  3, 218, :_reduce_375,
  3, 218, :_reduce_none,
  3, 218, :_reduce_none,
  2, 218, :_reduce_378,
  1, 218, :_reduce_379,
  4, 218, :_reduce_380,
  4, 217, :_reduce_381,
  4, 217, :_reduce_382,
  5, 228, :_reduce_383,
  1, 259, :_reduce_384,
  1, 259, :_reduce_none,
  6, 152, :_reduce_none,
  1, 152, :_reduce_none,
  1, 260, :_reduce_none,
  1, 260, :_reduce_none,
  1, 260, :_reduce_none,
  2, 261, :_reduce_none,
  1, 261, :_reduce_none,
  2, 154, :_reduce_none,
  1, 154, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 208, :_reduce_none,
  1, 263, :_reduce_none,
  1, 263, :_reduce_none,
  2, 263, :_reduce_none,
  3, 264, :_reduce_402,
  3, 209, :_reduce_403,
  3, 210, :_reduce_none,
  3, 211, :_reduce_none,
  3, 211, :_reduce_none,
  0, 267, :_reduce_none,
  3, 267, :_reduce_none,
  1, 268, :_reduce_none,
  2, 268, :_reduce_none,
  3, 212, :_reduce_none,
  3, 212, :_reduce_none,
  0, 270, :_reduce_413,
  3, 270, :_reduce_none,
  0, 265, :_reduce_415,
  2, 265, :_reduce_416,
  0, 266, :_reduce_417,
  2, 266, :_reduce_418,
  1, 269, :_reduce_419,
  2, 269, :_reduce_420,
  3, 269, :_reduce_421,
  1, 271, :_reduce_none,
  1, 271, :_reduce_none,
  1, 271, :_reduce_none,
  1, 271, :_reduce_none,
  2, 196, :_reduce_426,
  1, 272, :_reduce_none,
  1, 272, :_reduce_none,
  1, 272, :_reduce_none,
  1, 272, :_reduce_none,
  3, 197, :_reduce_none,
  1, 262, :_reduce_432,
  1, 262, :_reduce_433,
  2, 262, :_reduce_none,
  2, 262, :_reduce_none,
  1, 189, :_reduce_436,
  1, 189, :_reduce_437,
  1, 189, :_reduce_438,
  1, 189, :_reduce_439,
  1, 189, :_reduce_440,
  1, 189, :_reduce_441,
  1, 189, :_reduce_442,
  1, 189, :_reduce_443,
  1, 189, :_reduce_444,
  1, 189, :_reduce_445,
  1, 189, :_reduce_446,
  1, 189, :_reduce_447,
  1, 213, :_reduce_none,
  1, 162, :_reduce_none,
  1, 166, :_reduce_none,
  1, 166, :_reduce_none,
  1, 232, :_reduce_452,
  3, 232, :_reduce_453,
  2, 232, :_reduce_454,
  3, 236, :_reduce_455,
  2, 236, :_reduce_456,
  6, 256, :_reduce_457,
  8, 256, :_reduce_458,
  4, 256, :_reduce_459,
  6, 256, :_reduce_460,
  4, 256, :_reduce_461,
  6, 256, :_reduce_462,
  2, 256, :_reduce_463,
  4, 256, :_reduce_464,
  6, 256, :_reduce_465,
  2, 256, :_reduce_466,
  4, 256, :_reduce_467,
  2, 256, :_reduce_468,
  4, 256, :_reduce_469,
  1, 256, :_reduce_470,
  0, 256, :_reduce_471,
  1, 253, :_reduce_none,
  1, 253, :_reduce_none,
  1, 253, :_reduce_none,
  1, 253, :_reduce_none,
  1, 240, :_reduce_none,
  1, 240, :_reduce_477,
  3, 240, :_reduce_478,
  2, 240, :_reduce_479,
  1, 274, :_reduce_480,
  3, 274, :_reduce_none,
  1, 244, :_reduce_482,
  3, 244, :_reduce_483,
  3, 275, :_reduce_none,
  3, 276, :_reduce_none,
  1, 245, :_reduce_none,
  3, 245, :_reduce_none,
  1, 273, :_reduce_none,
  3, 273, :_reduce_none,
  1, 277, :_reduce_none,
  1, 277, :_reduce_none,
  2, 246, :_reduce_none,
  1, 246, :_reduce_none,
  1, 278, :_reduce_none,
  1, 278, :_reduce_none,
  2, 248, :_reduce_496,
  3, 248, :_reduce_497,
  2, 247, :_reduce_498,
  1, 247, :_reduce_none,
  1, 237, :_reduce_none,
  3, 237, :_reduce_none,
  1, 216, :_reduce_502,
  2, 216, :_reduce_503,
  1, 202, :_reduce_504,
  3, 202, :_reduce_505,
  3, 279, :_reduce_506,
  2, 279, :_reduce_507,
  1, 181, :_reduce_none,
  1, 181, :_reduce_none,
  1, 181, :_reduce_none,
  1, 177, :_reduce_none,
  1, 177, :_reduce_none,
  1, 177, :_reduce_none,
  1, 177, :_reduce_none,
  1, 258, :_reduce_none,
  1, 258, :_reduce_none,
  1, 258, :_reduce_none,
  1, 238, :_reduce_none,
  1, 238, :_reduce_none,
  0, 145, :_reduce_none,
  1, 145, :_reduce_none,
  0, 171, :_reduce_none,
  1, 171, :_reduce_none,
  2, 184, :_reduce_none,
  2, 165, :_reduce_none,
  0, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 233, :_reduce_none,
  1, 233, :_reduce_none,
  1, 148, :_reduce_none,
  2, 148, :_reduce_none,
  0, 146, :_reduce_none ]

racc_reduce_n = 534

racc_shift_n = 946

racc_token_table = {
  false => 0,
  :error => 1,
  :tLOWEST => 2,
  :tLBRACE_ARG => 3,
  :kIF_MOD => 4,
  :kUNLESS_MOD => 5,
  :kWHILE_MOD => 6,
  :kUNTIL_MOD => 7,
  :kOR => 8,
  :kAND => 9,
  :kNOT => 10,
  :kDEFined => 11,
  "=" => 12,
  :tOP_ASGN => 13,
  :kRESCUE_MOD => 14,
  "?" => 15,
  ":" => 16,
  :tDOT2 => 17,
  :tDOT3 => 18,
  :tOROP => 19,
  :tANDOP => 20,
  :tCMP => 21,
  :tEQ => 22,
  :tEQQ => 23,
  :tNEQ => 24,
  :tMATCH => 25,
  :tNMATCH => 26,
  ">" => 27,
  :tGEQ => 28,
  "<" => 29,
  :tLEQ => 30,
  "|" => 31,
  "^" => 32,
  "&" => 33,
  :tLSHFT => 34,
  :tRSHFT => 35,
  "+" => 36,
  "-" => 37,
  "*" => 38,
  "/" => 39,
  "%" => 40,
  :tUMINUS_NUM => 41,
  :tUMINUS => 42,
  :tPOW => 43,
  "!" => 44,
  "~" => 45,
  :tUPLUS => 46,
  :kCLASS => 47,
  :kMODULE => 48,
  :kDEF => 49,
  :kUNDEF => 50,
  :kBEGIN => 51,
  :kRESCUE => 52,
  :kENSURE => 53,
  :kEND => 54,
  :kIF => 55,
  :kUNLESS => 56,
  :kTHEN => 57,
  :kELSIF => 58,
  :kELSE => 59,
  :kCASE => 60,
  :kWHEN => 61,
  :kWHILE => 62,
  :kUNTIL => 63,
  :kFOR => 64,
  :kBREAK => 65,
  :kNEXT => 66,
  :kREDO => 67,
  :kRETRY => 68,
  :kIN => 69,
  :kDO => 70,
  :kDO_COND => 71,
  :kDO_BLOCK => 72,
  :kDO_LAMBDA => 73,
  :kRETURN => 74,
  :kYIELD => 75,
  :kSUPER => 76,
  :kSELF => 77,
  :kNIL => 78,
  :kTRUE => 79,
  :kFALSE => 80,
  :kALIAS => 81,
  :kDEFINED => 82,
  :klBEGIN => 83,
  :klEND => 84,
  :k__LINE__ => 85,
  :k__FILE__ => 86,
  :k__ENCODING__ => 87,
  :tIDENTIFIER => 88,
  :tFID => 89,
  :tGVAR => 90,
  :tIVAR => 91,
  :tCONSTANT => 92,
  :tCVAR => 93,
  :tLABEL => 94,
  :tINTEGER => 95,
  :tFLOAT => 96,
  :tSTRING_CONTENT => 97,
  :tCHAR => 98,
  :tNTH_REF => 99,
  :tBACK_REF => 100,
  :tREGEXP_END => 101,
  :tAREF => 102,
  :tASET => 103,
  :tCOLON2 => 104,
  :tCOLON3 => 105,
  :tASSOC => 106,
  :tLPAREN => 107,
  :tLPAREN_ARG => 108,
  :tRPAREN => 109,
  :tLBRACK => 110,
  :tLBRACE => 111,
  :tSTAR => 112,
  :tAMPER => 113,
  :tLAMBDA => 114,
  :tSYMBEG => 115,
  :tSTRING_BEG => 116,
  :tXSTRING_BEG => 117,
  :tREGEXP_BEG => 118,
  :tWORDS_BEG => 119,
  :tQWORDS_BEG => 120,
  :tSTRING_DBEG => 121,
  :tSTRING_DVAR => 122,
  :tSTRING_END => 123,
  :tLAMBEG => 124,
  :tSTRING => 125,
  :tXSTRING_END => 126,
  "{" => 127,
  "}" => 128,
  "[" => 129,
  "." => 130,
  "," => 131,
  "`" => 132,
  "(" => 133,
  ")" => 134,
  "]" => 135,
  ";" => 136,
  " " => 137,
  "\\n" => 138 }

racc_nt_base = 139

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "tLOWEST",
  "tLBRACE_ARG",
  "kIF_MOD",
  "kUNLESS_MOD",
  "kWHILE_MOD",
  "kUNTIL_MOD",
  "kOR",
  "kAND",
  "kNOT",
  "kDEFined",
  "\"=\"",
  "tOP_ASGN",
  "kRESCUE_MOD",
  "\"?\"",
  "\":\"",
  "tDOT2",
  "tDOT3",
  "tOROP",
  "tANDOP",
  "tCMP",
  "tEQ",
  "tEQQ",
  "tNEQ",
  "tMATCH",
  "tNMATCH",
  "\">\"",
  "tGEQ",
  "\"<\"",
  "tLEQ",
  "\"|\"",
  "\"^\"",
  "\"&\"",
  "tLSHFT",
  "tRSHFT",
  "\"+\"",
  "\"-\"",
  "\"*\"",
  "\"/\"",
  "\"%\"",
  "tUMINUS_NUM",
  "tUMINUS",
  "tPOW",
  "\"!\"",
  "\"~\"",
  "tUPLUS",
  "kCLASS",
  "kMODULE",
  "kDEF",
  "kUNDEF",
  "kBEGIN",
  "kRESCUE",
  "kENSURE",
  "kEND",
  "kIF",
  "kUNLESS",
  "kTHEN",
  "kELSIF",
  "kELSE",
  "kCASE",
  "kWHEN",
  "kWHILE",
  "kUNTIL",
  "kFOR",
  "kBREAK",
  "kNEXT",
  "kREDO",
  "kRETRY",
  "kIN",
  "kDO",
  "kDO_COND",
  "kDO_BLOCK",
  "kDO_LAMBDA",
  "kRETURN",
  "kYIELD",
  "kSUPER",
  "kSELF",
  "kNIL",
  "kTRUE",
  "kFALSE",
  "kALIAS",
  "kDEFINED",
  "klBEGIN",
  "klEND",
  "k__LINE__",
  "k__FILE__",
  "k__ENCODING__",
  "tIDENTIFIER",
  "tFID",
  "tGVAR",
  "tIVAR",
  "tCONSTANT",
  "tCVAR",
  "tLABEL",
  "tINTEGER",
  "tFLOAT",
  "tSTRING_CONTENT",
  "tCHAR",
  "tNTH_REF",
  "tBACK_REF",
  "tREGEXP_END",
  "tAREF",
  "tASET",
  "tCOLON2",
  "tCOLON3",
  "tASSOC",
  "tLPAREN",
  "tLPAREN_ARG",
  "tRPAREN",
  "tLBRACK",
  "tLBRACE",
  "tSTAR",
  "tAMPER",
  "tLAMBDA",
  "tSYMBEG",
  "tSTRING_BEG",
  "tXSTRING_BEG",
  "tREGEXP_BEG",
  "tWORDS_BEG",
  "tQWORDS_BEG",
  "tSTRING_DBEG",
  "tSTRING_DVAR",
  "tSTRING_END",
  "tLAMBEG",
  "tSTRING",
  "tXSTRING_END",
  "\"{\"",
  "\"}\"",
  "\"[\"",
  "\".\"",
  "\",\"",
  "\"`\"",
  "\"(\"",
  "\")\"",
  "\"]\"",
  "\";\"",
  "\" \"",
  "\"\\\\n\"",
  "$start",
  "target",
  "program",
  "top_compstmt",
  "@1",
  "top_stmts",
  "opt_terms",
  "none",
  "top_stmt",
  "terms",
  "stmt",
  "bodystmt",
  "compstmt",
  "opt_rescue",
  "opt_else",
  "opt_ensure",
  "stmts",
  "fitem",
  "undef_list",
  "expr_value",
  "lhs",
  "command_call",
  "mlhs",
  "var_lhs",
  "primary_value",
  "opt_call_args",
  "rbracket",
  "backref",
  "mrhs",
  "arg_value",
  "expr",
  "@2",
  "opt_nl",
  "arg",
  "command",
  "block_command",
  "call_args",
  "block_call",
  "operation2",
  "command_args",
  "cmd_brace_block",
  "opt_block_param",
  "operation",
  "mlhs_basic",
  "mlhs_inner",
  "rparen",
  "mlhs_head",
  "mlhs_item",
  "mlhs_node",
  "mlhs_post",
  "variable",
  "cname",
  "cpath",
  "fname",
  "op",
  "reswords",
  "fsym",
  "symbol",
  "dsym",
  "primary",
  "aref_args",
  "args",
  "trailer",
  "assocs",
  "paren_args",
  "opt_paren_args",
  "opt_block_arg",
  "block_arg",
  "literal",
  "strings",
  "xstring",
  "regexp",
  "words",
  "qwords",
  "var_ref",
  "k_begin",
  "k_end",
  "assoc_list",
  "brace_block",
  "method_call",
  "lambda",
  "k_if",
  "then",
  "if_tail",
  "k_unless",
  "k_while",
  "do",
  "k_until",
  "k_case",
  "case_body",
  "k_for",
  "for_var",
  "k_class",
  "superclass",
  "term",
  "k_module",
  "k_def",
  "f_arglist",
  "singleton",
  "dot_or_colon",
  "f_marg",
  "f_norm_arg",
  "f_margs",
  "f_marg_list",
  "block_param",
  "f_arg",
  "f_block_optarg",
  "f_rest_arg",
  "opt_f_block_arg",
  "f_block_arg",
  "block_param_def",
  "opt_bv_decl",
  "bv_decls",
  "bvar",
  "f_bad_arg",
  "f_larglist",
  "lambda_body",
  "f_args",
  "do_block",
  "operation3",
  "cases",
  "exc_list",
  "exc_var",
  "numeric",
  "string",
  "string1",
  "string_contents",
  "xstring_contents",
  "word_list",
  "word",
  "string_content",
  "qword_list",
  "string_dvar",
  "sym",
  "f_optarg",
  "f_arg_item",
  "f_opt",
  "f_block_opt",
  "restarg_mark",
  "blkarg_mark",
  "assoc" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 75)
  def _reduce_1(val, _values, result)
                        # puts 'well, we got here..'
                    # puts val[0]
                    @parser_result = val[0]
                    result = val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 83)
  def _reduce_2(val, _values, result)
                        self.lex_state = :EXPR_BEG
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 87)
  def _reduce_3(val, _values, result)
                        # puts 'program'
                    # puts val[1]
                    result = val[1]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 94)
  def _reduce_4(val, _values, result)
                        # puts 'top_compstmt'
                    # puts val[0]
                    # puts val[1]
                    result = val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 102)
  def _reduce_5(val, _values, result)
                        result = []
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 106)
  def _reduce_6(val, _values, result)
                        result = [val[0]]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 110)
  def _reduce_7(val, _values, result)
                        result = val[0] + [val[2]]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 114)
  def _reduce_8(val, _values, result)
                        result = val[1]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 119)
  def _reduce_9(val, _values, result)
                        result = val[0]
                  
    result
  end
.,.,

# reduce 10 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 125)
  def _reduce_11(val, _values, result)
                        result = val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 130)
  def _reduce_12(val, _values, result)
                        result = val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 135)
  def _reduce_13(val, _values, result)
                        result = []
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 139)
  def _reduce_14(val, _values, result)
                        result = [val[0]]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 143)
  def _reduce_15(val, _values, result)
                        result = val[0] + [val[2]]
		              
    result
  end
.,.,

# reduce 16 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 149)
  def _reduce_17(val, _values, result)
                        self.lex_state = :EXPR_FNAME
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 154)
  def _reduce_18(val, _values, result)
                      
    result
  end
.,.,

# reduce 19 omitted

# reduce 20 omitted

# reduce 21 omitted

# reduce 22 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 161)
  def _reduce_23(val, _values, result)
                		    result = node :if_mod, :stmt => val[0], :expr => val[2]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 165)
  def _reduce_24(val, _values, result)
                		    result = node :unless_mod, :stmt => val[0], :expr => val[2]
            		  
    result
  end
.,.,

# reduce 25 omitted

# reduce 26 omitted

# reduce 27 omitted

# reduce 28 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 173)
  def _reduce_29(val, _values, result)
                		    result = node :assign, :lhs => val[0], :rhs => val[2]
            		  
    result
  end
.,.,

# reduce 30 omitted

# reduce 31 omitted

# reduce 32 omitted

# reduce 33 omitted

# reduce 34 omitted

# reduce 35 omitted

# reduce 36 omitted

# reduce 37 omitted

# reduce 38 omitted

# reduce 39 omitted

# reduce 40 omitted

# reduce 41 omitted

# reduce 42 omitted

# reduce 43 omitted

# reduce 44 omitted

# reduce 45 omitted

# reduce 46 omitted

# reduce 47 omitted

# reduce 48 omitted

# reduce 49 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 200)
  def _reduce_50(val, _values, result)
                  	    result = node :return, :call_args => val[1]
              	  
    result
  end
.,.,

# reduce 51 omitted

# reduce 52 omitted

# reduce 53 omitted

# reduce 54 omitted

# reduce 55 omitted

# reduce 56 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 213)
  def _reduce_57(val, _values, result)
                        # command call - no brackets/recv
          		      result = node :call, :recv => nil, :meth => val[0], :call_args => val[1]
                  
    result
  end
.,.,

# reduce 58 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 219)
  def _reduce_59(val, _values, result)
              		      result = node :call, :recv => val[0], :meth => val[2], :call_args => val[3]
                  
    result
  end
.,.,

# reduce 60 omitted

# reduce 61 omitted

# reduce 62 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 226)
  def _reduce_63(val, _values, result)
          		          result = node :super, :call_args => val[1]
      		        
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 230)
  def _reduce_64(val, _values, result)
            	          result = node :yield, :call_args => val[1]
        	        
    result
  end
.,.,

# reduce 65 omitted

# reduce 66 omitted

# reduce 67 omitted

# reduce 68 omitted

# reduce 69 omitted

# reduce 70 omitted

# reduce 71 omitted

# reduce 72 omitted

# reduce 73 omitted

# reduce 74 omitted

# reduce 75 omitted

# reduce 76 omitted

# reduce 77 omitted

# reduce 78 omitted

# reduce 79 omitted

# reduce 80 omitted

# reduce 81 omitted

# reduce 82 omitted

# reduce 83 omitted

# reduce 84 omitted

# reduce 85 omitted

# reduce 86 omitted

# reduce 87 omitted

# reduce 88 omitted

# reduce 89 omitted

# reduce 90 omitted

# reduce 91 omitted

# reduce 92 omitted

# reduce 93 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 271)
  def _reduce_94(val, _values, result)
    		                result = node :call, :recv => val[0], :meth => '[]', :args => val[2]
		              
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 275)
  def _reduce_95(val, _values, result)
              		      result = node :call, :recv => val[0], :meth => val[2]
                  
    result
  end
.,.,

# reduce 96 omitted

# reduce 97 omitted

# reduce 98 omitted

# reduce 99 omitted

# reduce 100 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 285)
  def _reduce_101(val, _values, result)
                        puts 'ERROR: cant use identifier for class/mod name'
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 289)
  def _reduce_102(val, _values, result)
                		    result = val[0]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 295)
  def _reduce_103(val, _values, result)
                      
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 298)
  def _reduce_104(val, _values, result)
      	                result = node :path, :cname => val[0]
  	              
    result
  end
.,.,

# reduce 105 omitted

# reduce 106 omitted

# reduce 107 omitted

# reduce 108 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 307)
  def _reduce_109(val, _values, result)
    		                self.lex_state = :EXPR_END
		                result = val[0]
		              
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 312)
  def _reduce_110(val, _values, result)
    		                self.lex_state = :EXPR_END
		                result = val[0]
		              
    result
  end
.,.,

# reduce 111 omitted

# reduce 112 omitted

# reduce 113 omitted

# reduce 114 omitted

# reduce 115 omitted

# reduce 116 omitted

# reduce 117 omitted

# reduce 118 omitted

# reduce 119 omitted

# reduce 120 omitted

# reduce 121 omitted

# reduce 122 omitted

# reduce 123 omitted

# reduce 124 omitted

# reduce 125 omitted

# reduce 126 omitted

# reduce 127 omitted

# reduce 128 omitted

# reduce 129 omitted

# reduce 130 omitted

# reduce 131 omitted

# reduce 132 omitted

# reduce 133 omitted

# reduce 134 omitted

# reduce 135 omitted

# reduce 136 omitted

# reduce 137 omitted

# reduce 138 omitted

# reduce 139 omitted

# reduce 140 omitted

# reduce 141 omitted

# reduce 142 omitted

# reduce 143 omitted

# reduce 144 omitted

# reduce 145 omitted

# reduce 146 omitted

# reduce 147 omitted

# reduce 148 omitted

# reduce 149 omitted

# reduce 150 omitted

# reduce 151 omitted

# reduce 152 omitted

# reduce 153 omitted

# reduce 154 omitted

# reduce 155 omitted

# reduce 156 omitted

# reduce 157 omitted

# reduce 158 omitted

# reduce 159 omitted

# reduce 160 omitted

# reduce 161 omitted

# reduce 162 omitted

# reduce 163 omitted

# reduce 164 omitted

# reduce 165 omitted

# reduce 166 omitted

# reduce 167 omitted

# reduce 168 omitted

# reduce 169 omitted

# reduce 170 omitted

# reduce 171 omitted

# reduce 172 omitted

# reduce 173 omitted

# reduce 174 omitted

# reduce 175 omitted

# reduce 176 omitted

# reduce 177 omitted

# reduce 178 omitted

# reduce 179 omitted

# reduce 180 omitted

# reduce 181 omitted

# reduce 182 omitted

# reduce 183 omitted

# reduce 184 omitted

# reduce 185 omitted

# reduce 186 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 348)
  def _reduce_187(val, _values, result)
                        result = node :assign, :lhs => val[0], :rhs => val[2]
                  
    result
  end
.,.,

# reduce 188 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 353)
  def _reduce_189(val, _values, result)
                		    result = node :op_asgn, :lhs => val[0], :op => val[1], :rhs => val[2]
            		  
    result
  end
.,.,

# reduce 190 omitted

# reduce 191 omitted

# reduce 192 omitted

# reduce 193 omitted

# reduce 194 omitted

# reduce 195 omitted

# reduce 196 omitted

# reduce 197 omitted

# reduce 198 omitted

# reduce 199 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 367)
  def _reduce_200(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '+', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 371)
  def _reduce_201(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '-', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 375)
  def _reduce_202(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '*', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 379)
  def _reduce_203(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '/', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 383)
  def _reduce_204(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '%', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 387)
  def _reduce_205(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '**', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

# reduce 206 omitted

# reduce 207 omitted

# reduce 208 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 394)
  def _reduce_209(val, _values, result)
                		    result = node :call, :recv => val[1], :meth => '-@', :call_args => []
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 398)
  def _reduce_210(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '|', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 402)
  def _reduce_211(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '^', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 406)
  def _reduce_212(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '&', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 410)
  def _reduce_213(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '<=>', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 414)
  def _reduce_214(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '>', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 418)
  def _reduce_215(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '>=', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 422)
  def _reduce_216(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '<', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 426)
  def _reduce_217(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '<=', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 430)
  def _reduce_218(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '==', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 434)
  def _reduce_219(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '===', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 438)
  def _reduce_220(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '!=', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 442)
  def _reduce_221(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '=~', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 446)
  def _reduce_222(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '!~', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 450)
  def _reduce_223(val, _values, result)
                		    result = node :call, :recv => val[1], :meth => '~', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 454)
  def _reduce_224(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '<<', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 458)
  def _reduce_225(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '>>', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

# reduce 226 omitted

# reduce 227 omitted

# reduce 228 omitted

# reduce 229 omitted

# reduce 230 omitted

# reduce 231 omitted

# reduce 232 omitted

# reduce 233 omitted

# reduce 234 omitted

# reduce 235 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 475)
  def _reduce_236(val, _values, result)
                        result = val[1]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 480)
  def _reduce_237(val, _values, result)
                        result = node :call_args, :args => nil
                  
    result
  end
.,.,

# reduce 238 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 486)
  def _reduce_239(val, _values, result)
                        result = node :call_args, :args => nil
                  
    result
  end
.,.,

# reduce 240 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 492)
  def _reduce_241(val, _values, result)
                		    result = node :call_args, :args => [val[0]]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 496)
  def _reduce_242(val, _values, result)
                		    result = node :call_args, :args => val[0], :block_arg => val[1]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 500)
  def _reduce_243(val, _values, result)
                		    result = node :call_args, :assocs => val[0], :block_arg => val[1]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 504)
  def _reduce_244(val, _values, result)
                		    result = node :call_args, :args => val[0], :assocs => val[2], :block_arg => val[3]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 508)
  def _reduce_245(val, _values, result)
                		    result = node :call_args, :block_arg => val[0]
            		  
    result
  end
.,.,

# reduce 246 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 515)
  def _reduce_247(val, _values, result)
                        result = self.node :block_arg, :arg => val[1]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 520)
  def _reduce_248(val, _values, result)
                        resul = val[1]
                  
    result
  end
.,.,

# reduce 249 omitted

# reduce 250 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 527)
  def _reduce_251(val, _values, result)
                        result = [val[0]]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 531)
  def _reduce_252(val, _values, result)
    		                result = [val[1]]
		              
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 535)
  def _reduce_253(val, _values, result)
    		                result = val[0] + [val[2]]
		              
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 539)
  def _reduce_254(val, _values, result)
    		                result = val[0] + [val[3]]
		              
    result
  end
.,.,

# reduce 255 omitted

# reduce 256 omitted

# reduce 257 omitted

# reduce 258 omitted

# reduce 259 omitted

# reduce 260 omitted

# reduce 261 omitted

# reduce 262 omitted

# reduce 263 omitted

# reduce 264 omitted

# reduce 265 omitted

# reduce 266 omitted

# reduce 267 omitted

# reduce 268 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 559)
  def _reduce_269(val, _values, result)
                		    result = node :lparen, :stmt => val[1]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 563)
  def _reduce_270(val, _values, result)
                		    result = node :colon2, :lhs => val[0], :rhs => val[2]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 567)
  def _reduce_271(val, _values, result)
                		    result = node :colon3, :rhs => val[1]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 571)
  def _reduce_272(val, _values, result)
                		    result = node :array, :args => val[1]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 575)
  def _reduce_273(val, _values, result)
                		    result = node :assoc_list, :list => val[1]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 579)
  def _reduce_274(val, _values, result)
                		    result = node :return
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 583)
  def _reduce_275(val, _values, result)
            	          result = node :yield, :call_args => val[2]
        	        
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 587)
  def _reduce_276(val, _values, result)
            	          result = node :yield
        	        
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 591)
  def _reduce_277(val, _values, result)
            	          result = node :yield
        	        
    result
  end
.,.,

# reduce 278 omitted

# reduce 279 omitted

# reduce 280 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 598)
  def _reduce_281(val, _values, result)
                        # puts 1
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 602)
  def _reduce_282(val, _values, result)
                		    # puts 2
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 606)
  def _reduce_283(val, _values, result)
                		    val[0][:brace_block] = val[1]
            		    result = val[0]
            		  
    result
  end
.,.,

# reduce 284 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 612)
  def _reduce_285(val, _values, result)
                		    result = self.node :if, :expr => val[1], :stmt => val[3], :tail => val[4]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 616)
  def _reduce_286(val, _values, result)
                		    result = self.node :unless, :expr => val[1], :stmt => val[3], :tail => val[4]
            		  
    result
  end
.,.,

# reduce 287 omitted

# reduce 288 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 622)
  def _reduce_289(val, _values, result)
                		    result = node :case, :expr => val[1], :body => val[3]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 626)
  def _reduce_290(val, _values, result)
                		    result = node :case, :expr => nil, :body => val[2]
            		  
    result
  end
.,.,

# reduce 291 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 631)
  def _reduce_292(val, _values, result)
                		    result = self.node_class(:cpath => val[1], :superclass => val[2], :bodystmt => val[3])
            		  
    result
  end
.,.,

# reduce 293 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 636)
  def _reduce_294(val, _values, result)
                		    result = self.node_module(:cpath => val[1], :body => val[2])
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 640)
  def _reduce_295(val, _values, result)
                		    result = self.node :def, :fname => val[1], :arglist => val[2], :bodystmt => val[3]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 644)
  def _reduce_296(val, _values, result)
                		    result = self.node :def, :singleton => val[1], :fname => val[3], :arglist => val[4], :bodystmt => val[5]
            		  
    result
  end
.,.,

# reduce 297 omitted

# reduce 298 omitted

# reduce 299 omitted

# reduce 300 omitted

# reduce 301 omitted

# reduce 302 omitted

# reduce 303 omitted

# reduce 304 omitted

# reduce 305 omitted

# reduce 306 omitted

# reduce 307 omitted

# reduce 308 omitted

# reduce 309 omitted

# reduce 310 omitted

# reduce 311 omitted

# reduce 312 omitted

# reduce 313 omitted

# reduce 314 omitted

# reduce 315 omitted

# reduce 316 omitted

# reduce 317 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 684)
  def _reduce_318(val, _values, result)
                        result = val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 688)
  def _reduce_319(val, _values, result)
                  	    result = [self.node(:elsif, :expr => val[1], :stmt => val[3])] + val[4]
              	  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 693)
  def _reduce_320(val, _values, result)
                        result = []
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 697)
  def _reduce_321(val, _values, result)
                  	    result = [self.node(:else, :stmt => val[1])]
              	  
    result
  end
.,.,

# reduce 322 omitted

# reduce 323 omitted

# reduce 324 omitted

# reduce 325 omitted

# reduce 326 omitted

# reduce 327 omitted

# reduce 328 omitted

# reduce 329 omitted

# reduce 330 omitted

# reduce 331 omitted

# reduce 332 omitted

# reduce 333 omitted

# reduce 334 omitted

# reduce 335 omitted

# reduce 336 omitted

# reduce 337 omitted

# reduce 338 omitted

# reduce 339 omitted

# reduce 340 omitted

# reduce 341 omitted

# reduce 342 omitted

# reduce 343 omitted

# reduce 344 omitted

# reduce 345 omitted

# reduce 346 omitted

# reduce 347 omitted

# reduce 348 omitted

# reduce 349 omitted

# reduce 350 omitted

# reduce 351 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 737)
  def _reduce_352(val, _values, result)
                        result = nil
                  
    result
  end
.,.,

# reduce 353 omitted

# reduce 354 omitted

# reduce 355 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 745)
  def _reduce_356(val, _values, result)
                		    result = val[1]
            		  
    result
  end
.,.,

# reduce 357 omitted

# reduce 358 omitted

# reduce 359 omitted

# reduce 360 omitted

# reduce 361 omitted

# reduce 362 omitted

# reduce 363 omitted

# reduce 364 omitted

# reduce 365 omitted

# reduce 366 omitted

# reduce 367 omitted

# reduce 368 omitted

# reduce 369 omitted

# reduce 370 omitted

# reduce 371 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 773)
  def _reduce_372(val, _values, result)
                        result = node :call, :recv => nil, :meth => val[0], :call_args => val[1]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 777)
  def _reduce_373(val, _values, result)
                        result = node :call, :recv => val[0], :meth => val[2], :call_args => val[3]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 781)
  def _reduce_374(val, _values, result)
                  	    puts 'SCOOOBY DOOOOOOOOOOOOOOOOOOOOOOOOOOOOO 2'
              	  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 785)
  def _reduce_375(val, _values, result)
                  	    puts 'SCOOOBY DOOOOOOOOOOOOOOOOOOOOOOOOOOOOO 3'
              	  
    result
  end
.,.,

# reduce 376 omitted

# reduce 377 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 791)
  def _reduce_378(val, _values, result)
                		    result = node :super, :call_args => val[1]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 795)
  def _reduce_379(val, _values, result)
                		    result = node :super, :call_args => nil
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 799)
  def _reduce_380(val, _values, result)
                        result = node :call, :recv => val[0], :meth => '[]', :call_args => val[2]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 806)
  def _reduce_381(val, _values, result)
                      
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 809)
  def _reduce_382(val, _values, result)
                		    result = node :brace_block, :params => val[1], :stmt => val[2]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 814)
  def _reduce_383(val, _values, result)
                        result = [node(:when, :args => val[1], :stmt => val[3])] + val[4]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 819)
  def _reduce_384(val, _values, result)
                        result = val[0]
                  
    result
  end
.,.,

# reduce 385 omitted

# reduce 386 omitted

# reduce 387 omitted

# reduce 388 omitted

# reduce 389 omitted

# reduce 390 omitted

# reduce 391 omitted

# reduce 392 omitted

# reduce 393 omitted

# reduce 394 omitted

# reduce 395 omitted

# reduce 396 omitted

# reduce 397 omitted

# reduce 398 omitted

# reduce 399 omitted

# reduce 400 omitted

# reduce 401 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 848)
  def _reduce_402(val, _values, result)
                        result = node :string, :value => val[1]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 853)
  def _reduce_403(val, _values, result)
                        result = node :xstring, :value => val[1]
                  
    result
  end
.,.,

# reduce 404 omitted

# reduce 405 omitted

# reduce 406 omitted

# reduce 407 omitted

# reduce 408 omitted

# reduce 409 omitted

# reduce 410 omitted

# reduce 411 omitted

# reduce 412 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 872)
  def _reduce_413(val, _values, result)
                        # none..
                    result = []
                  
    result
  end
.,.,

# reduce 414 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 879)
  def _reduce_415(val, _values, result)
                        # none..
                    result = []
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 884)
  def _reduce_416(val, _values, result)
                		    result = val[0] + [val[1]]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 889)
  def _reduce_417(val, _values, result)
                        # none..
                    result = []
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 894)
  def _reduce_418(val, _values, result)
                		    result = val[0] + [val[1]]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 899)
  def _reduce_419(val, _values, result)
                        result = node :string_content, :value => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 903)
  def _reduce_420(val, _values, result)
                        result = node :string_dvar, :value => val[1]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 907)
  def _reduce_421(val, _values, result)
                        result = node :string_dbeg, :value => val[1]
                  
    result
  end
.,.,

# reduce 422 omitted

# reduce 423 omitted

# reduce 424 omitted

# reduce 425 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 917)
  def _reduce_426(val, _values, result)
                        result = node :symbol, :name => val[1]
                  
    result
  end
.,.,

# reduce 427 omitted

# reduce 428 omitted

# reduce 429 omitted

# reduce 430 omitted

# reduce 431 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 929)
  def _reduce_432(val, _values, result)
                        result = node :numeric, :value => val[0], :float => false
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 933)
  def _reduce_433(val, _values, result)
                        result = node :numeric, :value => val[0], :float => true
                  
    result
  end
.,.,

# reduce 434 omitted

# reduce 435 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 940)
  def _reduce_436(val, _values, result)
                        result = node :identifier, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 944)
  def _reduce_437(val, _values, result)
                        result = node :ivar, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 948)
  def _reduce_438(val, _values, result)
                        result = node :gvar, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 952)
  def _reduce_439(val, _values, result)
                        result = node :constant, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 956)
  def _reduce_440(val, _values, result)
                        result = node :cvar, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 960)
  def _reduce_441(val, _values, result)
                        result = node :nil, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 964)
  def _reduce_442(val, _values, result)
                        result = node :self, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 968)
  def _reduce_443(val, _values, result)
                        result = node :true, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 972)
  def _reduce_444(val, _values, result)
                        result = node :false, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 976)
  def _reduce_445(val, _values, result)
                        result = node :__FILE__, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 980)
  def _reduce_446(val, _values, result)
                        result = node :__LINE__, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 984)
  def _reduce_447(val, _values, result)
                        result = node :__ENCODING__, :name => val[0]
                  
    result
  end
.,.,

# reduce 448 omitted

# reduce 449 omitted

# reduce 450 omitted

# reduce 451 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 996)
  def _reduce_452(val, _values, result)
                        result = nil
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1000)
  def _reduce_453(val, _values, result)
                		    result = node :superclass, :expr => val[1]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1002)
  def _reduce_454(val, _values, result)
     puts 'OMFG' 
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1006)
  def _reduce_455(val, _values, result)
                        result = val[1]
                    self.lex_state = :EXPR_BEG
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1011)
  def _reduce_456(val, _values, result)
                        result = val[0]
                    self.lex_state = :EXPR_BEG
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1017)
  def _reduce_457(val, _values, result)
                 		    result = node :arg, :arg => val[0], :optarg => val[2], :rest_arg => val[4], :opt_block_arg => val[5]
             		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1021)
  def _reduce_458(val, _values, result)
                 		    result = node :arg, :arg => val[0], :optarg => val[2], :rest_arg => val[4], :arg2 => val[6], :opt_block_arg => val[7]
             		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1025)
  def _reduce_459(val, _values, result)
                  	    result = node :arg, :arg => val[0], :optarg => val[2], :opt_block_arg => val[3]
              	  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1029)
  def _reduce_460(val, _values, result)
                  	    result = node :arg, :arg => val[0], :optarg => val[2], :arg2 => val[4], :opt_block_arg => val[5]
              	  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1033)
  def _reduce_461(val, _values, result)
                		    result = node :arg, :arg => val[0], :rest_arg => val[2], :opt_block_arg => val[3]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1037)
  def _reduce_462(val, _values, result)
                		    result = node :arg, :arg => val[0], :rest_arg => val[2], :arg2 => val[4], :opt_block_arg => val[5]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1041)
  def _reduce_463(val, _values, result)
                 		    result = node :arg, :arg => val[0], :opt_block_arg => val[1]
             		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1045)
  def _reduce_464(val, _values, result)
                		    result = node :optarg, :optarg => val[0], :rest_arg => val[2], :opt_block_arg => val[3]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1049)
  def _reduce_465(val, _values, result)
                		    result = node :optarg, :optarg => val[0], :rest_arg => val[2], :arg => val[4], :opt_block_arg => val[5]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1053)
  def _reduce_466(val, _values, result)
                 		    result = node :optarg, :optarg => val[0], :opt_block_arg => val[1]
             		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1057)
  def _reduce_467(val, _values, result)
                 		    result = node :optarg, :optarg => val[0], :arg => val[2], :opt_block_arg => val[3]
             		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1061)
  def _reduce_468(val, _values, result)
                 		    result = node :rest_arg, :rest_arg => val[0], :opt_block_arg => val[1]
             		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1065)
  def _reduce_469(val, _values, result)
                 		    result = node :rest_arg, :rest_arg => val[0], :arg => val[2], :opt_block_arg => val[3]
             		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1069)
  def _reduce_470(val, _values, result)
                 		    result = node :arg, :opt_block_arg => val[0]
             		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1073)
  def _reduce_471(val, _values, result)
                  	    # none...
              	    result = nil
              	  
    result
  end
.,.,

# reduce 472 omitted

# reduce 473 omitted

# reduce 474 omitted

# reduce 475 omitted

# reduce 476 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1085)
  def _reduce_477(val, _values, result)
                        # result = val[0]
              	    result = node :norm_arg, :value => val[0]
              	  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1091)
  def _reduce_478(val, _values, result)
                      
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1094)
  def _reduce_479(val, _values, result)
                        result = node :label_arg, :name => val[0], :value => val[1]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1099)
  def _reduce_480(val, _values, result)
                        result = val[0]
                  
    result
  end
.,.,

# reduce 481 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1105)
  def _reduce_482(val, _values, result)
                        result = [val[0]]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1109)
  def _reduce_483(val, _values, result)
                        # val[0] + val[2]
                    result = val[0] + [val[2]]
            		  
    result
  end
.,.,

# reduce 484 omitted

# reduce 485 omitted

# reduce 486 omitted

# reduce 487 omitted

# reduce 488 omitted

# reduce 489 omitted

# reduce 490 omitted

# reduce 491 omitted

# reduce 492 omitted

# reduce 493 omitted

# reduce 494 omitted

# reduce 495 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1134)
  def _reduce_496(val, _values, result)
                        result = val[1]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1138)
  def _reduce_497(val, _values, result)
                        result = node :label_arg, :name => val[0], :value => val[1]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1143)
  def _reduce_498(val, _values, result)
                        result = val[1]
                  
    result
  end
.,.,

# reduce 499 omitted

# reduce 500 omitted

# reduce 501 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1152)
  def _reduce_502(val, _values, result)
                        result = []
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1156)
  def _reduce_503(val, _values, result)
                  	    result = val[0]
              	  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1161)
  def _reduce_504(val, _values, result)
                        result = [val[0]]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1165)
  def _reduce_505(val, _values, result)
                		    result = val[0] + [val[2]]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1170)
  def _reduce_506(val, _values, result)
                        result = node :assoc, :key => val[0], :value => val[2]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1174)
  def _reduce_507(val, _values, result)
                        result = node :label_assoc, :key => val[0], :value => val[1]
                  
    result
  end
.,.,

# reduce 508 omitted

# reduce 509 omitted

# reduce 510 omitted

# reduce 511 omitted

# reduce 512 omitted

# reduce 513 omitted

# reduce 514 omitted

# reduce 515 omitted

# reduce 516 omitted

# reduce 517 omitted

# reduce 518 omitted

# reduce 519 omitted

# reduce 520 omitted

# reduce 521 omitted

# reduce 522 omitted

# reduce 523 omitted

# reduce 524 omitted

# reduce 525 omitted

# reduce 526 omitted

# reduce 527 omitted

# reduce 528 omitted

# reduce 529 omitted

# reduce 530 omitted

# reduce 531 omitted

# reduce 532 omitted

# reduce 533 omitted

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class RubyParser
  end   # module Vienna


