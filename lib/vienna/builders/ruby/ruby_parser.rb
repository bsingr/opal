#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.6
# from Racc grammer file "".
#

require 'racc/parser.rb'


# require 'ctokenizer'
require 'strscan'

module Vienna
  class RubyParser < Racc::Parser

module_eval(<<'...end ruby_parser.rb.y/module_eval...', 'ruby_parser.rb.y', 1296)


...end ruby_parser.rb.y/module_eval...
##### State transition tables begin ###

clist = [
'-273,-10,4,303,304,-273,303,304,303,304,452,452,-66,-273,-273,-87,303',
'304,-273,-273,-273,-273,-273,-273,-273,-273,-273,-273,-273,-273,-273',
'-273,-273,-93,-273,-98,684,155,-273,-273,-273,-273,-273,-273,815,588',
'585,452,-87,-269,587,-273,-273,-273,-269,798,452,-273,-273,-94,-273',
'810,-269,-269,591,-97,690,-269,-269,-269,-269,-269,-269,-269,-269,-269',
'-269,-269,-269,-269,-269,-269,-269,-269,808,485,155,-269,-269,-269,-269',
'-269,-269,-269,452,158,-85,807,303,304,-269,-269,-269,456,-273,-269',
'-269,-269,-80,-269,151,-87,338,449,449,338,806,338,-269,-269,-269,-269',
'-86,-87,326,338,410,-87,-273,-273,-273,-90,-273,-273,-273,-273,-273',
'-273,-273,-273,326,-95,689,-273,158,-273,-10,-273,-10,326,449,-94,867',
'-269,413,-269,409,317,320,449,-96,-89,329,331,333,337,313,315,318,321',
'323,325,-227,-269,248,805,250,-269,-269,-269,-269,-269,-269,-269,-269',
'-269,-269,-269,-269,248,-519,250,-269,-269,-269,-519,-269,449,485,485',
'-99,533,803,-519,-519,248,412,250,-519,-519,-519,-519,-519,-519,-519',
'-519,-519,-519,-519,-519,-519,-519,-519,-88,-519,-96,683,410,-519,-519',
'-519,-519,-519,-519,-515,-93,-453,-87,-94,816,-100,-519,-519,-519,-97',
'795,598,-519,-519,-449,-519,314,316,319,322,324,327,328,330,-519,485',
'525,595,-100,441,-100,263,314,316,319,322,324,327,328,330,-449,314,316',
'319,322,324,327,328,330,-95,-97,393,248,248,250,250,338,151,326,-519',
'21,-91,32,338,42,48,317,320,-92,801,-94,329,331,333,337,-538,-538,-538',
'-538,-538,-538,651,-519,-519,-519,-519,-88,-519,-519,-519,-519,-519',
'-519,-519,-519,108,-85,-98,-519,-86,-519,248,-519,250,54,59,64,-99,157',
'755,-96,530,93,99,248,151,250,20,525,29,37,40,46,55,60,65,-92,485,248',
'525,250,94,101,105,5,10,18,22,-95,-97,-95,-97,52,57,63,70,74,82,83,87',
'91,98,-97,6,11,444,24,27,35,-94,-90,-94,248,152,250,156,80,-95,90,97',
'-91,-516,8,12,19,23,28,36,39,140,326,32,-443,42,48,314,316,319,322,324',
'327,328,330,248,-452,250,-515,465,47,-96,-447,-96,831,248,248,250,250',
'326,-443,-273,-93,-453,421,598,165,-89,248,763,250,-452,-452,461,462',
'54,59,64,-447,157,443,595,-87,93,99,514,-273,-273,20,122,29,37,40,147',
'148,60,65,338,708,-516,-446,755,160,101,105,5,10,18,22,-445,116,513',
'-448,52,57,63,70,74,82,83,87,91,98,164,6,11,-446,24,27,35,248,435,250',
'600,152,-445,156,80,-448,90,97,163,166,8,12,19,23,28,36,39,21,326,32',
'600,42,48,436,437,920,314,316,319,322,324,327,328,330,822,755,47,-384',
'-450,-95,794,-268,423,338,119,123,125,128,426,624,921,922,108,314,316',
'319,322,324,327,328,330,54,59,64,-450,157,-268,-268,598,93,99,596,-384',
'338,20,626,29,37,40,46,55,60,65,-451,595,644,361,595,94,101,105,5,10',
'18,22,-384,600,-384,-384,52,57,63,70,74,82,83,87,91,98,-451,6,11,362',
'24,27,35,786,491,-519,340,152,342,156,80,778,90,97,833,-440,8,12,19',
'23,28,36,39,21,326,32,338,42,48,492,493,781,314,316,319,322,324,327',
'328,330,-519,-440,47,248,248,250,250,835,465,338,423,326,119,123,125',
'128,426,836,108,317,320,822,755,-519,-273,-519,-519,54,59,64,72,78,461',
'462,778,93,99,484,-515,248,20,250,29,37,40,46,55,60,65,-273,-273,303',
'304,862,94,101,105,5,10,18,22,33,-516,776,49,52,57,63,70,74,82,83,87',
'91,98,338,6,11,774,24,27,35,303,304,-273,772,68,771,76,80,-254,90,97',
'104,-268,8,12,19,23,28,36,39,21,763,32,465,42,48,-452,-273,-273,314',
'316,319,322,324,327,328,330,-268,-268,47,-516,495,496,600,467,-89,338',
'461,462,508,-274,-452,-452,-99,533,108,314,316,319,322,324,327,328,330',
'54,59,64,72,157,290,291,338,93,99,-274,-274,-274,20,-89,29,37,40,46',
'55,60,65,600,757,755,-513,338,94,101,105,5,10,18,22,33,-274,-274,49',
'52,57,63,70,74,82,83,87,91,98,507,6,11,845,24,27,35,905,-254,505,506',
'68,-443,76,80,-80,90,97,104,849,8,12,19,23,28,36,39,734,530,-89,-255',
'763,583,584,600,-513,714,-443,-443,326,600,-89,338,-519,565,-89,47,317',
'320,-512,-513,467,329,331,333,337,313,315,318,321,323,325,-304,-229',
'332,334,335,-526,710,566,567,705,678,679,180,680,188,193,-519,200,252',
'27,35,338,-440,226,230,-304,-304,465,242,168,172,177,185,190,194,197',
'201,206,465,-519,-274,-519,-519,253,254,-512,560,-440,-440,582,292,461',
'462,482,-515,502,293,294,295,296,-512,696,461,462,463,-274,-274,180',
'338,188,193,864,200,338,583,584,866,651,226,230,436,503,338,242,168',
'172,177,185,190,194,197,201,206,465,421,642,410,488,935,469,870,641',
'936,633,314,316,319,322,324,327,328,330,202,207,615,326,877,461,462',
'338,611,444,240,317,320,602,600,593,329,331,333,337,313,315,318,321',
'323,325,-227,-229,573,600,245,171,175,179,183,187,192,196,199,204,151',
'468,469,338,763,471,600,423,-65,119,123,125,128,426,569,202,207,180',
'568,188,193,564,200,558,600,240,428,534,226,230,467,425,530,242,168',
'172,177,185,190,194,197,201,206,-256,516,245,171,175,179,183,187,192',
'196,199,204,151,665,515,119,123,125,128,129,113,292,119,123,125,128',
'129,293,294,295,296,512,131,778,292,778,900,118,122,131,293,294,295',
'296,118,122,901,314,316,319,322,324,327,328,330,511,864,151,778,116',
'731,477,127,384,732,338,116,497,906,127,651,908,910,778,202,207,913',
'778,494,326,393,-517,456,-517,240,-517,-517,317,320,455,600,448,329',
'331,333,337,-538,-538,-538,-538,-538,-538,444,443,245,171,175,179,183',
'187,192,196,199,204,151,923,-517,423,440,119,123,125,128,426,-257,-517',
'-517,-517,600,-517,434,432,864,-517,-517,456,428,420,-517,418,-517,-517',
'-517,-517,-517,-517,-517,417,414,391,379,338,-517,-517,-517,-517,-517',
'-517,-517,311,602,778,864,-517,-517,-517,-517,-517,-517,-517,-517,-517',
'-517,-517,-517,-517,-515,-517,-517,-517,-516,778,944,778,-517,778,-517',
'-517,19,-517,-517,-517,-517,-517,-517,-517,-517,-517,-517,-517,-518',
'301,-518,288,-518,-518,314,316,319,322,324,327,328,330,326,338,287,286',
'292,-517,111,-517,317,320,293,294,295,296,326,788,110,119,123,125,128',
'-518,317,320,788,778,119,123,125,128,-518,-518,-518,,-518,,,,-518,-518',
',,,-518,,-518,-518,-518,-518,-518,-518,-518,,,,,,-518,-518,-518,-518',
'-518,-518,-518,,,,,-518,-518,-518,-518,-518,-518,-518,-518,-518,-518',
'-518,-518,-518,,-518,-518,-518,,,,,-518,,-518,-518,,-518,-518,-518,-518',
'-518,-518,-518,-518,-518,-518,-518,140,326,32,,42,48,,,,317,320,423',
',119,123,125,128,426,,-518,,-518,314,316,319,322,324,327,328,330,428',
',,,,165,314,316,319,322,324,327,328,330,54,59,64,,157,,,,93,99,,,,20',
',29,37,40,147,148,60,65,,,,,,160,101,105,5,10,18,22,,,,,52,57,63,70',
'74,82,83,87,91,98,164,6,11,,24,27,35,,,,,152,,156,80,,90,97,163,166',
'8,12,19,23,28,36,39,-516,,-516,,-516,-516,,,,314,316,319,322,324,327',
'328,330,,,47,,151,423,,119,123,125,128,129,,,,,-98,684,-516,,,,,,131',
',,-516,-516,-516,122,-516,,,,-516,-516,,,,-516,,-516,-516,-516,-516',
'-516,-516,-516,,,116,,,-516,-516,-516,-516,-516,-516,-516,,,,,-516,-516',
'-516,-516,-516,-516,-516,-516,-516,-516,-516,-516,-516,,-516,-516,-516',
',,,,-516,,-516,-516,,-516,-516,-516,-516,-516,-516,-516,-516,-516,-516',
'-516,-515,,-515,,-515,-515,,,,,,,423,,119,123,125,128,129,-516,,-516',
'423,,119,123,125,128,129,,,131,,-96,792,-515,,122,,,,131,,,-515,-515',
'-515,122,-515,,,,-515,-515,,,,-515,116,-515,-515,-515,-515,-515,-515',
'-515,,,116,,,-515,-515,-515,-515,-515,-515,-515,,,,,-515,-515,-515,-515',
'-515,-515,-515,-515,-515,-515,-515,-515,-515,,-515,-515,-515,,,,,-515',
',-515,-515,,-515,-515,-515,-515,-515,-515,-515,-515,-515,-515,-515,140',
',32,,42,48,,,,113,,119,123,125,128,129,,,,-515,423,-515,119,123,125',
'128,426,,131,,,,,118,122,165,,,,428,,,,,54,59,64,,157,,,,93,99,,116',
',20,127,29,37,40,147,148,60,65,,155,,,,160,101,105,5,10,18,22,,,,,52',
'57,63,70,74,82,83,87,91,98,164,6,11,,24,27,35,,,,,152,,156,80,,90,97',
'163,166,8,12,19,23,28,36,39,,,,,,,158,,,,,180,,188,193,,200,,,47,,151',
'226,230,,,,242,168,172,177,185,190,194,197,201,206,113,,119,123,125',
'128,129,,,113,,119,123,125,128,129,,,,131,,,,,118,122,,,131,,,,,118',
'122,,,,423,,119,123,125,128,426,,116,,,127,,,,,135,116,,428,127,,928',
'469,779,630,929,314,316,319,322,324,327,328,330,,202,207,,,,326,,140',
',32,240,42,48,317,320,,,,329,331,333,337,-538,-538,-538,-538,-538,-538',
',,245,171,175,179,183,187,192,196,199,204,151,,165,423,,119,123,125',
'128,426,,54,59,64,,157,,,,93,99,,428,,20,,29,37,40,147,148,60,65,,,',
',,160,101,105,5,10,18,22,,,,,52,57,63,70,74,82,83,87,91,98,164,6,11',
',24,27,35,,,,,152,,156,80,,90,97,163,166,8,12,19,23,28,36,39,140,,32',
',42,48,314,316,319,322,324,327,328,330,,,,,,47,,151,423,,119,123,125',
'128,129,,,,,,,165,,,,,,131,,,54,59,64,122,157,,,,93,99,,,,20,,29,37',
'40,147,148,60,65,,,116,,,160,101,105,5,10,18,22,,,,,52,57,63,70,74,82',
'83,87,91,98,164,6,11,,24,27,35,,,,,152,,156,80,,90,97,163,166,8,12,19',
'23,28,36,39,140,,32,,42,48,,,,665,,119,123,125,128,129,,,,47,423,151',
'119,123,125,128,426,,131,,,,,118,122,165,,,,428,,,,,54,59,64,,157,,',
',93,99,,116,,20,127,29,37,40,147,148,60,65,,,,,,160,101,105,5,10,18',
'22,,,,,52,57,63,70,74,82,83,87,91,98,164,6,11,,24,27,35,,,,,152,,156',
'80,,90,97,163,166,8,12,19,23,28,36,39,,,,,,,180,,188,193,,200,,,,,,226',
'230,47,,151,242,168,172,177,185,190,194,197,201,206,,,,,326,,,,,,,,317',
'320,,,,329,331,333,337,-538,-538,-538,-538,-538,-538,,,180,,188,193',
',200,,,,,,226,230,,,,242,168,172,177,185,190,194,197,201,206,,,,,,741',
'469,,,743,,423,,119,123,125,128,426,,202,207,113,,119,123,125,128,129',
',240,428,,,,,425,,,,,131,,,,,118,122,,,245,171,175,179,183,187,192,196',
'199,204,151,476,477,,,479,,,116,,,127,,,,202,207,314,316,319,322,324',
'327,328,330,240,314,316,319,322,324,327,328,330,,,,,665,,119,123,125',
'128,129,245,171,175,179,183,187,192,196,199,204,151,180,131,188,193',
',200,118,122,,,,226,230,,,,242,168,172,177,185,190,194,197,201,206,',
',116,,,127,,,,243,169,173,,,,,,,208,210,213,217,220,224,229,232,233',
'238,244,170,174,178,182,186,191,195,198,203,211,214,219,222,,,,234,239',
'241,394,396,397,398,189,,,,399,401,402,218,404,227,83,87,406,98,,,,',
',,,,202,207,180,,188,193,,200,,,240,,,226,230,,,,242,168,172,177,185',
'190,194,197,201,206,,,245,171,175,179,183,187,192,196,199,204,400,113',
',119,123,125,128,129,113,,119,123,125,128,129,,,,,,131,,,,,118,122,131',
',,,,118,122,665,,119,123,125,128,129,,,,,,,116,697,469,127,,698,131',
'116,630,,127,118,122,,,202,207,,,,,,140,,32,240,42,48,,,,,,116,,,127',
',,,,,,,,245,171,175,179,183,187,192,196,199,204,151,,165,,,,,,,,,54',
'59,64,,157,,,,93,99,,,,20,,29,37,40,147,148,60,65,,,,,,160,101,105,5',
'10,18,22,,,,,52,57,63,70,74,82,83,87,91,98,164,6,11,,24,27,35,,,,,152',
',156,80,,90,97,163,166,8,12,19,23,28,36,39,,,,,,,180,,188,193,,200,',
',,,,226,230,47,,151,242,168,172,177,185,190,194,197,201,206,113,,119',
'123,125,128,129,423,,119,123,125,128,129,,,,,,131,,,,,118,122,131,,',
',,423,122,119,123,125,128,129,,,,,,,,,116,,,127,131,,,116,,,122,,,,578',
'477,,,579,,,,,,,,,,202,207,,116,,,,140,,32,240,42,48,,,,,,,,,,,,,,,',
',,245,171,175,179,183,187,192,196,199,204,151,,165,,,,,,,,,54,59,64',
',157,,,,93,99,,,,20,,29,37,40,147,148,60,65,,,,,,160,101,105,5,10,18',
'22,,,,,52,57,63,70,74,82,83,87,91,98,164,6,11,,24,27,35,,,,,152,,156',
'80,,90,97,163,166,8,12,19,23,28,36,39,,,,,,,180,,188,193,,200,,,,,,226',
'230,47,,384,242,168,172,177,185,190,194,197,201,206,,,,,,,,,,,,423,',
'119,123,125,128,129,,423,,119,123,125,128,129,,,,180,131,188,193,,200',
',122,,131,,226,230,,,122,242,168,172,177,185,190,194,197,201,206,,,116',
',,701,477,,,702,116,,,,,,,,,202,207,423,,119,123,125,128,129,,240,,',
',,,,,,,,131,,,,,,122,,,245,171,175,179,183,187,192,196,199,204,151,653',
'469,,,654,,,116,,,,,,,202,207,180,,188,193,,200,,,240,,,226,230,,,,242',
'168,172,177,185,190,194,197,201,206,,,245,171,175,179,183,187,192,196',
'199,204,151,,,,,,,,,,,,,,,,,180,,188,193,,200,,,,,,226,230,,,,242,168',
'172,177,185,190,194,197,201,206,,,,,,656,477,,,657,,,,,,,,,,202,207',
',,,,,,,,240,,,,,,,,,,,,,,,,,,,,245,171,175,179,183,187,192,196,199,204',
'151,656,477,,,657,,,,,,,,,,202,207,,,,,,-513,,-513,240,-513,-513,,,',
',,,,,,,,,,,,,,245,171,175,179,183,187,192,196,199,204,151,,-513,,,,',
',,,,-513,-513,-513,,-513,,,,-513,-513,,,,-513,,-513,-513,-513,-513,-513',
'-513,-513,,,,,,-513,-513,-513,-513,-513,-513,-513,,,,,-513,-513,-513',
'-513,-513,-513,-513,-513,-513,-513,-513,-513,-513,,-513,-513,-513,,',
',,-513,,-513,-513,,-513,-513,-513,-513,-513,-513,-513,-513,-513,-513',
'-513,,,,,,,-513,,,,,180,,188,193,,200,,,-513,,-513,226,230,,,,242,168',
'172,177,185,190,194,197,201,206,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,180,,188',
'193,,200,,,,,,226,230,,,,242,168,172,177,185,190,194,197,201,206,,,',
',,938,477,,,939,,,,,,,,326,,202,207,,,,,317,320,,,240,329,331,333,337',
'313,315,318,321,323,325,,,332,334,335,,,,,245,171,175,179,183,187,192',
'196,199,204,151,653,469,,,654,,,,,,,,,,202,207,180,,188,193,,200,,,240',
',,226,230,,,,242,168,172,177,185,190,194,197,201,206,,,245,171,175,179',
'183,187,192,196,199,204,151,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,314,316,319',
'322,324,327,328,330,,,,,,,,,,,728,469,,,729,,,,,,,,,,202,207,,,,,326',
'-512,,-512,240,-512,-512,,317,320,,,,329,331,333,337,-538,-538,-538',
'-538,-538,-538,,245,171,175,179,183,187,192,196,199,204,151,,-512,,',
',,,,,,-512,-512,-512,,-512,,,,-512,-512,,,,-512,,-512,-512,-512,-512',
'-512,-512,-512,,,,,,-512,-512,-512,-512,-512,-512,-512,,,,,-512,-512',
'-512,-512,-512,-512,-512,-512,-512,-512,-512,-512,-512,,-512,-512,-512',
',,,,-512,,-512,-512,,-512,-512,-512,-512,-512,-512,-512,-512,-512,-512',
'-512,140,,32,,42,48,-512,314,316,319,322,324,327,328,330,,,,,-512,,-512',
',,,,,,,,,,,,,165,,,,,,,,,54,59,64,,157,,,,93,99,,,,20,,29,37,40,147',
'148,60,65,,,,,,160,274,276,5,10,18,22,,,,,52,57,63,70,74,82,83,87,91',
'98,,6,11,,24,27,35,,,,,152,,156,80,,90,97,,,8,12,19,23,28,36,39,353',
'21,,32,,42,48,,,,,,,,,,,,,47,,560,,,,,,,,,,,,,,,108,,,,,,,,,54,59,64',
'72,157,,,,93,99,,,,20,,29,37,40,46,55,60,65,,,,,,94,101,105,5,10,18',
'22,33,,,49,52,57,63,70,74,82,83,87,91,98,,6,11,,24,27,35,,,,,68,,76',
'80,,90,97,104,,8,12,19,23,28,36,39,,,,,180,,188,193,,200,,,,,,226,230',
',,47,242,168,172,177,185,190,194,197,201,206,,,,,,,,,,243,169,173,,',
',,,,208,210,213,217,220,224,229,232,233,238,244,170,174,178,182,186',
'191,195,198,203,211,214,219,222,,,,234,239,241,167,176,181,184,189,',
',,205,209,212,218,223,227,,,235,,,,,,,,,,202,207,,,,,353,21,,32,240',
'42,48,12,,,,,,,,,,,,,,,,,245,171,175,179,183,187,192,196,199,204,,,108',
',,,,,,,,54,59,64,72,157,,,,93,99,,,,20,,29,37,40,46,55,60,65,,,,,,94',
'101,105,5,10,18,22,33,,,49,52,57,63,70,74,82,83,87,91,98,,6,11,,24,27',
'35,,,,,68,,76,80,,90,97,104,,8,12,19,23,28,36,39,353,21,,32,,42,48,',
',,,,,326,,,,,,47,,317,320,,,,329,331,333,337,313,315,318,321,323,325',
'108,,332,334,335,,,,,54,59,64,72,157,,,,93,99,,,,20,,29,37,40,46,55',
'60,65,,,,,,94,101,105,5,10,18,22,33,,,49,52,57,63,70,74,82,83,87,91',
'98,,6,11,,24,27,35,,,,,68,,76,80,,90,97,104,,8,12,19,23,28,36,39,353',
'21,,32,,42,48,,,,,,,,,,,,,47,314,316,319,322,324,327,328,330,,,,,,,',
',108,,,,,,,,,54,59,64,72,157,,,,93,99,,,,20,,29,37,40,46,55,60,65,,',
',,,94,101,105,5,10,18,22,33,,,49,52,57,63,70,74,82,83,87,91,98,,6,11',
',24,27,35,,,,,68,,76,80,,90,97,104,,8,12,19,23,28,36,39,353,21,,32,',
'42,48,,,,,,,326,,,,,,47,,317,320,,,,329,331,333,337,313,315,318,321',
'323,325,108,,332,334,335,,,,,54,59,64,72,157,,,,93,99,,,,20,,29,37,40',
'46,55,60,65,,,,,,94,101,105,5,10,18,22,33,,,49,52,57,63,70,74,82,83',
'87,91,98,,6,11,,24,27,35,,,,,68,,76,80,,90,97,104,,8,12,19,23,28,36',
'39,353,21,,32,,42,48,,,,,,,,,,,,,47,314,316,319,322,324,327,328,330',
',,,,,,,,108,,,,,,,,,54,59,64,72,157,,,,93,99,,,,20,,29,37,40,46,55,60',
'65,,,,,,94,101,105,5,10,18,22,33,,,49,52,57,63,70,74,82,83,87,91,98',
',6,11,,24,27,35,,,,,68,,76,80,,90,97,104,,8,12,19,23,28,36,39,,,,,180',
',188,193,,200,,,,,,226,230,,,47,242,168,172,177,185,190,194,197,201',
'206,,,,,,,,,,243,169,173,,,,,,,208,210,213,217,220,224,229,232,233,238',
'244,170,174,178,182,186,191,195,198,203,211,214,219,222,,,,234,239,241',
'167,176,181,184,189,,,,205,209,212,218,223,227,,,235,,,,,,,,,,202,207',
',,,,353,21,,32,240,42,48,12,,,,,,,,,,,,,,,,,245,171,175,179,183,187',
'192,196,199,204,,,108,,,,,,,,,54,59,64,72,157,,,,93,99,,,,20,,29,37',
'40,46,55,60,65,,,,,,94,101,105,5,10,18,22,33,,,49,52,57,63,70,74,82',
'83,87,91,98,,6,11,,24,27,35,,,,,68,,76,80,,90,97,104,,8,12,19,23,28',
'36,39,353,21,,32,,42,48,,,,,,,326,,,,,,47,,317,320,,,,329,331,333,337',
'313,315,318,321,323,325,108,,332,334,335,,,,,54,59,64,72,157,,,,93,99',
',,,20,,29,37,40,46,55,60,65,,,,,,94,101,105,5,10,18,22,33,,,49,52,57',
'63,70,74,82,83,87,91,98,,6,11,,24,27,35,,,,,68,,76,80,,90,97,104,,8',
'12,19,23,28,36,39,353,21,,32,,42,48,,,,,,,,,,,,,47,314,316,319,322,324',
'327,328,330,,,,,,,,,108,,,,,,,,,54,59,64,72,157,,,,93,99,,,,20,,29,37',
'40,46,55,60,65,,,,,,94,101,105,5,10,18,22,33,,,49,52,57,63,70,74,82',
'83,87,91,98,,6,11,,24,27,35,,,,,68,,76,80,,90,97,104,,8,12,19,23,28',
'36,39,353,21,,32,,42,48,,,,,,,326,,,,,,47,,317,320,,,,329,331,333,337',
'313,315,318,321,323,325,108,,332,334,335,,,,,54,59,64,72,157,,,,93,99',
',,,20,,29,37,40,46,55,60,65,,,,,,94,101,105,5,10,18,22,33,,,49,52,57',
'63,70,74,82,83,87,91,98,,6,11,,24,27,35,,,,,68,,76,80,,90,97,104,,8',
'12,19,23,28,36,39,353,21,,32,,42,48,,,,,,,,,,,,,47,314,316,319,322,324',
'327,328,330,,,,,,,,,108,,,,,,,,,54,59,64,72,157,,,,93,99,,,,20,,29,37',
'40,46,55,60,65,,,,,,94,101,105,5,10,18,22,33,,,49,52,57,63,70,74,82',
'83,87,91,98,,6,11,,24,27,35,,,,,68,,76,80,,90,97,104,,8,12,19,23,28',
'36,39,353,21,,32,,42,48,,,,,,,326,,,,,,47,,317,320,,,,329,331,333,337',
'313,315,318,321,323,325,108,,332,334,335,,,,,54,59,64,72,157,,,,93,99',
',,,20,,29,37,40,46,55,60,65,,,,,,94,101,105,5,10,18,22,33,,,49,52,57',
'63,70,74,82,83,87,91,98,,6,11,,24,27,35,,,,,68,,76,80,,90,97,104,,8',
'12,19,23,28,36,39,353,21,,32,,42,48,,,,,,,,,,,,,47,314,316,319,322,324',
'327,328,330,,,,,,,,,108,,,,,,,,,54,59,64,72,157,,,,93,99,,,,20,,29,37',
'40,46,55,60,65,,,,,,94,101,105,5,10,18,22,33,,,49,52,57,63,70,74,82',
'83,87,91,98,,6,11,,24,27,35,,,,,68,,76,80,,90,97,104,,8,12,19,23,28',
'36,39,,,,,180,,188,193,,200,,,,,,226,230,,,47,242,168,172,177,185,190',
'194,197,201,206,,,,,,,,,,243,169,173,,,,,,,208,210,213,217,220,224,229',
'232,233,238,244,170,174,178,182,186,191,195,198,203,211,214,219,222',
',,,234,239,241,167,176,181,184,189,,,,205,209,212,218,223,227,,,235',
',,,,,,,,,202,207,,,,,353,21,,32,240,42,48,,,,,,,,,,,,,,,,,,245,171,175',
'179,183,187,192,196,199,204,,,108,,,,,,,,,54,59,64,72,157,,,,93,99,',
',,20,,29,37,40,46,55,60,65,,,,,,94,101,105,5,10,18,22,33,,,49,52,57',
'63,70,74,82,83,87,91,98,,6,11,,24,27,35,,,,,68,,76,80,,90,97,104,,8',
'12,19,23,28,36,39,353,21,,32,,42,48,,,,,,,326,,,,,,47,,317,320,,,,329',
'331,333,337,313,315,318,321,323,325,108,,332,334,335,,,,,54,59,64,72',
'157,,,,93,99,,,,20,,29,37,40,46,55,60,65,,,,,,94,101,105,5,10,18,22',
'33,,,49,52,57,63,70,74,82,83,87,91,98,,6,11,,24,27,35,,,,,68,,359,80',
',90,97,104,,8,12,19,23,28,36,39,353,21,,32,,42,48,,,,,,,,,,,,,47,314',
'316,319,322,324,327,328,330,,,,,,,,,108,,,,,,,,,54,59,64,72,157,,,,93',
'99,,,,20,,29,37,40,46,55,60,65,,,,,,94,101,105,5,10,18,22,33,,,49,52',
'57,63,70,74,82,83,87,91,98,,6,11,,24,27,35,,,,,68,,359,80,,90,97,104',
',8,12,19,23,28,36,39,353,21,,32,,42,48,,,,,,,326,,,,,,47,,317,320,,',
',329,331,333,337,313,315,318,321,323,325,108,,332,334,335,,,,,54,59',
'64,72,157,,,,93,99,,,,20,,29,37,40,46,55,60,65,,,,,,94,101,105,5,10',
'18,22,33,,,49,52,57,63,70,74,82,83,87,91,98,,6,11,,24,27,35,,,,,68,',
'359,80,,90,97,104,,8,12,19,23,28,36,39,353,21,,32,,42,48,,,,,,,,,,,',
',47,314,316,319,322,324,327,328,330,,,,,,,,,108,,,,,,,,,54,59,64,72',
'157,,,,93,99,,,,20,,29,37,40,46,55,60,65,,,,,,94,101,105,5,10,18,22',
'33,,,49,52,57,63,70,74,82,83,87,91,98,,6,11,,24,27,35,,,,,68,,76,80',
',90,97,104,,8,12,19,23,28,36,39,,,,,180,,188,193,,200,,,,,,226,230,',
',47,242,168,172,177,185,190,194,197,201,206,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,180,,188,193,,200,,,,,,226,230,,,,242,168,172,177,185,190,194,197',
'201,206,,,,,,,578,477,,,579,,,,,,,,,,202,207,,,,,,,,,240,,,,,,,,,,,',
',,,,,,,,245,171,175,179,183,187,192,196,199,204,578,477,,,579,,,,,,',
',,,202,207,,,,,353,21,,32,240,42,48,,,,,,,,,,,,,,,,,,245,171,175,179',
'183,187,192,196,199,204,,,108,,,,,,,,,54,59,64,72,157,,,,93,99,,,,20',
',29,37,40,46,55,60,65,,,,,,94,101,105,5,10,18,22,33,,,49,52,57,63,70',
'74,82,83,87,91,98,,6,11,,24,27,35,,,,,68,,76,80,,90,97,104,,8,12,19',
'23,28,36,39,,,,,180,,188,193,,200,,,,,,226,230,,,47,242,168,172,177',
'185,190,194,197,201,206,,,,,,,,,,243,169,173,,,,,,,208,210,213,217,220',
'224,229,232,233,238,244,170,174,178,182,186,191,195,198,203,211,214',
'219,222,,,,234,239,241,167,176,181,184,189,,,,205,209,212,218,223,227',
'282,,235,,,,,,,,,,202,207,,,,,353,21,,32,240,42,48,12,,,,,,,,,,,,,,',
',,245,171,175,179,183,187,192,196,199,204,,,108,,,,,,,,,54,59,64,72',
'157,,,,93,99,,,,20,,29,37,40,46,55,60,65,,,,,,94,101,105,5,10,18,22',
'33,,,49,52,57,63,70,74,82,83,87,91,98,,6,11,,24,27,35,,,,,68,,76,80',
',90,97,104,,8,12,19,23,28,36,39,353,21,,32,,42,48,,,,,,,326,,,,,,47',
',317,320,,,,329,331,333,337,313,315,318,321,323,325,108,,332,334,335',
',,,,54,59,64,72,157,,,,93,99,,,,20,,29,37,40,46,55,60,65,,,,,,94,101',
'105,5,10,18,22,33,,,49,52,57,63,70,74,82,83,87,91,98,,6,11,,24,27,35',
',,,,68,,76,80,,90,97,104,,8,12,19,23,28,36,39,353,21,,32,,42,48,,,,',
',,,,,,,,47,314,316,319,322,324,327,328,330,,,,,,,,,108,,,,,,,,,54,59',
'64,72,157,,,,93,99,,,,20,,29,37,40,46,55,60,65,,,,,,94,101,105,5,10',
'18,22,33,,,49,52,57,63,70,74,82,83,87,91,98,,6,11,,24,27,35,,,,,68,',
'76,80,,90,97,104,,8,12,19,23,28,36,39,353,21,,32,,42,48,,,,,,,326,,',
',,,47,,317,320,,,,329,331,333,337,313,315,318,321,323,325,108,,332,334',
'335,,,,,54,59,64,72,157,,,,93,99,,,,20,,29,37,40,46,55,60,65,,,,,,94',
'101,105,5,10,18,22,33,,,49,52,57,63,70,74,82,83,87,91,98,,6,11,,24,27',
'35,,,,,68,,76,80,,90,97,104,,8,12,19,23,28,36,39,353,21,,32,,42,48,',
',,,,,,,,,,,47,314,316,319,322,324,327,328,330,,,,,,,,,108,,,,,,,,,54',
'59,64,72,157,,,,93,99,,,,20,,29,37,40,46,55,60,65,,,,,,94,101,105,5',
'10,18,22,33,,,49,52,57,63,70,74,82,83,87,91,98,,6,11,,24,27,35,,,,,68',
',76,80,,90,97,104,,8,12,19,23,28,36,39,,,,,180,,188,193,,200,,,,,,226',
'230,,,47,242,168,172,177,185,190,194,197,201,206,,,,,,,,,,243,169,173',
',,,,,,208,210,213,217,220,224,229,232,233,238,244,170,174,178,182,186',
'191,195,198,203,211,214,219,222,,,,234,239,241,167,176,181,184,189,',
',,205,209,212,218,223,227,228,231,235,236,,,,,,,,,202,207,,,,,353,21',
',32,240,42,48,,,,,,,,,,,,,,,,,,245,171,175,179,183,187,192,196,199,204',
',,108,,,,,,,,,54,59,64,72,157,,,,93,99,,,,20,,29,37,40,46,55,60,65,',
',,,,94,101,105,5,10,18,22,33,,,49,52,57,63,70,74,82,83,87,91,98,,6,11',
',24,27,35,,,,,68,,76,80,,90,97,104,,8,12,19,23,28,36,39,17,21,,32,,42',
'48,,,,,,,326,,,,,,47,,317,320,,,,329,331,333,337,313,315,318,321,323',
'325,108,,332,334,335,,,,,54,59,64,72,78,,,,93,99,,,,20,,29,37,40,46',
'55,60,65,,,,,,94,101,105,5,10,18,22,33,,,49,52,57,63,70,74,82,83,87',
'91,98,,6,11,,24,27,35,,,,,68,,76,80,,90,97,104,,8,12,19,23,28,36,39',
'353,21,,32,,42,48,,,,,,,,,,,,,47,314,316,319,322,324,327,328,330,,,',
',,,,,108,,,,,,,,,54,59,64,72,157,,,,93,99,,,,20,,29,37,40,46,55,60,65',
',,,,,94,101,105,5,10,18,22,33,,,49,52,57,63,70,74,82,83,87,91,98,,6',
'11,,24,27,35,,,,,68,,76,80,,90,97,104,,8,12,19,23,28,36,39,353,21,,32',
',42,48,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,,108,,,,,,,,,54,59,64,72,157,,',
',93,99,,,,20,,29,37,40,46,55,60,65,,,,,,94,101,105,5,10,18,22,33,,,49',
'52,57,63,70,74,82,83,87,91,98,,6,11,,24,27,35,,,,,68,,76,80,,90,97,104',
',8,12,19,23,28,36,39,,,,,180,,188,193,,200,,,,,,226,230,,,47,242,168',
'172,177,185,190,194,197,201,206,,,,,,,,,,243,169,173,,,,,,,208,210,213',
'217,220,224,229,232,233,238,244,170,174,178,182,186,191,195,198,203',
'211,214,219,222,,,,234,239,241,167,176,181,184,189,,,,205,209,212,218',
'223,227,,,235,,,,,,,,,,202,207,,,,,353,21,,32,240,42,48,12,,,,,,,,,',
',,,,,,,245,171,175,179,183,187,192,196,199,204,,,108,,,,,,,,,54,59,64',
'72,157,,,,93,99,,,,20,,29,37,40,46,55,60,65,,,,,,94,101,105,5,10,18',
'22,33,,,49,52,57,63,70,74,82,83,87,91,98,,6,11,,24,27,35,,,,,68,,76',
'80,,90,97,104,,8,12,19,23,28,36,39,353,21,,32,,42,48,,,,,,,326,,,,,',
'47,,317,320,,,,329,331,333,337,313,315,318,321,323,325,108,,332,334',
'335,,,,,54,59,64,72,157,,,,93,99,,,,20,,29,37,40,46,55,60,65,,,,,,94',
'101,105,5,10,18,22,33,,,49,52,57,63,70,74,82,83,87,91,98,,6,11,,24,27',
'35,,,,,68,,76,80,,90,97,104,,8,12,19,23,28,36,39,140,,32,,42,48,,,,',
',,,,,,,,,47,314,316,319,322,324,327,328,330,,,,,,,,165,,,,,,,,,54,59',
'64,,157,,,,93,99,,,,20,,29,37,40,147,148,60,65,,,,,,160,274,276,5,10',
'18,22,,,,,52,57,63,70,74,82,83,87,91,98,,6,11,,24,27,35,,,,,152,,156',
'80,,90,97,,,8,12,19,23,28,36,39,140,,32,,42,48,,,,,,,326,,,,,,,47,317',
'320,,,,329,331,333,337,313,315,318,321,323,325,165,,332,334,335,,,,',
'54,59,64,,157,,,,93,99,,,,20,,29,37,40,147,148,60,65,,,,,,160,101,105',
'5,10,18,22,,,,,52,57,63,70,74,82,83,87,91,98,164,6,11,,24,27,35,,,,',
'152,,156,80,,90,97,163,166,8,12,19,23,28,36,39,21,,32,,42,48,,,,,,,',
',,,,,,47,314,316,319,322,324,327,328,330,,,,,,,,108,,,,,,,,,54,59,64',
',157,,,,93,99,,,,20,,29,37,40,46,55,60,65,,,,,,94,101,105,5,10,18,22',
',,,,52,57,63,70,74,82,83,87,91,98,,6,11,,24,27,35,,,,,152,,156,80,,90',
'97,,,8,12,19,23,28,36,39,140,,32,,42,48,,,,,,,326,,,,,,,47,317,320,',
',,329,331,333,337,313,315,318,321,323,325,165,,332,334,335,,,,,54,59',
'64,,157,,,,93,99,,,,20,,29,37,40,147,148,60,65,,,,,,160,274,276,5,10',
'18,22,,,,,52,57,63,70,74,82,83,87,91,98,,6,11,,24,27,35,,,,,152,,156',
'80,,90,97,,,8,12,19,23,28,36,39,140,,32,,42,48,,,,,,,,,,,,,,47,314,316',
'319,322,324,327,328,330,,,,,,,,165,,,,,,,,,54,59,64,,157,,,,93,99,,',
',20,,29,37,40,147,148,60,65,,,,,,160,274,276,5,10,18,22,,,,,52,57,63',
'70,74,82,83,87,91,98,,6,11,,24,27,35,,,,,152,,156,80,,90,97,,,8,12,19',
'23,28,36,39,140,,32,,42,48,,,,,,,326,,,,,,,47,317,320,,,,329,331,333',
'337,313,315,318,321,323,325,165,,332,334,335,,,,,54,59,64,,157,,,,93',
'99,,,,20,,29,37,40,147,148,60,65,,,,,,160,274,276,5,10,18,22,,,,,52',
'57,63,70,74,82,83,87,91,98,,6,11,,24,27,35,,,,,152,,156,80,,90,97,,',
'8,12,19,23,28,36,39,140,,32,,42,48,,,,,,,,,,,,,,47,314,316,319,322,324',
'327,328,330,,,,,,,,165,,,,,,,,,54,59,64,,157,,,,93,99,,,,20,,29,37,40',
'147,148,60,65,,,,,,160,274,276,5,10,18,22,,,,,52,57,63,70,74,82,83,87',
'91,98,,6,11,,24,27,35,,,,,152,,156,80,,90,97,,,8,12,19,23,28,36,39,140',
',32,,42,48,,,,,,,326,,,,,,,47,317,320,,,,329,331,333,337,-538,-538,-538',
'-538,-538,-538,165,,,,,,,,,54,59,64,,157,,,,93,99,,,,20,,29,37,40,147',
'148,60,65,,,,,,160,274,276,5,10,18,22,,,,,52,57,63,70,74,82,83,87,91',
'98,,6,11,,24,27,35,,,,,152,,156,80,,90,97,,,8,12,19,23,28,36,39,140',
',32,,42,48,,,,,,,,,,,,,,47,314,316,319,322,324,327,328,330,,,,,,,,165',
',,,,,,,,54,59,64,,157,,,,93,99,,,,20,,29,37,40,147,148,60,65,,,,,,160',
'101,105,5,10,18,22,,,,,52,57,63,70,74,82,83,87,91,98,164,6,11,,24,27',
'35,,,,,152,,156,80,,90,97,163,166,8,12,19,23,28,36,39,140,,32,,42,48',
',,,,,,326,,,,,,,47,317,320,,,,329,331,333,337,313,315,318,321,323,325',
'165,,332,334,335,,,,,54,59,64,,157,,,,93,99,,,,20,,29,37,40,147,148',
'60,65,,,,,,160,274,276,5,10,18,22,,,,,52,57,63,70,74,82,83,87,91,98',
',6,11,,24,27,35,,,,,152,,156,80,,90,97,,,8,12,19,23,28,36,39,140,,32',
',42,48,,,,,,,,,,,,,,47,314,316,319,322,324,327,328,330,,,,,,,,165,,',
',,,,,,54,59,64,,157,,,,93,99,,,,20,,29,37,40,147,148,60,65,,,,,,160',
'274,276,5,10,18,22,,,,,52,57,63,70,74,82,83,87,91,98,,6,11,,24,27,35',
',,,,152,,156,80,,90,97,,,8,12,19,23,28,36,39,140,,32,,42,48,,,,,,,326',
',,,,,,47,317,320,,,,329,331,333,337,313,315,318,321,323,325,165,,332',
'334,335,,,,,54,59,64,,157,,,,93,99,,,,20,,29,37,40,147,148,60,65,,,',
',,160,274,276,5,10,18,22,,,,,52,57,63,70,74,82,83,87,91,98,,6,11,,24',
'27,35,,,,,152,,156,80,,90,97,,,8,12,19,23,28,36,39,140,,32,,42,48,,',
',,,,,,,,,,,47,314,316,319,322,324,327,328,330,,,,,,,,165,,,,,,,,,54',
'59,64,,157,,,,93,99,,,,20,,29,37,40,147,148,60,65,,,,,,160,274,276,5',
'10,18,22,,,,,52,57,63,70,74,82,83,87,91,98,,6,11,,24,27,35,,,,,152,',
'156,80,,90,97,,,8,12,19,23,28,36,39,140,,32,,42,48,,,,,,,326,,,,,,,47',
'317,320,,,,329,331,333,337,313,315,318,321,323,325,165,,332,334,335',
',758,,,54,59,64,,157,,,,93,99,,,,20,,29,37,40,147,148,60,65,,,,,,160',
'274,276,5,10,18,22,,,,,52,57,63,70,74,82,83,87,91,98,,6,11,,24,27,35',
',,,,152,,156,80,,90,97,,,8,12,19,23,28,36,39,21,,32,,42,48,,,,,,,,,',
',,,,47,314,316,319,322,324,327,328,330,,,,,,,,108,,,,,,,,,54,59,64,',
'157,,,,93,99,,,,20,,29,37,40,46,55,60,65,,,,,,94,101,105,5,10,18,22',
',,,,52,57,63,70,74,82,83,87,91,98,,6,11,,24,27,35,,,,,152,,156,80,,90',
'97,,,8,12,19,23,28,36,39,140,,32,,42,48,,,,,,,326,,,,,,,47,317,320,',
',,329,331,333,337,313,315,318,321,323,325,165,,332,334,335,,,,,54,59',
'64,,157,,,,93,99,,,,20,,29,37,40,147,148,60,65,,,,,,160,274,276,5,10',
'18,22,,,,,52,57,63,70,74,82,83,87,91,98,,6,11,,24,27,35,,,,,152,,156',
'80,,90,97,852,,8,12,19,23,28,36,39,140,,32,,42,48,,,,,,,,,,,,,,47,314',
'316,319,322,324,327,328,330,,,,,,,,165,,,,,,,,,54,59,64,,157,,,,93,99',
',,,20,,29,37,40,147,148,60,65,,,,,,160,101,105,5,10,18,22,,,,,52,57',
'63,70,74,82,83,87,91,98,164,6,11,,24,27,35,,,,,152,,156,80,,90,97,163',
'166,8,12,19,23,28,36,39,140,,32,,42,48,,,,,,,326,,,,,,,47,317,320,,',
',329,331,333,337,313,315,318,321,323,325,165,,-538,-538,,,,,,54,59,64',
',157,,,,93,99,,,,20,,29,37,40,46,55,60,65,,,,,,94,101,105,5,10,18,22',
',,,,52,57,63,70,74,82,83,87,91,98,,6,11,,24,27,35,,,,,152,,156,80,,90',
'97,,,8,12,19,23,28,36,39,140,,32,,42,48,,,,,,,,,,,,,,47,314,316,319',
'322,324,327,328,330,,,,,,,,165,,,,,,,,,54,59,64,,157,,,,93,99,,,,20',
',29,37,40,46,55,60,65,,,,,,94,101,105,5,10,18,22,,,,,52,57,63,70,74',
'82,83,87,91,98,,6,11,,24,27,35,,,,,152,,156,80,,90,97,,,8,12,19,23,28',
'36,39,140,,32,,42,48,,,,,,,326,,,,,,,47,317,320,,,,329,331,333,337,313',
'315,318,321,323,325,165,,-538,-538,,,,,,54,59,64,,157,,,,93,99,,,,20',
',29,37,40,147,148,60,65,,,,,,160,101,105,5,10,18,22,,,,,52,57,63,70',
'74,82,83,87,91,98,164,6,11,,24,27,35,,,,,152,,156,80,,90,97,163,166',
'8,12,19,23,28,36,39,21,,32,,42,48,,,,,,,,,,,,,,47,314,316,319,322,324',
'327,328,330,,,,,,,,108,,,,,,,,,54,59,64,,157,,,,93,99,,,,20,,29,37,40',
'46,55,60,65,,,,,,94,101,105,5,10,18,22,,,,,52,57,63,70,74,82,83,87,91',
'98,,6,11,,24,27,35,,,,,152,,156,80,,90,97,,,8,12,19,23,28,36,39,140',
',32,,42,48,,,,,,,326,,,,,,,47,317,320,,,,329,331,333,337,313,315,318',
'321,323,325,165,,332,334,335,,631,,,54,59,64,,157,,,,93,99,,,,20,,29',
'37,40,147,148,60,65,,,,,,160,274,276,5,10,18,22,,,,,52,57,63,70,74,82',
'83,87,91,98,164,6,11,,24,27,35,,,,,152,,156,80,,90,97,661,166,8,12,19',
'23,28,36,39,140,,32,,42,48,,,,,,,,,,,,,,47,314,316,319,322,324,327,328',
'330,,,,,,,,165,,,,,,,,,54,59,64,,157,,,,93,99,,,,20,,29,37,40,147,148',
'60,65,,,,,,160,274,276,5,10,18,22,,,,,52,57,63,70,74,82,83,87,91,98',
',6,11,,24,27,35,,,,,152,,156,80,,90,97,,,8,12,19,23,28,36,39,140,,32',
',42,48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,165,,,,,,,,,54,59,64,,157,,,,93',
'99,,,,20,,29,37,40,147,148,60,65,,,,,,160,274,276,5,10,18,22,,,,,52',
'57,63,70,74,82,83,87,91,98,164,6,11,,24,27,35,,,,,152,,156,80,,90,97',
',166,8,12,19,23,28,36,39,140,,32,,42,48,,,,,,,,,,,,,,47,,,,,,,,,,,,',
',,,165,,,,,,,,,54,59,64,,157,,,,93,99,,,,20,,29,37,40,46,55,60,65,,',
',,,94,101,105,5,10,18,22,,,,,52,57,63,70,74,82,83,87,91,98,,6,11,,24',
'27,35,,,,,152,,156,80,,90,97,,,8,12,19,23,28,36,39,140,,32,,42,48,,',
',,,,,,,,,,,47,,,,,,,,,,,,,,,,165,,,,,,,,,54,59,64,,157,,,,93,99,,,,20',
',29,37,40,147,148,60,65,,,,,,160,274,276,5,10,18,22,,,,,52,57,63,70',
'74,82,83,87,91,98,,6,11,,24,27,35,,,,,152,,156,80,,90,97,,,8,12,19,23',
'28,36,39,140,,32,,42,48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,165,,,,,,,,,54',
'59,64,,157,,,,93,99,,,,20,,29,37,40,46,55,60,65,,,,,,94,101,105,5,10',
'18,22,,,,,52,57,63,70,74,82,83,87,91,98,,6,11,,24,27,35,,,,,152,,156',
'80,,90,97,,,8,12,19,23,28,36,39,140,,32,,42,48,,,,,,,,,,,,,,47,,,,,',
',,,,,,,,,,165,,,,,,,,,54,59,64,,157,,,,93,99,,,,20,,29,37,40,46,55,60',
'65,,,,,,94,101,105,5,10,18,22,,,,,52,57,63,70,74,82,83,87,91,98,,6,11',
',24,27,35,,,,,152,,156,80,,90,97,,,8,12,19,23,28,36,39,21,,32,,42,48',
',,,,,,,,,,,,,47,,,,,,,,,,,,,,,,108,,,,,,,,,54,59,64,,157,,,,93,99,,',
',20,,29,37,40,46,55,60,65,,,,,,94,101,105,5,10,18,22,,,,,52,57,63,70',
'74,82,83,87,91,98,,6,11,,24,27,35,,,,,152,,156,80,,90,97,,,8,12,19,23',
'28,36,39,140,,32,,42,48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,165,,,,,,,,,54',
'59,64,,157,,,,93,99,,,,20,,29,37,40,46,55,60,65,,,,,,94,101,105,5,10',
'18,22,,,,,52,57,63,70,74,82,83,87,91,98,,6,11,,24,27,35,,,,,152,,156',
'80,,90,97,609,,8,12,19,23,28,36,39,140,,32,,42,48,,,,,,,,,,,,,,47,,',
',,,,,,,,,,,,,165,,,,,,,,,54,59,64,,157,,,,93,99,,,,20,,29,37,40,147',
'148,60,65,,,,,,160,274,276,5,10,18,22,,,,,52,57,63,70,74,82,83,87,91',
'98,,6,11,,24,27,35,,,,,152,,156,80,,90,97,,,8,12,19,23,28,36,39,140',
',32,,42,48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,165,,,,,,,,,54,59,64,,157',
',,,93,99,,,,20,,29,37,40,147,148,60,65,,,,,,160,274,276,5,10,18,22,',
',,,52,57,63,70,74,82,83,87,91,98,,6,11,,24,27,35,,,,,152,,156,80,,90',
'97,,,8,12,19,23,28,36,39,140,,32,,42,48,,,,,,,,,,,,,,47,,,,,,,,,,,,',
',,,165,,,,,,,,,54,59,64,,157,,,,93,99,,,,20,,29,37,40,147,148,60,65',
',,,,,160,274,276,5,10,18,22,,,,,52,57,63,70,74,82,83,87,91,98,,6,11',
',24,27,35,,,,,152,,156,80,,90,97,,,8,12,19,23,28,36,39,140,,32,,42,48',
',,,,,,,,,,,,,47,,,,,,,,,,,,,,,,165,,,,,,,,,54,59,64,,157,,,,93,99,,',
',20,,29,37,40,147,148,60,65,,,,,,160,101,105,5,10,18,22,,,,,52,57,63',
'70,74,82,83,87,91,98,164,6,11,,24,27,35,,,,,152,,156,80,,90,97,163,166',
'8,12,19,23,28,36,39,21,,32,,42,48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,108',
',,,,,,,,54,59,64,72,78,,,,93,99,,,,20,,29,37,40,46,55,60,65,,,,,,94',
'101,105,5,10,18,22,33,,,49,52,57,63,70,74,82,83,87,91,98,,6,11,,24,27',
'35,,,,,68,,76,80,,90,97,104,,8,12,19,23,28,36,39,140,,32,,42,48,,,,',
',,,,,,,,,47,,,,,,,,,,,,,,,,165,,,,,,,,,54,59,64,,157,,,,93,99,,,,20',
',29,37,40,46,55,60,65,,,,,,94,101,105,5,10,18,22,,,,,52,57,63,70,74',
'82,83,87,91,98,,6,11,,24,27,35,,,,,152,,156,80,,90,97,,,8,12,19,23,28',
'36,39,21,,32,,42,48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,108,,,,,,,,,54,59',
'64,,157,,,,93,99,,,,20,,29,37,40,46,55,60,65,,,,,,94,101,105,5,10,18',
'22,,,,,52,57,63,70,74,82,83,87,91,98,,6,11,,24,27,35,,,,,152,,156,80',
',90,97,,,8,12,19,23,28,36,39,21,,32,,42,48,,,,,,,,,,,,,,47,,,,,,,,,',
',,,,,,108,,,,,,,,,54,59,64,,157,,,,93,99,,,,20,,29,37,40,46,55,60,65',
',,,,,94,101,105,5,10,18,22,,,,,52,57,63,70,74,82,83,87,91,98,,6,11,',
'24,27,35,,,,,152,,156,80,,90,97,,,8,12,19,23,28,36,39,140,,32,,42,48',
',,,,,,,,,,,,,47,,,,,,,,,,,,,,,,165,,,,,,,,,54,59,64,,157,,,,93,99,,',
',20,,29,37,40,46,55,60,65,,,,,,94,101,105,5,10,18,22,,,,,52,57,63,70',
'74,82,83,87,91,98,,6,11,,24,27,35,,,,,152,,156,80,,90,97,609,,8,12,19',
'23,28,36,39,140,,32,,42,48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,165,,,,,,',
',,54,59,64,,157,,,,93,99,,,,20,,29,37,40,46,55,60,65,,,,,,94,101,105',
'5,10,18,22,,,,,52,57,63,70,74,82,83,87,91,98,,6,11,,24,27,35,,,,,152',
',156,80,,90,97,,,8,12,19,23,28,36,39,140,,32,,42,48,,,,,,,,,,,,,,47',
',,,,,,,,,,,,,,,165,,,,,,,,,54,59,64,,157,,,,93,99,,,,20,,29,37,40,147',
'148,60,65,,,,,,160,274,276,5,10,18,22,,,,,52,57,63,70,74,82,83,87,91',
'98,,6,11,,24,27,35,,,,,152,,156,80,,90,97,,,8,12,19,23,28,36,39,21,',
'32,,42,48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,108,,,,,,,,,54,59,64,,157,',
',,93,99,,,,20,,29,37,40,46,55,60,65,,,,,,94,101,105,5,10,18,22,,,,,52',
'57,63,70,74,82,83,87,91,98,,6,11,,24,27,35,,,,,152,,156,80,,90,97,,',
'8,12,19,23,28,36,39,140,,32,,42,48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,165',
',,,,,,,,54,59,64,,157,,,,93,99,,,,20,,29,37,40,147,148,60,65,,,,,,160',
'274,276,5,10,18,22,,,,,52,57,63,70,74,82,83,87,91,98,164,6,11,,24,27',
'35,,,,,152,,156,80,,90,97,,,8,12,19,23,28,36,39,140,,32,,42,48,,,,,',
',,,,,,,,47,,,,,,,,,,,,,,,,165,,,,,,,,,54,59,64,,157,,,,93,99,,,,20,',
'29,37,40,147,148,60,65,,,,,,160,274,276,5,10,18,22,,,,,52,57,63,70,74',
'82,83,87,91,98,,6,11,,24,27,35,,,,,152,,156,80,,90,97,,,8,12,19,23,28',
'36,39,21,,32,,42,48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,108,,,,,,,,,54,59',
'64,,157,,,,93,99,,,,20,,29,37,40,46,55,60,65,,,,,,94,101,105,5,10,18',
'22,,,,,52,57,63,70,74,82,83,87,91,98,,6,11,,24,27,35,,,,,152,,156,80',
',90,97,,,8,12,19,23,28,36,39,140,,32,,42,48,,,,,,,,,,,,,,47,,,,,,,,',
',,,,,,,165,,,,,,,,,54,59,64,,157,,,,93,99,,,,20,,29,37,40,147,148,60',
'65,,,,,,160,274,276,5,10,18,22,,,,,52,57,63,70,74,82,83,87,91,98,,6',
'11,,24,27,35,,,,,152,,156,80,,90,97,,,8,12,19,23,28,36,39,21,,32,,42',
'48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,108,,,,,,,,,54,59,64,72,157,,,,93',
'99,,,,20,,29,37,40,46,55,60,65,,,,,,94,101,105,5,10,18,22,33,,,49,52',
'57,63,70,74,82,83,87,91,98,,6,11,,24,27,35,,,,,68,,76,80,,90,97,104',
',8,12,19,23,28,36,39,21,,32,,42,48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,108',
',,,,,,,,54,59,64,,157,,,,93,99,,,,20,,29,37,40,46,55,60,65,,,,,,94,101',
'105,5,10,18,22,,,,,52,57,63,70,74,82,83,87,91,98,,6,11,,24,27,35,,,',
',152,,156,80,,90,97,,,8,12,19,23,28,36,39,21,,32,,42,48,,,,,,,,,,,,',
',47,,,,,,,,,,,,,,,,108,,,,,,,,,54,59,64,,157,,,,93,99,,,,20,,29,37,40',
'46,55,60,65,,,,,,94,101,105,5,10,18,22,,,,,52,57,63,70,74,82,83,87,91',
'98,,6,11,,24,27,35,,,,,152,,156,80,,90,97,,,8,12,19,23,28,36,39,21,',
'32,,42,48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,108,,,,,,,,,54,59,64,,157,',
',,93,99,,,,20,,29,37,40,46,55,60,65,,,,,,94,101,105,5,10,18,22,,,,,52',
'57,63,70,74,82,83,87,91,98,,6,11,,24,27,35,,,,,152,,156,80,,90,97,,',
'8,12,19,23,28,36,39,21,,32,,42,48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,108',
',,,,,,,,54,59,64,,157,,,,93,99,,,,20,,29,37,40,46,55,60,65,,,,,,94,101',
'105,5,10,18,22,,,,,52,57,63,70,74,82,83,87,91,98,,6,11,,24,27,35,,,',
',152,,156,80,,90,97,,,8,12,19,23,28,36,39,140,,32,,42,48,,,,,,,,,,,',
',,47,,,,,,,,,,,,,,,,165,,,,,,,,,54,59,64,,157,,,,93,99,,,,20,,29,37',
'40,147,148,60,65,,,,,,160,274,276,5,10,18,22,,,,,52,57,63,70,74,82,83',
'87,91,98,,6,11,,24,27,35,,,,,152,,156,80,,90,97,,,8,12,19,23,28,36,39',
'140,,32,,42,48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,165,,,,,,,,,54,59,64,',
'157,,,,93,99,,,,20,,29,37,40,147,148,60,65,,,,,,160,101,105,5,10,18',
'22,,,,,52,57,63,70,74,82,83,87,91,98,164,6,11,,24,27,35,,,,,152,,156',
'80,,90,97,163,166,8,12,19,23,28,36,39,140,,32,,42,48,,,,,,,,,,,,,,47',
',,,,,,,,,,,,,,,165,,,,,,,,,54,59,64,,157,,,,93,99,,,,20,,29,37,40,147',
'148,60,65,,,,,,160,274,276,5,10,18,22,,,,,52,57,63,70,74,82,83,87,91',
'98,,6,11,,24,27,35,,,,,152,,156,80,,90,97,,,8,12,19,23,28,36,39,140',
',32,,42,48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,165,,,,,,,,,54,59,64,,157',
',,,93,99,,,,20,,29,37,40,147,148,60,65,,,,,,160,101,105,5,10,18,22,',
',,,52,57,63,70,74,82,83,87,91,98,164,6,11,,24,27,35,,,,,152,,156,80',
',90,97,163,166,8,12,19,23,28,36,39,140,,32,,42,48,,,,,,,,,,,,,,47,,',
',,,,,,,,,,,,,165,,,,,,,,,54,59,64,,157,,,,93,99,,,,20,,29,37,40,147',
'148,60,65,,,,,,160,274,276,5,10,18,22,,,,,52,57,63,70,74,82,83,87,91',
'98,,6,11,,24,27,35,,,,,152,,156,80,,90,97,,,8,12,19,23,28,36,39,21,',
'32,,42,48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,108,,,,,,,,,54,59,64,,157,',
',,93,99,,,,20,,29,37,40,46,55,60,65,,,,,,94,101,105,5,10,18,22,,,,,52',
'57,63,70,74,82,83,87,91,98,,6,11,,24,27,35,,,,,152,,156,80,,90,97,,',
'8,12,19,23,28,36,39,21,,32,,42,48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,108',
',,,,,,,,54,59,64,,157,,,,93,99,,,,20,,29,37,40,46,55,60,65,,,,,,94,101',
'105,5,10,18,22,,,,,52,57,63,70,74,82,83,87,91,98,,6,11,,24,27,35,,,',
',152,,156,80,,90,97,,,8,12,19,23,28,36,39,140,,32,,42,48,,,,,,,,,,,',
',,47,,,,,,,,,,,,,,,,165,,,,,,,,,54,59,64,,157,,,,93,99,,,,20,,29,37',
'40,147,148,60,65,,,,,,160,274,276,5,10,18,22,,,,,52,57,63,70,74,82,83',
'87,91,98,,6,11,,24,27,35,,,,,152,,156,80,,90,97,163,,8,12,19,23,28,36',
'39,140,,32,,42,48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,165,,,,,,,,,54,59,64',
',157,,,,93,99,,,,20,,29,37,40,147,148,60,65,,,,,,160,101,105,5,10,18',
'22,,,,,52,57,63,70,74,82,83,87,91,98,164,6,11,,24,27,35,,,,,152,,156',
'80,,90,97,163,166,8,12,19,23,28,36,39,140,,32,,42,48,,,,,,,,,,,,,,47',
',,,,,,,,,,,,,,,165,,,,,,,,,54,59,64,,157,,,,93,99,,,,20,,29,37,40,147',
'148,60,65,,,,,,160,274,276,5,10,18,22,,,,,52,57,63,70,74,82,83,87,91',
'98,164,6,11,,24,27,35,,,,,152,,156,80,,90,97,163,,8,12,19,23,28,36,39',
'140,,32,,42,48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,165,,,,,,,,,54,59,64,',
'157,,,,93,99,,,,20,,29,37,40,147,148,60,65,,,,,,160,274,276,5,10,18',
'22,,,,,52,57,63,70,74,82,83,87,91,98,164,6,11,,24,27,35,,,,,152,,156',
'80,,90,97,661,,8,12,19,23,28,36,39,140,,32,,42,48,,,,,,,,,,,,,,47,,',
',,,,,,,,,,,,,165,,,,,,,,,54,59,64,,157,,,,93,99,,,,20,,29,37,40,147',
'148,60,65,,,,,,160,274,276,5,10,18,22,,,,,52,57,63,70,74,82,83,87,91',
'98,164,6,11,,24,27,35,,,,,152,,156,80,,90,97,,,8,12,19,23,28,36,39,140',
',32,,42,48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,165,,,,,,,,,54,59,64,,157',
',,,93,99,,,,20,,29,37,40,147,148,60,65,,,,,,160,274,276,5,10,18,22,',
',,,52,57,63,70,74,82,83,87,91,98,,6,11,,24,27,35,,,,,152,,156,80,,90',
'97,,,8,12,19,23,28,36,39,140,,32,,42,48,,,,,,,,,,,,,,47,,,,,,,,,,,,',
',,,165,,,,,,,,,54,59,64,,157,,,,93,99,,,,20,,29,37,40,147,148,60,65',
',,,,,160,274,276,5,10,18,22,,,,,52,57,63,70,74,82,83,87,91,98,,6,11',
',24,27,35,,,,,152,,156,80,,90,97,,,8,12,19,23,28,36,39,140,,32,,42,48',
',,,,,,,,,,,,,47,,,,,,,,,,,,,,,,165,,,,,,,,,54,59,64,,157,,,,93,99,,',
',20,,29,37,40,147,148,60,65,,,,,,160,274,276,5,10,18,22,,,,,52,57,63',
'70,74,82,83,87,91,98,,6,11,,24,27,35,,,,,152,,156,80,,90,97,,,8,12,19',
'23,28,36,39,140,,32,,42,48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,165,,,,,,',
',,54,59,64,,157,,,,93,99,,,,20,,29,37,40,147,148,60,65,,,,,,160,274',
'276,5,10,18,22,,,,,52,57,63,70,74,82,83,87,91,98,,6,11,,24,27,35,,,',
',152,,156,80,,90,97,,,8,12,19,23,28,36,39,140,,32,,42,48,,,,,,,,,,,',
',,47,,,,,,,,,,,,,,,,165,,,,,,,,,54,59,64,,157,,,,93,99,,,,20,,29,37',
'40,147,148,60,65,,,,,,160,274,276,5,10,18,22,,,,,52,57,63,70,74,82,83',
'87,91,98,,6,11,,24,27,35,,,,,152,,156,80,,90,97,,,8,12,19,23,28,36,39',
'140,,32,,42,48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,165,,,,,,,,,54,59,64,',
'157,,,,93,99,,,,20,,29,37,40,147,148,60,65,,,,,,160,274,276,5,10,18',
'22,,,,,52,57,63,70,74,82,83,87,91,98,,6,11,,24,27,35,,,,,152,,156,80',
',90,97,,,8,12,19,23,28,36,39,140,,32,,42,48,,,,,,,,,,,,,,47,,,,,,,,',
',,,,,,,165,,,,,,,,,54,59,64,,157,,,,93,99,,,,20,,29,37,40,147,148,60',
'65,,,,,,160,274,276,5,10,18,22,,,,,52,57,63,70,74,82,83,87,91,98,,6',
'11,,24,27,35,,,,,152,,156,80,,90,97,,,8,12,19,23,28,36,39,140,,32,,42',
'48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,165,,,,,,,,,54,59,64,,157,,,,93,99',
',,,20,,29,37,40,147,148,60,65,,,,,,160,274,276,5,10,18,22,,,,,52,57',
'63,70,74,82,83,87,91,98,,6,11,,24,27,35,,,,,152,,156,80,,90,97,,,8,12',
'19,23,28,36,39,140,,32,,42,48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,165,,,',
',,,,,54,59,64,,157,,,,93,99,,,,20,,29,37,40,147,148,60,65,,,,,,160,274',
'276,5,10,18,22,,,,,52,57,63,70,74,82,83,87,91,98,,6,11,,24,27,35,,,',
',152,,156,80,,90,97,,,8,12,19,23,28,36,39,140,,32,,42,48,,,,,,,,,,,',
',,47,,,,,,,,,,,,,,,,165,,,,,,,,,54,59,64,,157,,,,93,99,,,,20,,29,37',
'40,147,148,60,65,,,,,,160,274,276,5,10,18,22,,,,,52,57,63,70,74,82,83',
'87,91,98,,6,11,,24,27,35,,,,,152,,156,80,,90,97,,,8,12,19,23,28,36,39',
'140,,32,,42,48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,165,,,,,,,,,54,59,64,',
'157,,,,93,99,,,,20,,29,37,40,147,148,60,65,,,,,,160,274,276,5,10,18',
'22,,,,,52,57,63,70,74,82,83,87,91,98,,6,11,,24,27,35,,,,,152,,156,80',
',90,97,,,8,12,19,23,28,36,39,140,,32,,42,48,,,,,,,,,,,,,,47,,,,,,,,',
',,,,,,,165,,,,,,,,,54,59,64,,157,,,,93,99,,,,20,,29,37,40,147,148,60',
'65,,,,,,160,274,276,5,10,18,22,,,,,52,57,63,70,74,82,83,87,91,98,,6',
'11,,24,27,35,,,,,152,,156,80,,90,97,,,8,12,19,23,28,36,39,140,,32,,42',
'48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,165,,,,,,,,,54,59,64,,157,,,,93,99',
',,,20,,29,37,40,147,148,60,65,,,,,,160,274,276,5,10,18,22,,,,,52,57',
'63,70,74,82,83,87,91,98,,6,11,,24,27,35,,,,,152,,156,80,,90,97,,,8,12',
'19,23,28,36,39,140,,32,,42,48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,165,,,',
',,,,,54,59,64,,157,,,,93,99,,,,20,,29,37,40,147,148,60,65,,,,,,160,274',
'276,5,10,18,22,,,,,52,57,63,70,74,82,83,87,91,98,,6,11,,24,27,35,,,',
',152,,156,80,,90,97,,,8,12,19,23,28,36,39,140,,32,,42,48,,,,,,,,,,,',
',,47,,,,,,,,,,,,,,,,165,,,,,,,,,54,59,64,,157,,,,93,99,,,,20,,29,37',
'40,147,148,60,65,,,,,,160,274,276,5,10,18,22,,,,,52,57,63,70,74,82,83',
'87,91,98,,6,11,,24,27,35,,,,,152,,156,80,,90,97,,,8,12,19,23,28,36,39',
'140,,32,,42,48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,165,,,,,,,,,54,59,64,',
'157,,,,93,99,,,,20,,29,37,40,147,148,60,65,,,,,,160,274,276,5,10,18',
'22,,,,,52,57,63,70,74,82,83,87,91,98,,6,11,,24,27,35,,,,,152,,156,80',
',90,97,,,8,12,19,23,28,36,39,140,,32,,42,48,,,,,,,,,,,,,,47,,,,,,,,',
',,,,,,,165,,,,,,,,,54,59,64,,157,,,,93,99,,,,20,,29,37,40,147,148,60',
'65,,,,,,160,274,276,5,10,18,22,,,,,52,57,63,70,74,82,83,87,91,98,,6',
'11,,24,27,35,,,,,152,,156,80,,90,97,,,8,12,19,23,28,36,39,140,,32,,42',
'48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,165,,,,,,,,,54,59,64,,157,,,,93,99',
',,,20,,29,37,40,147,148,60,65,,,,,,160,274,276,5,10,18,22,,,,,52,57',
'63,70,74,82,83,87,91,98,,6,11,,24,27,35,,,,,152,,156,80,,90,97,,,8,12',
'19,23,28,36,39,140,,32,,42,48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,165,,,',
',,,,,54,59,64,,157,,,,93,99,,,,20,,29,37,40,147,148,60,65,,,,,,160,274',
'276,5,10,18,22,,,,,52,57,63,70,74,82,83,87,91,98,,6,11,,24,27,35,,,',
',152,,156,80,,90,97,,,8,12,19,23,28,36,39,140,,32,,42,48,,,,,,,,,,,',
',,47,,,,,,,,,,,,,,,,165,,,,,,,,,54,59,64,,157,,,,93,99,,,,20,,29,37',
'40,147,148,60,65,,,,,,160,274,276,5,10,18,22,,,,,52,57,63,70,74,82,83',
'87,91,98,,6,11,,24,27,35,,,,,152,,156,80,,90,97,,,8,12,19,23,28,36,39',
'140,,32,,42,48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,165,,,,,,,,,54,59,64,',
'157,,,,93,99,,,,20,,29,37,40,147,148,60,65,,,,,,160,274,276,5,10,18',
'22,,,,,52,57,63,70,74,82,83,87,91,98,,6,11,,24,27,35,,,,,152,,156,80',
',90,97,,,8,12,19,23,28,36,39,140,,32,,42,48,,,,,,,,,,,,,,47,,,,,,,,',
',,,,,,,165,,,,,,,,,54,59,64,,157,,,,93,99,,,,20,,29,37,40,147,148,60',
'65,,,,,,160,274,276,5,10,18,22,,,,,52,57,63,70,74,82,83,87,91,98,,6',
'11,,24,27,35,,,,,152,,156,80,,90,97,,,8,12,19,23,28,36,39,140,,32,,42',
'48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,165,,,,,,,,,54,59,64,,157,,,,93,99',
',,,20,,29,37,40,147,148,60,65,,,,,,160,274,276,5,10,18,22,,,,,52,57',
'63,70,74,82,83,87,91,98,,6,11,,24,27,35,,,,,152,,156,80,,90,97,,,8,12',
'19,23,28,36,39,140,,32,,42,48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,165,,,',
',,,,,54,59,64,,157,,,,93,99,,,,20,,29,37,40,147,148,60,65,,,,,,160,274',
'276,5,10,18,22,,,,,52,57,63,70,74,82,83,87,91,98,,6,11,,24,27,35,,,',
',152,,156,80,,90,97,,,8,12,19,23,28,36,39,21,,32,,42,48,,,,,,,,,,,,',
',47,,,,,,,,,,,,,,,,108,,,,,,,,,54,59,64,,157,,,,93,99,,,,20,,29,37,40',
'46,55,60,65,,,,,,94,101,105,5,10,18,22,,,,,52,57,63,70,74,82,83,87,91',
'98,,6,11,,24,27,35,,,,,152,,156,80,,90,97,,,8,12,19,23,28,36,39,140',
',32,,42,48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,165,,,,,,,,,54,59,64,,157',
',,,93,99,,,,20,,29,37,40,147,148,60,65,,,,,,160,274,276,5,10,18,22,',
',,,52,57,63,70,74,82,83,87,91,98,,6,11,,24,27,35,,,,,152,,156,80,,90',
'97,,,8,12,19,23,28,36,39,140,,32,,42,48,,,,,,,,,,,,,,47,,,,,,,,,,,,',
',,,165,,,,,,,,,54,59,64,,157,,,,93,99,,,,20,,29,37,40,147,148,60,65',
',,,,,160,274,276,5,10,18,22,,,,,52,57,63,70,74,82,83,87,91,98,,6,11',
',24,27,35,,,,,152,,156,80,,90,97,609,,8,12,19,23,28,36,39,140,,32,,42',
'48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,165,,,,,,,,,54,59,64,,157,,,,93,99',
',,,20,,29,37,40,147,148,60,65,,,,,,160,274,276,5,10,18,22,,,,,52,57',
'63,70,74,82,83,87,91,98,,6,11,,24,27,35,,,,,152,,156,80,,90,97,,,8,12',
'19,23,28,36,39,140,,32,,42,48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,165,,,',
',,,,,54,59,64,,157,,,,93,99,,,,20,,29,37,40,147,148,60,65,,,,,,160,274',
'276,5,10,18,22,,,,,52,57,63,70,74,82,83,87,91,98,,6,11,,24,27,35,,,',
',152,,156,80,,90,97,,,8,12,19,23,28,36,39,140,,32,,42,48,,,,,,,,,,,',
',,47,,,,,,,,,,,,,,,,165,,,,,,,,,54,59,64,,157,,,,93,99,,,,20,,29,37',
'40,147,148,60,65,,,,,,160,274,276,5,10,18,22,,,,,52,57,63,70,74,82,83',
'87,91,98,,6,11,,24,27,35,,,,,152,,156,80,,90,97,,,8,12,19,23,28,36,39',
'21,,32,,42,48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,108,,,,,,,,,54,59,64,,157',
',,,93,99,,,,20,,29,37,40,46,55,60,65,,,,,,94,101,105,5,10,18,22,,,,',
'52,57,63,70,74,82,83,87,91,98,,6,11,,24,27,35,,,,,152,,156,80,,90,97',
',,8,12,19,23,28,36,39,21,,32,,42,48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,108',
',,,,,,,,54,59,64,,157,,,,93,99,,,,20,,29,37,40,46,55,60,65,,,,,,94,101',
'105,5,10,18,22,,,,,52,57,63,70,74,82,83,87,91,98,,6,11,,24,27,35,,,',
',152,,156,80,,90,97,,,8,12,19,23,28,36,39,140,,32,,42,48,,,,,,,,,,,',
',,47,,,,,,,,,,,,,,,,165,,,,,,,,,54,59,64,,157,,,,93,99,,,,20,,29,37',
'40,147,148,60,65,,,,,,160,274,276,5,10,18,22,,,,,52,57,63,70,74,82,83',
'87,91,98,,6,11,,24,27,35,,,,,152,,156,80,,90,97,,,8,12,19,23,28,36,39',
'140,,32,,42,48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,165,,,,,,,,,54,59,64,',
'157,,,,93,99,,,,20,,29,37,40,147,148,60,65,,,,,,160,274,276,5,10,18',
'22,,,,,52,57,63,70,74,82,83,87,91,98,,6,11,,24,27,35,,,,,152,,156,80',
',90,97,,,8,12,19,23,28,36,39,140,,32,,42,48,,,,,,,,,,,,,,47,,,,,,,,',
',,,,,,,165,,,,,,,,,54,59,64,,157,,,,93,99,,,,20,,29,37,40,147,148,60',
'65,,,,,,160,274,276,5,10,18,22,,,,,52,57,63,70,74,82,83,87,91,98,,6',
'11,,24,27,35,,,,,152,,156,80,,90,97,661,,8,12,19,23,28,36,39,140,,32',
',42,48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,165,,,,,,,,,54,59,64,,157,,,,93',
'99,,,,20,,29,37,40,147,148,60,65,,,,,,160,101,105,5,10,18,22,,,,,52',
'57,63,70,74,82,83,87,91,98,164,6,11,,24,27,35,,,,,152,,156,80,,90,97',
'163,166,8,12,19,23,28,36,39,21,,32,,42,48,,,,,,,,,,,,,,47,,,,,,,,,,',
',,,,,108,,,,,,,,,54,59,64,72,157,,,,93,99,,,,20,,29,37,40,46,55,60,65',
',,,,,94,101,105,5,10,18,22,33,,,49,52,57,63,70,74,82,83,87,91,98,,6',
'11,,24,27,35,,,,,68,,76,80,,90,97,104,,8,12,19,23,28,36,39,140,,32,',
'42,48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,165,,,,,,,,,54,59,64,,157,,,,93',
'99,,,,20,,29,37,40,147,148,60,65,,,,,,160,101,105,5,10,18,22,,,,,52',
'57,63,70,74,82,83,87,91,98,164,6,11,,24,27,35,,,,,152,,156,80,,90,97',
'163,166,8,12,19,23,28,36,39,21,,32,,42,48,,,,,,,,,,,,,,47,,,,,,,,,,',
',,,,,108,,,,,,,,,54,59,64,,157,,,,93,99,,,,20,,29,37,40,46,55,60,65',
',,,,,94,101,105,5,10,18,22,,,,,52,57,63,70,74,82,83,87,91,98,,6,11,',
'24,27,35,,,,,152,,156,80,,90,97,,,8,12,19,23,28,36,39,,,,,,,,326,,,',
',,,,317,320,,,47,329,331,333,337,313,315,318,321,323,325,-227,-229,332',
'334,335,326,,,,,,,,317,320,,,,329,331,333,337,313,315,318,321,323,325',
'326,,332,334,335,,758,,317,320,,,,329,331,333,337,313,315,318,321,323',
'325,-227,-229,332,334,335,326,,,,,,,,317,320,,,,329,331,333,337,313',
'315,318,321,323,325,-227,-229,332,334,335,,,,,,,,,,,,,,,,,,,,,314,316',
'319,322,324,327,328,330,,,,,,,,,,,,,,,,,,,,-234,314,316,319,322,324',
'327,328,330,,,,,,,,,,,,,,,,314,316,319,322,324,327,328,330,,,,,,,,,',
',,,,,,,,,,,314,316,319,322,324,327,328,330,326,268,,,,,,,317,320,,,',
'329,331,333,337,313,315,318,321,323,325,-227,-229,332,334,335,,,,,165',
',,,,,,,,54,59,64,,157,,,,93,99,,,,20,,29,37,40,147,148,60,65,,,,,,160',
'274,276,5,10,18,22,,,,,52,57,63,271,74,82,83,87,91,98,,6,11,,24,27,35',
',,,,270,,156,80,268,90,97,,,8,12,19,23,28,36,39,,,,,,,,,,,501,314,316',
'319,322,324,327,328,330,165,,,,,,,,,54,59,64,,157,,,,93,99,,,,20,,29',
'37,40,147,148,60,65,,,,,,160,274,276,5,10,18,22,,268,,,52,57,63,271',
'74,82,83,87,91,98,,6,11,,24,27,35,,,,,270,,156,80,,90,97,165,,8,12,19',
'23,28,36,39,54,59,64,,157,,,,93,99,388,,,20,,29,37,40,147,148,60,65',
',,,,,160,274,276,5,10,18,22,,268,,,52,57,63,271,74,82,83,87,91,98,,6',
'11,,24,27,35,,,,,270,,272,80,,90,97,165,,8,12,19,23,28,36,39,54,59,64',
',157,,,,93,99,,,,20,,29,37,40,147,148,60,65,,,,,,160,274,276,5,10,18',
'22,,268,,,52,57,63,271,74,82,83,87,91,98,,6,11,,24,27,35,,,,,869,,156',
'80,,90,97,165,,8,12,19,23,28,36,39,54,59,64,,157,,,,93,99,,,,20,,29',
'37,40,147,148,60,65,,,,,,160,274,276,5,10,18,22,,268,,,52,57,63,271',
'74,82,83,87,91,98,,6,11,,24,27,35,,,,,270,,272,80,,90,97,165,,8,12,19',
'23,28,36,39,54,59,64,,157,,,,93,99,,,,20,,29,37,40,147,148,60,65,,,',
',,160,274,276,5,10,18,22,,,268,,52,57,63,271,74,82,83,87,91,98,,6,11',
',24,27,35,,,,,348,,76,80,,90,97,104,165,8,12,19,23,28,36,39,,54,59,64',
',157,,,,93,99,,,,20,,29,37,40,147,148,60,65,,,,,,160,274,276,5,10,18',
'22,,268,,,52,57,63,271,369,82,83,87,371,98,,6,11,,24,27,35,,,,,367,',
'156,80,,90,97,165,,8,12,19,23,28,36,39,54,59,64,,157,,,,93,99,,,,20',
',29,37,40,147,148,60,65,,,,,,160,274,276,5,10,18,22,,268,,,52,57,63',
'271,74,82,83,87,91,98,,6,11,,24,27,35,,,,,270,,272,80,,90,97,165,,8',
'12,19,23,28,36,39,54,59,64,,157,,,,93,99,,,,20,,29,37,40,147,148,60',
'65,,,,,,160,274,276,5,10,18,22,,268,,,52,57,63,271,74,82,83,87,91,98',
',6,11,,24,27,35,,,,,270,,272,80,,90,97,165,,8,12,19,23,28,36,39,54,59',
'64,,157,,,,93,99,,,,20,,29,37,40,147,148,60,65,,,,,,160,274,276,5,10',
'18,22,,,268,,52,57,63,271,74,82,83,87,91,98,,6,11,,24,27,35,,,,,270',
',272,80,,90,97,275,165,8,12,19,23,28,36,39,,54,59,64,,157,,,,93,99,',
',,20,,29,37,40,147,148,60,65,,,,,,160,274,276,5,10,18,22,,268,,,52,57',
'63,271,74,82,83,87,91,98,,6,11,,24,27,35,,,,,270,,272,80,,90,97,165',
',8,12,19,23,28,36,39,54,59,64,,157,,,,93,99,,,,20,,29,37,40,147,148',
'60,65,,,,,,160,274,276,5,10,18,22,,,,,52,57,63,271,74,82,83,87,91,98',
'268,6,11,,24,27,35,370,,,,891,,156,80,,90,97,,,8,12,19,23,28,36,39,',
',,,165,,,,,,,,,54,59,64,,157,,,,93,99,,,,20,,29,37,40,147,148,60,65',
',,,,,160,274,276,5,10,18,22,,,,,52,57,63,271,369,82,83,87,371,98,,6',
'11,,24,27,35,,,,,367,,156,80,,90,97,,,8,12,19,23,28,36,39' ]
        racc_action_table = arr = Array.new(21951, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'471,78,1,623,623,471,360,360,724,724,158,342,736,471,471,701,627,627',
'471,471,471,471,471,471,471,471,471,471,471,471,471,471,471,347,471',
'471,471,264,471,471,471,471,471,471,687,368,367,155,701,82,367,471,471',
'471,82,665,456,471,471,837,471,677,82,82,368,479,479,82,82,82,82,82',
'82,82,82,82,82,82,82,82,82,82,82,82,674,261,14,82,82,82,82,82,82,82',
'340,264,347,673,592,592,82,82,82,694,471,82,82,82,736,82,264,701,623',
'158,342,360,672,724,82,82,82,82,837,701,300,627,665,701,471,471,471',
'471,471,471,471,471,471,471,471,471,712,476,476,471,14,471,78,471,78',
'723,155,793,793,82,115,82,113,723,723,456,728,479,723,723,723,723,723',
'723,723,723,723,723,723,82,261,670,261,82,82,82,82,82,82,82,82,82,82',
'82,82,368,468,368,82,82,82,468,82,340,297,846,311,311,669,468,468,592',
'115,592,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468',
'728,468,468,468,113,468,468,468,468,468,468,728,56,56,476,688,688,346',
'468,468,468,657,657,375,468,468,401,468,300,300,300,300,300,300,300',
'300,468,880,307,375,142,142,30,30,712,712,712,712,712,712,712,712,401',
'723,723,723,723,723,723,723,723,938,939,108,297,846,297,846,108,699',
'535,468,67,311,67,700,67,67,535,535,346,668,948,535,535,535,535,535',
'535,535,535,535,535,667,468,468,468,468,468,468,468,468,468,468,468',
'468,468,67,56,729,468,688,468,307,468,307,67,67,67,568,67,883,935,883',
'67,67,880,703,880,67,302,67,67,67,67,67,67,67,30,717,13,733,13,67,67',
'67,67,67,67,67,938,939,938,939,67,67,67,67,67,67,67,67,67,67,732,67',
'67,659,67,67,67,948,729,948,628,67,628,67,67,731,67,67,568,729,67,67',
'67,67,67,67,67,384,711,384,406,384,384,535,535,535,535,535,535,535,535',
'302,890,302,935,509,67,935,397,935,717,67,733,67,733,542,406,743,150',
'150,129,381,384,732,717,706,717,890,890,509,509,384,384,384,397,384',
'658,381,731,384,384,289,743,743,384,129,384,384,384,384,384,384,384',
'655,509,743,394,713,384,384,384,384,384,384,384,396,129,289,398,384',
'384,384,384,384,384,384,384,384,384,384,384,384,394,384,384,384,310',
'139,310,715,384,396,384,384,398,384,384,384,384,384,384,384,384,384',
'384,384,393,548,393,716,393,393,139,139,888,711,711,711,711,711,711',
'711,711,695,695,384,825,399,656,656,889,425,384,425,425,425,425,425',
'395,888,888,393,542,542,542,542,542,542,542,542,393,393,393,399,393',
'889,889,749,393,393,373,825,652,393,395,393,393,393,393,393,393,393',
'402,749,425,84,373,393,393,393,393,393,393,393,825,719,825,825,393,393',
'393,393,393,393,393,393,393,393,402,393,393,84,393,393,393,649,265,741',
'71,393,71,393,393,648,393,393,722,404,393,393,393,393,393,393,393,249',
'539,249,645,249,249,265,265,643,548,548,548,548,548,548,548,548,741',
'404,393,747,358,747,358,725,259,393,779,551,779,779,779,779,779,726',
'249,551,551,934,934,741,936,741,741,249,249,249,249,249,259,259,640',
'249,249,259,741,588,249,588,249,249,249,249,249,249,249,936,936,51,51',
'779,249,249,249,249,249,249,249,249,936,638,249,249,249,249,249,249',
'249,249,249,249,249,730,249,249,636,249,249,249,260,260,698,635,249',
'634,249,249,619,249,249,249,266,249,249,249,249,249,249,249,575,617',
'575,285,575,575,269,698,698,539,539,539,539,539,539,539,539,266,266',
'249,698,268,268,614,249,702,613,285,285,285,497,269,269,448,448,575',
'551,551,551,551,551,551,551,551,575,575,575,575,575,42,42,744,575,575',
'587,497,497,575,702,575,575,575,575,575,575,575,746,604,603,371,576',
'575,575,575,575,575,575,575,575,587,587,575,575,575,575,575,575,575',
'575,575,575,575,282,575,575,751,575,575,575,868,753,282,282,575,371',
'575,575,572,575,575,575,756,575,575,575,575,575,575,575,571,532,702',
'759,762,868,868,531,371,523,371,371,557,768,702,769,697,345,702,575',
'557,557,369,371,575,557,557,557,557,557,557,557,557,557,557,100,557',
'557,557,557,557,514,345,345,500,462,462,920,462,920,920,697,920,15,462',
'462,499,369,920,920,100,100,256,920,920,920,920,920,920,920,920,920',
'920,216,697,923,697,697,15,15,369,498,369,369,363,356,256,256,256,697',
'277,356,356,356,356,369,487,216,216,216,923,923,252,475,252,252,782',
'252,445,363,363,789,433,252,252,277,277,430,252,252,252,252,252,252',
'252,252,252,252,262,426,424,423,262,920,920,799,422,920,410,557,557',
'557,557,557,557,557,557,920,920,387,721,809,262,262,557,383,382,920',
'721,721,378,377,372,721,721,721,721,721,721,721,721,721,721,721,721',
'357,823,920,920,920,920,920,920,920,920,920,920,920,252,252,354,826',
'252,827,131,352,131,131,131,131,131,349,252,252,567,348,567,567,344',
'567,336,842,252,131,312,567,567,309,131,308,567,567,567,567,567,567',
'567,567,567,567,851,291,252,252,252,252,252,252,252,252,252,252,252',
'449,290,449,449,449,449,449,417,735,417,417,417,417,417,735,735,735',
'735,288,449,858,570,859,860,449,449,417,570,570,570,570,417,417,861',
'721,721,721,721,721,721,721,721,286,863,276,865,449,567,567,449,274',
'567,271,417,270,869,417,449,871,872,874,567,567,875,876,267,537,165',
'469,162,469,567,469,469,537,537,161,886,152,537,537,537,537,537,537',
'537,537,537,537,146,143,567,567,567,567,567,567,567,567,567,567,567',
'891,469,901,141,901,901,901,901,901,895,469,469,469,896,469,138,133',
'902,469,469,686,901,126,469,121,469,469,469,469,469,469,469,120,117',
'107,96,70,469,469,469,469,469,469,469,68,924,926,927,469,469,469,469',
'469,469,469,469,469,469,469,469,469,928,469,469,469,929,930,931,932',
'469,933,469,469,53,469,469,469,469,469,469,469,469,469,469,469,470,49',
'470,39,470,470,537,537,537,537,537,537,537,537,553,937,38,36,43,469',
'7,469,553,553,43,43,43,43,555,651,4,651,651,651,651,470,555,555,866',
'949,866,866,866,866,470,470,470,,470,,,,470,470,,,,470,,470,470,470',
'470,470,470,470,,,,,,470,470,470,470,470,470,470,,,,,470,470,470,470',
'470,470,470,470,470,470,470,470,470,,470,470,470,,,,,470,,470,470,,470',
'470,470,470,470,470,470,470,470,470,470,580,559,580,,580,580,,,,559',
'559,864,,864,864,864,864,864,,470,,470,553,553,553,553,553,553,553,553',
'864,,,,,580,555,555,555,555,555,555,555,555,580,580,580,,580,,,,580',
'580,,,,580,,580,580,580,580,580,580,580,,,,,,580,580,580,580,580,580',
'580,,,,,580,580,580,580,580,580,580,580,580,580,580,580,580,,580,580',
'580,,,,,580,,580,580,,580,580,580,580,580,580,580,580,580,580,580,654',
',654,,654,654,,,,559,559,559,559,559,559,559,559,,,580,,580,778,,778',
'778,778,778,778,,,,,654,654,654,,,,,,778,,,654,654,654,778,654,,,,654',
'654,,,,654,,654,654,654,654,654,654,654,,,778,,,654,654,654,654,654',
'654,654,,,,,654,654,654,654,654,654,654,654,654,654,654,654,654,,654',
'654,654,,,,,654,,654,654,,654,654,654,654,654,654,654,654,654,654,654',
'653,,653,,653,653,,,,,,,420,,420,420,420,420,420,654,,654,910,,910,910',
'910,910,910,,,420,,653,653,653,,420,,,,910,,,653,653,653,910,653,,,',
'653,653,,,,653,420,653,653,653,653,653,653,653,,,910,,,653,653,653,653',
'653,653,653,,,,,653,653,653,653,653,653,653,653,653,653,653,653,653',
',653,653,653,,,,,653,,653,653,,653,653,653,653,653,653,653,653,653,653',
'653,9,,9,,9,9,,,,135,,135,135,135,135,135,,,,653,644,653,644,644,644',
'644,644,,135,,,,,135,135,9,,,,644,,,,,9,9,9,,9,,,,9,9,,135,,9,135,9',
'9,9,9,9,9,9,,9,,,,9,9,9,9,9,9,9,,,,,9,9,9,9,9,9,9,9,9,9,9,9,9,,9,9,9',
',,,,9,,9,9,,9,9,9,9,9,9,9,9,9,9,9,,,,,,,9,,,,,905,,905,905,,905,,,9',
',9,905,905,,,,905,905,905,905,905,905,905,905,905,905,8,,8,8,8,8,8,',
',765,,765,765,765,765,765,,,,8,,,,,8,8,,,765,,,,,765,765,,,,642,,642',
'642,642,642,642,,8,,,8,,,,,8,765,,642,765,,905,905,642,765,905,257,257',
'257,257,257,257,257,257,,905,905,,,,540,,474,,474,905,474,474,540,540',
',,,540,540,540,540,540,540,540,540,540,540,,,905,905,905,905,905,905',
'905,905,905,905,905,,474,781,,781,781,781,781,781,,474,474,474,,474',
',,,474,474,,781,,474,,474,474,474,474,474,474,474,,,,,,474,474,474,474',
'474,474,474,,,,,474,474,474,474,474,474,474,474,474,474,474,474,474',
',474,474,474,,,,,474,,474,474,,474,474,474,474,474,474,474,474,474,474',
'474,481,,481,,481,481,540,540,540,540,540,540,540,540,,,,,,474,,474',
'805,,805,805,805,805,805,,,,,,,481,,,,,,805,,,481,481,481,805,481,,',
',481,481,,,,481,,481,481,481,481,481,481,481,,,805,,,481,481,481,481',
'481,481,481,,,,,481,481,481,481,481,481,481,481,481,481,481,481,481',
',481,481,481,,,,,481,,481,481,,481,481,481,481,481,481,481,481,481,481',
'481,581,,581,,581,581,,,,908,,908,908,908,908,908,,,,481,862,481,862',
'862,862,862,862,,908,,,,,908,908,581,,,,862,,,,,581,581,581,,581,,,',
'581,581,,908,,581,908,581,581,581,581,581,581,581,,,,,,581,581,581,581',
'581,581,581,,,,,581,581,581,581,581,581,581,581,581,581,581,581,581',
',581,581,581,,,,,581,,581,581,,581,581,581,581,581,581,581,581,581,581',
'581,,,,,,,582,,582,582,,582,,,,,,582,582,581,,581,582,582,582,582,582',
'582,582,582,582,582,,,,,543,,,,,,,,543,543,,,,543,543,543,543,543,543',
'543,543,543,543,,,254,,254,254,,254,,,,,,254,254,,,,254,254,254,254',
'254,254,254,254,254,254,,,,,,582,582,,,582,,428,,428,428,428,428,428',
',582,582,630,,630,630,630,630,630,,582,428,,,,,428,,,,,630,,,,,630,630',
',,582,582,582,582,582,582,582,582,582,582,582,254,254,,,254,,,630,,',
'630,,,,254,254,543,543,543,543,543,543,543,543,254,278,278,278,278,278',
'278,278,278,,,,,803,,803,803,803,803,803,254,254,254,254,254,254,254',
'254,254,254,254,109,803,109,109,,109,803,803,,,,109,109,,,,109,109,109',
'109,109,109,109,109,109,109,,,803,,,803,,,,109,109,109,,,,,,,109,109',
'109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109',
'109,109,109,109,109,,,,109,109,109,109,109,109,109,109,,,,109,109,109',
'109,109,109,109,109,109,109,,,,,,,,,109,109,491,,491,491,,491,,,109',
',,491,491,,,,491,491,491,491,491,491,491,491,491,491,,,109,109,109,109',
'109,109,109,109,109,109,109,403,,403,403,403,403,403,432,,432,432,432',
'432,432,,,,,,403,,,,,403,403,432,,,,,432,432,801,,801,801,801,801,801',
',,,,,,403,491,491,403,,491,801,432,403,,432,801,801,,,491,491,,,,,,105',
',105,491,105,105,,,,,,801,,,801,,,,,,,,,491,491,491,491,491,491,491',
'491,491,491,491,,105,,,,,,,,,105,105,105,,105,,,,105,105,,,,105,,105',
'105,105,105,105,105,105,,,,,,105,105,105,105,105,105,105,,,,,105,105',
'105,105,105,105,105,105,105,105,105,105,105,,105,105,105,,,,,105,,105',
'105,,105,105,105,105,105,105,105,105,105,105,105,,,,,,,584,,584,584',
',584,,,,,,584,584,105,,105,584,584,584,584,584,584,584,584,584,584,776',
',776,776,776,776,776,774,,774,774,774,774,774,,,,,,776,,,,,776,776,774',
',,,,944,774,944,944,944,944,944,,,,,,,,,776,,,776,944,,,774,,,944,,',
',584,584,,,584,,,,,,,,,,584,584,,944,,,,101,,101,584,101,101,,,,,,,',
',,,,,,,,,,584,584,584,584,584,584,584,584,584,584,584,,101,,,,,,,,,101',
'101,101,,101,,,,101,101,,,,101,,101,101,101,101,101,101,101,,,,,,101',
'101,101,101,101,101,101,,,,,101,101,101,101,101,101,101,101,101,101',
'101,101,101,,101,101,101,,,,,101,,101,101,,101,101,101,101,101,101,101',
'101,101,101,101,,,,,,,493,,493,493,,493,,,,,,493,493,101,,101,493,493',
'493,493,493,493,493,493,493,493,,,,,,,,,,,,786,,786,786,786,786,786',
',900,,900,900,900,900,900,,,,502,786,502,502,,502,,786,,900,,502,502',
',,900,502,502,502,502,502,502,502,502,502,502,,,786,,,493,493,,,493',
'900,,,,,,,,,493,493,913,,913,913,913,913,913,,493,,,,,,,,,,,913,,,,',
',913,,,493,493,493,493,493,493,493,493,493,493,493,502,502,,,502,,,913',
',,,,,,502,502,437,,437,437,,437,,,502,,,437,437,,,,437,437,437,437,437',
'437,437,437,437,437,,,502,502,502,502,502,502,502,502,502,502,502,,',
',,,,,,,,,,,,,,503,,503,503,,503,,,,,,503,503,,,,503,503,503,503,503',
'503,503,503,503,503,,,,,,437,437,,,437,,,,,,,,,,437,437,,,,,,,,,437',
',,,,,,,,,,,,,,,,,,,437,437,437,437,437,437,437,437,437,437,437,503,503',
',,503,,,,,,,,,,503,503,,,,,,91,,91,503,91,91,,,,,,,,,,,,,,,,,,503,503',
'503,503,503,503,503,503,503,503,503,,91,,,,,,,,,91,91,91,,91,,,,91,91',
',,,91,,91,91,91,91,91,91,91,,,,,,91,91,91,91,91,91,91,,,,,91,91,91,91',
'91,91,91,91,91,91,91,91,91,,91,91,91,,,,,91,,91,91,,91,91,91,91,91,91',
'91,91,91,91,91,,,,,,,91,,,,,922,,922,922,,922,,,91,,91,922,922,,,,922',
'922,922,922,922,922,922,922,922,922,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,435',
',435,435,,435,,,,,,435,435,,,,435,435,435,435,435,435,435,435,435,435',
',,,,,922,922,,,922,,,,,,,,489,,922,922,,,,,489,489,,,922,489,489,489',
'489,489,489,489,489,489,489,,,489,489,489,,,,,922,922,922,922,922,922',
'922,922,922,922,922,435,435,,,435,,,,,,,,,,435,435,565,,565,565,,565',
',,435,,,565,565,,,,565,565,565,565,565,565,565,565,565,565,,,435,435',
'435,435,435,435,435,435,435,435,435,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,489',
'489,489,489,489,489,489,489,,,,,,,,,,,565,565,,,565,,,,,,,,,,565,565',
',,,,545,74,,74,565,74,74,,545,545,,,,545,545,545,545,545,545,545,545',
'545,545,,565,565,565,565,565,565,565,565,565,565,565,,74,,,,,,,,,74',
'74,74,,74,,,,74,74,,,,74,,74,74,74,74,74,74,74,,,,,,74,74,74,74,74,74',
'74,,,,,74,74,74,74,74,74,74,74,74,74,74,74,74,,74,74,74,,,,,74,,74,74',
',74,74,74,74,74,74,74,74,74,74,74,339,,339,,339,339,74,545,545,545,545',
'545,545,545,545,,,,,74,,74,,,,,,,,,,,,,,339,,,,,,,,,339,339,339,,339',
',,,339,339,,,,339,,339,339,339,339,339,339,339,,,,,,339,339,339,339',
'339,339,339,,,,,339,339,339,339,339,339,339,339,339,339,,339,339,,339',
'339,339,,,,,339,,339,339,,339,339,,,339,339,339,339,339,339,339,412',
'412,,412,,412,412,,,,,,,,,,,,,339,,339,,,,,,,,,,,,,,,412,,,,,,,,,412',
'412,412,412,412,,,,412,412,,,,412,,412,412,412,412,412,412,412,,,,,',
'412,412,412,412,412,412,412,412,,,412,412,412,412,412,412,412,412,412',
'412,412,,412,412,,412,412,412,,,,,412,,412,412,,412,412,412,,412,412',
'412,412,412,412,412,,,,,72,,72,72,,72,,,,,,72,72,,,412,72,72,72,72,72',
'72,72,72,72,72,,,,,,,,,,72,72,72,,,,,,,72,72,72,72,72,72,72,72,72,72',
'72,72,72,72,72,72,72,72,72,72,72,72,72,72,,,,72,72,72,72,72,72,72,72',
',,,72,72,72,72,72,72,,,72,,,,,,,,,,72,72,,,,,838,838,,838,72,838,838',
'72,,,,,,,,,,,,,,,,,72,72,72,72,72,72,72,72,72,72,,,838,,,,,,,,,838,838',
'838,838,838,,,,838,838,,,,838,,838,838,838,838,838,838,838,,,,,,838',
'838,838,838,838,838,838,838,,,838,838,838,838,838,838,838,838,838,838',
'838,,838,838,,838,838,838,,,,,838,,838,838,,838,838,838,,838,838,838',
'838,838,838,838,748,748,,748,,748,748,,,,,,,770,,,,,,838,,770,770,,',
',770,770,770,770,770,770,770,770,770,770,748,,770,770,770,,,,,748,748',
'748,748,748,,,,748,748,,,,748,,748,748,748,748,748,748,748,,,,,,748',
'748,748,748,748,748,748,748,,,748,748,748,748,748,748,748,748,748,748',
'748,,748,748,,748,748,748,,,,,748,,748,748,,748,748,748,,748,748,748',
'748,748,748,748,522,522,,522,,522,522,,,,,,,,,,,,,748,770,770,770,770',
'770,770,770,770,,,,,,,,,522,,,,,,,,,522,522,522,522,522,,,,522,522,',
',,522,,522,522,522,522,522,522,522,,,,,,522,522,522,522,522,522,522',
'522,,,522,522,522,522,522,522,522,522,522,522,522,,522,522,,522,522',
'522,,,,,522,,522,522,,522,522,522,,522,522,522,522,522,522,522,562,562',
',562,,562,562,,,,,,,299,,,,,,522,,299,299,,,,299,299,299,299,299,299',
'299,299,299,299,562,,299,299,299,,,,,562,562,562,562,562,,,,562,562',
',,,562,,562,562,562,562,562,562,562,,,,,,562,562,562,562,562,562,562',
'562,,,562,562,562,562,562,562,562,562,562,562,562,,562,562,,562,562',
'562,,,,,562,,562,562,,562,562,562,,562,562,562,562,562,562,562,529,529',
',529,,529,529,,,,,,,,,,,,,562,299,299,299,299,299,299,299,299,,,,,,',
',,529,,,,,,,,,529,529,529,529,529,,,,529,529,,,,529,,529,529,529,529',
'529,529,529,,,,,,529,529,529,529,529,529,529,529,,,529,529,529,529,529',
'529,529,529,529,529,529,,529,529,,529,529,529,,,,,529,,529,529,,529',
'529,529,,529,529,529,529,529,529,529,,,,,504,,504,504,,504,,,,,,504',
'504,,,529,504,504,504,504,504,504,504,504,504,504,,,,,,,,,,504,504,504',
',,,,,,504,504,504,504,504,504,504,504,504,504,504,504,504,504,504,504',
'504,504,504,504,504,504,504,504,,,,504,504,504,504,504,504,504,504,',
',,504,504,504,504,504,504,,,504,,,,,,,,,,504,504,,,,,849,849,,849,504',
'849,849,504,,,,,,,,,,,,,,,,,504,504,504,504,504,504,504,504,504,504',
',,849,,,,,,,,,849,849,849,849,849,,,,849,849,,,,849,,849,849,849,849',
'849,849,849,,,,,,849,849,849,849,849,849,849,849,,,849,849,849,849,849',
'849,849,849,849,849,849,,849,849,,849,849,849,,,,,849,,849,849,,849',
'849,849,,849,849,849,849,849,849,849,95,95,,95,,95,95,,,,,,,853,,,,',
',849,,853,853,,,,853,853,853,853,853,853,853,853,853,853,95,,853,853',
'853,,,,,95,95,95,95,95,,,,95,95,,,,95,,95,95,95,95,95,95,95,,,,,,95',
'95,95,95,95,95,95,95,,,95,95,95,95,95,95,95,95,95,95,95,,95,95,,95,95',
'95,,,,,95,,95,95,,95,95,95,,95,95,95,95,95,95,95,301,301,,301,,301,301',
',,,,,,,,,,,,95,853,853,853,853,853,853,853,853,,,,,,,,,301,,,,,,,,,301',
'301,301,301,301,,,,301,301,,,,301,,301,301,301,301,301,301,301,,,,,',
'301,301,301,301,301,301,301,301,,,301,301,301,301,301,301,301,301,301',
'301,301,,301,301,,301,301,301,,,,,301,,301,301,,301,301,301,,301,301',
'301,301,301,301,301,855,855,,855,,855,855,,,,,,,720,,,,,,301,,720,720',
',,,720,720,720,720,720,720,720,720,720,720,855,,720,720,720,,,,,855',
'855,855,855,855,,,,855,855,,,,855,,855,855,855,855,855,855,855,,,,,',
'855,855,855,855,855,855,855,855,,,855,855,855,855,855,855,855,855,855',
'855,855,,855,855,,855,855,855,,,,,855,,855,855,,855,855,855,,855,855',
'855,855,855,855,855,413,413,,413,,413,413,,,,,,,,,,,,,855,720,720,720',
'720,720,720,720,720,,,,,,,,,413,,,,,,,,,413,413,413,413,413,,,,413,413',
',,,413,,413,413,413,413,413,413,413,,,,,,413,413,413,413,413,413,413',
'413,,,413,413,413,413,413,413,413,413,413,413,413,,413,413,,413,413',
'413,,,,,413,,413,413,,413,413,413,,413,413,413,413,413,413,413,830,830',
',830,,830,830,,,,,,,536,,,,,,413,,536,536,,,,536,536,536,536,536,536',
'536,536,536,536,830,,536,536,536,,,,,830,830,830,830,830,,,,830,830',
',,,830,,830,830,830,830,830,830,830,,,,,,830,830,830,830,830,830,830',
'830,,,830,830,830,830,830,830,830,830,830,830,830,,830,830,,830,830',
'830,,,,,830,,830,830,,830,830,830,,830,830,830,830,830,830,830,589,589',
',589,,589,589,,,,,,,,,,,,,830,536,536,536,536,536,536,536,536,,,,,,',
',,589,,,,,,,,,589,589,589,589,589,,,,589,589,,,,589,,589,589,589,589',
'589,589,589,,,,,,589,589,589,589,589,589,589,589,,,589,589,589,589,589',
'589,589,589,589,589,589,,589,589,,589,589,589,,,,,589,,589,589,,589',
'589,589,,589,589,589,589,589,589,589,,,,,625,,625,625,,625,,,,,,625',
'625,,,589,625,625,625,625,625,625,625,625,625,625,,,,,,,,,,625,625,625',
',,,,,,625,625,625,625,625,625,625,625,625,625,625,625,625,625,625,625',
'625,625,625,625,625,625,625,625,,,,625,625,625,625,625,625,625,625,',
',,625,625,625,625,625,625,,,625,,,,,,,,,,625,625,,,,,629,629,,629,625',
'629,629,,,,,,,,,,,,,,,,,,625,625,625,625,625,625,625,625,625,625,,,629',
',,,,,,,,629,629,629,629,629,,,,629,629,,,,629,,629,629,629,629,629,629',
'629,,,,,,629,629,629,629,629,629,629,629,,,629,629,629,629,629,629,629',
'629,629,629,629,,629,629,,629,629,629,,,,,629,,629,629,,629,629,629',
',629,629,629,629,629,629,629,76,76,,76,,76,76,,,,,,,819,,,,,,629,,819',
'819,,,,819,819,819,819,819,819,819,819,819,819,76,,819,819,819,,,,,76',
'76,76,76,76,,,,76,76,,,,76,,76,76,76,76,76,76,76,,,,,,76,76,76,76,76',
'76,76,76,,,76,76,76,76,76,76,76,76,76,76,76,,76,76,,76,76,76,,,,,76',
',76,76,,76,76,76,,76,76,76,76,76,76,76,272,272,,272,,272,272,,,,,,,',
',,,,,76,819,819,819,819,819,819,819,819,,,,,,,,,272,,,,,,,,,272,272',
'272,272,272,,,,272,272,,,,272,,272,272,272,272,272,272,272,,,,,,272',
'272,272,272,272,272,272,272,,,272,272,272,272,272,272,272,272,272,272',
'272,,272,272,,272,272,272,,,,,272,,272,272,,272,272,272,,272,272,272',
'272,272,272,272,359,359,,359,,359,359,,,,,,,817,,,,,,272,,817,817,,',
',817,817,817,817,817,817,817,817,817,817,359,,817,817,817,,,,,359,359',
'359,359,359,,,,359,359,,,,359,,359,359,359,359,359,359,359,,,,,,359',
'359,359,359,359,359,359,359,,,359,359,359,359,359,359,359,359,359,359',
'359,,359,359,,359,359,359,,,,,359,,359,359,,359,359,359,,359,359,359',
'359,359,359,359,486,486,,486,,486,486,,,,,,,,,,,,,359,817,817,817,817',
'817,817,817,817,,,,,,,,,486,,,,,,,,,486,486,486,486,486,,,,486,486,',
',,486,,486,486,486,486,486,486,486,,,,,,486,486,486,486,486,486,486',
'486,,,486,486,486,486,486,486,486,486,486,486,486,,486,486,,486,486',
'486,,,,,486,,486,486,,486,486,486,,486,486,486,486,486,486,486,,,,,361',
',361,361,,361,,,,,,361,361,,,486,361,361,361,361,361,361,361,361,361',
'361,,,,,,,,,,,,,,,,,,,,,,,,,,,,,362,,362,362,,362,,,,,,362,362,,,,362',
'362,362,362,362,362,362,362,362,362,,,,,,,361,361,,,361,,,,,,,,,,361',
'361,,,,,,,,,361,,,,,,,,,,,,,,,,,,,,361,361,361,361,361,361,361,361,361',
'361,362,362,,,362,,,,,,,,,,362,362,,,,,915,915,,915,362,915,915,,,,',
',,,,,,,,,,,,,362,362,362,362,362,362,362,362,362,362,,,915,,,,,,,,,915',
'915,915,915,915,,,,915,915,,,,915,,915,915,915,915,915,915,915,,,,,',
'915,915,915,915,915,915,915,915,,,915,915,915,915,915,915,915,915,915',
'915,915,,915,915,,915,915,915,,,,,915,,915,915,,915,915,915,,915,915',
'915,915,915,915,915,,,,,33,,33,33,,33,,,,,,33,33,,,915,33,33,33,33,33',
'33,33,33,33,33,,,,,,,,,,33,33,33,,,,,,,33,33,33,33,33,33,33,33,33,33',
'33,33,33,33,33,33,33,33,33,33,33,33,33,33,,,,33,33,33,33,33,33,33,33',
',,,33,33,33,33,33,33,33,,33,,,,,,,,,,33,33,,,,,461,461,,461,33,461,461',
'33,,,,,,,,,,,,,,,,,33,33,33,33,33,33,33,33,33,33,,,461,,,,,,,,,461,461',
'461,461,461,,,,461,461,,,,461,,461,461,461,461,461,461,461,,,,,,461',
'461,461,461,461,461,461,461,,,461,461,461,461,461,461,461,461,461,461',
'461,,461,461,,461,461,461,,,,,461,,461,461,,461,461,461,,461,461,461',
'461,461,461,461,755,755,,755,,755,755,,,,,,,538,,,,,,461,,538,538,,',
',538,538,538,538,538,538,538,538,538,538,755,,538,538,538,,,,,755,755',
'755,755,755,,,,755,755,,,,755,,755,755,755,755,755,755,755,,,,,,755',
'755,755,755,755,755,755,755,,,755,755,755,755,755,755,755,755,755,755',
'755,,755,755,,755,755,755,,,,,755,,755,755,,755,755,755,,755,755,755',
'755,755,755,755,386,386,,386,,386,386,,,,,,,,,,,,,755,538,538,538,538',
'538,538,538,538,,,,,,,,,386,,,,,,,,,386,386,386,386,386,,,,386,386,',
',,386,,386,386,386,386,386,386,386,,,,,,386,386,386,386,386,386,386',
'386,,,386,386,386,386,386,386,386,386,386,386,386,,386,386,,386,386',
'386,,,,,386,,386,386,,386,386,386,,386,386,386,386,386,386,386,454,454',
',454,,454,454,,,,,,,813,,,,,,386,,813,813,,,,813,813,813,813,813,813',
'813,813,813,813,454,,813,813,813,,,,,454,454,454,454,454,,,,454,454',
',,,454,,454,454,454,454,454,454,454,,,,,,454,454,454,454,454,454,454',
'454,,,454,454,454,454,454,454,454,454,454,454,454,,454,454,,454,454',
'454,,,,,454,,454,454,,454,454,454,,454,454,454,454,454,454,454,451,451',
',451,,451,451,,,,,,,,,,,,,454,813,813,813,813,813,813,813,813,,,,,,',
',,451,,,,,,,,,451,451,451,451,451,,,,451,451,,,,451,,451,451,451,451',
'451,451,451,,,,,,451,451,451,451,451,451,451,451,,,451,451,451,451,451',
'451,451,451,451,451,451,,451,451,,451,451,451,,,,,451,,451,451,,451',
'451,451,,451,451,451,451,451,451,451,,,,,12,,12,12,,12,,,,,,12,12,,',
'451,12,12,12,12,12,12,12,12,12,12,,,,,,,,,,12,12,12,,,,,,,12,12,12,12',
'12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,,,,12,12',
'12,12,12,12,12,12,,,,12,12,12,12,12,12,12,12,12,12,,,,,,,,,12,12,,,',
',676,676,,676,12,676,676,,,,,,,,,,,,,,,,,,12,12,12,12,12,12,12,12,12',
'12,,,676,,,,,,,,,676,676,676,676,676,,,,676,676,,,,676,,676,676,676',
'676,676,676,676,,,,,,676,676,676,676,676,676,676,676,,,676,676,676,676',
'676,676,676,676,676,676,676,,676,676,,676,676,676,,,,,676,,676,676,',
'676,676,676,,676,676,676,676,676,676,676,3,3,,3,,3,3,,,,,,,811,,,,,',
'676,,811,811,,,,811,811,811,811,811,811,811,811,811,811,3,,811,811,811',
',,,,3,3,3,3,3,,,,3,3,,,,3,,3,3,3,3,3,3,3,,,,,,3,3,3,3,3,3,3,3,,,3,3',
'3,3,3,3,3,3,3,3,3,,3,3,,3,3,3,,,,,3,,3,3,,3,3,3,,3,3,3,3,3,3,3,156,156',
',156,,156,156,,,,,,,,,,,,,3,811,811,811,811,811,811,811,811,,,,,,,,',
'156,,,,,,,,,156,156,156,156,156,,,,156,156,,,,156,,156,156,156,156,156',
'156,156,,,,,,156,156,156,156,156,156,156,156,,,156,156,156,156,156,156',
'156,156,156,156,156,,156,156,,156,156,156,,,,,156,,156,156,,156,156',
'156,,156,156,156,156,156,156,156,893,893,,893,,893,893,,,,,,,,,,,,,156',
',,,,,,,,,,,,,,,,893,,,,,,,,,893,893,893,893,893,,,,893,893,,,,893,,893',
'893,893,893,893,893,893,,,,,,893,893,893,893,893,893,893,893,,,893,893',
'893,893,893,893,893,893,893,893,893,,893,893,,893,893,893,,,,,893,,893',
'893,,893,893,893,,893,893,893,893,893,893,893,,,,,564,,564,564,,564',
',,,,,564,564,,,893,564,564,564,564,564,564,564,564,564,564,,,,,,,,,',
'564,564,564,,,,,,,564,564,564,564,564,564,564,564,564,564,564,564,564',
'564,564,564,564,564,564,564,564,564,564,564,,,,564,564,564,564,564,564',
'564,564,,,,564,564,564,564,564,564,,,564,,,,,,,,,,564,564,,,,,563,563',
',563,564,563,563,564,,,,,,,,,,,,,,,,,564,564,564,564,564,564,564,564',
'564,564,,,563,,,,,,,,,563,563,563,563,563,,,,563,563,,,,563,,563,563',
'563,563,563,563,563,,,,,,563,563,563,563,563,563,563,563,,,563,563,563',
'563,563,563,563,563,563,563,563,,563,563,,563,563,563,,,,,563,,563,563',
',563,563,563,,563,563,563,563,563,563,563,526,526,,526,,526,526,,,,',
',,541,,,,,,563,,541,541,,,,541,541,541,541,541,541,541,541,541,541,526',
',541,541,541,,,,,526,526,526,526,526,,,,526,526,,,,526,,526,526,526',
'526,526,526,526,,,,,,526,526,526,526,526,526,526,526,,,526,526,526,526',
'526,526,526,526,526,526,526,,526,526,,526,526,526,,,,,526,,526,526,',
'526,526,526,,526,526,526,526,526,526,526,684,,684,,684,684,,,,,,,,,',
',,,,526,541,541,541,541,541,541,541,541,,,,,,,,684,,,,,,,,,684,684,684',
',684,,,,684,684,,,,684,,684,684,684,684,684,684,684,,,,,,684,684,684',
'684,684,684,684,,,,,684,684,684,684,684,684,684,684,684,684,,684,684',
',684,684,684,,,,,684,,684,684,,684,684,,,684,684,684,684,684,684,684',
'151,,151,,151,151,,,,,,,544,,,,,,,684,544,544,,,,544,544,544,544,544',
'544,544,544,544,544,151,,544,544,544,,,,,151,151,151,,151,,,,151,151',
',,,151,,151,151,151,151,151,151,151,,,,,,151,151,151,151,151,151,151',
',,,,151,151,151,151,151,151,151,151,151,151,151,151,151,,151,151,151',
',,,,151,,151,151,,151,151,151,151,151,151,151,151,151,151,151,560,,560',
',560,560,,,,,,,,,,,,,,151,544,544,544,544,544,544,544,544,,,,,,,,560',
',,,,,,,,560,560,560,,560,,,,560,560,,,,560,,560,560,560,560,560,560',
'560,,,,,,560,560,560,560,560,560,560,,,,,560,560,560,560,560,560,560',
'560,560,560,,560,560,,560,560,560,,,,,560,,560,560,,560,560,,,560,560',
'560,560,560,560,560,795,,795,,795,795,,,,,,,878,,,,,,,560,878,878,,',
',878,878,878,878,878,878,878,878,878,878,795,,878,878,878,,,,,795,795',
'795,,795,,,,795,795,,,,795,,795,795,795,795,795,795,795,,,,,,795,795',
'795,795,795,795,795,,,,,795,795,795,795,795,795,795,795,795,795,,795',
'795,,795,795,795,,,,,795,,795,795,,795,795,,,795,795,795,795,795,795',
'795,409,,409,,409,409,,,,,,,,,,,,,,795,878,878,878,878,878,878,878,878',
',,,,,,,409,,,,,,,,,409,409,409,,409,,,,409,409,,,,409,,409,409,409,409',
'409,409,409,,,,,,409,409,409,409,409,409,409,,,,,409,409,409,409,409',
'409,409,409,409,409,,409,409,,409,409,409,,,,,409,,409,409,,409,409',
',,409,409,409,409,409,409,409,140,,140,,140,140,,,,,,,546,,,,,,,409',
'546,546,,,,546,546,546,546,546,546,546,546,546,546,140,,546,546,546',
',,,,140,140,140,,140,,,,140,140,,,,140,,140,140,140,140,140,140,140',
',,,,,140,140,140,140,140,140,140,,,,,140,140,140,140,140,140,140,140',
'140,140,,140,140,,140,140,140,,,,,140,,140,140,,140,140,,,140,140,140',
'140,140,140,140,558,,558,,558,558,,,,,,,,,,,,,,140,546,546,546,546,546',
'546,546,546,,,,,,,,558,,,,,,,,,558,558,558,,558,,,,558,558,,,,558,,558',
'558,558,558,558,558,558,,,,,,558,558,558,558,558,558,558,,,,,558,558',
'558,558,558,558,558,558,558,558,,558,558,,558,558,558,,,,,558,,558,558',
',558,558,,,558,558,558,558,558,558,558,794,,794,,794,794,,,,,,,547,',
',,,,,558,547,547,,,,547,547,547,547,547,547,547,547,547,547,794,,,,',
',,,,794,794,794,,794,,,,794,794,,,,794,,794,794,794,794,794,794,794',
',,,,,794,794,794,794,794,794,794,,,,,794,794,794,794,794,794,794,794',
'794,794,,794,794,,794,794,794,,,,,794,,794,794,,794,794,,,794,794,794',
'794,794,794,794,566,,566,,566,566,,,,,,,,,,,,,,794,547,547,547,547,547',
'547,547,547,,,,,,,,566,,,,,,,,,566,566,566,,566,,,,566,566,,,,566,,566',
'566,566,566,566,566,566,,,,,,566,566,566,566,566,566,566,,,,,566,566',
'566,566,566,566,566,566,566,566,566,566,566,,566,566,566,,,,,566,,566',
'566,,566,566,566,566,566,566,566,566,566,566,566,163,,163,,163,163,',
',,,,,549,,,,,,,566,549,549,,,,549,549,549,549,549,549,549,549,549,549',
'163,,549,549,549,,,,,163,163,163,,163,,,,163,163,,,,163,,163,163,163',
'163,163,163,163,,,,,,163,163,163,163,163,163,163,,,,,163,163,163,163',
'163,163,163,163,163,163,,163,163,,163,163,163,,,,,163,,163,163,,163',
'163,,,163,163,163,163,163,163,163,164,,164,,164,164,,,,,,,,,,,,,,163',
'549,549,549,549,549,549,549,549,,,,,,,,164,,,,,,,,,164,164,164,,164',
',,,164,164,,,,164,,164,164,164,164,164,164,164,,,,,,164,164,164,164',
'164,164,164,,,,,164,164,164,164,164,164,164,164,164,164,,164,164,,164',
'164,164,,,,,164,,164,164,,164,164,,,164,164,164,164,164,164,164,792',
',792,,792,792,,,,,,,550,,,,,,,164,550,550,,,,550,550,550,550,550,550',
'550,550,550,550,792,,550,550,550,,,,,792,792,792,,792,,,,792,792,,,',
'792,,792,792,792,792,792,792,792,,,,,,792,792,792,792,792,792,792,,',
',,792,792,792,792,792,792,792,792,792,792,,792,792,,792,792,792,,,,',
'792,,792,792,,792,792,,,792,792,792,792,792,792,792,166,,166,,166,166',
',,,,,,,,,,,,,792,550,550,550,550,550,550,550,550,,,,,,,,166,,,,,,,,',
'166,166,166,,166,,,,166,166,,,,166,,166,166,166,166,166,166,166,,,,',
',166,166,166,166,166,166,166,,,,,166,166,166,166,166,166,166,166,166',
'166,,166,166,,166,166,166,,,,,166,,166,166,,166,166,,,166,166,166,166',
'166,166,166,434,,434,,434,434,,,,,,,675,,,,,,,166,675,675,,,,675,675',
'675,675,675,675,675,675,675,675,434,,675,675,675,,675,,,434,434,434',
',434,,,,434,434,,,,434,,434,434,434,434,434,434,434,,,,,,434,434,434',
'434,434,434,434,,,,,434,434,434,434,434,434,434,434,434,434,,434,434',
',434,434,434,,,,,434,,434,434,,434,434,,,434,434,434,434,434,434,434',
'569,,569,,569,569,,,,,,,,,,,,,,434,675,675,675,675,675,675,675,675,',
',,,,,,569,,,,,,,,,569,569,569,,569,,,,569,569,,,,569,,569,569,569,569',
'569,569,569,,,,,,569,569,569,569,569,569,569,,,,,569,569,569,569,569',
'569,569,569,569,569,,569,569,,569,569,569,,,,,569,,569,569,,569,569',
',,569,569,569,569,569,569,569,757,,757,,757,757,,,,,,,552,,,,,,,569',
'552,552,,,,552,552,552,552,552,552,552,552,552,552,757,,552,552,552',
',,,,757,757,757,,757,,,,757,757,,,,757,,757,757,757,757,757,757,757',
',,,,,757,757,757,757,757,757,757,,,,,757,757,757,757,757,757,757,757',
'757,757,,757,757,,757,757,757,,,,,757,,757,757,,757,757,757,,757,757',
'757,757,757,757,757,253,,253,,253,253,,,,,,,,,,,,,,757,552,552,552,552',
'552,552,552,552,,,,,,,,253,,,,,,,,,253,253,253,,253,,,,253,253,,,,253',
',253,253,253,253,253,253,253,,,,,,253,253,253,253,253,253,253,,,,,253',
'253,253,253,253,253,253,253,253,253,253,253,253,,253,253,253,,,,,253',
',253,253,,253,253,253,253,253,253,253,253,253,253,253,111,,111,,111',
'111,,,,,,,554,,,,,,,253,554,554,,,,554,554,554,554,554,554,554,554,554',
'554,111,,554,554,,,,,,111,111,111,,111,,,,111,111,,,,111,,111,111,111',
'111,111,111,111,,,,,,111,111,111,111,111,111,111,,,,,111,111,111,111',
'111,111,111,111,111,111,,111,111,,111,111,111,,,,,111,,111,111,,111',
'111,,,111,111,111,111,111,111,111,683,,683,,683,683,,,,,,,,,,,,,,111',
'554,554,554,554,554,554,554,554,,,,,,,,683,,,,,,,,,683,683,683,,683',
',,,683,683,,,,683,,683,683,683,683,683,683,683,,,,,,683,683,683,683',
'683,683,683,,,,,683,683,683,683,683,683,683,683,683,683,,683,683,,683',
'683,683,,,,,683,,683,683,,683,683,,,683,683,683,683,683,683,683,436',
',436,,436,436,,,,,,,556,,,,,,,683,556,556,,,,556,556,556,556,556,556',
'556,556,556,556,436,,556,556,,,,,,436,436,436,,436,,,,436,436,,,,436',
',436,436,436,436,436,436,436,,,,,,436,436,436,436,436,436,436,,,,,436',
'436,436,436,436,436,436,436,436,436,436,436,436,,436,436,436,,,,,436',
',436,436,,436,436,436,436,436,436,436,436,436,436,436,400,,400,,400',
'400,,,,,,,,,,,,,,436,556,556,556,556,556,556,556,556,,,,,,,,400,,,,',
',,,,400,400,400,,400,,,,400,400,,,,400,,400,400,400,400,400,400,400',
',,,,,400,400,400,400,400,400,400,,,,,400,400,400,400,400,400,400,400',
'400,400,,400,400,,400,400,400,,,,,400,,400,400,,400,400,,,400,400,400',
'400,400,400,400,440,,440,,440,440,,,,,,,407,,,,,,,400,407,407,,,,407',
'407,407,407,407,407,407,407,407,407,440,,407,407,407,,407,,,440,440',
'440,,440,,,,440,440,,,,440,,440,440,440,440,440,440,440,,,,,,440,440',
'440,440,440,440,440,,,,,440,440,440,440,440,440,440,440,440,440,440',
'440,440,,440,440,440,,,,,440,,440,440,,440,440,440,440,440,440,440,440',
'440,440,440,441,,441,,441,441,,,,,,,,,,,,,,440,407,407,407,407,407,407',
'407,407,,,,,,,,441,,,,,,,,,441,441,441,,441,,,,441,441,,,,441,,441,441',
'441,441,441,441,441,,,,,,441,441,441,441,441,441,441,,,,,441,441,441',
'441,441,441,441,441,441,441,,441,441,,441,441,441,,,,,441,,441,441,',
'441,441,,,441,441,441,441,441,441,441,443,,443,,443,443,,,,,,,,,,,,',
',441,,,,,,,,,,,,,,,,443,,,,,,,,,443,443,443,,443,,,,443,443,,,,443,',
'443,443,443,443,443,443,443,,,,,,443,443,443,443,443,443,443,,,,,443',
'443,443,443,443,443,443,443,443,443,443,443,443,,443,443,443,,,,,443',
',443,443,,443,443,,443,443,443,443,443,443,443,443,263,,263,,263,263',
',,,,,,,,,,,,,443,,,,,,,,,,,,,,,,263,,,,,,,,,263,263,263,,263,,,,263',
'263,,,,263,,263,263,263,263,263,263,263,,,,,,263,263,263,263,263,263',
'263,,,,,263,263,263,263,263,263,263,263,263,263,,263,263,,263,263,263',
',,,,263,,263,263,,263,263,,,263,263,263,263,263,263,263,444,,444,,444',
'444,,,,,,,,,,,,,,263,,,,,,,,,,,,,,,,444,,,,,,,,,444,444,444,,444,,,',
'444,444,,,,444,,444,444,444,444,444,444,444,,,,,,444,444,444,444,444',
'444,444,,,,,444,444,444,444,444,444,444,444,444,444,,444,444,,444,444',
'444,,,,,444,,444,444,,444,444,,,444,444,444,444,444,444,444,689,,689',
',689,689,,,,,,,,,,,,,,444,,,,,,,,,,,,,,,,689,,,,,,,,,689,689,689,,689',
',,,689,689,,,,689,,689,689,689,689,689,689,689,,,,,,689,689,689,689',
'689,689,689,,,,,689,689,689,689,689,689,689,689,689,689,,689,689,,689',
'689,689,,,,,689,,689,689,,689,689,,,689,689,689,689,689,689,689,690',
',690,,690,690,,,,,,,,,,,,,,689,,,,,,,,,,,,,,,,690,,,,,,,,,690,690,690',
',690,,,,690,690,,,,690,,690,690,690,690,690,690,690,,,,,,690,690,690',
'690,690,690,690,,,,,690,690,690,690,690,690,690,690,690,690,,690,690',
',690,690,690,,,,,690,,690,690,,690,690,,,690,690,690,690,690,690,690',
'392,,392,,392,392,,,,,,,,,,,,,,690,,,,,,,,,,,,,,,,392,,,,,,,,,392,392',
'392,,392,,,,392,392,,,,392,,392,392,392,392,392,392,392,,,,,,392,392',
'392,392,392,392,392,,,,,392,392,392,392,392,392,392,392,392,392,,392',
'392,,392,392,392,,,,,392,,392,392,,392,392,,,392,392,392,392,392,392',
'392,391,,391,,391,391,,,,,,,,,,,,,,392,,,,,,,,,,,,,,,,391,,,,,,,,,391',
'391,391,,391,,,,391,391,,,,391,,391,391,391,391,391,391,391,,,,,,391',
'391,391,391,391,391,391,,,,,391,391,391,391,391,391,391,391,391,391',
',391,391,,391,391,391,,,,,391,,391,391,,391,391,391,,391,391,391,391',
'391,391,391,661,,661,,661,661,,,,,,,,,,,,,,391,,,,,,,,,,,,,,,,661,,',
',,,,,,661,661,661,,661,,,,661,661,,,,661,,661,661,661,661,661,661,661',
',,,,,661,661,661,661,661,661,661,,,,,661,661,661,661,661,661,661,661',
'661,661,,661,661,,661,661,661,,,,,661,,661,661,,661,661,,,661,661,661',
'661,661,661,661,455,,455,,455,455,,,,,,,,,,,,,,661,,,,,,,,,,,,,,,,455',
',,,,,,,,455,455,455,,455,,,,455,455,,,,455,,455,455,455,455,455,455',
'455,,,,,,455,455,455,455,455,455,455,,,,,455,455,455,455,455,455,455',
'455,455,455,,455,455,,455,455,455,,,,,455,,455,455,,455,455,,,455,455',
'455,455,455,455,455,867,,867,,867,867,,,,,,,,,,,,,,455,,,,,,,,,,,,,',
',,867,,,,,,,,,867,867,867,,867,,,,867,867,,,,867,,867,867,867,867,867',
'867,867,,,,,,867,867,867,867,867,867,867,,,,,867,867,867,867,867,867',
'867,867,867,867,,867,867,,867,867,867,,,,,867,,867,867,,867,867,,,867',
'867,867,867,867,867,867,583,,583,,583,583,,,,,,,,,,,,,,867,,,,,,,,,',
',,,,,,583,,,,,,,,,583,583,583,,583,,,,583,583,,,,583,,583,583,583,583',
'583,583,583,,,,,,583,583,583,583,583,583,583,,,,,583,583,583,583,583',
'583,583,583,583,583,583,583,583,,583,583,583,,,,,583,,583,583,,583,583',
'583,583,583,583,583,583,583,583,583,17,,17,,17,17,,,,,,,,,,,,,,583,',
',,,,,,,,,,,,,,17,,,,,,,,,17,17,17,17,17,,,,17,17,,,,17,,17,17,17,17',
'17,17,17,,,,,,17,17,17,17,17,17,17,17,,,17,17,17,17,17,17,17,17,17,17',
'17,,17,17,,17,17,17,,,,,17,,17,17,,17,17,17,,17,17,17,17,17,17,17,21',
',21,,21,21,,,,,,,,,,,,,,17,,,,,,,,,,,,,,,,21,,,,,,,,,21,21,21,,21,,',
',21,21,,,,21,,21,21,21,21,21,21,21,,,,,,21,21,21,21,21,21,21,,,,,21',
'21,21,21,21,21,21,21,21,21,,21,21,,21,21,21,,,,,21,,21,21,,21,21,,,21',
'21,21,21,21,21,21,26,,26,,26,26,,,,,,,,,,,,,,21,,,,,,,,,,,,,,,,26,,',
',,,,,,26,26,26,,26,,,,26,26,,,,26,,26,26,26,26,26,26,26,,,,,,26,26,26',
'26,26,26,26,,,,,26,26,26,26,26,26,26,26,26,26,,26,26,,26,26,26,,,,,26',
',26,26,,26,26,,,26,26,26,26,26,26,26,591,,591,,591,591,,,,,,,,,,,,,',
'26,,,,,,,,,,,,,,,,591,,,,,,,,,591,591,591,,591,,,,591,591,,,,591,,591',
'591,591,591,591,591,591,,,,,,591,591,591,591,591,591,591,,,,,591,591',
'591,591,591,591,591,591,591,591,,591,591,,591,591,591,,,,,591,,591,591',
',591,591,,,591,591,591,591,591,591,591,379,,379,,379,379,,,,,,,,,,,',
',,591,,,,,,,,,,,,,,,,379,,,,,,,,,379,379,379,,379,,,,379,379,,,,379',
',379,379,379,379,379,379,379,,,,,,379,379,379,379,379,379,379,,,,,379',
'379,379,379,379,379,379,379,379,379,,379,379,,379,379,379,,,,,379,,379',
'379,,379,379,379,,379,379,379,379,379,379,379,816,,816,,816,816,,,,',
',,,,,,,,,379,,,,,,,,,,,,,,,,816,,,,,,,,,816,816,816,,816,,,,816,816',
',,,816,,816,816,816,816,816,816,816,,,,,,816,816,816,816,816,816,816',
',,,,816,816,816,816,816,816,816,816,816,816,,816,816,,816,816,816,,',
',,816,,816,816,,816,816,,,816,816,816,816,816,816,816,32,,32,,32,32',
',,,,,,,,,,,,,816,,,,,,,,,,,,,,,,32,,,,,,,,,32,32,32,,32,,,,32,32,,,',
'32,,32,32,32,32,32,32,32,,,,,,32,32,32,32,32,32,32,,,,,32,32,32,32,32',
'32,32,32,32,32,,32,32,,32,32,32,,,,,32,,32,32,,32,32,,,32,32,32,32,32',
'32,32,370,,370,,370,370,,,,,,,,,,,,,,32,,,,,,,,,,,,,,,,370,,,,,,,,,370',
'370,370,,370,,,,370,370,,,,370,,370,370,370,370,370,370,370,,,,,,370',
'370,370,370,370,370,370,,,,,370,370,370,370,370,370,370,370,370,370',
',370,370,,370,370,370,,,,,370,,370,370,,370,370,,,370,370,370,370,370',
'370,370,97,,97,,97,97,,,,,,,,,,,,,,370,,,,,,,,,,,,,,,,97,,,,,,,,,97',
'97,97,,97,,,,97,97,,,,97,,97,97,97,97,97,97,97,,,,,,97,97,97,97,97,97',
'97,,,,,97,97,97,97,97,97,97,97,97,97,97,97,97,,97,97,97,,,,,97,,97,97',
',97,97,,,97,97,97,97,97,97,97,534,,534,,534,534,,,,,,,,,,,,,,97,,,,',
',,,,,,,,,,,534,,,,,,,,,534,534,534,,534,,,,534,534,,,,534,,534,534,534',
'534,534,534,534,,,,,,534,534,534,534,534,534,534,,,,,534,534,534,534',
'534,534,534,534,534,534,,534,534,,534,534,534,,,,,534,,534,534,,534',
'534,,,534,534,534,534,534,534,534,44,,44,,44,44,,,,,,,,,,,,,,534,,,',
',,,,,,,,,,,,44,,,,,,,,,44,44,44,,44,,,,44,44,,,,44,,44,44,44,44,44,44',
'44,,,,,,44,44,44,44,44,44,44,,,,,44,44,44,44,44,44,44,44,44,44,,44,44',
',44,44,44,,,,,44,,44,44,,44,44,,,44,44,44,44,44,44,44,852,,852,,852',
'852,,,,,,,,,,,,,,44,,,,,,,,,,,,,,,,852,,,,,,,,,852,852,852,,852,,,,852',
'852,,,,852,,852,852,852,852,852,852,852,,,,,,852,852,852,852,852,852',
'852,,,,,852,852,852,852,852,852,852,852,852,852,,852,852,,852,852,852',
',,,,852,,852,852,,852,852,,,852,852,852,852,852,852,852,292,,292,,292',
'292,,,,,,,,,,,,,,852,,,,,,,,,,,,,,,,292,,,,,,,,,292,292,292,292,292',
',,,292,292,,,,292,,292,292,292,292,292,292,292,,,,,,292,292,292,292',
'292,292,292,292,,,292,292,292,292,292,292,292,292,292,292,292,,292,292',
',292,292,292,,,,,292,,292,292,,292,292,292,,292,292,292,292,292,292',
'292,293,,293,,293,293,,,,,,,,,,,,,,292,,,,,,,,,,,,,,,,293,,,,,,,,,293',
'293,293,,293,,,,293,293,,,,293,,293,293,293,293,293,293,293,,,,,,293',
'293,293,293,293,293,293,,,,,293,293,293,293,293,293,293,293,293,293',
',293,293,,293,293,293,,,,,293,,293,293,,293,293,,,293,293,293,293,293',
'293,293,294,,294,,294,294,,,,,,,,,,,,,,293,,,,,,,,,,,,,,,,294,,,,,,',
',,294,294,294,,294,,,,294,294,,,,294,,294,294,294,294,294,294,294,,',
',,,294,294,294,294,294,294,294,,,,,294,294,294,294,294,294,294,294,294',
'294,,294,294,,294,294,294,,,,,294,,294,294,,294,294,,,294,294,294,294',
'294,294,294,295,,295,,295,295,,,,,,,,,,,,,,294,,,,,,,,,,,,,,,,295,,',
',,,,,,295,295,295,,295,,,,295,295,,,,295,,295,295,295,295,295,295,295',
',,,,,295,295,295,295,295,295,295,,,,,295,295,295,295,295,295,295,295',
'295,295,,295,295,,295,295,295,,,,,295,,295,295,,295,295,,,295,295,295',
'295,295,295,295,296,,296,,296,296,,,,,,,,,,,,,,295,,,,,,,,,,,,,,,,296',
',,,,,,,,296,296,296,,296,,,,296,296,,,,296,,296,296,296,296,296,296',
'296,,,,,,296,296,296,296,296,296,296,,,,,296,296,296,296,296,296,296',
'296,296,296,,296,296,,296,296,296,,,,,296,,296,296,,296,296,,,296,296',
'296,296,296,296,296,533,,533,,533,533,,,,,,,,,,,,,,296,,,,,,,,,,,,,',
',,533,,,,,,,,,533,533,533,,533,,,,533,533,,,,533,,533,533,533,533,533',
'533,533,,,,,,533,533,533,533,533,533,533,,,,,533,533,533,533,533,533',
'533,533,533,533,,533,533,,533,533,533,,,,,533,,533,533,,533,533,,,533',
'533,533,533,533,533,533,46,,46,,46,46,,,,,,,,,,,,,,533,,,,,,,,,,,,,',
',,46,,,,,,,,,46,46,46,,46,,,,46,46,,,,46,,46,46,46,46,46,46,46,,,,,',
'46,46,46,46,46,46,46,,,,,46,46,46,46,46,46,46,46,46,46,46,46,46,,46',
'46,46,,,,,46,,46,46,,46,46,46,46,46,46,46,46,46,46,46,47,,47,,47,47',
',,,,,,,,,,,,,46,,,,,,,,,,,,,,,,47,,,,,,,,,47,47,47,,47,,,,47,47,,,,47',
',47,47,47,47,47,47,47,,,,,,47,47,47,47,47,47,47,,,,,47,47,47,47,47,47',
'47,47,47,47,,47,47,,47,47,47,,,,,47,,47,47,,47,47,,,47,47,47,47,47,47',
'47,921,,921,,921,921,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,921,,,,,,,,,921',
'921,921,,921,,,,921,921,,,,921,,921,921,921,921,921,921,921,,,,,,921',
'921,921,921,921,921,921,,,,,921,921,921,921,921,921,921,921,921,921',
'921,921,921,,921,921,921,,,,,921,,921,921,,921,921,921,921,921,921,921',
'921,921,921,921,758,,758,,758,758,,,,,,,,,,,,,,921,,,,,,,,,,,,,,,,758',
',,,,,,,,758,758,758,,758,,,,758,758,,,,758,,758,758,758,758,758,758',
'758,,,,,,758,758,758,758,758,758,758,,,,,758,758,758,758,758,758,758',
'758,758,758,,758,758,,758,758,758,,,,,758,,758,758,,758,758,,,758,758',
'758,758,758,758,758,303,,303,,303,303,,,,,,,,,,,,,,758,,,,,,,,,,,,,',
',,303,,,,,,,,,303,303,303,,303,,,,303,303,,,,303,,303,303,303,303,303',
'303,303,,,,,,303,303,303,303,303,303,303,,,,,303,303,303,303,303,303',
'303,303,303,303,,303,303,,303,303,303,,,,,303,,303,303,,303,303,,,303',
'303,303,303,303,303,303,304,,304,,304,304,,,,,,,,,,,,,,303,,,,,,,,,',
',,,,,,304,,,,,,,,,304,304,304,,304,,,,304,304,,,,304,,304,304,304,304',
'304,304,304,,,,,,304,304,304,304,304,304,304,,,,,304,304,304,304,304',
'304,304,304,304,304,,304,304,,304,304,304,,,,,304,,304,304,,304,304',
',,304,304,304,304,304,304,304,530,,530,,530,530,,,,,,,,,,,,,,304,,,',
',,,,,,,,,,,,530,,,,,,,,,530,530,530,,530,,,,530,530,,,,530,,530,530',
'530,530,530,530,530,,,,,,530,530,530,530,530,530,530,,,,,530,530,530',
'530,530,530,530,530,530,530,,530,530,,530,530,530,,,,,530,,530,530,',
'530,530,530,,530,530,530,530,530,530,530,94,,94,,94,94,,,,,,,,,,,,,',
'530,,,,,,,,,,,,,,,,94,,,,,,,,,94,94,94,,94,,,,94,94,,,,94,,94,94,94',
'94,94,94,94,,,,,,94,94,94,94,94,94,94,,,,,94,94,94,94,94,94,94,94,94',
'94,94,94,94,,94,94,94,,,,,94,,94,94,,94,94,94,94,94,94,94,94,94,94,94',
'90,,90,,90,90,,,,,,,,,,,,,,94,,,,,,,,,,,,,,,,90,,,,,,,,,90,90,90,,90',
',,,90,90,,,,90,,90,90,90,90,90,90,90,,,,,,90,90,90,90,90,90,90,,,,,90',
'90,90,90,90,90,90,90,90,90,90,90,90,,90,90,90,,,,,90,,90,90,,90,90,90',
',90,90,90,90,90,90,90,596,,596,,596,596,,,,,,,,,,,,,,90,,,,,,,,,,,,',
',,,596,,,,,,,,,596,596,596,,596,,,,596,596,,,,596,,596,596,596,596,596',
'596,596,,,,,,596,596,596,596,596,596,596,,,,,596,596,596,596,596,596',
'596,596,596,596,596,596,596,,596,596,596,,,,,596,,596,596,,596,596,596',
',596,596,596,596,596,596,596,598,,598,,598,598,,,,,,,,,,,,,,596,,,,',
',,,,,,,,,,,598,,,,,,,,,598,598,598,,598,,,,598,598,,,,598,,598,598,598',
'598,598,598,598,,,,,,598,598,598,598,598,598,598,,,,,598,598,598,598',
'598,598,598,598,598,598,598,598,598,,598,598,598,,,,,598,,598,598,,598',
'598,,,598,598,598,598,598,598,598,516,,516,,516,516,,,,,,,,,,,,,,598',
',,,,,,,,,,,,,,,516,,,,,,,,,516,516,516,,516,,,,516,516,,,,516,,516,516',
'516,516,516,516,516,,,,,,516,516,516,516,516,516,516,,,,,516,516,516',
'516,516,516,516,516,516,516,,516,516,,516,516,516,,,,,516,,516,516,',
'516,516,,,516,516,516,516,516,516,516,313,,313,,313,313,,,,,,,,,,,,',
',516,,,,,,,,,,,,,,,,313,,,,,,,,,313,313,313,,313,,,,313,313,,,,313,',
'313,313,313,313,313,313,313,,,,,,313,313,313,313,313,313,313,,,,,313',
'313,313,313,313,313,313,313,313,313,,313,313,,313,313,313,,,,,313,,313',
'313,,313,313,,,313,313,313,313,313,313,313,314,,314,,314,314,,,,,,,',
',,,,,,313,,,,,,,,,,,,,,,,314,,,,,,,,,314,314,314,,314,,,,314,314,,,',
'314,,314,314,314,314,314,314,314,,,,,,314,314,314,314,314,314,314,,',
',,314,314,314,314,314,314,314,314,314,314,,314,314,,314,314,314,,,,',
'314,,314,314,,314,314,,,314,314,314,314,314,314,314,315,,315,,315,315',
',,,,,,,,,,,,,314,,,,,,,,,,,,,,,,315,,,,,,,,,315,315,315,,315,,,,315',
'315,,,,315,,315,315,315,315,315,315,315,,,,,,315,315,315,315,315,315',
'315,,,,,315,315,315,315,315,315,315,315,315,315,,315,315,,315,315,315',
',,,,315,,315,315,,315,315,,,315,315,315,315,315,315,315,316,,316,,316',
'316,,,,,,,,,,,,,,315,,,,,,,,,,,,,,,,316,,,,,,,,,316,316,316,,316,,,',
'316,316,,,,316,,316,316,316,316,316,316,316,,,,,,316,316,316,316,316',
'316,316,,,,,316,316,316,316,316,316,316,316,316,316,,316,316,,316,316',
'316,,,,,316,,316,316,,316,316,,,316,316,316,316,316,316,316,317,,317',
',317,317,,,,,,,,,,,,,,316,,,,,,,,,,,,,,,,317,,,,,,,,,317,317,317,,317',
',,,317,317,,,,317,,317,317,317,317,317,317,317,,,,,,317,317,317,317',
'317,317,317,,,,,317,317,317,317,317,317,317,317,317,317,,317,317,,317',
'317,317,,,,,317,,317,317,,317,317,,,317,317,317,317,317,317,317,318',
',318,,318,318,,,,,,,,,,,,,,317,,,,,,,,,,,,,,,,318,,,,,,,,,318,318,318',
',318,,,,318,318,,,,318,,318,318,318,318,318,318,318,,,,,,318,318,318',
'318,318,318,318,,,,,318,318,318,318,318,318,318,318,318,318,,318,318',
',318,318,318,,,,,318,,318,318,,318,318,,,318,318,318,318,318,318,318',
'319,,319,,319,319,,,,,,,,,,,,,,318,,,,,,,,,,,,,,,,319,,,,,,,,,319,319',
'319,,319,,,,319,319,,,,319,,319,319,319,319,319,319,319,,,,,,319,319',
'319,319,319,319,319,,,,,319,319,319,319,319,319,319,319,319,319,,319',
'319,,319,319,319,,,,,319,,319,319,,319,319,,,319,319,319,319,319,319',
'319,320,,320,,320,320,,,,,,,,,,,,,,319,,,,,,,,,,,,,,,,320,,,,,,,,,320',
'320,320,,320,,,,320,320,,,,320,,320,320,320,320,320,320,320,,,,,,320',
'320,320,320,320,320,320,,,,,320,320,320,320,320,320,320,320,320,320',
',320,320,,320,320,320,,,,,320,,320,320,,320,320,,,320,320,320,320,320',
'320,320,321,,321,,321,321,,,,,,,,,,,,,,320,,,,,,,,,,,,,,,,321,,,,,,',
',,321,321,321,,321,,,,321,321,,,,321,,321,321,321,321,321,321,321,,',
',,,321,321,321,321,321,321,321,,,,,321,321,321,321,321,321,321,321,321',
'321,,321,321,,321,321,321,,,,,321,,321,321,,321,321,,,321,321,321,321',
'321,321,321,322,,322,,322,322,,,,,,,,,,,,,,321,,,,,,,,,,,,,,,,322,,',
',,,,,,322,322,322,,322,,,,322,322,,,,322,,322,322,322,322,322,322,322',
',,,,,322,322,322,322,322,322,322,,,,,322,322,322,322,322,322,322,322',
'322,322,,322,322,,322,322,322,,,,,322,,322,322,,322,322,,,322,322,322',
'322,322,322,322,323,,323,,323,323,,,,,,,,,,,,,,322,,,,,,,,,,,,,,,,323',
',,,,,,,,323,323,323,,323,,,,323,323,,,,323,,323,323,323,323,323,323',
'323,,,,,,323,323,323,323,323,323,323,,,,,323,323,323,323,323,323,323',
'323,323,323,,323,323,,323,323,323,,,,,323,,323,323,,323,323,,,323,323',
'323,323,323,323,323,324,,324,,324,324,,,,,,,,,,,,,,323,,,,,,,,,,,,,',
',,324,,,,,,,,,324,324,324,,324,,,,324,324,,,,324,,324,324,324,324,324',
'324,324,,,,,,324,324,324,324,324,324,324,,,,,324,324,324,324,324,324',
'324,324,324,324,,324,324,,324,324,324,,,,,324,,324,324,,324,324,,,324',
'324,324,324,324,324,324,325,,325,,325,325,,,,,,,,,,,,,,324,,,,,,,,,',
',,,,,,325,,,,,,,,,325,325,325,,325,,,,325,325,,,,325,,325,325,325,325',
'325,325,325,,,,,,325,325,325,325,325,325,325,,,,,325,325,325,325,325',
'325,325,325,325,325,,325,325,,325,325,325,,,,,325,,325,325,,325,325',
',,325,325,325,325,325,325,325,326,,326,,326,326,,,,,,,,,,,,,,325,,,',
',,,,,,,,,,,,326,,,,,,,,,326,326,326,,326,,,,326,326,,,,326,,326,326',
'326,326,326,326,326,,,,,,326,326,326,326,326,326,326,,,,,326,326,326',
'326,326,326,326,326,326,326,,326,326,,326,326,326,,,,,326,,326,326,',
'326,326,,,326,326,326,326,326,326,326,327,,327,,327,327,,,,,,,,,,,,',
',326,,,,,,,,,,,,,,,,327,,,,,,,,,327,327,327,,327,,,,327,327,,,,327,',
'327,327,327,327,327,327,327,,,,,,327,327,327,327,327,327,327,,,,,327',
'327,327,327,327,327,327,327,327,327,,327,327,,327,327,327,,,,,327,,327',
'327,,327,327,,,327,327,327,327,327,327,327,328,,328,,328,328,,,,,,,',
',,,,,,327,,,,,,,,,,,,,,,,328,,,,,,,,,328,328,328,,328,,,,328,328,,,',
'328,,328,328,328,328,328,328,328,,,,,,328,328,328,328,328,328,328,,',
',,328,328,328,328,328,328,328,328,328,328,,328,328,,328,328,328,,,,',
'328,,328,328,,328,328,,,328,328,328,328,328,328,328,329,,329,,329,329',
',,,,,,,,,,,,,328,,,,,,,,,,,,,,,,329,,,,,,,,,329,329,329,,329,,,,329',
'329,,,,329,,329,329,329,329,329,329,329,,,,,,329,329,329,329,329,329',
'329,,,,,329,329,329,329,329,329,329,329,329,329,,329,329,,329,329,329',
',,,,329,,329,329,,329,329,,,329,329,329,329,329,329,329,330,,330,,330',
'330,,,,,,,,,,,,,,329,,,,,,,,,,,,,,,,330,,,,,,,,,330,330,330,,330,,,',
'330,330,,,,330,,330,330,330,330,330,330,330,,,,,,330,330,330,330,330',
'330,330,,,,,330,330,330,330,330,330,330,330,330,330,,330,330,,330,330',
'330,,,,,330,,330,330,,330,330,,,330,330,330,330,330,330,330,331,,331',
',331,331,,,,,,,,,,,,,,330,,,,,,,,,,,,,,,,331,,,,,,,,,331,331,331,,331',
',,,331,331,,,,331,,331,331,331,331,331,331,331,,,,,,331,331,331,331',
'331,331,331,,,,,331,331,331,331,331,331,331,331,331,331,,331,331,,331',
'331,331,,,,,331,,331,331,,331,331,,,331,331,331,331,331,331,331,332',
',332,,332,332,,,,,,,,,,,,,,331,,,,,,,,,,,,,,,,332,,,,,,,,,332,332,332',
',332,,,,332,332,,,,332,,332,332,332,332,332,332,332,,,,,,332,332,332',
'332,332,332,332,,,,,332,332,332,332,332,332,332,332,332,332,,332,332',
',332,332,332,,,,,332,,332,332,,332,332,,,332,332,332,332,332,332,332',
'333,,333,,333,333,,,,,,,,,,,,,,332,,,,,,,,,,,,,,,,333,,,,,,,,,333,333',
'333,,333,,,,333,333,,,,333,,333,333,333,333,333,333,333,,,,,,333,333',
'333,333,333,333,333,,,,,333,333,333,333,333,333,333,333,333,333,,333',
'333,,333,333,333,,,,,333,,333,333,,333,333,,,333,333,333,333,333,333',
'333,334,,334,,334,334,,,,,,,,,,,,,,333,,,,,,,,,,,,,,,,334,,,,,,,,,334',
'334,334,,334,,,,334,334,,,,334,,334,334,334,334,334,334,334,,,,,,334',
'334,334,334,334,334,334,,,,,334,334,334,334,334,334,334,334,334,334',
',334,334,,334,334,334,,,,,334,,334,334,,334,334,,,334,334,334,334,334',
'334,334,335,,335,,335,335,,,,,,,,,,,,,,334,,,,,,,,,,,,,,,,335,,,,,,',
',,335,335,335,,335,,,,335,335,,,,335,,335,335,335,335,335,335,335,,',
',,,335,335,335,335,335,335,335,,,,,335,335,335,335,335,335,335,335,335',
'335,,335,335,,335,335,335,,,,,335,,335,335,,335,335,,,335,335,335,335',
'335,335,335,80,,80,,80,80,,,,,,,,,,,,,,335,,,,,,,,,,,,,,,,80,,,,,,,',
',80,80,80,,80,,,,80,80,,,,80,,80,80,80,80,80,80,80,,,,,,80,80,80,80',
'80,80,80,,,,,80,80,80,80,80,80,80,80,80,80,,80,80,,80,80,80,,,,,80,',
'80,80,,80,80,,,80,80,80,80,80,80,80,337,,337,,337,337,,,,,,,,,,,,,,80',
',,,,,,,,,,,,,,,337,,,,,,,,,337,337,337,,337,,,,337,337,,,,337,,337,337',
'337,337,337,337,337,,,,,,337,337,337,337,337,337,337,,,,,337,337,337',
'337,337,337,337,337,337,337,,337,337,,337,337,337,,,,,337,,337,337,',
'337,337,,,337,337,337,337,337,337,337,602,,602,,602,602,,,,,,,,,,,,',
',337,,,,,,,,,,,,,,,,602,,,,,,,,,602,602,602,,602,,,,602,602,,,,602,',
'602,602,602,602,602,602,602,,,,,,602,602,602,602,602,602,602,,,,,602',
'602,602,602,602,602,602,602,602,602,,602,602,,602,602,602,,,,,602,,602',
'602,,602,602,602,,602,602,602,602,602,602,602,515,,515,,515,515,,,,',
',,,,,,,,,602,,,,,,,,,,,,,,,,515,,,,,,,,,515,515,515,,515,,,,515,515',
',,,515,,515,515,515,515,515,515,515,,,,,,515,515,515,515,515,515,515',
',,,,515,515,515,515,515,515,515,515,515,515,,515,515,,515,515,515,,',
',,515,,515,515,,515,515,,,515,515,515,515,515,515,515,48,,48,,48,48',
',,,,,,,,,,,,,515,,,,,,,,,,,,,,,,48,,,,,,,,,48,48,48,,48,,,,48,48,,,',
'48,,48,48,48,48,48,48,48,,,,,,48,48,48,48,48,48,48,,,,,48,48,48,48,48',
'48,48,48,48,48,,48,48,,48,48,48,,,,,48,,48,48,,48,48,,,48,48,48,48,48',
'48,48,631,,631,,631,631,,,,,,,,,,,,,,48,,,,,,,,,,,,,,,,631,,,,,,,,,631',
'631,631,,631,,,,631,631,,,,631,,631,631,631,631,631,631,631,,,,,,631',
'631,631,631,631,631,631,,,,,631,631,631,631,631,631,631,631,631,631',
',631,631,,631,631,631,,,,,631,,631,631,,631,631,,,631,631,631,631,631',
'631,631,822,,822,,822,822,,,,,,,,,,,,,,631,,,,,,,,,,,,,,,,822,,,,,,',
',,822,822,822,,822,,,,822,822,,,,822,,822,822,822,822,822,822,822,,',
',,,822,822,822,822,822,822,822,,,,,822,822,822,822,822,822,822,822,822',
'822,,822,822,,822,822,822,,,,,822,,822,822,,822,822,,,822,822,822,822',
'822,822,822,62,,62,,62,62,,,,,,,,,,,,,,822,,,,,,,,,,,,,,,,62,,,,,,,',
',62,62,62,,62,,,,62,62,,,,62,,62,62,62,62,62,62,62,,,,,,62,62,62,62',
'62,62,62,,,,,62,62,62,62,62,62,62,62,62,62,,62,62,,62,62,62,,,,,62,',
'62,62,,62,62,,,62,62,62,62,62,62,62,609,,609,,609,609,,,,,,,,,,,,,,62',
',,,,,,,,,,,,,,,609,,,,,,,,,609,609,609,,609,,,,609,609,,,,609,,609,609',
'609,609,609,609,609,,,,,,609,609,609,609,609,609,609,,,,,609,609,609',
'609,609,609,609,609,609,609,,609,609,,609,609,609,,,,,609,,609,609,',
'609,609,,,609,609,609,609,609,609,609,833,,833,,833,833,,,,,,,,,,,,',
',609,,,,,,,,,,,,,,,,833,,,,,,,,,833,833,833,,833,,,,833,833,,,,833,',
'833,833,833,833,833,833,833,,,,,,833,833,833,833,833,833,833,,,,,833',
'833,833,833,833,833,833,833,833,833,,833,833,,833,833,833,,,,,833,,833',
'833,,833,833,,,833,833,833,833,833,833,833,831,,831,,831,831,,,,,,,',
',,,,,,833,,,,,,,,,,,,,,,,831,,,,,,,,,831,831,831,,831,,,,831,831,,,',
'831,,831,831,831,831,831,831,831,,,,,,831,831,831,831,831,831,831,,',
',,831,831,831,831,831,831,831,831,831,831,,831,831,,831,831,831,,,,',
'831,,831,831,,831,831,831,,831,831,831,831,831,831,831,55,,55,,55,55',
',,,,,,,,,,,,,831,,,,,,,,,,,,,,,,55,,,,,,,,,55,55,55,,55,,,,55,55,,,',
'55,,55,55,55,55,55,55,55,,,,,,55,55,55,55,55,55,55,,,,,55,55,55,55,55',
'55,55,55,55,55,55,55,55,,55,55,55,,,,,55,,55,55,,55,55,55,55,55,55,55',
'55,55,55,55,353,,353,,353,353,,,,,,,,,,,,,,55,,,,,,,,,,,,,,,,353,,,',
',,,,,353,353,353,353,353,,,,353,353,,,,353,,353,353,353,353,353,353',
'353,,,,,,353,353,353,353,353,353,353,353,,,353,353,353,353,353,353,353',
'353,353,353,353,,353,353,,353,353,353,,,,,353,,353,353,,353,353,353',
',353,353,353,353,353,353,353,492,,492,,492,492,,,,,,,,,,,,,,353,,,,',
',,,,,,,,,,,492,,,,,,,,,492,492,492,,492,,,,492,492,,,,492,,492,492,492',
'492,492,492,492,,,,,,492,492,492,492,492,492,492,,,,,492,492,492,492',
'492,492,492,492,492,492,492,492,492,,492,492,492,,,,,492,,492,492,,492',
'492,492,492,492,492,492,492,492,492,492,50,,50,,50,50,,,,,,,,,,,,,,492',
',,,,,,,,,,,,,,,50,,,,,,,,,50,50,50,,50,,,,50,50,,,,50,,50,50,50,50,50',
'50,50,,,,,,50,50,50,50,50,50,50,,,,,50,50,50,50,50,50,50,50,50,50,,50',
'50,,50,50,50,,,,,50,,50,50,,50,50,,,50,50,50,50,50,50,50,,,,,,,,69,',
',,,,,,69,69,,,50,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,607,,',
',,,,,607,607,,,,607,607,607,607,607,607,607,607,607,607,885,,607,607',
'607,,607,,885,885,,,,885,885,885,885,885,885,885,885,885,885,885,885',
'885,885,885,153,,,,,,,,153,153,,,,153,153,153,153,153,153,153,153,153',
'153,153,153,153,153,153,,,,,,,,,,,,,,,,,,,,,69,69,69,69,69,69,69,69',
',,,,,,,,,,,,,,,,,,,607,607,607,607,607,607,607,607,607,,,,,,,,,,,,,',
',,885,885,885,885,885,885,885,885,,,,,,,,,,,,,,,,,,,,,153,153,153,153',
'153,153,153,153,561,275,,,,,,,561,561,,,,561,561,561,561,561,561,561',
'561,561,561,561,561,561,561,561,,,,,275,,,,,,,,,275,275,275,,275,,,',
'275,275,,,,275,,275,275,275,275,275,275,275,,,,,,275,275,275,275,275',
'275,275,,,,,275,275,275,275,275,275,275,275,275,275,,275,275,,275,275',
'275,,,,,275,,275,275,104,275,275,,,275,275,275,275,275,275,275,,,,,',
',,,,,275,561,561,561,561,561,561,561,561,104,,,,,,,,,104,104,104,,104',
',,,104,104,,,,104,,104,104,104,104,104,104,104,,,,,,104,104,104,104',
'104,104,104,,763,,,104,104,104,104,104,104,104,104,104,104,,104,104',
',104,104,104,,,,,104,,104,104,,104,104,763,,104,104,104,104,104,104',
'104,763,763,763,,763,,,,763,763,104,,,763,,763,763,763,763,763,763,763',
',,,,,763,763,763,763,763,763,763,,798,,,763,763,763,763,763,763,763',
'763,763,763,,763,763,,763,763,763,,,,,763,,763,763,,763,763,798,,763',
'763,763,763,763,763,763,798,798,798,,798,,,,798,798,,,,798,,798,798',
'798,798,798,798,798,,,,,,798,798,798,798,798,798,798,,615,,,798,798',
'798,798,798,798,798,798,798,798,,798,798,,798,798,798,,,,,798,,798,798',
',798,798,615,,798,798,798,798,798,798,798,615,615,615,,615,,,,615,615',
',,,615,,615,615,615,615,615,615,615,,,,,,615,615,615,615,615,615,615',
',75,,,615,615,615,615,615,615,615,615,615,615,,615,615,,615,615,615',
',,,,615,,615,615,,615,615,75,,615,615,615,615,615,615,615,75,75,75,',
'75,,,,75,75,,,,75,,75,75,75,75,75,75,75,,,,,,75,75,75,75,75,75,75,,',
'103,,75,75,75,75,75,75,75,75,75,75,,75,75,,75,75,75,,,,,75,,75,75,,75',
'75,75,103,75,75,75,75,75,75,75,,103,103,103,,103,,,,103,103,,,,103,',
'103,103,103,103,103,103,103,,,,,,103,103,103,103,103,103,103,,501,,',
'103,103,103,103,103,103,103,103,103,103,,103,103,,103,103,103,,,,,103',
',103,103,,103,103,501,,103,103,103,103,103,103,103,501,501,501,,501',
',,,501,501,,,,501,,501,501,501,501,501,501,501,,,,,,501,501,501,501',
'501,501,501,,388,,,501,501,501,501,501,501,501,501,501,501,,501,501',
',501,501,501,,,,,501,,501,501,,501,501,388,,501,501,501,501,501,501',
'501,388,388,388,,388,,,,388,388,,,,388,,388,388,388,388,388,388,388',
',,,,,388,388,388,388,388,388,388,,31,,,388,388,388,388,388,388,388,388',
'388,388,,388,388,,388,388,388,,,,,388,,388,388,,388,388,31,,388,388',
'388,388,388,388,388,31,31,31,,31,,,,31,31,,,,31,,31,31,31,31,31,31,31',
',,,,,31,31,31,31,31,31,31,,,705,,31,31,31,31,31,31,31,31,31,31,,31,31',
',31,31,31,,,,,31,,31,31,,31,31,31,705,31,31,31,31,31,31,31,,705,705',
'705,,705,,,,705,705,,,,705,,705,705,705,705,705,705,705,,,,,,705,705',
'705,705,705,705,705,,845,,,705,705,705,705,705,705,705,705,705,705,',
'705,705,,705,705,705,,,,,705,,705,705,,705,705,845,,705,705,705,705',
'705,705,705,845,845,845,,845,,,,845,845,,,,845,,845,845,845,845,845',
'845,845,,,,,,845,845,845,845,845,845,845,,,,,845,845,845,845,845,845',
'845,845,845,845,86,845,845,,845,845,845,86,,,,845,,845,845,,845,845',
',,845,845,845,845,845,845,845,,,,,86,,,,,,,,,86,86,86,,86,,,,86,86,',
',,86,,86,86,86,86,86,86,86,,,,,,86,86,86,86,86,86,86,,,,,86,86,86,86',
'86,86,86,86,86,86,,86,86,,86,86,86,,,,,86,,86,86,,86,86,,,86,86,86,86',
'86,86,86' ]
        racc_action_check = arr = Array.new(21951, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
   nil,     2,   nil,  7822,  1350,   nil,   nil,  1304,  1864,  1794,
   nil,   nil,  7595,   218,    17,   839,   nil, 12577,   nil,   nil,
   nil, 12696,   nil,   nil,   nil,   nil, 12815,   nil,   nil,   nil,
   230, 21591, 13291,  6885,   nil,   nil,  1191,   nil,  1205,  1177,
   nil,   nil,   725,  1304, 13767,   nil, 14719, 14838, 19360,  1194,
 20550,   682,   nil,  1192,   nil, 20193,   200,   nil,   nil,   nil,
   nil,   nil, 19717,   nil,   nil,   nil,   nil,   293,  1187, 20673,
  1124,   566,  4231,   nil,  3869, 21290,  6118,   nil,     1,   nil,
 18884,   nil,    49,   nil,   498,   nil, 21830,   nil,   nil,   nil,
 15671,  3475,   nil,   nil, 15552,  5168,  1235, 13529,   nil,   nil,
   821,  3031,   nil, 21366, 20990,  2799,   nil,  1234,   144,  2590,
   nil, 10554,   nil,   121,   nil,    82,   nil,  1180,   nil,   nil,
  1136,  1171,   nil,   nil,   nil,   nil,  1126,   nil,   nil,   359,
   nil,   996,   nil,  1120,   nil,  1717,   nil,   nil,  1214,   410,
  9126,  1107,   228,  1092,   nil,   nil,  1116,   nil,   nil,   nil,
   410,  8650,  1119, 20752,   nil,    18,  7942,   nil,   -19,   nil,
   nil,  1174,  1158,  9602,  9721,  1058,  9959,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   866,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   650,
   nil,   nil,   990, 10435,  2449,   nil,   855,  1885,   nil,   580,
   713,    29,   921, 11387,   -32,   529,   659,  1067,   697,   673,
  1095,  1038,  6238,   nil,  1041, 20887,  1035,   876,  2430,   nil,
   nil,   nil,   773,   nil,   nil,   677,  1052,   nil,  1028,   371,
  1129,  1116, 14005, 14124, 14243, 14362, 14481,   142,   nil,  4707,
   119,  5288,   283, 15195, 15314,   nil,   nil,   191,  1049,   962,
   368,   165,  1075, 16147, 16266, 16385, 16504, 16623, 16742, 16861,
 16980, 17099, 17218, 17337, 17456, 17575, 17694, 17813, 17932, 18051,
 18170, 18289, 18408, 18527, 18646, 18765,  1072, 19003,   nil,  3988,
    65,   nil,   -18,   nil,   967,   803,   172,   -35,  1003,  1023,
   nil,   nil,  1050, 20312,   933,   nil,   941,   922,   528,  6358,
   -32,  6601,  6655,   870,   nil,   nil,   nil,   -42,    44,   843,
 13410,   771,   908,   456,   nil,   115,   nil,   998,   999, 13053,
   nil,   317,   940,   917,   412,   nil,  7232,   908, 21516,   nil,
   nil, 11982, 11863,   531,   379,   461,   388,   331,   391,   450,
 10911,   145,   495,  2645,   540,   nil,   313, 11039,   nil,  9007,
   940,   nil,  4108,  5528,   nil,   nil,   nil,  1052,   nil,   nil,
  1601,   nil,   938,   915,   889,   470,   931,   nil,  2400,   nil,
   860,   nil,  2652,   857, 10078,  3660, 10792,  3313,   nil,   nil,
 11030, 11149,   nil, 11268, 11506,   851,   nil,   nil,   769,  1045,
   nil,  7472,   nil,   nil,  7352, 12220,    27,   nil,   nil,   nil,
   nil,  6992,   845,   nil,   nil,   nil,   nil,   nil,   190,  1199,
  1318,     0,   nil,   nil,  2031,   846,   106,   nil,   nil,    30,
   nil,  2150,   nil,   nil,   nil,   nil,  6478,   930,   nil,  3700,
   nil,  2692, 20431,  3156,   nil,   nil,   nil,   697,   829,   799,
   803, 21441,  3211,  3368,  4941,   nil,   nil,   nil,   nil,   335,
   nil,   nil,   nil,   nil,   785, 19241, 16028,   nil,   nil,   nil,
   nil,   nil,  4578,   771,   nil,   nil,  8412,   nil,   nil,  4818,
 15433,   844,   831, 14600, 13648,   288,  5657,  1194,  7121,   648,
  2026,  8421,   437,  2421,  8659,  3865,  9135,  9373,   529,  9611,
  9849,   675, 10325,  1329, 10563,  1343, 10801,   897,  9245,  1435,
  8769, 20887,  4698,  8292,  8185,  3762,  9483,  1092,   274, 10197,
  1120,   747,   747,   nil,   nil,   769,   694,   nil,   nil,   nil,
  1437,  2269,  2394, 12458,  2924,   nil,   nil,   721,   563,  5768,
   nil, 12934,    60,   nil,   nil,   nil, 15790,   nil, 15909,   nil,
   nil,   nil, 19122,   781,   707,   nil,   nil, 20701,   nil, 19836,
   nil,   nil,   nil,   650,   741, 21215,   nil,   641,   nil,   628,
   nil,   nil,   nil,   -35,   nil,  5891,   nil,   -22,   252,  5998,
  2410, 19479,   nil,   nil,   628,   701,   616,   nil,   601,   nil,
   572,   nil,  1902,   529,  1728,   508,   nil,   nil,   509,   501,
   nil,  1261,   442,  1675,  1556,   333,   520,   209,   332,   284,
   nil, 12101,   nil,   nil,   nil,    20,   nil,   171,   173,    71,
    44,   nil,   -16,    44,   -44, 10087,  7702,   -67,   nil,   nil,
   nil,   nil,   nil, 10673,  8531,   nil,  1211,  -100,   203, 11625,
 11744,   nil,   nil,   nil,    59,   493,   nil,   837,   649,   150,
   151,   -20,   761,   208,   nil, 21667,   321,   nil,   nil,   nil,
   nil,   410,   135,   426,   nil,   463,   483,   306,   nil,   559,
  5417,  1035,   610,   144,   -30,   623,   633,   nil,    92,   264,
   597,   334,   319,   294,   nil,  1107,   -23,   nil,   nil,   nil,
   nil,   565,   nil,   340,   675,   nil,   784,   527,  4458,   453,
   nil,   760,   nil,   740,   nil,  7112,   830, 10316, 15076,   762,
   nil,   nil,   763, 21065,   nil,  1873,   nil,   nil,   850,   758,
  4467,   nil,   nil,   nil,  2871,   nil,  2864,   nil,  1492,   591,
   nil,  1981,   865,   nil,   nil,   nil,  3107,   nil,   nil,   870,
   nil,   nil,  9840,   116,  9364,  8888,   nil,   nil, 21140,   893,
   nil,  2678,   nil,  2486,   nil,  2086,   nil,   nil,   nil,   913,
   nil,  7831,   nil,  7361,   nil,   nil, 13172,  6367,   nil,  6127,
   nil,   nil, 19598,  1013,   nil,   484,   950,  1030,   nil,   nil,
  5648, 20074,   nil, 19955,   nil,   nil,   nil,    -9,  4338,   nil,
   nil,   nil,  1048,   nil,   nil, 21742,   143,   nil,   nil,  5048,
   nil,   989, 13886,  5177,   nil,  5408,   nil,   nil,  1022,  1024,
  1025,  1035,  2203,  1045,  1362,  1047,  1270, 12339,   766,  1096,
   nil,  1060,  1061,   nil,  1062,  1065,  1066,   nil,  8897,   nil,
   204,   nil,   nil,   286,   nil, 20724,  1157,   nil,   437,   453,
   325,  1143,   nil,  8062,   nil,  1113,  1195,   nil,   nil,   nil,
  3115,  1149,  1121,   nil,   nil,  1924,   nil,   nil,  2192,   nil,
  1611,   nil,   nil,  3172,   nil,  6762,   nil,   nil,   nil,   nil,
   935, 14957,  3605,   861,  1229,   nil,  1150,  1151,  1154,  1158,
  1170,  1171,  1172,  1174,   633,   289,   589,  1188,   228,   229,
   nil,   nil,   nil,   nil,  2895,   nil,   nil,   nil,   249,  1228,
   nil ]

racc_action_default = [
    -2,  -538,    -1,  -537,  -538,  -446,  -436,  -538,  -475,  -538,
  -445,  -437,  -421,  -524,  -285,  -538,   -65,  -538,  -447,  -419,
  -310,  -538,  -448,  -421,  -403,    -5,  -538,  -454,  -421,  -308,
  -268,   -69,  -538,  -538,    -6,  -455,  -411,  -309,  -538,  -417,
  -311,   -79,  -538,    -9,  -538,  -399,  -300,  -538,  -538,  -538,
  -538,   -40,  -450,  -402,  -312,  -301,  -452,  -449,  -404,  -313,
  -302,  -261,  -538,  -451,  -314,  -303,  -262,  -524,  -538,   -46,
  -526,   -48,  -538,  -263,  -440,  -538,  -537,   -49,  -305,  -264,
  -538,  -265,  -514,  -442,   -53,  -266,  -538,  -441,  -400,  -267,
  -537,  -443,  -401,  -306,  -277,  -537,  -538,  -537,  -444,  -307,
  -233,  -280,   -41,  -538,   -77,  -383,    -3,  -538,  -526,  -538,
   951,  -538,  -492,  -481,  -480,  -538,  -498,  -497,  -495,  -478,
  -537,  -538,  -499,  -477,  -368,  -476,  -537,  -494,  -479,  -538,
  -474,  -538,  -484,  -537,  -486,  -475,  -287,  -284,  -538,  -538,
  -538,  -537,  -268,  -537,  -508,  -376,  -254,  -300,  -301,  -248,
  -452,  -537,  -538,  -234,  -244,  -537,  -537,  -305,  -537,  -249,
  -277,  -538,   -57,  -538,  -538,  -538,  -538,  -176,  -126,  -171,
  -161,  -118,  -127,  -152,  -160,  -119,  -169,  -128,  -155,  -132,
  -139,  -179,  -181,  -133,  -164,  -120,  -185,  -134,  -141,  -151,
  -121,  -186,  -136,  -138,  -122,  -165,  -137,  -129,  -154,  -140,
  -142,  -123,  -143,  -168,  -145,  -146,  -124,  -144,  -156,  -147,
  -167,  -172,  -148,  -157,  -174,  -431,  -538,  -180,  -158,  -166,
  -149,  -109,  -159,  -106,  -173,  -110,  -130,  -108,  -433,  -163,
  -131,  -432,  -150,  -183,  -175,  -107,  -434,  -430,  -184,  -182,
  -135,  -177,  -125,  -170,  -178,  -117,    -4,  -535,  -533,  -525,
  -534,  -286,  -538,  -537,  -538,    -8,  -538,  -223,   -45,  -538,
   -47,  -538,  -538,  -538,  -538,  -538,   -92,   -70,  -538,   -85,
  -538,  -526,  -537,  -304,  -280,   -73,  -383,  -538,  -208,  -111,
   -17,  -113,  -538,  -112,  -114,  -538,  -538,   -81,  -538,  -538,
  -438,  -439,  -538,  -538,  -538,  -538,  -538,  -538,   -51,  -224,
  -209,  -537,  -538,  -538,  -538,  -405,   -52,  -538,  -538,  -525,
  -524,  -274,  -538,  -538,  -538,  -538,  -538,  -538,  -538,  -538,
  -538,  -538,  -538,  -538,  -538,  -538,  -538,  -538,  -538,  -538,
  -538,  -538,  -538,  -538,  -538,  -538,  -538,  -538,  -527,  -538,
  -537,  -373,  -537,  -115,   -22,  -538,  -268,  -452,  -538,  -538,
  -325,  -326,   -67,  -538,  -526,   -13,   -14,  -538,  -524,  -537,
  -526,  -538,  -538,  -538,  -268,  -452,  -104,  -538,  -538,  -101,
  -538,  -102,  -538,  -530,  -235,  -530,   -50,  -538,  -537,  -538,
  -506,  -530,  -538,  -538,  -526,   -64,  -537,   -75,  -538,  -382,
   -63,  -538,  -538,  -526,  -176,  -538,  -169,  -179,  -164,  -146,
  -538,  -147,  -148,  -475,  -106,  -504,  -107,  -189,   -31,  -538,
  -538,  -366,  -537,  -537,  -496,  -503,  -467,  -538,  -500,  -472,
  -538,  -483,  -538,  -481,  -331,  -338,  -538,  -329,  -538,  -327,
  -526,  -470,  -538,  -537,  -538,  -538,  -537,  -538,  -253,  -245,
  -252,  -538,  -246,  -252,  -538,  -526,  -242,  -243,  -274,  -537,
  -355,  -537,  -358,  -356,  -537,  -538,  -537,   -58,  -255,  -511,
  -250,  -537,  -538,  -435,  -422,  -423,    -7,  -536,  -515,  -520,
  -521,  -516,  -381,  -379,  -538,  -526,  -515,  -517,  -518,  -516,
  -380,  -537,  -406,  -420,  -407,  -317,  -537,  -316,  -408,  -197,
   -36,  -538,  -537,  -538,   -82,  -438,  -439,   -91,  -538,  -526,
   -71,  -538,  -538,  -538,  -538,   -21,   -20,   -19,  -410,  -538,
  -413,  -409,  -415,  -416,  -538,  -538,  -538,   -27,   -23,   -24,
   -25,   -26,  -537,  -538,  -319,  -320,  -537,   -43,   -42,  -537,
  -538,  -538,  -538,  -538,  -538,  -213,  -210,  -218,  -211,  -225,
  -219,  -212,  -226,  -220,  -200,  -221,  -201,  -222,  -205,  -202,
  -203,  -214,  -204,  -215,  -198,  -216,  -199,  -227,  -538,  -217,
  -538,  -231,  -537,  -537,  -538,  -538,  -537,  -538,  -274,  -538,
   -16,  -538,   -66,  -272,   -12,  -525,  -526,  -271,  -515,  -516,
  -537,  -537,  -538,  -537,  -538,  -101,  -103,  -102,  -538,  -537,
  -456,  -538,  -538,  -275,  -236,  -531,  -532,  -238,  -532,  -270,
  -315,  -391,  -537,  -537,  -538,   -37,  -254,  -187,   -29,  -538,
  -507,  -276,  -279,  -526,  -538,  -538,   -83,   -78,   -39,   -38,
   -30,   -44,  -283,  -526,  -523,  -538,  -522,  -526,  -538,  -537,
  -475,  -538,  -488,  -482,  -538,  -538,  -537,  -502,  -537,  -487,
  -537,  -501,  -538,  -336,  -538,  -526,  -485,  -493,  -537,  -537,
  -360,  -538,  -526,  -519,  -273,  -526,  -515,  -516,  -537,  -256,
  -251,  -538,  -509,  -510,  -239,  -481,  -490,  -537,  -537,  -537,
  -537,  -354,  -538,  -538,  -538,  -187,  -537,  -538,  -426,  -427,
  -428,  -424,  -429,  -538,  -538,  -378,   -61,  -538,  -384,  -538,
  -538,  -240,  -241,  -377,   -59,  -537,  -318,   -88,   -90,  -538,
  -526,  -515,  -516,  -537,   -80,  -538,   -74,   -18,  -412,  -414,
  -418,  -206,  -207,  -537,   -28,  -538,  -538,  -538,  -293,  -538,
  -196,  -230,  -538,  -228,  -526,  -538,  -538,  -116,  -519,  -273,
  -526,  -515,  -516,  -538,  -528,   -15,   -68,  -375,   -55,  -374,
   -54,  -101,  -105,  -102,  -526,  -458,  -538,  -538,  -537,  -530,
  -394,  -537,  -393,  -392,  -323,  -537,  -537,  -538,  -538,  -260,
  -278,  -297,   -76,  -538,  -282,  -475,  -505,  -460,  -538,  -526,
  -190,  -369,  -370,  -465,  -538,  -463,  -538,  -473,  -538,  -334,
  -330,  -538,  -339,  -328,  -471,  -468,  -538,  -365,  -364,  -361,
  -362,  -367,  -538,  -384,  -538,  -538,  -247,  -257,  -538,  -538,
  -347,  -345,  -350,  -538,  -352,  -538,  -357,  -386,  -385,  -538,
  -425,  -194,   -35,  -195,   -62,  -529,  -538,  -192,   -33,  -193,
   -34,   -60,  -538,  -538,  -321,   -86,   -72,  -538,  -290,  -291,
  -537,  -538,  -292,  -538,  -281,  -372,  -371,  -384,  -537,  -384,
  -295,  -457,  -538,  -237,  -396,  -538,  -538,  -324,  -398,  -537,
   -11,  -258,  -538,  -188,   -84,  -537,  -298,  -459,  -537,  -537,
  -537,  -332,  -538,  -337,  -538,  -537,  -538,  -538,  -489,  -538,
  -359,  -537,  -537,  -491,  -537,  -537,  -537,   -56,  -191,   -32,
  -538,  -288,  -289,  -537,  -256,  -232,  -538,  -296,  -538,  -100,
   -93,  -538,  -395,  -537,  -397,  -259,  -538,  -466,  -464,  -461,
  -538,  -538,  -335,  -469,  -363,  -538,  -274,  -342,  -538,  -344,
  -538,  -351,  -348,  -538,  -353,  -537,  -387,  -389,  -388,  -294,
  -538,  -537,  -538,   -99,  -537,  -299,  -537,  -333,  -519,  -273,
  -537,  -537,  -537,  -537,  -537,  -519,   -98,  -526,  -515,  -516,
  -390,  -462,  -343,  -340,  -538,  -346,  -349,  -322,  -384,  -537,
  -341 ]

clist = [
'25,603,124,267,215,439,531,442,339,130,258,445,457,486,221,373,43,298',
'639,284,162,429,669,377,249,280,306,647,526,283,43,273,688,529,629,221',
'430,375,352,594,617,597,260,782,381,246,392,610,756,522,483,354,823',
'34,652,387,780,474,284,481,260,790,662,873,343,376,260,255,283,216,672',
'787,605,368,221,273,13,586,260,510,259,145,383,260,618,262,273,374,660',
'405,386,660,737,739,380,667,360,589,136,308,408,403,372,273,273,625',
'504,351,789,344,850,221,385,475,115,261,390,415,411,251,341,916,447',
'415,751,846,305,256,395,433,415,15,285,297,509,3,130,139,438,302,438',
'289,681,237,451,15,638,454,446,139,106,307,450,706,139,450,310,2,827',
'265,349,422,1,,,,580,581,873,,,,139,,139,,,389,139,,863,,,139,,,,,,',
'139,,,,,139,,,154,,,,,345,15,,,,139,498,,,793,,363,,,662,,,,,139,15',
'447,,500,,,139,719,363,265,139,352,154,,,,139,474,,481,,154,,,499,,',
'446,,490,,470,,,825,,,,902,43,,416,,,762,,,419,,,,,273,904,431,780,139',
',,,154,15,,787,837,799,,154,947,742,,154,752,655,,703,466,927,839,,709',
'604,517,,,703,260,260,260,260,,614,643,604,,429,527,528,352,,,,,480',
',918,562,636,563,,645,576,,145,450,,450,154,,532,,,649,,,389,,,,700',
',,613,,826,,,616,,670,,,,570,,608,575,,647,703,,871,601,,15,,639,620',
'139,518,519,520,521,592,658,273,703,574,139,,,,,855,,,,15,,639,265,130',
',,447,621,623,,,,687,,843,627,,,,15,139,139,139,139,,730,,,15,650,139',
'139,446,,,,470,,,,,154,744,,676,650,,,,671,,,450,,717,,,,838,,,,447',
',,,,,830,,,,616,,,,,691,,,15,,,,686,,15,,446,284,,694,470,948,722,707',
',139,,283,273,,,470,247,221,139,,480,,,139,,15,,265,746,,139,139,139',
'796,,,,,604,139,,,7,429,,429,,814,447,,,15,15,,749,821,7,685,940,,,284',
',,692,447,,727,768,,247,283,,,446,139,480,221,470,,,,,,154,,480,724',
'691,691,15,446,917,15,,470,260,,616,735,15,,738,740,687,,599,,,893,750',
'754,,139,,7,,,260,,139,,,,,15,273,,765,,,139,,,7,769,154,,221,,265,',
'130,915,415,,415,,415,687,480,,,,,,415,415,,,,15,,692,692,15,438,480',
'15,733,,,,,154,650,415,415,415,687,861,154,429,812,56,,,842,616,818',
'820,747,154,687,,7,,640,56,139,860,15,15,754,,139,,,139,648,,691,269',
',15,,273,,,139,139,754,139,,,872,668,875,15,,139,,,,,,,,703,,,,,,,,854',
',,,,,,,265,,347,56,,844,718,,,429,848,429,154,365,15,,,,,,273,,56,130',
',,154,154,685,154,365,269,692,,7,,365,773,937,775,896,777,,,,,,,429',
'784,785,524,,,,273,524,7,,247,,15,879,,,,,,139,800,802,804,,,139,139',
',7,931,,,,,56,,,7,,,761,265,,,,,260,,,,,,,273,,,,,247,,,,,415,415,415',
',,590,,415,,,,,,415,415,,415,415,415,,687,15,,,,754,7,,15,,,,7,,,,265',
'447,,,,,,,,,,,,,,,470,,,,880,,,7,,,,446,56,,601,470,415,,,868,415,415',
'415,415,754,,828,829,,,832,,,7,7,56,,139,269,415,,,,139,,,,96,,,,15',
',,,56,,840,,15,,96,,,56,,888,,,,15,,7,,,7,15,,,856,,,7,,,,,480,,,,,',
',,897,898,899,,,,,903,,,,,7,907,909,,911,912,914,15,,56,,,350,96,,56',
',,,,,,,,,,858,881,859,15,,882,96,,,139,7,,865,,7,,56,7,269,,887,382',
',,,,,,,874,941,876,,,942,943,945,946,,,745,,56,56,748,,,,,,7,7,,950',
',,,,,,,,,7,919,,,96,,,154,,572,,925,,,7,577,,767,56,,,56,,,458,459,',
'460,56,,,,,,,,,,,612,,,,,,,,,622,,,,,56,7,,,,,,,,,926,,,,,269,,,930',
',932,,,933,,,,,,,,,646,,,,56,,,,56,,,56,96,,,664,7,,,,,,949,,,,,,,,',
',,,,96,,524,,,,,,,56,56,,,,,,841,,,,96,,56,,,,,,,96,,,,,704,,56,,,,',
',,,,,,,,,,,,7,,30,,,,357,7,153,269,,,,,,,30,,,,257,,,56,,,,,96,,266',
'278,,,96,,,,,,,,,,,153,299,300,,,,,,,153,,,,736,,,96,,,,,,606,,,56,',
',,346,30,,,,619,,,7,,,364,357,96,96,153,7,,,153,30,760,153,632,,269',
'153,7,364,266,153,764,,7,,766,407,,,,,,,,,,,,,,,,96,783,659,96,,382',
'663,,791,,96,,,257,,,56,,,7,,,,56,153,,,,,30,,269,,,,96,153,153,,153',
',7,,,,,,,,,,,,,,,,,,,,,,,,,365,,,,,96,,,,96,357,,96,,834,,,,,,,,,,,',
'606,,,,,,56,,,,,,,523,56,,,,,96,96,890,,,,56,,,,,30,56,96,857,153,,',
',,,,,,,489,,96,,,,,,,30,,,266,,,,,,,,,,659,,382,56,,357,753,30,,,,,',
'759,,,30,,,,96,,,,,56,,,535,536,537,538,539,540,541,542,543,544,545',
'546,547,548,549,550,551,552,553,554,555,556,557,,559,,561,,,,634,635',
',,,,,797,,96,30,,,,,,30,,,,,,,,,,,,,,,,,,,,607,,,673,,153,674,30,,266',
',,153,677,,,,,,,,,,,,,,,,,153,,,30,30,,,,695,,,,,,,96,,,,,,,96,,,407',
',153,,,,153,489,,153,153,,851,,,,,30,,713,30,675,,715,,,716,30,682,',
',,,,,,,,,,153,,,,,,,153,,,,,30,,,,,,153,725,726,,,,,,,266,,,,,96,,,',
',,,,96,711,712,,,,884,892,30,,,96,30,,,30,153,96,,720,721,,,,,,,895',
',,,,,,,,,,,,,,,,723,,,,30,30,,,153,,,96,,,,,,30,,,,,153,153,,153,,,',
',,30,,96,,,,,153,,153,,,,153,,,,,809,,153,,,,,,266,,,,,,,,,,,,,,30,',
'770,,,,,,,,,,264,264,,,,,,,,,,,,,,,264,264,,,153,,,,,,,,,,,,,,,30,,',
',,,,811,813,264,847,,,817,819,,,,,,264,,,,264,,,,,266,,264,,,,,,264',
'264,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,30,,264,,,,,30,,153,853,,,883,',
'266,,,,,,886,,,,264,264,,264,,,,894,,,,,,,,,,,,811,,817,819,,,364,,',
',,,,,,,,,,,,,,,878,,,,,,,,924,,,,,,30,153,,885,,,,,30,,,,,,,889,934',
',,30,,,153,,,30,,,,,,,,,,,,878,,,,,,,,,,,,,,,,,,264,,,,,,,,30,,,,,,',
',,,,,,,,,,,,,,,30,,,,,,153,,264,264,264,264,264,264,264,264,264,264',
'264,264,264,264,264,264,264,264,264,264,264,264,264,,264,,264,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,264,,,,,,,,,,,,,,,,,,,,,264',
',,,,,,,,,,,,,,,,,,,,,,,,264,,,,,,264,264,,264,264,,,,,,,,,,,264,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,264,,,,,,,,,,,,,,264,264,,',
',,,,,,,,,,,264,,,264,264,,,,,,,,,,,,,,,,,,,,,,,,264,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,264,,264,,,,264,,,,,,,264,,,,,,264,,,,,,,,,,,,',
',,,264,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,264,,,,,,,,,,,,,,,,,,,,,,,264,,',
',,,,,,,,,,,,,,,,,,264,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,264,264,,,,,264,,,,,,,,,,,,,,,,,,,,,,,,,,,,,264,,264,264,,,264',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,264,,264,,,,,,,,,,,,264,,,,,,,264,,',
',,,,,,,,,,,,264' ]
        racc_goto_table = arr = Array.new(2753, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'7,13,119,47,53,68,91,68,32,111,21,25,40,84,54,63,10,36,137,58,39,103',
'108,11,9,17,36,138,88,57,10,59,26,88,99,54,104,65,43,64,49,64,30,105',
'65,6,32,64,14,84,132,44,85,8,113,48,102,38,58,38,30,115,142,139,17,36',
'30,8,57,129,113,116,28,52,54,59,5,51,30,132,129,66,79,30,28,129,59,7',
'69,76,52,69,67,67,7,106,30,95,82,6,21,53,62,59,59,101,31,22,114,18,15',
'54,39,25,117,19,39,7,118,80,120,122,36,7,123,124,127,128,100,119,7,24',
'130,19,131,4,111,24,7,19,7,133,134,135,41,24,136,41,7,24,3,19,7,49,24',
'7,19,2,14,24,93,141,1,,,,38,38,139,,,,24,,24,,,66,24,,105,,,24,,,,,',
',24,,,,,24,,,34,,,,,24,24,,,,24,32,,,26,,24,,,142,,,,,24,24,36,,48,',
',24,91,24,24,24,43,34,,,,24,38,,38,,34,,,44,,,7,,21,,54,,,26,,,,105',
'10,,110,,,49,,,110,,,,,59,115,110,102,24,,,,34,24,,116,26,113,,34,85',
'51,,34,28,25,,38,8,105,26,,132,63,10,,,38,30,30,30,30,,11,103,63,,103',
'30,30,43,,,,,66,,14,41,109,41,,104,44,,66,7,,7,34,,6,,,109,,,66,,,,25',
',,36,,49,,,47,,109,,,,10,,21,9,,138,38,,108,7,,24,,137,21,24,19,19,19',
'19,30,65,59,38,6,24,,,,,99,,,,24,,137,24,111,,,36,30,30,,,,32,,64,30',
',,,24,24,24,24,24,,25,,,24,7,24,24,7,,,,54,,,,,34,25,,41,7,,,,111,,',
'7,,63,,,,88,,,,36,,,,,,84,,,,47,,,,,7,,,24,,,,39,,24,,7,58,,39,54,26',
'32,17,,24,,57,59,,,54,96,54,24,,66,,,24,,24,,24,11,,24,24,24,68,,,,',
'63,24,,,23,103,,103,,40,36,,,24,24,,65,40,23,66,13,,,58,,,66,36,,17',
'11,,96,57,,,7,24,66,54,54,,,,,,34,,66,30,7,7,24,7,91,24,,54,30,,47,10',
'24,,39,39,32,,78,,,84,7,7,,24,,23,,,30,,24,,,,,24,59,,53,,,24,,,23,119',
'34,,54,,24,,111,84,7,,7,,7,32,66,,,,,,7,7,,,,24,,66,66,24,7,66,24,19',
',,,,34,7,7,7,7,32,103,34,103,21,50,,,11,47,21,21,19,34,32,,23,,107,50',
'24,109,24,24,7,,24,,,24,107,,7,50,,24,,59,,,24,24,7,24,,,109,107,109',
'24,,24,,,,,,,,38,,,,,,,,47,,,,,,,,24,,50,50,,7,78,,,103,7,103,34,50',
'24,,,,,,59,,50,111,,,34,34,66,34,50,50,66,,23,,50,110,25,110,11,110',
',,,,,,103,110,110,96,,,,59,96,23,,96,,24,21,,,,,,24,110,110,110,,,24',
'24,,23,109,,,,,50,,,23,,,78,24,,,,,30,,,,,,,59,,,,,96,,,,,7,7,7,,,96',
',7,,,,,,7,7,,7,7,7,,32,24,,,,7,23,,24,,,,23,,,,24,36,,,,,,,,,,,,,,,54',
',,,19,,,23,,,,7,50,,7,54,7,,,24,7,7,7,7,7,,78,78,,,78,,,23,23,50,,24',
'50,7,,,,24,,,,20,,,,24,,,,50,,78,,24,,20,,,50,,24,,,,24,,23,,,23,24',
',,78,,,23,,,,,66,,,,,,,,110,110,110,,,,,110,,,,,23,110,110,,110,110',
'110,24,,50,,,20,20,,50,,,,,,,,,,,107,78,107,24,,78,20,,,24,23,,107,',
'23,,50,23,50,,78,29,,,,,,,,107,110,107,,,110,110,110,110,,,96,,50,50',
'96,,,,,,23,23,,110,,,,,,,,,,23,78,,,20,,,34,,45,,78,,,23,45,,96,50,',
',50,,,29,29,,29,50,,,,,,,,,,,45,,,,,,,,,45,,,,,50,23,,,,,,,,,107,,,',
',50,,,107,,107,,,107,,,,,,,,,45,,,,50,,,,50,,,50,20,,,45,23,,,,,,107',
',,,,,,,,,,,,20,,96,,,,,,,50,50,,,,,,96,,,,20,,50,,,,,,,20,,,,,45,,50',
',,,,,,,,,,,,,,,,23,,27,,,,12,23,33,50,,,,,,,27,,,,33,,,50,,,,,20,,27',
'33,,,20,,,,,,,,,,,33,33,33,,,,,,,33,,,,45,,,20,,,,,,29,,,50,,,,27,27',
',,,29,,,23,,,27,12,20,20,33,23,,,33,27,45,33,29,,50,33,23,27,27,33,45',
',23,,45,33,,,,,,,,,,,,,,,,20,45,29,20,,29,29,,45,,20,,,33,,,50,,,23',
',,,50,33,,,,,27,,50,,,,20,33,33,,33,,23,,,,,,,,,,,,,,,,,,,,,,,,,50,',
',,,20,,,,20,12,,20,,45,,,,,,,,,,,,29,,,,,,50,,,,,,,12,50,,,,,20,20,50',
',,,50,,,,,27,50,20,45,33,,,,,,,,,,33,,20,,,,,,,27,,,27,,,,,,,,,,29,',
'29,50,,12,29,27,,,,,,29,,,27,,,,20,,,,,50,,,33,33,33,33,33,33,33,33',
'33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,,33,,33,,,,12,12,,,,,,29',
',20,27,,,,,,27,,,,,,,,,,,,,,,,,,,,33,,,12,,33,12,27,,27,,,33,12,,,,',
',,,,,,,,,,,,33,,,27,27,,,,12,,,,,,,20,,,,,,,20,,,33,,33,,,,33,33,,33',
'33,,29,,,,,27,,12,27,33,,12,,,12,27,27,,,,,,,,,,,,33,,,,,,,33,,,,,27',
',,,,,33,12,12,,,,,,,27,,,,,20,,,,,,,,20,33,33,,,,29,20,27,,,20,27,,',
'27,33,20,,33,33,,,,,,,29,,,,,,,,,,,,,,,,,33,,,,27,27,,,33,,,20,,,,,',
'27,,,,,33,33,,33,,,,,,27,,20,,,,,33,,33,,,,33,,,,,12,,33,,,,,,27,,,',
',,,,,,,,,,27,,33,,,,,,,,,,42,42,,,,,,,,,,,,,,,42,42,,,33,,,,,,,,,,,',
',,,27,,,,,,,33,33,42,12,,,33,33,,,,,,42,,,,42,,,,,27,,42,,,,,,42,42',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,27,,42,,,,,27,,33,33,,,12,,27,,,,,',
'12,,,,42,42,,42,,,,12,,,,,,,,,,,,33,,33,33,,,27,,,,,,,,,,,,,,,,,,33',
',,,,,,,12,,,,,,27,33,,33,,,,,27,,,,,,,27,12,,,27,,,33,,,27,,,,,,,,,',
',,33,,,,,,,,,,,,,,,,,,42,,,,,,,,27,,,,,,,,,,,,,,,,,,,,,,27,,,,,,33,',
'42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42',
',42,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,42,,,,,,,,,',
',,,,,,,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,42,,,,,,42,42,,42,42,,,,,,,,,',
',42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,42,,,,,,,,,,,,,,42',
'42,,,,,,,,,,,,,,42,,,42,42,,,,,,,,,,,,,,,,,,,,,,,,42,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,42,,42,,,,42,,,,,,,42,,,,,,42,,,,,,,,,,,,,,,,42',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,42,,,,,,,,,,,,,,,,,,,,,,,42,,,,,,,,,,,',
',,,,,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,42,42',
',,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,42,,42,42,,,42,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,42,,42,,,,,,,,,,,,42,,,,,,,42,,,,,,,,,,,,,,,42' ]
        racc_goto_check = arr = Array.new(2753, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_goto_pointer = [
   nil,   162,   157,   147,   135,    73,    32,    -3,    50,    11,
    13,   -72,  1206,  -377,  -555,  -646,   nil,    -8,    37,    89,
   951,   -11,    32,   528,   128,  -140,  -443,  1275,  -307,   964,
    16,  -174,   -62,  1275,   189,   nil,   -29,   nil,  -195,    11,
  -150,   -11,  1885,   -38,   -25,   758,   nil,   -28,   -49,  -348,
   670,  -290,   -13,    -8,     2,   nil,   nil,    -4,   -14,     0,
   nil,   nil,    12,   -75,  -334,   -53,    72,  -488,  -136,  -352,
   nil,   nil,   nil,   nil,   nil,   nil,   -20,   nil,   218,   -15,
   105,   nil,    90,   nil,  -248,  -643,   nil,   nil,  -274,   nil,
   nil,  -302,   nil,    85,   nil,  -271,   492,   nil,   nil,  -369,
    19,  -290,  -586,  -110,   -95,  -601,  -354,   266,  -427,   -87,
   144,     1,   nil,  -379,  -543,  -590,  -580,   106,     3,    -6,
    49,   nil,  -762,  -478,  -626,   nil,   nil,    73,   108,    57,
    96,  -151,  -206,   102,  -320,   131,  -271,  -399,  -405,  -740,
   nil,    32,  -381 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   355,   nil,   309,
   356,   nil,   378,   nil,   824,   nil,   358,   nil,   nil,   nil,
   161,   102,   107,   138,   277,   nil,   nil,   142,   nil,   146,
    51,   nil,   571,    69,    71,    77,   159,    84,   699,   nil,
   nil,   nil,     9,    16,   nil,   nil,    31,    38,    41,   nil,
   150,   366,   nil,   279,   478,   225,   281,    88,    92,   100,
   336,   312,   nil,   141,   nil,   143,   472,   693,   nil,   149,
    61,    66,    73,    79,    81,    85,    89,    95,   nil,   nil,
   137,    14,   nil,    26,   nil,   nil,    44,    50,   nil,    62,
    67,   nil,    75,   nil,    86,   nil,   487,   103,   109,   nil,
   nil,   nil,   427,   132,   nil,   424,   nil,   120,   nil,   126,
   nil,   637,   453,   nil,   nil,   nil,   114,   nil,   nil,   628,
   nil,   473,   nil,   nil,   nil,    45,    53,    58,   nil,   nil,
   nil,   nil,   464,   nil,   nil,   nil,   133,   134,   112,   666,
   117,   121,   144 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 149, :_reduce_1,
  0, 152, :_reduce_2,
  2, 150, :_reduce_3,
  2, 151, :_reduce_4,
  1, 153, :_reduce_5,
  1, 153, :_reduce_6,
  3, 153, :_reduce_7,
  2, 153, :_reduce_8,
  1, 156, :_reduce_9,
  1, 156, :_reduce_none,
  4, 159, :_reduce_11,
  2, 160, :_reduce_12,
  1, 164, :_reduce_13,
  1, 164, :_reduce_14,
  3, 164, :_reduce_15,
  2, 164, :_reduce_none,
  0, 179, :_reduce_17,
  4, 158, :_reduce_18,
  3, 158, :_reduce_none,
  3, 158, :_reduce_none,
  3, 158, :_reduce_none,
  2, 158, :_reduce_none,
  3, 158, :_reduce_23,
  3, 158, :_reduce_24,
  3, 158, :_reduce_none,
  3, 158, :_reduce_none,
  3, 158, :_reduce_none,
  4, 158, :_reduce_none,
  3, 158, :_reduce_29,
  3, 158, :_reduce_none,
  3, 158, :_reduce_none,
  6, 158, :_reduce_none,
  5, 158, :_reduce_none,
  5, 158, :_reduce_none,
  5, 158, :_reduce_none,
  3, 158, :_reduce_none,
  3, 158, :_reduce_none,
  3, 158, :_reduce_none,
  3, 158, :_reduce_none,
  1, 158, :_reduce_none,
  1, 178, :_reduce_none,
  3, 178, :_reduce_none,
  3, 178, :_reduce_none,
  3, 178, :_reduce_44,
  2, 178, :_reduce_none,
  1, 178, :_reduce_none,
  1, 167, :_reduce_none,
  1, 169, :_reduce_none,
  1, 169, :_reduce_none,
  2, 169, :_reduce_50,
  2, 169, :_reduce_none,
  2, 169, :_reduce_none,
  1, 183, :_reduce_none,
  4, 183, :_reduce_none,
  4, 183, :_reduce_none,
  4, 188, :_reduce_none,
  2, 182, :_reduce_57,
  3, 182, :_reduce_none,
  4, 182, :_reduce_59,
  5, 182, :_reduce_none,
  4, 182, :_reduce_none,
  5, 182, :_reduce_none,
  2, 182, :_reduce_63,
  2, 182, :_reduce_64,
  1, 170, :_reduce_none,
  3, 170, :_reduce_none,
  1, 192, :_reduce_none,
  3, 192, :_reduce_none,
  1, 191, :_reduce_none,
  2, 191, :_reduce_none,
  3, 191, :_reduce_none,
  5, 191, :_reduce_none,
  2, 191, :_reduce_none,
  4, 191, :_reduce_none,
  2, 191, :_reduce_none,
  4, 191, :_reduce_none,
  1, 191, :_reduce_none,
  3, 191, :_reduce_none,
  1, 195, :_reduce_none,
  3, 195, :_reduce_none,
  2, 194, :_reduce_none,
  3, 194, :_reduce_none,
  1, 197, :_reduce_none,
  3, 197, :_reduce_none,
  1, 196, :_reduce_none,
  4, 196, :_reduce_none,
  3, 196, :_reduce_none,
  3, 196, :_reduce_none,
  3, 196, :_reduce_none,
  3, 196, :_reduce_none,
  2, 196, :_reduce_none,
  1, 196, :_reduce_none,
  1, 168, :_reduce_none,
  4, 168, :_reduce_94,
  3, 168, :_reduce_95,
  3, 168, :_reduce_none,
  3, 168, :_reduce_none,
  3, 168, :_reduce_none,
  2, 168, :_reduce_none,
  1, 168, :_reduce_none,
  1, 199, :_reduce_101,
  1, 199, :_reduce_102,
  2, 200, :_reduce_103,
  1, 200, :_reduce_104,
  3, 200, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_109,
  1, 201, :_reduce_110,
  1, 204, :_reduce_none,
  1, 204, :_reduce_none,
  1, 165, :_reduce_none,
  1, 165, :_reduce_none,
  1, 166, :_reduce_none,
  3, 166, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  3, 181, :_reduce_187,
  5, 181, :_reduce_none,
  3, 181, :_reduce_189,
  5, 181, :_reduce_none,
  6, 181, :_reduce_none,
  5, 181, :_reduce_192,
  5, 181, :_reduce_none,
  5, 181, :_reduce_none,
  5, 181, :_reduce_none,
  4, 181, :_reduce_none,
  3, 181, :_reduce_none,
  3, 181, :_reduce_198,
  3, 181, :_reduce_199,
  3, 181, :_reduce_200,
  3, 181, :_reduce_201,
  3, 181, :_reduce_202,
  3, 181, :_reduce_203,
  3, 181, :_reduce_204,
  3, 181, :_reduce_205,
  4, 181, :_reduce_none,
  4, 181, :_reduce_none,
  2, 181, :_reduce_none,
  2, 181, :_reduce_209,
  3, 181, :_reduce_210,
  3, 181, :_reduce_211,
  3, 181, :_reduce_212,
  3, 181, :_reduce_213,
  3, 181, :_reduce_214,
  3, 181, :_reduce_215,
  3, 181, :_reduce_216,
  3, 181, :_reduce_217,
  3, 181, :_reduce_218,
  3, 181, :_reduce_219,
  3, 181, :_reduce_220,
  3, 181, :_reduce_221,
  3, 181, :_reduce_222,
  2, 181, :_reduce_223,
  2, 181, :_reduce_224,
  3, 181, :_reduce_225,
  3, 181, :_reduce_226,
  0, 208, :_reduce_227,
  4, 181, :_reduce_228,
  0, 209, :_reduce_229,
  4, 181, :_reduce_230,
  3, 181, :_reduce_none,
  6, 181, :_reduce_232,
  1, 181, :_reduce_none,
  1, 177, :_reduce_none,
  1, 210, :_reduce_none,
  2, 210, :_reduce_none,
  4, 210, :_reduce_none,
  2, 210, :_reduce_none,
  3, 214, :_reduce_239,
  1, 215, :_reduce_240,
  1, 215, :_reduce_none,
  1, 173, :_reduce_242,
  1, 173, :_reduce_none,
  1, 184, :_reduce_244,
  2, 184, :_reduce_245,
  2, 184, :_reduce_246,
  4, 184, :_reduce_247,
  1, 184, :_reduce_248,
  1, 187, :_reduce_none,
  2, 217, :_reduce_250,
  2, 216, :_reduce_251,
  1, 216, :_reduce_none,
  1, 216, :_reduce_none,
  1, 211, :_reduce_254,
  2, 211, :_reduce_255,
  3, 211, :_reduce_256,
  4, 211, :_reduce_257,
  3, 176, :_reduce_none,
  4, 176, :_reduce_none,
  2, 176, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  3, 207, :_reduce_none,
  3, 207, :_reduce_none,
  3, 207, :_reduce_272,
  3, 207, :_reduce_273,
  2, 207, :_reduce_274,
  3, 207, :_reduce_275,
  3, 207, :_reduce_276,
  1, 207, :_reduce_277,
  4, 207, :_reduce_278,
  3, 207, :_reduce_279,
  1, 207, :_reduce_280,
  5, 207, :_reduce_none,
  4, 207, :_reduce_none,
  3, 207, :_reduce_none,
  2, 207, :_reduce_284,
  1, 207, :_reduce_285,
  2, 207, :_reduce_286,
  2, 207, :_reduce_none,
  6, 207, :_reduce_288,
  6, 207, :_reduce_289,
  5, 207, :_reduce_none,
  5, 207, :_reduce_none,
  5, 207, :_reduce_292,
  4, 207, :_reduce_293,
  7, 207, :_reduce_none,
  5, 207, :_reduce_295,
  6, 207, :_reduce_none,
  4, 207, :_reduce_297,
  5, 207, :_reduce_298,
  7, 207, :_reduce_299,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 172, :_reduce_none,
  1, 225, :_reduce_none,
  1, 231, :_reduce_none,
  1, 234, :_reduce_none,
  1, 235, :_reduce_none,
  1, 237, :_reduce_none,
  1, 238, :_reduce_none,
  1, 240, :_reduce_none,
  1, 242, :_reduce_none,
  1, 245, :_reduce_none,
  1, 246, :_reduce_none,
  1, 226, :_reduce_none,
  1, 232, :_reduce_none,
  1, 232, :_reduce_none,
  2, 232, :_reduce_none,
  1, 236, :_reduce_none,
  1, 236, :_reduce_none,
  1, 233, :_reduce_321,
  5, 233, :_reduce_322,
  1, 162, :_reduce_323,
  2, 162, :_reduce_324,
  1, 241, :_reduce_none,
  1, 241, :_reduce_none,
  1, 250, :_reduce_none,
  3, 250, :_reduce_none,
  1, 253, :_reduce_none,
  3, 253, :_reduce_none,
  1, 252, :_reduce_none,
  4, 252, :_reduce_none,
  6, 252, :_reduce_none,
  3, 252, :_reduce_none,
  5, 252, :_reduce_none,
  2, 252, :_reduce_none,
  4, 252, :_reduce_none,
  1, 252, :_reduce_none,
  3, 252, :_reduce_none,
  6, 254, :_reduce_none,
  8, 254, :_reduce_none,
  4, 254, :_reduce_none,
  6, 254, :_reduce_none,
  4, 254, :_reduce_none,
  2, 254, :_reduce_none,
  6, 254, :_reduce_none,
  2, 254, :_reduce_none,
  4, 254, :_reduce_none,
  6, 254, :_reduce_none,
  2, 254, :_reduce_none,
  4, 254, :_reduce_none,
  2, 254, :_reduce_none,
  4, 254, :_reduce_none,
  1, 254, :_reduce_none,
  1, 189, :_reduce_355,
  1, 189, :_reduce_none,
  3, 260, :_reduce_none,
  1, 260, :_reduce_none,
  4, 260, :_reduce_359,
  1, 261, :_reduce_none,
  2, 261, :_reduce_none,
  1, 262, :_reduce_none,
  3, 262, :_reduce_none,
  1, 263, :_reduce_none,
  1, 263, :_reduce_none,
  2, 230, :_reduce_none,
  4, 265, :_reduce_none,
  1, 265, :_reduce_none,
  3, 266, :_reduce_none,
  3, 266, :_reduce_none,
  4, 268, :_reduce_none,
  4, 268, :_reduce_372,
  2, 185, :_reduce_373,
  4, 185, :_reduce_none,
  4, 185, :_reduce_none,
  2, 229, :_reduce_376,
  4, 229, :_reduce_377,
  4, 229, :_reduce_378,
  3, 229, :_reduce_379,
  3, 229, :_reduce_none,
  3, 229, :_reduce_none,
  2, 229, :_reduce_382,
  1, 229, :_reduce_383,
  4, 229, :_reduce_384,
  4, 228, :_reduce_385,
  4, 228, :_reduce_386,
  5, 239, :_reduce_387,
  1, 270, :_reduce_388,
  1, 270, :_reduce_none,
  6, 161, :_reduce_none,
  1, 161, :_reduce_none,
  1, 271, :_reduce_none,
  1, 271, :_reduce_none,
  1, 271, :_reduce_none,
  2, 272, :_reduce_none,
  1, 272, :_reduce_none,
  2, 163, :_reduce_none,
  1, 163, :_reduce_none,
  1, 218, :_reduce_none,
  1, 218, :_reduce_none,
  1, 218, :_reduce_none,
  1, 219, :_reduce_none,
  1, 274, :_reduce_none,
  1, 274, :_reduce_none,
  2, 274, :_reduce_none,
  3, 275, :_reduce_406,
  3, 220, :_reduce_407,
  3, 221, :_reduce_none,
  3, 222, :_reduce_none,
  3, 222, :_reduce_none,
  0, 278, :_reduce_none,
  3, 278, :_reduce_none,
  1, 279, :_reduce_none,
  2, 279, :_reduce_none,
  3, 223, :_reduce_none,
  3, 223, :_reduce_none,
  0, 281, :_reduce_417,
  3, 281, :_reduce_none,
  0, 276, :_reduce_419,
  2, 276, :_reduce_420,
  0, 277, :_reduce_421,
  2, 277, :_reduce_422,
  1, 280, :_reduce_423,
  2, 280, :_reduce_424,
  3, 280, :_reduce_425,
  1, 282, :_reduce_none,
  1, 282, :_reduce_none,
  1, 282, :_reduce_none,
  1, 282, :_reduce_none,
  2, 205, :_reduce_430,
  1, 283, :_reduce_none,
  1, 283, :_reduce_none,
  1, 283, :_reduce_none,
  1, 283, :_reduce_none,
  3, 206, :_reduce_none,
  1, 273, :_reduce_436,
  1, 273, :_reduce_437,
  2, 273, :_reduce_none,
  2, 273, :_reduce_none,
  1, 198, :_reduce_440,
  1, 198, :_reduce_441,
  1, 198, :_reduce_442,
  1, 198, :_reduce_443,
  1, 198, :_reduce_444,
  1, 198, :_reduce_445,
  1, 198, :_reduce_446,
  1, 198, :_reduce_447,
  1, 198, :_reduce_448,
  1, 198, :_reduce_449,
  1, 198, :_reduce_450,
  1, 198, :_reduce_451,
  1, 224, :_reduce_none,
  1, 171, :_reduce_none,
  1, 175, :_reduce_none,
  1, 175, :_reduce_none,
  1, 243, :_reduce_456,
  3, 243, :_reduce_457,
  2, 243, :_reduce_458,
  3, 247, :_reduce_459,
  2, 247, :_reduce_460,
  6, 267, :_reduce_461,
  8, 267, :_reduce_462,
  4, 267, :_reduce_463,
  6, 267, :_reduce_464,
  4, 267, :_reduce_465,
  6, 267, :_reduce_466,
  2, 267, :_reduce_467,
  4, 267, :_reduce_468,
  6, 267, :_reduce_469,
  2, 267, :_reduce_470,
  4, 267, :_reduce_471,
  2, 267, :_reduce_472,
  4, 267, :_reduce_473,
  1, 267, :_reduce_474,
  0, 267, :_reduce_475,
  1, 264, :_reduce_none,
  1, 264, :_reduce_none,
  1, 264, :_reduce_none,
  1, 264, :_reduce_none,
  1, 251, :_reduce_none,
  1, 251, :_reduce_481,
  3, 251, :_reduce_482,
  2, 251, :_reduce_483,
  1, 285, :_reduce_484,
  3, 285, :_reduce_none,
  1, 255, :_reduce_486,
  3, 255, :_reduce_487,
  3, 286, :_reduce_none,
  3, 287, :_reduce_none,
  1, 256, :_reduce_none,
  3, 256, :_reduce_none,
  1, 284, :_reduce_none,
  3, 284, :_reduce_none,
  1, 288, :_reduce_none,
  1, 288, :_reduce_none,
  2, 257, :_reduce_none,
  1, 257, :_reduce_none,
  1, 289, :_reduce_none,
  1, 289, :_reduce_none,
  2, 259, :_reduce_500,
  3, 259, :_reduce_501,
  2, 258, :_reduce_502,
  1, 258, :_reduce_none,
  1, 248, :_reduce_none,
  3, 248, :_reduce_none,
  1, 227, :_reduce_506,
  2, 227, :_reduce_507,
  1, 213, :_reduce_508,
  3, 213, :_reduce_509,
  3, 290, :_reduce_510,
  2, 290, :_reduce_511,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 269, :_reduce_none,
  1, 269, :_reduce_none,
  1, 269, :_reduce_none,
  1, 249, :_reduce_none,
  1, 249, :_reduce_none,
  0, 154, :_reduce_none,
  1, 154, :_reduce_none,
  0, 180, :_reduce_none,
  1, 180, :_reduce_none,
  2, 193, :_reduce_none,
  2, 174, :_reduce_none,
  0, 212, :_reduce_none,
  1, 212, :_reduce_none,
  1, 212, :_reduce_none,
  1, 244, :_reduce_none,
  1, 244, :_reduce_none,
  1, 157, :_reduce_none,
  2, 157, :_reduce_none,
  0, 155, :_reduce_none ]

racc_reduce_n = 538

racc_shift_n = 951

racc_token_table = {
  false => 0,
  :error => 1,
  "!" => 2,
  :tTILDE => 3,
  :tUPLUS => 4,
  :tPOW => 5,
  :tUMINUS_NUM => 6,
  :tUMINUS => 7,
  :tSTAR2 => 8,
  :tDIVIDE => 9,
  :tPERCENT => 10,
  :tPLUS => 11,
  :tMINUS => 12,
  :tLSHFT => 13,
  :tRSHFT => 14,
  :tAMPER2 => 15,
  :tPIPE => 16,
  :tCARET => 17,
  ">" => 18,
  :tGEQ => 19,
  "<" => 20,
  :tLEQ => 21,
  :tCMP => 22,
  :tEQ => 23,
  :tEQQ => 24,
  :tNEQ => 25,
  :tMATCH => 26,
  :tNMATCH => 27,
  :tANDOP => 28,
  :tOROP => 29,
  :tDOT2 => 30,
  :tDOT3 => 31,
  "?" => 32,
  ":" => 33,
  :kRESCUE_MOD => 34,
  "=" => 35,
  :tOP_ASGN => 36,
  :kNOT => 37,
  :kOR => 38,
  :kAND => 39,
  :kIF_MOD => 40,
  :kUNLESS_MOD => 41,
  :kWHILE_MOD => 42,
  :kUNTIL_MOD => 43,
  :tLBRACE_ARG => 44,
  :tLOWEST => 45,
  :kCLASS => 46,
  :kMODULE => 47,
  :kDEF => 48,
  :kUNDEF => 49,
  :kBEGIN => 50,
  :kRESCUE => 51,
  :kENSURE => 52,
  :kEND => 53,
  :kIF => 54,
  :kUNLESS => 55,
  :kTHEN => 56,
  :kELSIF => 57,
  :kELSE => 58,
  :kCASE => 59,
  :kWHEN => 60,
  :kWHILE => 61,
  :kUNTIL => 62,
  :kFOR => 63,
  :kBREAK => 64,
  :kNEXT => 65,
  :kREDO => 66,
  :kRETRY => 67,
  :kIN => 68,
  :kDO => 69,
  :kDO_COND => 70,
  :kDO_BLOCK => 71,
  :kDO_LAMBDA => 72,
  :kRETURN => 73,
  :kYIELD => 74,
  :kSUPER => 75,
  :kSELF => 76,
  :kNIL => 77,
  :kTRUE => 78,
  :kFALSE => 79,
  :kALIAS => 80,
  :kDEFINED => 81,
  :klBEGIN => 82,
  :klEND => 83,
  :k__LINE__ => 84,
  :k__FILE__ => 85,
  :k__ENCODING__ => 86,
  :kDEFined => 87,
  :tIDENTIFIER => 88,
  :tFID => 89,
  :tGVAR => 90,
  :tIVAR => 91,
  :tCONSTANT => 92,
  :tCVAR => 93,
  :tLABEL => 94,
  :tINTEGER => 95,
  :tFLOAT => 96,
  :tSTRING_CONTENT => 97,
  :tCHAR => 98,
  :tNTH_REF => 99,
  :tBACK_REF => 100,
  :tREGEXP_END => 101,
  :tAREF => 102,
  :tASET => 103,
  :tCOLON2 => 104,
  :tCOLON3 => 105,
  :tASSOC => 106,
  :tLPAREN => 107,
  :tLPAREN_ARG => 108,
  :tRPAREN => 109,
  :tLBRACK => 110,
  :tLBRACE => 111,
  :tSTAR => 112,
  :tAMPER => 113,
  :tLAMBDA => 114,
  :tSYMBEG => 115,
  :tSTRING_BEG => 116,
  :tXSTRING_BEG => 117,
  :tREGEXP_BEG => 118,
  :tWORDS_BEG => 119,
  :tQWORDS_BEG => 120,
  :tSTRING_DBEG => 121,
  :tSTRING_DVAR => 122,
  :tSTRING_END => 123,
  :tLAMBEG => 124,
  :tSTRING => 125,
  :tXSTRING_END => 126,
  "{" => 127,
  "}" => 128,
  "[" => 129,
  "." => 130,
  "," => 131,
  "|" => 132,
  "^" => 133,
  "&" => 134,
  "+" => 135,
  "-" => 136,
  "*" => 137,
  "/" => 138,
  "%" => 139,
  "~" => 140,
  "`" => 141,
  "(" => 142,
  ")" => 143,
  "]" => 144,
  ";" => 145,
  " " => 146,
  "\\n" => 147 }

racc_nt_base = 148

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\"!\"",
  "tTILDE",
  "tUPLUS",
  "tPOW",
  "tUMINUS_NUM",
  "tUMINUS",
  "tSTAR2",
  "tDIVIDE",
  "tPERCENT",
  "tPLUS",
  "tMINUS",
  "tLSHFT",
  "tRSHFT",
  "tAMPER2",
  "tPIPE",
  "tCARET",
  "\">\"",
  "tGEQ",
  "\"<\"",
  "tLEQ",
  "tCMP",
  "tEQ",
  "tEQQ",
  "tNEQ",
  "tMATCH",
  "tNMATCH",
  "tANDOP",
  "tOROP",
  "tDOT2",
  "tDOT3",
  "\"?\"",
  "\":\"",
  "kRESCUE_MOD",
  "\"=\"",
  "tOP_ASGN",
  "kNOT",
  "kOR",
  "kAND",
  "kIF_MOD",
  "kUNLESS_MOD",
  "kWHILE_MOD",
  "kUNTIL_MOD",
  "tLBRACE_ARG",
  "tLOWEST",
  "kCLASS",
  "kMODULE",
  "kDEF",
  "kUNDEF",
  "kBEGIN",
  "kRESCUE",
  "kENSURE",
  "kEND",
  "kIF",
  "kUNLESS",
  "kTHEN",
  "kELSIF",
  "kELSE",
  "kCASE",
  "kWHEN",
  "kWHILE",
  "kUNTIL",
  "kFOR",
  "kBREAK",
  "kNEXT",
  "kREDO",
  "kRETRY",
  "kIN",
  "kDO",
  "kDO_COND",
  "kDO_BLOCK",
  "kDO_LAMBDA",
  "kRETURN",
  "kYIELD",
  "kSUPER",
  "kSELF",
  "kNIL",
  "kTRUE",
  "kFALSE",
  "kALIAS",
  "kDEFINED",
  "klBEGIN",
  "klEND",
  "k__LINE__",
  "k__FILE__",
  "k__ENCODING__",
  "kDEFined",
  "tIDENTIFIER",
  "tFID",
  "tGVAR",
  "tIVAR",
  "tCONSTANT",
  "tCVAR",
  "tLABEL",
  "tINTEGER",
  "tFLOAT",
  "tSTRING_CONTENT",
  "tCHAR",
  "tNTH_REF",
  "tBACK_REF",
  "tREGEXP_END",
  "tAREF",
  "tASET",
  "tCOLON2",
  "tCOLON3",
  "tASSOC",
  "tLPAREN",
  "tLPAREN_ARG",
  "tRPAREN",
  "tLBRACK",
  "tLBRACE",
  "tSTAR",
  "tAMPER",
  "tLAMBDA",
  "tSYMBEG",
  "tSTRING_BEG",
  "tXSTRING_BEG",
  "tREGEXP_BEG",
  "tWORDS_BEG",
  "tQWORDS_BEG",
  "tSTRING_DBEG",
  "tSTRING_DVAR",
  "tSTRING_END",
  "tLAMBEG",
  "tSTRING",
  "tXSTRING_END",
  "\"{\"",
  "\"}\"",
  "\"[\"",
  "\".\"",
  "\",\"",
  "\"|\"",
  "\"^\"",
  "\"&\"",
  "\"+\"",
  "\"-\"",
  "\"*\"",
  "\"/\"",
  "\"%\"",
  "\"~\"",
  "\"`\"",
  "\"(\"",
  "\")\"",
  "\"]\"",
  "\";\"",
  "\" \"",
  "\"\\\\n\"",
  "$start",
  "target",
  "program",
  "top_compstmt",
  "@1",
  "top_stmts",
  "opt_terms",
  "none",
  "top_stmt",
  "terms",
  "stmt",
  "bodystmt",
  "compstmt",
  "opt_rescue",
  "opt_else",
  "opt_ensure",
  "stmts",
  "fitem",
  "undef_list",
  "expr_value",
  "lhs",
  "command_call",
  "mlhs",
  "var_lhs",
  "primary_value",
  "opt_call_args",
  "rbracket",
  "backref",
  "mrhs",
  "arg_value",
  "expr",
  "@2",
  "opt_nl",
  "arg",
  "command",
  "block_command",
  "call_args",
  "block_call",
  "operation2",
  "command_args",
  "cmd_brace_block",
  "opt_block_param",
  "operation",
  "mlhs_basic",
  "mlhs_inner",
  "rparen",
  "mlhs_head",
  "mlhs_item",
  "mlhs_node",
  "mlhs_post",
  "variable",
  "cname",
  "cpath",
  "fname",
  "op",
  "reswords",
  "fsym",
  "symbol",
  "dsym",
  "primary",
  "@3",
  "@4",
  "aref_args",
  "args",
  "trailer",
  "assocs",
  "paren_args",
  "opt_paren_args",
  "opt_block_arg",
  "block_arg",
  "literal",
  "strings",
  "xstring",
  "regexp",
  "words",
  "qwords",
  "var_ref",
  "k_begin",
  "k_end",
  "assoc_list",
  "brace_block",
  "method_call",
  "lambda",
  "k_if",
  "then",
  "if_tail",
  "k_unless",
  "k_while",
  "do",
  "k_until",
  "k_case",
  "case_body",
  "k_for",
  "for_var",
  "k_class",
  "superclass",
  "term",
  "k_module",
  "k_def",
  "f_arglist",
  "singleton",
  "dot_or_colon",
  "f_marg",
  "f_norm_arg",
  "f_margs",
  "f_marg_list",
  "block_param",
  "f_arg",
  "f_block_optarg",
  "f_rest_arg",
  "opt_f_block_arg",
  "f_block_arg",
  "block_param_def",
  "opt_bv_decl",
  "bv_decls",
  "bvar",
  "f_bad_arg",
  "f_larglist",
  "lambda_body",
  "f_args",
  "do_block",
  "operation3",
  "cases",
  "exc_list",
  "exc_var",
  "numeric",
  "string",
  "string1",
  "string_contents",
  "xstring_contents",
  "word_list",
  "word",
  "string_content",
  "qword_list",
  "string_dvar",
  "sym",
  "f_optarg",
  "f_arg_item",
  "f_opt",
  "f_block_opt",
  "restarg_mark",
  "blkarg_mark",
  "assoc" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 101)
  def _reduce_1(val, _values, result)
                        # puts 'well, we got here..'
                    # puts val[0]
                    @parser_result = val[0]
                    result = val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 109)
  def _reduce_2(val, _values, result)
                        self.lex_state = :EXPR_BEG
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 113)
  def _reduce_3(val, _values, result)
                        # puts 'program'
                    # puts val[1]
                    result = val[1]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 120)
  def _reduce_4(val, _values, result)
                        # puts 'top_compstmt'
                    # puts val[0]
                    # puts val[1]
                    result = val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 128)
  def _reduce_5(val, _values, result)
                        result = []
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 132)
  def _reduce_6(val, _values, result)
                        result = [val[0]]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 136)
  def _reduce_7(val, _values, result)
                        result = val[0] + [val[2]]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 140)
  def _reduce_8(val, _values, result)
                        result = val[1]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 145)
  def _reduce_9(val, _values, result)
                        result = val[0]
                  
    result
  end
.,.,

# reduce 10 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 151)
  def _reduce_11(val, _values, result)
                        result = val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 156)
  def _reduce_12(val, _values, result)
                        result = val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 161)
  def _reduce_13(val, _values, result)
                        result = []
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 165)
  def _reduce_14(val, _values, result)
                        result = [val[0]]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 169)
  def _reduce_15(val, _values, result)
                        result = val[0] + [val[2]]
		              
    result
  end
.,.,

# reduce 16 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 175)
  def _reduce_17(val, _values, result)
                        self.lex_state = :EXPR_FNAME
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 180)
  def _reduce_18(val, _values, result)
                      
    result
  end
.,.,

# reduce 19 omitted

# reduce 20 omitted

# reduce 21 omitted

# reduce 22 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 187)
  def _reduce_23(val, _values, result)
                		    result = node :if_mod, :stmt => val[0], :expr => val[2]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 191)
  def _reduce_24(val, _values, result)
                		    result = node :unless_mod, :stmt => val[0], :expr => val[2]
            		  
    result
  end
.,.,

# reduce 25 omitted

# reduce 26 omitted

# reduce 27 omitted

# reduce 28 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 199)
  def _reduce_29(val, _values, result)
                		    result = node :assign, :lhs => val[0], :rhs => val[2]
            		  
    result
  end
.,.,

# reduce 30 omitted

# reduce 31 omitted

# reduce 32 omitted

# reduce 33 omitted

# reduce 34 omitted

# reduce 35 omitted

# reduce 36 omitted

# reduce 37 omitted

# reduce 38 omitted

# reduce 39 omitted

# reduce 40 omitted

# reduce 41 omitted

# reduce 42 omitted

# reduce 43 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 218)
  def _reduce_44(val, _values, result)
                  	    result = node :not, :expr => val[2]
              	  
    result
  end
.,.,

# reduce 45 omitted

# reduce 46 omitted

# reduce 47 omitted

# reduce 48 omitted

# reduce 49 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 229)
  def _reduce_50(val, _values, result)
                  	    result = node :return, :call_args => val[1]
              	  
    result
  end
.,.,

# reduce 51 omitted

# reduce 52 omitted

# reduce 53 omitted

# reduce 54 omitted

# reduce 55 omitted

# reduce 56 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 242)
  def _reduce_57(val, _values, result)
                        # command call - no brackets/recv
          		      result = node :call, :recv => nil, :meth => val[0], :call_args => val[1]
                  
    result
  end
.,.,

# reduce 58 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 248)
  def _reduce_59(val, _values, result)
              		      result = node :call, :recv => val[0], :meth => val[2], :call_args => val[3]
                  
    result
  end
.,.,

# reduce 60 omitted

# reduce 61 omitted

# reduce 62 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 255)
  def _reduce_63(val, _values, result)
          		          result = node :super, :call_args => val[1]
      		        
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 259)
  def _reduce_64(val, _values, result)
            	          result = node :yield, :call_args => val[1]
        	        
    result
  end
.,.,

# reduce 65 omitted

# reduce 66 omitted

# reduce 67 omitted

# reduce 68 omitted

# reduce 69 omitted

# reduce 70 omitted

# reduce 71 omitted

# reduce 72 omitted

# reduce 73 omitted

# reduce 74 omitted

# reduce 75 omitted

# reduce 76 omitted

# reduce 77 omitted

# reduce 78 omitted

# reduce 79 omitted

# reduce 80 omitted

# reduce 81 omitted

# reduce 82 omitted

# reduce 83 omitted

# reduce 84 omitted

# reduce 85 omitted

# reduce 86 omitted

# reduce 87 omitted

# reduce 88 omitted

# reduce 89 omitted

# reduce 90 omitted

# reduce 91 omitted

# reduce 92 omitted

# reduce 93 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 300)
  def _reduce_94(val, _values, result)
    		                result = node :call, :recv => val[0], :meth => '[]', :args => val[2]
		              
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 304)
  def _reduce_95(val, _values, result)
              		      result = node :call, :recv => val[0], :meth => val[2]
                  
    result
  end
.,.,

# reduce 96 omitted

# reduce 97 omitted

# reduce 98 omitted

# reduce 99 omitted

# reduce 100 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 314)
  def _reduce_101(val, _values, result)
                        puts 'ERROR: cant use identifier for class/mod name'
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 318)
  def _reduce_102(val, _values, result)
                		    result = val[0]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 324)
  def _reduce_103(val, _values, result)
                      
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 327)
  def _reduce_104(val, _values, result)
      	                result = node :path, :cname => val[0]
  	              
    result
  end
.,.,

# reduce 105 omitted

# reduce 106 omitted

# reduce 107 omitted

# reduce 108 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 336)
  def _reduce_109(val, _values, result)
    		                self.lex_state = :EXPR_END
		                result = val[0]
		              
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 341)
  def _reduce_110(val, _values, result)
    		                self.lex_state = :EXPR_END
		                result = val[0]
		              
    result
  end
.,.,

# reduce 111 omitted

# reduce 112 omitted

# reduce 113 omitted

# reduce 114 omitted

# reduce 115 omitted

# reduce 116 omitted

# reduce 117 omitted

# reduce 118 omitted

# reduce 119 omitted

# reduce 120 omitted

# reduce 121 omitted

# reduce 122 omitted

# reduce 123 omitted

# reduce 124 omitted

# reduce 125 omitted

# reduce 126 omitted

# reduce 127 omitted

# reduce 128 omitted

# reduce 129 omitted

# reduce 130 omitted

# reduce 131 omitted

# reduce 132 omitted

# reduce 133 omitted

# reduce 134 omitted

# reduce 135 omitted

# reduce 136 omitted

# reduce 137 omitted

# reduce 138 omitted

# reduce 139 omitted

# reduce 140 omitted

# reduce 141 omitted

# reduce 142 omitted

# reduce 143 omitted

# reduce 144 omitted

# reduce 145 omitted

# reduce 146 omitted

# reduce 147 omitted

# reduce 148 omitted

# reduce 149 omitted

# reduce 150 omitted

# reduce 151 omitted

# reduce 152 omitted

# reduce 153 omitted

# reduce 154 omitted

# reduce 155 omitted

# reduce 156 omitted

# reduce 157 omitted

# reduce 158 omitted

# reduce 159 omitted

# reduce 160 omitted

# reduce 161 omitted

# reduce 162 omitted

# reduce 163 omitted

# reduce 164 omitted

# reduce 165 omitted

# reduce 166 omitted

# reduce 167 omitted

# reduce 168 omitted

# reduce 169 omitted

# reduce 170 omitted

# reduce 171 omitted

# reduce 172 omitted

# reduce 173 omitted

# reduce 174 omitted

# reduce 175 omitted

# reduce 176 omitted

# reduce 177 omitted

# reduce 178 omitted

# reduce 179 omitted

# reduce 180 omitted

# reduce 181 omitted

# reduce 182 omitted

# reduce 183 omitted

# reduce 184 omitted

# reduce 185 omitted

# reduce 186 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 377)
  def _reduce_187(val, _values, result)
                        result = node :assign, :lhs => val[0], :rhs => val[2]
                  
    result
  end
.,.,

# reduce 188 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 382)
  def _reduce_189(val, _values, result)
                		    result = node :op_asgn, :lhs => val[0], :op => val[1], :rhs => val[2]
            		  
    result
  end
.,.,

# reduce 190 omitted

# reduce 191 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 388)
  def _reduce_192(val, _values, result)
                		    result = node :op_asgn, :lhs => node(:call, :recv => val[0], :meth => val[2]), :op => val[3], :rhs => val[4]
                    # result = node :dot_identifier_op_asgn, :lhs => node(:call, :recv => val[0], :meth => val[2]), :op => val[3], :rhs => val[4]
            		  
    result
  end
.,.,

# reduce 193 omitted

# reduce 194 omitted

# reduce 195 omitted

# reduce 196 omitted

# reduce 197 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 398)
  def _reduce_198(val, _values, result)
                		    result = node :dot2, :start => val[0], :ending => val[2]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 402)
  def _reduce_199(val, _values, result)
                		    result = node :dot3, :start => val[0], :ending => val[2]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 406)
  def _reduce_200(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '+', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 410)
  def _reduce_201(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '-', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 414)
  def _reduce_202(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '*', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 418)
  def _reduce_203(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '/', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 422)
  def _reduce_204(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '%', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 426)
  def _reduce_205(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '**', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

# reduce 206 omitted

# reduce 207 omitted

# reduce 208 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 433)
  def _reduce_209(val, _values, result)
                		    result = node :call, :recv => val[1], :meth => '-@', :call_args => { :args => []}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 437)
  def _reduce_210(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '|', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 441)
  def _reduce_211(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '^', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 445)
  def _reduce_212(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '&', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 449)
  def _reduce_213(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '<=>', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 453)
  def _reduce_214(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '>', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 457)
  def _reduce_215(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '>=', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 461)
  def _reduce_216(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '<', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 465)
  def _reduce_217(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '<=', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 469)
  def _reduce_218(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '==', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 473)
  def _reduce_219(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '===', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 477)
  def _reduce_220(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '!=', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 481)
  def _reduce_221(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '=~', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 485)
  def _reduce_222(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '!~', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 489)
  def _reduce_223(val, _values, result)
                  	    result = node :not, :expr => val[1]
              	  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 493)
  def _reduce_224(val, _values, result)
                		    result = node :call, :recv => val[1], :meth => '~', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 497)
  def _reduce_225(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '<<', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 501)
  def _reduce_226(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '>>', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 505)
  def _reduce_227(val, _values, result)
                          # weird? unless break here, it throws an error? hmm...
                      # we must use val[3] then as this counts as one match....
              		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 511)
  def _reduce_228(val, _values, result)
                		    result = node :andop, :lhs => val[0], :rhs => val[3]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 515)
  def _reduce_229(val, _values, result)
                        # weird? unless break here, it throws an error? hmm...
                    # we must use val[3] then as this counts as one match....
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 521)
  def _reduce_230(val, _values, result)
                		    result = node :orop, :lhs => val[0], :rhs => val[3]
            		  
    result
  end
.,.,

# reduce 231 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 526)
  def _reduce_232(val, _values, result)
                		    result = node :tertiary, :expr => val[0], :true => val[2], :false => val[5]
            		  
    result
  end
.,.,

# reduce 233 omitted

# reduce 234 omitted

# reduce 235 omitted

# reduce 236 omitted

# reduce 237 omitted

# reduce 238 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 539)
  def _reduce_239(val, _values, result)
                        result = val[1]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 544)
  def _reduce_240(val, _values, result)
                        result = node :call_args, :args => nil
                  
    result
  end
.,.,

# reduce 241 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 550)
  def _reduce_242(val, _values, result)
                        result = node :call_args, :args => nil
                  
    result
  end
.,.,

# reduce 243 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 556)
  def _reduce_244(val, _values, result)
                		    result = node :call_args, :args => [val[0]]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 560)
  def _reduce_245(val, _values, result)
                		    result = node :call_args, :args => val[0], :block_arg => val[1]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 564)
  def _reduce_246(val, _values, result)
                		    result = node :call_args, :assocs => val[0], :block_arg => val[1]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 568)
  def _reduce_247(val, _values, result)
                		    result = node :call_args, :args => val[0], :assocs => val[2], :block_arg => val[3]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 572)
  def _reduce_248(val, _values, result)
                		    result = node :call_args, :block_arg => val[0]
            		  
    result
  end
.,.,

# reduce 249 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 579)
  def _reduce_250(val, _values, result)
                        result = self.node :block_arg, :arg => val[1]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 584)
  def _reduce_251(val, _values, result)
                        resul = val[1]
                  
    result
  end
.,.,

# reduce 252 omitted

# reduce 253 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 591)
  def _reduce_254(val, _values, result)
                        result = [val[0]]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 595)
  def _reduce_255(val, _values, result)
    		                result = [val[1]]
		              
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 599)
  def _reduce_256(val, _values, result)
    		                result = val[0] + [val[2]]
		              
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 603)
  def _reduce_257(val, _values, result)
    		                result = val[0] + [val[3]]
		              
    result
  end
.,.,

# reduce 258 omitted

# reduce 259 omitted

# reduce 260 omitted

# reduce 261 omitted

# reduce 262 omitted

# reduce 263 omitted

# reduce 264 omitted

# reduce 265 omitted

# reduce 266 omitted

# reduce 267 omitted

# reduce 268 omitted

# reduce 269 omitted

# reduce 270 omitted

# reduce 271 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 623)
  def _reduce_272(val, _values, result)
                		    result = node :lparen, :stmt => val[1]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 627)
  def _reduce_273(val, _values, result)
                		    result = node :colon2, :lhs => val[0], :rhs => val[2]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 631)
  def _reduce_274(val, _values, result)
                		    result = node :colon3, :rhs => val[1]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 635)
  def _reduce_275(val, _values, result)
                		    result = node :array, :args => val[1]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 639)
  def _reduce_276(val, _values, result)
                		    result = node :assoc_list, :list => val[1]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 643)
  def _reduce_277(val, _values, result)
                		    result = node :return
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 647)
  def _reduce_278(val, _values, result)
            	          result = node :yield, :call_args => val[2]
        	        
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 651)
  def _reduce_279(val, _values, result)
            	          result = node :yield
        	        
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 655)
  def _reduce_280(val, _values, result)
            	          result = node :yield
        	        
    result
  end
.,.,

# reduce 281 omitted

# reduce 282 omitted

# reduce 283 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 662)
  def _reduce_284(val, _values, result)
                        # puts 1
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 666)
  def _reduce_285(val, _values, result)
                		    # puts 2
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 670)
  def _reduce_286(val, _values, result)
                		    val[0][:brace_block] = val[1]
            		    result = val[0]
            		  
    result
  end
.,.,

# reduce 287 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 676)
  def _reduce_288(val, _values, result)
                		    result = self.node :if, :expr => val[1], :stmt => val[3], :tail => val[4]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 680)
  def _reduce_289(val, _values, result)
                		    result = self.node :unless, :expr => val[1], :stmt => val[3], :tail => val[4]
            		  
    result
  end
.,.,

# reduce 290 omitted

# reduce 291 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 686)
  def _reduce_292(val, _values, result)
                		    result = node :case, :expr => val[1], :body => val[3]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 690)
  def _reduce_293(val, _values, result)
                		    result = node :case, :expr => nil, :body => val[2]
            		  
    result
  end
.,.,

# reduce 294 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 695)
  def _reduce_295(val, _values, result)
                		    result = self.node_class(:cpath => val[1], :superclass => val[2], :bodystmt => val[3])
            		  
    result
  end
.,.,

# reduce 296 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 700)
  def _reduce_297(val, _values, result)
                		    result = self.node_module(:cpath => val[1], :body => val[2])
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 704)
  def _reduce_298(val, _values, result)
                		    result = self.node :def, :fname => val[1], :arglist => val[2], :bodystmt => val[3]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 708)
  def _reduce_299(val, _values, result)
                		    result = self.node :def, :singleton => val[1], :fname => val[3], :arglist => val[4], :bodystmt => val[5]
            		  
    result
  end
.,.,

# reduce 300 omitted

# reduce 301 omitted

# reduce 302 omitted

# reduce 303 omitted

# reduce 304 omitted

# reduce 305 omitted

# reduce 306 omitted

# reduce 307 omitted

# reduce 308 omitted

# reduce 309 omitted

# reduce 310 omitted

# reduce 311 omitted

# reduce 312 omitted

# reduce 313 omitted

# reduce 314 omitted

# reduce 315 omitted

# reduce 316 omitted

# reduce 317 omitted

# reduce 318 omitted

# reduce 319 omitted

# reduce 320 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 748)
  def _reduce_321(val, _values, result)
                        result = val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 752)
  def _reduce_322(val, _values, result)
                  	    result = [self.node(:elsif, :expr => val[1], :stmt => val[3])] + val[4]
              	  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 757)
  def _reduce_323(val, _values, result)
                        result = []
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 761)
  def _reduce_324(val, _values, result)
                  	    result = [self.node(:else, :stmt => val[1])]
              	  
    result
  end
.,.,

# reduce 325 omitted

# reduce 326 omitted

# reduce 327 omitted

# reduce 328 omitted

# reduce 329 omitted

# reduce 330 omitted

# reduce 331 omitted

# reduce 332 omitted

# reduce 333 omitted

# reduce 334 omitted

# reduce 335 omitted

# reduce 336 omitted

# reduce 337 omitted

# reduce 338 omitted

# reduce 339 omitted

# reduce 340 omitted

# reduce 341 omitted

# reduce 342 omitted

# reduce 343 omitted

# reduce 344 omitted

# reduce 345 omitted

# reduce 346 omitted

# reduce 347 omitted

# reduce 348 omitted

# reduce 349 omitted

# reduce 350 omitted

# reduce 351 omitted

# reduce 352 omitted

# reduce 353 omitted

# reduce 354 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 801)
  def _reduce_355(val, _values, result)
                        result = nil
                  
    result
  end
.,.,

# reduce 356 omitted

# reduce 357 omitted

# reduce 358 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 809)
  def _reduce_359(val, _values, result)
                		    result = val[1]
            		  
    result
  end
.,.,

# reduce 360 omitted

# reduce 361 omitted

# reduce 362 omitted

# reduce 363 omitted

# reduce 364 omitted

# reduce 365 omitted

# reduce 366 omitted

# reduce 367 omitted

# reduce 368 omitted

# reduce 369 omitted

# reduce 370 omitted

# reduce 371 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 832)
  def _reduce_372(val, _values, result)
                        result = node :brace_block, :params => val[1], :stmt => val[2]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 837)
  def _reduce_373(val, _values, result)
                        val[0][:brace_block] = val[1]
                    result = val[0]
                  
    result
  end
.,.,

# reduce 374 omitted

# reduce 375 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 845)
  def _reduce_376(val, _values, result)
                        result = node :call, :recv => nil, :meth => val[0], :call_args => val[1]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 849)
  def _reduce_377(val, _values, result)
                        result = node :call, :recv => val[0], :meth => val[2], :call_args => val[3]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 853)
  def _reduce_378(val, _values, result)
                  	    puts 'SCOOOBY DOOOOOOOOOOOOOOOOOOOOOOOOOOOOO 2'
              	  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 857)
  def _reduce_379(val, _values, result)
                  	    puts 'SCOOOBY DOOOOOOOOOOOOOOOOOOOOOOOOOOOOO 3'
              	  
    result
  end
.,.,

# reduce 380 omitted

# reduce 381 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 863)
  def _reduce_382(val, _values, result)
                		    result = node :super, :call_args => val[1]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 867)
  def _reduce_383(val, _values, result)
                		    result = node :super, :call_args => nil
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 871)
  def _reduce_384(val, _values, result)
                        result = node :call, :recv => val[0], :meth => '[]', :call_args => val[2]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 877)
  def _reduce_385(val, _values, result)
                		    result = node :brace_block, :params => val[1], :stmt => val[2]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 881)
  def _reduce_386(val, _values, result)
                		    result = node :brace_block, :params => val[1], :stmt => val[2]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 886)
  def _reduce_387(val, _values, result)
                        result = [node(:when, :args => val[1], :stmt => val[3])] + val[4]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 891)
  def _reduce_388(val, _values, result)
                        result = val[0]
                  
    result
  end
.,.,

# reduce 389 omitted

# reduce 390 omitted

# reduce 391 omitted

# reduce 392 omitted

# reduce 393 omitted

# reduce 394 omitted

# reduce 395 omitted

# reduce 396 omitted

# reduce 397 omitted

# reduce 398 omitted

# reduce 399 omitted

# reduce 400 omitted

# reduce 401 omitted

# reduce 402 omitted

# reduce 403 omitted

# reduce 404 omitted

# reduce 405 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 920)
  def _reduce_406(val, _values, result)
                        result = node :string, :value => val[1], :beg => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 925)
  def _reduce_407(val, _values, result)
                        result = node :xstring, :value => val[1]
                  
    result
  end
.,.,

# reduce 408 omitted

# reduce 409 omitted

# reduce 410 omitted

# reduce 411 omitted

# reduce 412 omitted

# reduce 413 omitted

# reduce 414 omitted

# reduce 415 omitted

# reduce 416 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 944)
  def _reduce_417(val, _values, result)
                        # none..
                    result = []
                  
    result
  end
.,.,

# reduce 418 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 951)
  def _reduce_419(val, _values, result)
                        # none..
                    result = []
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 956)
  def _reduce_420(val, _values, result)
                		    result = val[0] + [val[1]]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 961)
  def _reduce_421(val, _values, result)
                        # none..
                    result = []
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 966)
  def _reduce_422(val, _values, result)
                		    result = val[0] + [val[1]]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 971)
  def _reduce_423(val, _values, result)
                        result = node :string_content, :value => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 975)
  def _reduce_424(val, _values, result)
                        result = node :string_dvar, :value => val[1]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 979)
  def _reduce_425(val, _values, result)
                        result = node :string_dbeg, :value => val[1]
                  
    result
  end
.,.,

# reduce 426 omitted

# reduce 427 omitted

# reduce 428 omitted

# reduce 429 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 989)
  def _reduce_430(val, _values, result)
                        result = node :symbol, :name => val[1]
                  
    result
  end
.,.,

# reduce 431 omitted

# reduce 432 omitted

# reduce 433 omitted

# reduce 434 omitted

# reduce 435 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1001)
  def _reduce_436(val, _values, result)
                        result = node :numeric, :value => val[0], :float => false
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1005)
  def _reduce_437(val, _values, result)
                        result = node :numeric, :value => val[0], :float => true
                  
    result
  end
.,.,

# reduce 438 omitted

# reduce 439 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1012)
  def _reduce_440(val, _values, result)
                        result = node :identifier, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1016)
  def _reduce_441(val, _values, result)
                        result = node :ivar, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1020)
  def _reduce_442(val, _values, result)
                        result = node :gvar, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1024)
  def _reduce_443(val, _values, result)
                        result = node :constant, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1028)
  def _reduce_444(val, _values, result)
                        result = node :cvar, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1032)
  def _reduce_445(val, _values, result)
                        result = node :nil, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1036)
  def _reduce_446(val, _values, result)
                        result = node :self, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1040)
  def _reduce_447(val, _values, result)
                        result = node :true, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1044)
  def _reduce_448(val, _values, result)
                        result = node :false, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1048)
  def _reduce_449(val, _values, result)
                        result = node :__FILE__, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1052)
  def _reduce_450(val, _values, result)
                        result = node :__LINE__, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1056)
  def _reduce_451(val, _values, result)
                        result = node :__ENCODING__, :name => val[0]
                  
    result
  end
.,.,

# reduce 452 omitted

# reduce 453 omitted

# reduce 454 omitted

# reduce 455 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1068)
  def _reduce_456(val, _values, result)
                        result = nil
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1072)
  def _reduce_457(val, _values, result)
                		    result = node :superclass, :expr => val[1]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1074)
  def _reduce_458(val, _values, result)
     puts 'OMFG' 
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1078)
  def _reduce_459(val, _values, result)
                        result = val[1]
                    self.lex_state = :EXPR_BEG
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1083)
  def _reduce_460(val, _values, result)
                        result = val[0]
                    self.lex_state = :EXPR_BEG
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1089)
  def _reduce_461(val, _values, result)
                 		    result = node :arg, :arg => val[0], :optarg => val[2], :rest_arg => val[4], :opt_block_arg => val[5]
             		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1093)
  def _reduce_462(val, _values, result)
                 		    result = node :arg, :arg => val[0], :optarg => val[2], :rest_arg => val[4], :arg2 => val[6], :opt_block_arg => val[7]
             		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1097)
  def _reduce_463(val, _values, result)
                  	    result = node :arg, :arg => val[0], :optarg => val[2], :opt_block_arg => val[3]
              	  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1101)
  def _reduce_464(val, _values, result)
                  	    result = node :arg, :arg => val[0], :optarg => val[2], :arg2 => val[4], :opt_block_arg => val[5]
              	  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1105)
  def _reduce_465(val, _values, result)
                		    result = node :arg, :arg => val[0], :rest_arg => val[2], :opt_block_arg => val[3]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1109)
  def _reduce_466(val, _values, result)
                		    result = node :arg, :arg => val[0], :rest_arg => val[2], :arg2 => val[4], :opt_block_arg => val[5]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1113)
  def _reduce_467(val, _values, result)
                 		    result = node :arg, :arg => val[0], :opt_block_arg => val[1]
             		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1117)
  def _reduce_468(val, _values, result)
                		    result = node :optarg, :optarg => val[0], :rest_arg => val[2], :opt_block_arg => val[3]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1121)
  def _reduce_469(val, _values, result)
                		    result = node :optarg, :optarg => val[0], :rest_arg => val[2], :arg => val[4], :opt_block_arg => val[5]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1125)
  def _reduce_470(val, _values, result)
                 		    result = node :optarg, :optarg => val[0], :opt_block_arg => val[1]
             		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1129)
  def _reduce_471(val, _values, result)
                 		    result = node :optarg, :optarg => val[0], :arg => val[2], :opt_block_arg => val[3]
             		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1133)
  def _reduce_472(val, _values, result)
                 		    result = node :rest_arg, :rest_arg => val[0], :opt_block_arg => val[1]
             		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1137)
  def _reduce_473(val, _values, result)
                 		    result = node :rest_arg, :rest_arg => val[0], :arg => val[2], :opt_block_arg => val[3]
             		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1141)
  def _reduce_474(val, _values, result)
                 		    result = node :arg, :opt_block_arg => val[0]
             		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1145)
  def _reduce_475(val, _values, result)
                  	    # none...
              	    result = nil
              	  
    result
  end
.,.,

# reduce 476 omitted

# reduce 477 omitted

# reduce 478 omitted

# reduce 479 omitted

# reduce 480 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1157)
  def _reduce_481(val, _values, result)
                        # result = val[0]
              	    result = node :norm_arg, :value => val[0]
              	  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1163)
  def _reduce_482(val, _values, result)
                      
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1166)
  def _reduce_483(val, _values, result)
                        result = node :label_arg, :name => val[0], :value => val[1]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1171)
  def _reduce_484(val, _values, result)
                        result = val[0]
                  
    result
  end
.,.,

# reduce 485 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1177)
  def _reduce_486(val, _values, result)
                        result = [val[0]]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1181)
  def _reduce_487(val, _values, result)
                        # val[0] + val[2]
                    result = val[0] + [val[2]]
            		  
    result
  end
.,.,

# reduce 488 omitted

# reduce 489 omitted

# reduce 490 omitted

# reduce 491 omitted

# reduce 492 omitted

# reduce 493 omitted

# reduce 494 omitted

# reduce 495 omitted

# reduce 496 omitted

# reduce 497 omitted

# reduce 498 omitted

# reduce 499 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1206)
  def _reduce_500(val, _values, result)
                        result = val[1]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1210)
  def _reduce_501(val, _values, result)
                        result = node :label_arg, :name => val[0], :value => val[1]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1215)
  def _reduce_502(val, _values, result)
                        result = val[1]
                  
    result
  end
.,.,

# reduce 503 omitted

# reduce 504 omitted

# reduce 505 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1224)
  def _reduce_506(val, _values, result)
                        result = []
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1228)
  def _reduce_507(val, _values, result)
                  	    result = val[0]
              	  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1233)
  def _reduce_508(val, _values, result)
                        result = [val[0]]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1237)
  def _reduce_509(val, _values, result)
                		    result = val[0] + [val[2]]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1242)
  def _reduce_510(val, _values, result)
                        result = node :assoc, :key => val[0], :value => val[2]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1246)
  def _reduce_511(val, _values, result)
                        result = node :label_assoc, :key => val[0], :value => val[1]
                  
    result
  end
.,.,

# reduce 512 omitted

# reduce 513 omitted

# reduce 514 omitted

# reduce 515 omitted

# reduce 516 omitted

# reduce 517 omitted

# reduce 518 omitted

# reduce 519 omitted

# reduce 520 omitted

# reduce 521 omitted

# reduce 522 omitted

# reduce 523 omitted

# reduce 524 omitted

# reduce 525 omitted

# reduce 526 omitted

# reduce 527 omitted

# reduce 528 omitted

# reduce 529 omitted

# reduce 530 omitted

# reduce 531 omitted

# reduce 532 omitted

# reduce 533 omitted

# reduce 534 omitted

# reduce 535 omitted

# reduce 536 omitted

# reduce 537 omitted

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class RubyParser
  end   # module Vienna


