#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.6
# from Racc grammer file "".
#

require 'racc/parser.rb'


# require 'ctokenizer'
require 'strscan'

module Vienna
  class RubyParser < Racc::Parser

module_eval(<<'...end ruby_parser.rb.y/module_eval...', 'ruby_parser.rb.y', 1130)


...end ruby_parser.rb.y/module_eval...
##### State transition tables begin ###

clist = [
'-270,-66,396,397,-270,-270,-270,-270,-270,-270,519,-10,-98,737,-270',
'-270,-270,-270,-270,-270,-270,-270,-270,-270,-270,-270,-270,-270,-270',
'-270,-270,-270,-270,-270,-270,-270,-270,-270,-270,-270,-270,425,604',
'-270,497,799,604,430,396,397,-93,338,-270,-270,-270,396,397,-97,-270',
'-270,338,-270,396,397,-100,377,452,-94,833,396,397,-100,500,-442,-95',
'740,452,312,526,-100,420,-93,-449,-97,743,-99,565,524,525,-270,448,449',
'-445,-87,261,609,-533,-533,429,-442,448,449,608,313,-270,494,698,356',
'339,358,344,356,-85,358,-270,-270,-270,339,-445,-89,-80,-270,585,110',
'755,-89,585,110,-270,-270,-270,-90,344,-92,-270,426,-270,-266,-270,426',
'-266,-266,-266,-266,-266,-266,-266,-10,585,-10,-87,-266,-266,-266,-266',
'-266,-266,-266,-266,-266,-266,-266,-266,-266,-266,-266,-266,-266,-266',
'-266,-266,-266,-266,-266,-266,-266,-266,-266,344,356,-266,358,-89,-92',
'-98,344,-86,604,344,-266,-266,-266,344,-87,-266,-266,-266,356,-266,358',
'-85,356,-89,358,-91,356,-270,358,-266,-266,-266,611,-87,-270,-94,-87',
'343,611,608,-87,797,344,853,-99,608,-93,-449,356,-95,358,-444,-270,-270',
'-443,798,-511,-441,585,-270,-270,585,-266,-511,-266,-89,452,-90,-89',
'-511,508,-95,-89,356,-80,358,-97,-444,611,-94,-443,-96,-266,-441,646',
'608,-266,-266,-266,-266,448,449,-266,-266,-266,-514,-266,-86,802,-514',
'-514,-514,-514,-514,-514,804,-91,-96,734,-514,-514,-87,-514,-514,-514',
'-514,-514,-514,-514,-514,-514,-514,-514,-514,-514,-514,-514,-514,-514',
'-514,-514,-514,-514,-514,-514,-514,136,356,-514,358,356,152,358,-88',
'356,-510,358,-514,-514,-514,-95,-96,-95,-514,-514,-97,-514,-97,-94,261',
'-94,268,271,272,261,-514,268,271,272,274,276,253,256,258,259,262,264',
'266,269,273,275,277,254,255,257,260,263,265,267,270,806,138,278,144',
'148,150,153,154,807,-514,492,492,-447,62,72,501,492,344,492,503,156',
'746,493,493,519,143,147,-380,493,-436,493,-270,-514,-514,-514,-514,-88',
'-510,-447,-514,-96,-514,-96,-514,24,30,140,42,47,51,54,60,67,110,127',
'-436,-270,-270,98,104,-511,-380,356,22,358,34,40,44,48,58,61,68,261',
'-514,268,271,344,100,106,5,8,15,19,28,-380,344,-380,-380,53,59,66,74',
'80,81,86,91,96,344,4,9,452,21,27,32,356,535,358,-514,120,344,123,77',
'-301,90,94,118,72,6,10,16,20,29,33,38,448,449,487,454,455,-439,-514',
'534,-514,-514,729,-514,-510,-301,-301,-251,-446,344,386,387,388,389',
'24,30,813,550,47,51,54,60,67,-439,127,356,-251,358,98,104,-448,396,397',
'22,-446,34,40,44,116,117,61,68,-514,552,356,726,358,131,106,5,8,15,19',
'28,818,-448,-448,628,53,59,66,74,80,81,86,91,96,133,4,9,719,21,27,32',
'-231,705,-514,628,120,-271,123,77,519,90,94,132,134,6,10,16,20,29,33',
'38,62,72,-271,-252,-265,-514,344,-514,-514,-514,-271,-271,519,261,-514',
'-533,-533,344,439,714,144,148,150,153,154,396,397,-271,-271,-265,-265',
'24,30,825,42,47,51,54,60,67,356,127,358,-94,854,98,104,538,284,285,22',
'826,34,40,44,48,58,61,68,-514,705,657,-99,565,100,106,5,8,15,19,28,794',
'505,539,582,53,59,66,74,80,81,86,91,96,567,4,9,351,21,27,32,842,705',
'-514,344,120,655,123,77,457,90,94,62,72,6,10,16,20,29,33,38,834,352',
'353,-97,772,-514,426,-514,-514,901,567,-510,646,458,459,356,774,358',
'144,148,150,153,24,30,644,42,47,51,54,60,67,76,127,793,505,506,98,104',
'-271,842,705,22,785,34,40,44,48,58,61,68,396,397,136,-95,771,100,106',
'5,8,15,19,28,36,-271,-271,49,53,59,66,74,80,81,86,91,96,344,4,9,-448',
'21,27,32,580,344,62,72,64,628,75,77,344,90,94,103,622,6,10,16,20,29',
'33,38,-265,-448,-448,762,705,439,519,144,148,150,153,154,421,24,30,580',
'42,47,51,54,60,67,76,78,156,-265,-265,98,104,593,147,519,22,762,34,40',
'44,48,58,61,68,617,519,606,-507,597,100,106,5,8,15,19,28,36,594,595',
'49,53,59,66,74,80,81,86,91,96,519,4,9,452,21,27,32,592,590,855,589,64',
'-436,75,77,344,90,94,103,-65,6,10,16,20,29,33,38,448,449,450,195,199',
'204,213,788,-507,567,-436,-436,862,537,-507,580,169,176,181,185,188',
'191,196,201,206,210,215,218,224,227,230,234,238,163,165,170,533,178',
'183,189,193,198,202,207,211,214,219,223,226,228,232,236,164,166,171',
'174,177,182,187,190,194,203,208,212,216,220,911,521,509,233,237,162',
'322,324,325,327,184,452,519,415,329,330,331,332,221,81,86,333,96,504',
'419,912,913,416,510,867,514,192,197,496,495,448,449,511,416,417,439',
'235,144,148,150,153,154,519,505,506,195,199,204,213,774,400,144,148',
'150,153,344,239,321,169,176,181,185,188,191,196,201,206,210,215,218',
'224,227,230,234,238,163,165,170,860,178,183,189,193,198,202,207,211',
'214,219,223,226,228,232,236,164,166,171,174,177,182,187,190,194,203',
'208,212,216,220,456,-253,785,233,237,162,167,172,175,180,184,453,884',
'110,200,205,209,217,221,519,439,229,144,148,150,153,154,386,387,388',
'389,192,197,386,387,388,389,385,447,443,438,235,762,385,441,665,666',
'519,667,195,199,204,213,437,27,32,435,434,431,785,785,239,169,176,181',
'185,188,191,196,201,206,210,215,218,224,227,230,234,238,163,165,170',
'896,178,183,189,193,198,202,207,211,214,219,223,226,228,232,236,164',
'166,171,174,177,182,187,190,194,203,208,212,216,220,897,783,862,233',
'237,162,167,172,175,180,184,421,785,762,200,205,209,217,221,261,781',
'229,903,439,905,144,148,150,153,154,785,192,197,908,439,785,144,148',
'150,153,154,235,443,910,10,419,414,786,411,195,199,204,213,443,410,-254',
'519,343,441,779,409,239,169,176,181,185,188,191,196,201,206,210,215',
'218,224,227,230,234,238,163,165,170,405,178,183,189,193,198,202,207',
'211,214,219,223,226,228,232,236,164,166,171,174,177,182,187,190,194',
'203,208,212,216,220,862,778,16,233,237,162,167,172,175,180,184,378,344',
'344,200,205,209,217,221,311,439,229,144,148,150,153,154,386,387,388',
'389,192,197,386,387,388,389,385,347,443,346,235,341,385,10,521,336,785',
'862,195,199,204,213,785,936,785,785,320,314,344,299,239,169,176,181',
'185,188,191,196,201,206,210,215,218,224,227,230,234,238,163,165,170',
'421,178,183,189,193,198,202,207,211,214,219,223,226,228,232,236,164',
'166,171,174,177,182,187,190,194,203,208,212,216,220,344,282,109,233',
'237,162,167,172,175,180,184,785,,,200,205,209,217,221,222,225,229,231',
'439,,144,148,150,153,154,,192,197,,439,,144,148,150,153,154,235,443',
',,,,,,195,199,204,213,443,,,,,,,,239,169,176,181,185,188,191,196,201',
'206,210,215,218,224,227,230,234,238,163,165,170,,178,183,189,193,198',
'202,207,211,214,219,223,226,228,232,236,164,166,171,174,177,182,187',
'190,194,203,208,212,216,220,,,,233,237,162,167,172,175,180,184,,,,200',
'205,209,217,221,,439,229,144,148,150,153,154,,,,,192,197,,,,,,,443,',
'235,,,10,,,,,195,199,204,213,,,,,,,,,239,169,176,181,185,188,191,196',
'201,206,210,215,218,224,227,230,234,238,163,165,170,,178,183,189,193',
'198,202,207,211,214,219,223,226,228,232,236,164,166,171,174,177,182',
'187,190,194,203,208,212,216,220,,,,233,237,162,167,172,175,180,184,',
',,200,205,209,217,221,,439,229,144,148,150,153,154,-510,-510,-96,769',
'192,197,,,,,,,443,,235,,261,10,268,271,272,274,-533,-533,-533,-533,-533',
'-533,,,,-510,-510,,239,-510,-510,-510,-510,-510,,-510,,,,-510,-510,',
',,-510,,-510,-510,-510,-510,-510,-510,-510,,136,,,,-510,-510,-510,-510',
'-510,-510,-510,136,,,,-510,-510,-510,-510,-510,-510,-510,-510,-510,-510',
'-510,-510,,-510,-510,-510,,,,,-510,,-510,-510,,-510,-510,-510,-510,-510',
'-510,-510,-510,-510,-510,-510,-511,-511,-98,737,439,,144,148,150,153',
'154,,-510,,,439,,144,148,150,153,154,,156,,,,,,147,,-511,-511,,156,-511',
'-511,-511,-511,-511,147,-511,,,,-511,-511,,,,-511,,-511,-511,-511,-511',
'-511,-511,-511,,,136,,,-511,-511,-511,-511,-511,-511,-511,,,,,-511,-511',
'-511,-511,-511,-511,-511,-511,-511,-511,-511,-511,,-511,-511,-511,,',
'118,72,-511,,-511,-511,,-511,-511,-511,-511,-511,-511,-511,-511,-511',
'-511,-511,,,,,,439,,144,148,150,153,154,-511,24,30,,,47,51,54,60,67',
',127,156,,,98,104,,147,,22,,34,40,44,116,117,61,68,,,136,,,131,106,5',
'8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,133,4,9,,21,27,32,,,-512,-512',
'120,,123,77,,90,94,132,134,6,10,16,20,29,33,38,,,,,,439,,144,148,150',
'153,154,110,-512,-512,,,-512,-512,-512,-512,-512,,-512,156,,,-512,-512',
',147,,-512,,-512,-512,-512,-512,-512,-512,-512,,,136,,,-512,-512,-512',
'-512,-512,-512,-512,,,,,-512,-512,-512,-512,-512,-512,-512,-512,-512',
'-512,-512,-512,,-512,-512,-512,,,118,72,-512,,-512,-512,,-512,-512,-512',
'-512,-512,-512,-512,-512,-512,-512,-512,,,,,,439,,144,148,150,153,154',
'-512,24,30,,,47,51,54,60,67,,127,156,,,98,104,,147,,22,,34,40,44,116',
'117,61,68,,,136,,,131,106,5,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96',
'133,4,9,,21,27,32,,,118,72,120,,123,77,,90,94,132,134,6,10,16,20,29',
'33,38,,,,,,439,,144,148,150,153,154,110,24,30,,,47,51,54,60,67,,127',
'156,,,98,104,,147,,22,,34,40,44,116,117,61,68,,,136,,,131,106,5,8,15',
'19,28,,,,,53,59,66,74,80,81,86,91,96,133,4,9,,21,27,32,,,118,72,120',
',123,77,,90,94,132,134,6,10,16,20,29,33,38,,,,,,439,,144,148,150,153',
'154,110,24,30,,,47,51,54,60,67,,127,156,,,98,104,,147,,22,,34,40,44',
'116,117,61,68,,,136,,,131,106,5,8,15,19,28,,,,,53,59,66,74,80,81,86',
'91,96,133,4,9,,21,27,32,,,118,72,120,,123,77,,90,94,132,134,6,10,16',
'20,29,33,38,,,,,,439,,144,148,150,153,154,110,24,30,,,47,51,54,60,67',
',127,156,,,98,104,,147,,22,,34,40,44,116,117,61,68,,,,,,131,106,5,8',
'15,19,28,,,,,53,59,66,74,80,81,86,91,96,133,4,9,,21,27,32,,,118,72,120',
',123,77,,90,94,132,134,6,10,16,20,29,33,38,261,,268,271,272,274,-533',
'-533,-533,-533,-533,-533,400,24,30,,,47,51,54,60,67,,127,,,,98,104,',
',,22,,34,40,44,116,117,61,68,,338,,,,131,106,5,8,15,19,28,,,,,53,59',
'66,74,80,81,86,91,96,133,4,9,,21,27,32,,,118,72,120,,123,77,,90,94,132',
'134,6,10,16,20,29,33,38,,,,,,,339,,,,,,110,24,30,,,47,51,54,60,67,,127',
',,,98,104,,,,22,,34,40,44,116,117,61,68,,,,,,131,251,240,8,15,19,28',
',,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,,,-508,-508,120,,123,77',
',90,94,,,6,10,16,20,29,33,38,261,,268,271,272,274,-533,-533,-533,-533',
'-533,-533,582,-508,-508,,,-508,-508,-508,-508,-508,,-508,,,,-508,-508',
',,,-508,,-508,-508,-508,-508,-508,-508,-508,,-508,,,,-508,-508,-508',
'-508,-508,-508,-508,,,,,-508,-508,-508,-508,-508,-508,-508,-508,-508',
'-508,-508,-508,,-508,-508,-508,,,118,72,-508,,-508,-508,,-508,-508,-508',
'-508,-508,-508,-508,-508,-508,-508,-508,,,,,,,-508,,,,,,-508,24,30,',
',47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117,61,68,,,,,,131',
'106,5,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,133,4,9,,21,27,32,,',
'-507,-507,120,,123,77,,90,94,132,134,6,10,16,20,29,33,38,261,,268,271',
'272,274,-533,-533,-533,-533,-533,-533,110,-507,-507,,,-507,-507,-507',
'-507,-507,,-507,,,,-507,-507,,,,-507,,-507,-507,-507,-507,-507,-507',
'-507,,-507,,,,-507,-507,-507,-507,-507,-507,-507,,,,,-507,-507,-507',
'-507,-507,-507,-507,-507,-507,-507,-507,-507,,-507,-507,-507,,,-513',
'-513,-507,,-507,-507,,-507,-507,-507,-507,-507,-507,-507,-507,-507,-507',
'-507,,,,,,,-507,,,,,,-507,-513,-513,,,-513,-513,-513,-513,-513,,-513',
',,,-513,-513,,,,-513,,-513,-513,-513,-513,-513,-513,-513,,,,,,-513,-513',
'-513,-513,-513,-513,-513,,,,,-513,-513,-513,-513,-513,-513,-513,-513',
'-513,-513,-513,-513,,-513,-513,-513,118,249,,,-513,,-513,-513,,-513',
'-513,-513,-513,-513,-513,-513,-513,-513,-513,-513,,,,,,,,,,,,242,-513',
',,,,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117,61,68,,-508,,,,131',
'251,240,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,118',
'249,,-439,369,,123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,,-508,,-439',
'-439,399,242,-508,,,,,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117',
'61,68,,,,,,131,251,240,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,300',
'4,9,,21,27,32,,,62,72,369,,123,77,,90,94,,,6,10,16,20,29,33,38,,,,,',
',,,,,599,,,24,30,,42,47,51,54,60,67,76,127,,,,98,104,,,,22,,34,40,44',
'48,58,61,68,,,,,,100,106,5,8,15,19,28,36,,,49,53,59,66,74,80,81,86,91',
'96,300,4,9,,21,27,32,,,62,72,64,,363,77,,90,94,103,,6,10,16,20,29,33',
'38,261,,268,271,272,274,-533,-533,-533,-533,-533,-533,,24,30,,42,47',
'51,54,60,67,76,127,,,,98,104,,,,22,,34,40,44,48,58,61,68,,,,,,100,106',
'5,8,15,19,28,36,,,49,53,59,66,74,80,81,86,91,96,300,4,9,,21,27,32,,',
'62,72,64,,75,77,,90,94,103,,6,10,16,20,29,33,38,261,,268,271,272,274',
'276,253,256,258,259,262,,24,30,,42,47,51,54,60,67,76,127,,,,98,104,',
',,22,,34,40,44,48,58,61,68,,,,,,100,106,5,8,15,19,28,36,,,49,53,59,66',
'74,80,81,86,91,96,300,4,9,,21,27,32,,,62,72,64,,75,77,,90,94,103,,6',
'10,16,20,29,33,38,261,,268,271,272,274,-533,-533,-533,-533,-533,-533',
',24,30,,42,47,51,54,60,67,76,127,,,,98,104,,,,22,,34,40,44,48,58,61',
'68,,,,,,100,106,5,8,15,19,28,36,,,49,53,59,66,74,80,81,86,91,96,300',
'4,9,,21,27,32,,,62,72,64,,75,77,,90,94,103,,6,10,16,20,29,33,38,261',
',268,271,272,274,276,253,256,258,259,262,,24,30,,42,47,51,54,60,67,76',
'127,,,,98,104,,,,22,,34,40,44,48,58,61,68,,,,,,100,106,5,8,15,19,28',
'36,,,49,53,59,66,74,80,81,86,91,96,300,4,9,,21,27,32,,,62,72,64,,75',
'77,,90,94,103,,6,10,16,20,29,33,38,261,,268,271,272,274,276,253,256',
'258,259,262,,24,30,,42,47,51,54,60,67,76,127,,,,98,104,,,,22,,34,40',
'44,48,58,61,68,,,,,,100,106,5,8,15,19,28,36,,,49,53,59,66,74,80,81,86',
'91,96,300,4,9,,21,27,32,,,62,72,64,,75,77,,90,94,103,,6,10,16,20,29',
'33,38,261,,268,271,272,274,276,253,256,258,259,262,,24,30,,42,47,51',
'54,60,67,76,127,,,,98,104,,,,22,,34,40,44,48,58,61,68,,,,,,100,106,5',
'8,15,19,28,36,,,49,53,59,66,74,80,81,86,91,96,300,4,9,,21,27,32,,,62',
'72,64,,75,77,,90,94,103,,6,10,16,20,29,33,38,,,,,,,,,,,,,,24,30,,42',
'47,51,54,60,67,76,127,,,,98,104,,,,22,,34,40,44,48,58,61,68,,,,,,100',
'106,5,8,15,19,28,36,,,49,53,59,66,74,80,81,86,91,96,300,4,9,,21,27,32',
',,62,72,64,,75,77,,90,94,103,,6,10,16,20,29,33,38,,,,,,,,,,,,,,24,30',
',42,47,51,54,60,67,76,127,,,,98,104,,,,22,,34,40,44,48,58,61,68,,,,',
',100,106,5,8,15,19,28,36,,,49,53,59,66,74,80,81,86,91,96,300,4,9,,21',
'27,32,,,62,72,64,,75,77,,90,94,103,,6,10,16,20,29,33,38,,,,,,,,,,,,',
',24,30,,42,47,51,54,60,67,76,127,,,,98,104,,,,22,,34,40,44,48,58,61',
'68,,,,,,100,106,5,8,15,19,28,36,,,49,53,59,66,74,80,81,86,91,96,300',
'4,9,,21,27,32,,,62,72,64,,75,77,,90,94,103,,6,10,16,20,29,33,38,,,,',
',,,,,,,,,24,30,,42,47,51,54,60,67,76,127,,,,98,104,,,,22,,34,40,44,48',
'58,61,68,,,,,,100,106,5,8,15,19,28,36,,,49,53,59,66,74,80,81,86,91,96',
'300,4,9,,21,27,32,,,62,72,64,,75,77,,90,94,103,,6,10,16,20,29,33,38',
',,,,,,,,,,,,,24,30,,42,47,51,54,60,67,76,127,,,,98,104,,,,22,,34,40',
'44,48,58,61,68,,,,,,100,106,5,8,15,19,28,36,,,49,53,59,66,74,80,81,86',
'91,96,300,4,9,,21,27,32,,,62,72,64,,75,77,,90,94,103,,6,10,16,20,29',
'33,38,,,,,,,,,,,,,,24,30,,42,47,51,54,60,67,76,127,,,,98,104,,,,22,',
'34,40,44,48,58,61,68,,,,,,100,106,5,8,15,19,28,36,,,49,53,59,66,74,80',
'81,86,91,96,300,4,9,,21,27,32,,,62,72,64,,75,77,,90,94,103,,6,10,16',
'20,29,33,38,,,,,,,,,,,,,,24,30,,42,47,51,54,60,67,76,127,,,,98,104,',
',,22,,34,40,44,48,58,61,68,,,,,,100,106,5,8,15,19,28,36,,,49,53,59,66',
'74,80,81,86,91,96,300,4,9,,21,27,32,,,62,72,64,,75,77,,90,94,103,,6',
'10,16,20,29,33,38,,,,,,,,,,,,,,24,30,,42,47,51,54,60,67,76,127,,,,98',
'104,,,,22,,34,40,44,48,58,61,68,,,,,,100,106,5,8,15,19,28,36,,,49,53',
'59,66,74,80,81,86,91,96,300,4,9,,21,27,32,,,62,72,64,,363,77,,90,94',
'103,,6,10,16,20,29,33,38,,,,,,,,,,,,,,24,30,,42,47,51,54,60,67,76,127',
',,,98,104,,,,22,,34,40,44,48,58,61,68,,,,,,100,106,5,8,15,19,28,36,',
',49,53,59,66,74,80,81,86,91,96,300,4,9,,21,27,32,,,62,72,64,,363,77',
',90,94,103,,6,10,16,20,29,33,38,,,,,,,,,,,,,,24,30,,42,47,51,54,60,67',
'76,127,,,,98,104,,,,22,,34,40,44,48,58,61,68,,,,,,100,106,5,8,15,19',
'28,36,,,49,53,59,66,74,80,81,86,91,96,300,4,9,,21,27,32,,,62,72,64,',
'75,77,,90,94,103,,6,10,16,20,29,33,38,,,,,,,,,,,,,,24,30,,42,47,51,54',
'60,67,76,127,,,,98,104,,,,22,,34,40,44,48,58,61,68,,,,,,100,106,5,8',
'15,19,28,36,,,49,53,59,66,74,80,81,86,91,96,300,4,9,,21,27,32,,,62,72',
'64,,75,77,,90,94,103,,6,10,16,20,29,33,38,,,,,,,,,,,,,,24,30,,42,47',
'51,54,60,67,76,127,,,,98,104,,,,22,,34,40,44,48,58,61,68,,,,,,100,106',
'5,8,15,19,28,36,,,49,53,59,66,74,80,81,86,91,96,300,4,9,,21,27,32,,',
'62,72,64,,75,77,,90,94,103,,6,10,16,20,29,33,38,,,,,,,,,,,,,,24,30,',
'42,47,51,54,60,67,76,127,,,,98,104,,,,22,,34,40,44,48,58,61,68,,,,,',
'100,106,5,8,15,19,28,36,,,49,53,59,66,74,80,81,86,91,96,300,4,9,,21',
'27,32,,,62,72,64,,75,77,,90,94,103,,6,10,16,20,29,33,38,,,,,,,,,,,,',
',24,30,,42,47,51,54,60,67,76,127,,,,98,104,,,,22,,34,40,44,48,58,61',
'68,,,,,,100,106,5,8,15,19,28,36,,,49,53,59,66,74,80,81,86,91,96,300',
'4,9,,21,27,32,,,62,72,64,,75,77,,90,94,103,,6,10,16,20,29,33,38,,,,',
',,,,,,,,,24,30,,42,47,51,54,60,67,76,127,,,,98,104,,,,22,,34,40,44,48',
'58,61,68,,,,,,100,106,5,8,15,19,28,36,,,49,53,59,66,74,80,81,86,91,96',
'300,4,9,,21,27,32,,,62,72,64,,75,77,,90,94,103,,6,10,16,20,29,33,38',
',,,,,,,,,,,,,24,30,,42,47,51,54,60,67,76,127,,,,98,104,,,,22,,34,40',
'44,48,58,61,68,,,,,,100,106,5,8,15,19,28,36,,,49,53,59,66,74,80,81,86',
'91,96,300,4,9,,21,27,32,,,62,72,64,,75,77,,90,94,103,,6,10,16,20,29',
'33,38,,,,,,,,,,,,,,24,30,,42,47,51,54,60,67,76,127,,,,98,104,,,,22,',
'34,40,44,48,58,61,68,,,,,,100,106,5,8,15,19,28,36,,,49,53,59,66,74,80',
'81,86,91,96,300,4,9,,21,27,32,,,62,72,64,,75,77,,90,94,103,,6,10,16',
'20,29,33,38,,,,,,,,,,,,,,24,30,,42,47,51,54,60,67,76,127,,,,98,104,',
',,22,,34,40,44,48,58,61,68,,,,,,100,106,5,8,15,19,28,36,,,49,53,59,66',
'74,80,81,86,91,96,300,4,9,,21,27,32,,,62,72,64,,75,77,,90,94,103,,6',
'10,16,20,29,33,38,,,,,,,,,,,,,,24,30,,42,47,51,54,60,67,76,127,,,,98',
'104,,,,22,,34,40,44,48,58,61,68,,,,,,100,106,5,8,15,19,28,36,,,49,53',
'59,66,74,80,81,86,91,96,300,4,9,,21,27,32,,,62,72,64,,75,77,,90,94,103',
',6,10,16,20,29,33,38,,,,,,,,,,,,,,24,30,,42,47,51,54,60,67,76,127,,',
',98,104,,,,22,,34,40,44,48,58,61,68,,,,,,100,106,5,8,15,19,28,36,,,49',
'53,59,66,74,80,81,86,91,96,300,4,9,,21,27,32,,,62,72,64,,75,77,,90,94',
'103,,6,10,16,20,29,33,38,,,,,,,,,,,,,,24,30,,42,47,51,54,60,67,76,127',
',,,98,104,,,,22,,34,40,44,48,58,61,68,,,,,,100,106,5,8,15,19,28,36,',
',49,53,59,66,74,80,81,86,91,96,13,4,9,,21,27,32,,,62,72,64,,75,77,,90',
'94,103,,6,10,16,20,29,33,38,,,,,,,,,,,,,,24,30,,42,47,51,54,60,67,76',
'78,,,,98,104,,,,22,,34,40,44,48,58,61,68,,,,,,100,106,5,8,15,19,28,36',
',,49,53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,,,,,64,,75,77,,90,94',
'103,,6,10,16,20,29,33,38,169,176,181,185,188,191,196,201,206,210,215',
'218,224,227,230,234,238,163,165,170,,178,183,189,193,198,169,176,181',
'185,188,191,196,201,206,210,215,218,224,227,230,234,238,163,165,170',
',178,183,189,193,198,,,,,,,,,,,,,,,,576,528,,,578,,,,,,,,,,192,197,',
',,,,,,,235,,716,569,,,717,,,,,,,,,,192,197,,,239,110,,,,261,235,268',
'271,272,274,276,253,256,258,259,262,264,266,269,273,275,277,254,255',
'257,239,110,169,176,181,185,188,191,196,201,206,210,215,218,224,227',
'230,234,238,163,165,170,,178,183,189,193,198,169,176,181,185,188,191',
'196,201,206,210,215,218,224,227,230,234,238,163,165,170,,178,183,189',
'193,198,,,,,,,,,,,,,,,,636,569,,,637,,,,,,,,,,192,197,,,,,,,,,235,,639',
'528,,,640,,,,,,,,,,192,197,,,239,110,,,,261,235,268,271,272,274,276',
'253,256,258,259,262,264,266,269,273,275,277,254,255,257,239,110,169',
'176,181,185,188,191,196,201,206,210,215,218,224,227,230,234,238,163',
'165,170,,178,183,189,193,198,169,176,181,185,188,191,196,201,206,210',
'215,218,224,227,230,234,238,163,165,170,,178,183,189,193,198,,,,,,,',
',,,,,,,,568,569,,,571,,,,,,,,,,192,197,,,,,,,,,235,,670,569,,,672,,',
',,,,,,,192,197,,,239,110,,,,261,235,268,271,272,274,276,253,256,258',
'259,262,264,266,269,273,275,277,254,,,239,110,169,176,181,185,188,191',
'196,201,206,210,215,218,224,227,230,234,238,163,165,170,,178,183,189',
'193,198,169,176,181,185,188,191,196,201,206,210,215,218,224,227,230',
'234,238,163,165,170,,178,183,189,193,198,,,,,,,,,,,,,,,,674,528,,,676',
',,,,,,,,,192,197,,,,,,,,,235,,692,569,,,694,,,,,,,,,,192,197,,,239,110',
',,,261,235,268,271,272,274,276,253,256,258,259,262,264,266,269,273,275',
'277,254,,,239,110,169,176,181,185,188,191,196,201,206,210,215,218,224',
'227,230,234,238,163,165,170,,178,183,189,193,198,169,176,181,185,188',
'191,196,201,206,210,215,218,224,227,230,234,238,163,165,170,,178,183',
'189,193,198,,,,,,,,,,,,,,,,527,528,,,530,,,,,,,,,,192,197,,,,,,,,,235',
',527,528,,,530,,,,,,,,,,192,197,,,239,110,,,,261,235,268,271,272,274',
'276,253,256,258,259,262,264,266,269,273,275,277,,,,239,110,169,176,181',
'185,188,191,196,201,206,210,215,218,224,227,230,234,238,163,165,170',
',178,183,189,193,198,169,176,181,185,188,191,196,201,206,210,215,218',
'224,227,230,234,238,163,165,170,,178,183,189,193,198,,,,,,,,,,,,,,,',
'639,528,,,640,,,,,,,,,,192,197,,,,,,,,,235,,926,569,,,927,,,,,,,,,,192',
'197,,,239,110,,,,261,235,268,271,272,274,276,253,256,258,259,262,264',
'266,269,273,,,,,,239,110,169,176,181,185,188,191,196,201,206,210,215',
'218,224,227,230,234,238,163,165,170,,178,183,189,193,198,169,176,181',
'185,188,191,196,201,206,210,215,218,224,227,230,234,238,163,165,170',
',178,183,189,193,198,,,,,,,,,,,,,,,,929,528,,,930,,,,,,,,,,192,197,',
',,,,,,,235,,749,569,,,750,,,,,,,,,,192,197,,,239,110,,,,261,235,268',
'271,272,274,276,253,256,258,259,262,264,266,269,273,,,,,,239,110,169',
'176,181,185,188,191,196,201,206,210,215,218,224,227,230,234,238,163',
'165,170,,178,183,189,193,198,169,176,181,185,188,191,196,201,206,210',
'215,218,224,227,230,234,238,163,165,170,,178,183,189,193,198,,,,,,,',
',,,,,,,,716,569,,,717,,,,,,,,,,192,197,,,,,,,,,235,,752,528,,,753,,',
',,,,,,,192,197,,,239,110,,,,,235,,,,,,,,,,,,,,,,,,,,239,110,169,176',
'181,185,188,191,196,201,206,210,215,218,224,227,230,234,238,163,165',
'170,,178,183,189,193,198,169,176,181,185,188,191,196,201,206,210,215',
'218,224,227,230,234,238,163,165,170,,178,183,189,193,198,,,,,,,,,,,',
',,,,636,569,,,637,,,,,,,,,,192,197,,,,,,,,,235,,527,528,,,530,,,,,,',
',,,192,197,136,,239,110,,152,,136,235,,,,152,,,,,,,,,,,,,,,,239,169',
'176,181,185,188,191,196,201,206,210,215,218,224,227,230,234,238,163',
'165,170,,178,183,189,193,198,679,,144,148,150,153,154,138,,144,148,150',
'153,154,,,,,,156,,,118,72,143,147,156,,,,,143,147,,,,,,,,,527,528,,',
'530,,,646,,,,547,24,30,192,197,47,51,54,60,67,,127,,235,,98,104,,,,22',
',34,40,44,48,58,61,68,,,,,239,100,106,5,8,15,19,28,,,,,53,59,66,74,80',
'81,86,91,96,,4,9,,21,27,32,62,72,,,120,,123,77,,90,94,,,6,10,16,20,29',
'33,38,,,,,,,,,,,,24,30,,42,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40',
'44,48,58,61,68,,,,,,100,106,5,8,15,19,28,,,,,53,59,66,74,80,81,86,91',
'96,,4,9,,21,27,32,118,72,,,120,,123,77,,90,94,,,6,10,16,20,29,33,38',
',,,,,,,,,,,24,30,,,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116',
'117,61,68,,,,,,131,251,240,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96',
',4,9,,21,27,32,118,72,,,120,,123,77,,90,94,,,6,10,16,20,29,33,38,,,',
',,,,,,,,24,30,,,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117',
'61,68,,,,,,131,251,240,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4',
'9,,21,27,32,118,72,,,120,,123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,',
',,,,,24,30,,,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117,61',
'68,,,,,,131,251,240,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,',
'21,27,32,118,72,,,120,,123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,,,,',
',,24,30,,,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117,61,68',
',,,,,131,251,240,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21',
'27,32,118,72,,,120,,123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24',
'30,,,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117,61,68,,,',
',,131,251,240,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27',
'32,118,72,,,120,,123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30',
',,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117,61,68,,,,,,131',
'251,240,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,118',
'72,,,120,,123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47',
'51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117,61,68,,,,,,131,251',
'240,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,118,72',
',,120,,123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47,51',
'54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117,61,68,,,,,,131,251,240',
'8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,118,72,,,120',
',123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47,51,54,60',
'67,,127,,,,98,104,,,,22,,34,40,44,116,117,61,68,,,,,,131,251,240,8,15',
'19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,118,72,,,120,,123',
'77,,90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47,51,54,60,67,,127',
',,,98,104,,,,22,,34,40,44,116,117,61,68,,,,,,131,251,240,8,15,19,28',
',,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,118,72,,,120,,123,77,',
'90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47,51,54,60,67,,127,',
',,98,104,,,,22,,34,40,44,116,117,61,68,,,,,,131,251,240,8,15,19,28,',
',,,53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,118,72,,,120,,123,77,,90',
'94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47,51,54,60,67,,127,,,,98',
'104,,,,22,,34,40,44,116,117,61,68,,,,,,131,251,240,8,15,19,28,,,,,53',
'59,66,74,80,81,86,91,96,,4,9,,21,27,32,118,72,,,120,,123,77,,90,94,',
',6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47,51,54,60,67,,127,,,,98,104',
',,,22,,34,40,44,116,117,61,68,,,,,,131,251,240,8,15,19,28,,,,,53,59',
'66,74,80,81,86,91,96,,4,9,,21,27,32,118,72,,,120,,123,77,,90,94,,,6',
'10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47,51,54,60,67,,127,,,,98,104,',
',,22,,34,40,44,116,117,61,68,,,,,,131,251,240,8,15,19,28,,,,,53,59,66',
'74,80,81,86,91,96,,4,9,,21,27,32,62,72,,,120,,123,77,,90,94,,,6,10,16',
'20,29,33,38,,,,,,,,,,,,24,30,,42,47,51,54,60,67,,127,,,,98,104,,,,22',
',34,40,44,48,58,61,68,,,,,,100,106,5,8,15,19,28,,,,,53,59,66,74,80,81',
'86,91,96,,4,9,,21,27,32,118,72,,,120,,123,77,,90,94,,,6,10,16,20,29',
'33,38,,,,,,,,,,,,24,30,,,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40',
'44,116,117,61,68,,,,,,131,251,240,8,15,19,28,,,,,53,59,66,74,80,81,86',
'91,96,,4,9,,21,27,32,118,72,,,120,,123,77,,90,94,,,6,10,16,20,29,33',
'38,,,,,,,,,,,,24,30,,,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44',
'116,117,61,68,,,,,,131,251,240,8,15,19,28,,,,,53,59,66,74,80,81,86,91',
'96,,4,9,,21,27,32,118,72,,,120,,123,77,,90,94,,,6,10,16,20,29,33,38',
',,,,,,,,,,,24,30,,,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116',
'117,61,68,,,,,,131,251,240,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96',
',4,9,,21,27,32,118,72,,,120,,123,77,,90,94,,,6,10,16,20,29,33,38,,,',
',,,,,,,,24,30,,,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117',
'61,68,,,,,,131,251,240,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4',
'9,,21,27,32,118,72,,,120,,123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,',
',,,,,24,30,,,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117,61',
'68,,,,,,131,251,240,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,',
'21,27,32,118,72,,,120,,123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,,,,',
',,24,30,,,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117,61,68',
',,,,,131,251,240,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21',
'27,32,118,72,,,120,,123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24',
'30,,,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117,61,68,,,',
',,131,251,240,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27',
'32,118,72,,,120,,123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30',
',,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117,61,68,,,,,,131',
'251,240,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,118',
'72,,,120,,123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47',
'51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117,61,68,,,,,,131,251',
'240,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,118,72',
',,120,,123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47,51',
'54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117,61,68,,,,,,131,251,240',
'8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,118,72,,,120',
',123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47,51,54,60',
'67,,127,,,,98,104,,,,22,,34,40,44,116,117,61,68,,,,,,131,251,240,8,15',
'19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,118,249,,,120,,123',
'77,,90,94,,,6,10,16,20,29,33,38,,,,,292,,,,,,,242,,,,,,54,60,67,,127',
',,,98,104,,,,22,,34,40,44,116,117,61,68,,,,,,131,251,240,8,15,19,28',
',,,,53,59,66,290,80,81,86,293,96,,4,9,,21,27,32,118,72,,,288,,123,77',
',90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47,51,54,60,67,,127',
',,,98,104,,,,22,,34,40,44,116,117,61,68,,,,,,131,251,240,8,15,19,28',
',,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,118,249,,,120,,123,77',
',90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,242,,,,,,54,60,67,,127,,,,98',
'104,,,,22,,34,40,44,116,117,61,68,,,,,,131,251,240,8,15,19,28,,,,,53',
'59,66,290,80,81,86,293,96,,4,9,,21,27,32,118,72,,,288,,123,77,,90,94',
',,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47,51,54,60,67,,127,,,,98,104',
',,,22,,34,40,44,116,117,61,68,,,,,,131,251,240,8,15,19,28,,,,,53,59',
'66,74,80,81,86,91,96,,4,9,,21,27,32,118,249,,,120,,123,77,,90,94,,,6',
'10,16,20,29,33,38,,,,,,,,,,,,242,,,,,,54,60,67,,127,,,,98,104,,,,22',
',34,40,44,48,58,61,68,,,,,,100,106,5,8,15,19,28,,,,,53,59,66,74,80,81',
'86,91,96,,4,9,,21,27,32,118,72,,,318,,123,77,,90,94,,,6,10,16,20,29',
'33,38,,,,,,,,,,,,24,30,,,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40',
'44,116,117,61,68,,,,,,131,251,240,8,15,19,28,,,,,53,59,66,74,80,81,86',
'91,96,,4,9,,21,27,32,118,72,,,120,,123,77,,90,94,,,6,10,16,20,29,33',
'38,,,,,,,,,,,,24,30,,,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44',
'116,117,61,68,,,,,,131,251,240,8,15,19,28,,,,,53,59,66,74,80,81,86,91',
'96,,4,9,,21,27,32,118,72,,,120,,123,77,,90,94,,,6,10,16,20,29,33,38',
',,,,,,,,,,,24,30,,,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116',
'117,61,68,,,,,,131,106,5,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,133',
'4,9,,21,27,32,118,72,,,120,,123,77,,90,94,132,134,6,10,16,20,29,33,38',
',,,,,,,,,,,24,30,,,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116',
'117,61,68,,,,,,131,251,240,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96',
',4,9,,21,27,32,62,72,,,120,,123,77,,90,94,,,6,10,16,20,29,33,38,,,,',
',,,,,,,24,30,,42,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,48,58',
'61,68,,,,,,100,106,5,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9',
',21,27,32,62,72,,,120,,123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,,,,',
',,24,30,,42,47,51,54,60,67,76,78,,,,98,104,,,,22,,34,40,44,48,58,61',
'68,,,,,,100,106,5,8,15,19,28,36,,,49,53,59,66,74,80,81,86,91,96,,4,9',
',21,27,32,118,72,,,64,,75,77,,90,94,103,,6,10,16,20,29,33,38,,,,,,,',
',,,,24,30,,,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117,61',
'68,,,,,,131,251,240,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,',
'21,27,32,118,72,,,120,,123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,,,,',
',,24,30,,,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117,61,68',
',,,,,131,251,240,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21',
'27,32,118,72,,,120,,123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24',
'30,,,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117,61,68,,,',
',,131,106,5,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,133,4,9,,21,27',
'32,118,72,,,120,,123,77,,90,94,132,134,6,10,16,20,29,33,38,,,,,,,,,',
',,24,30,,,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117,61,68',
',,,,,131,251,240,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21',
'27,32,118,72,,,120,,123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24',
'30,,,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117,61,68,,,',
',,131,251,240,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27',
'32,62,72,,,120,,123,77,,90,94,821,,6,10,16,20,29,33,38,,,,,,,,,,,,24',
'30,,42,47,51,54,60,67,76,127,,,,98,104,,,,22,,34,40,44,48,58,61,68,',
',,,,100,106,5,8,15,19,28,36,,,49,53,59,66,74,80,81,86,91,96,,4,9,,21',
'27,32,118,249,,,64,,75,77,,90,94,103,,6,10,16,20,29,33,38,,,,,,,,,,',
',242,,,,,,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117,61,68,,,,',
',131,251,240,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27,32',
'118,72,,,318,,123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,',
',47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117,61,68,,,,,,131',
'106,5,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,133,4,9,,21,27,32,118',
'72,,,120,,123,77,,90,94,132,134,6,10,16,20,29,33,38,,,,,,,,,,,,24,30',
',,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117,61,68,,,,,,131',
'251,240,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,118',
'72,,,120,,123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47',
'51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117,61,68,,,,,,131,106',
'5,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,133,4,9,,21,27,32,118,72',
',,120,,123,77,,90,94,132,134,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,',
'47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117,61,68,,,,,,131',
'251,240,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,118',
'72,,,120,,123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47',
'51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117,61,68,,,,,,131,251',
'240,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,118,72',
',,120,,123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47,51',
'54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117,61,68,,,,,,131,251,240',
'8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,118,72,,,120',
',123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47,51,54,60',
'67,,127,,,,98,104,,,,22,,34,40,44,116,117,61,68,,,,,,131,251,240,8,15',
'19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,118,72,,,120,,123',
'77,,90,94,545,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47,51,54,60,67',
',127,,,,98,104,,,,22,,34,40,44,48,58,61,68,,,,,,100,106,5,8,15,19,28',
',,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,118,249,,,120,,123,77',
',90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,242,,,,,,54,60,67,,127,,,,98',
'104,,,,22,,34,40,44,116,117,61,68,,,,,,131,251,240,8,15,19,28,,,,,53',
'59,66,74,80,81,86,91,96,,4,9,,21,27,32,62,72,,,369,,371,77,,90,94,,',
'6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,42,47,51,54,60,67,,127,,,,98,104',
',,,22,,34,40,44,48,58,61,68,,,,,,100,106,5,8,15,19,28,,,,,53,59,66,74',
'80,81,86,91,96,,4,9,,21,27,32,118,249,,,120,,123,77,,90,94,,,6,10,16',
'20,29,33,38,,,,,,,,,,,,242,,,,,,54,60,67,,127,,,,98,104,,,,22,,34,40',
'44,116,117,61,68,,,,,,131,251,240,8,15,19,28,,,,,53,59,66,74,80,81,86',
'91,96,,4,9,,21,27,32,118,72,,,246,,75,77,,90,94,103,,6,10,16,20,29,33',
'38,,,,,,,,,,,,24,30,,,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44',
'48,58,61,68,,,,,,100,106,5,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96',
',4,9,,21,27,32,62,72,,,120,,123,77,,90,94,545,,6,10,16,20,29,33,38,',
',,,,,,,,,,24,30,,42,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,48',
'58,61,68,,,,,,100,106,5,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4',
'9,,21,27,32,118,72,,,120,,123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,',
',,,,,24,30,,,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117,61',
'68,,,,,,131,106,5,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,133,4,9',
',21,27,32,118,72,,,120,,123,77,,90,94,132,134,6,10,16,20,29,33,38,,',
',,,,,,,,,24,30,,,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117',
'61,68,,,,,,131,251,240,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,133',
'4,9,,21,27,32,62,72,,,120,,123,77,,90,94,635,,6,10,16,20,29,33,38,,',
',,,,,,,,,24,30,,42,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,48',
'58,61,68,,,,,,100,106,5,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4',
'9,,21,27,32,118,72,,,120,,123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,',
',,,,,24,30,,,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117,61',
'68,,,,,,131,251,240,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,',
'21,27,32,118,72,,,120,,123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,,,,',
',,24,30,,,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117,61,68',
',,,,,131,251,240,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21',
'27,32,62,72,,,120,,123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24',
'30,,42,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,48,58,61,68,,,',
',,100,106,5,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27,32',
'62,72,,,120,,123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,42',
'47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,48,58,61,68,,,,,,100,106',
'5,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,118,249,',
',120,,123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,242,,,,,,54,60',
'67,,127,,,,98,104,,,,22,,34,40,44,116,117,61,68,,,,,,131,251,240,8,15',
'19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,118,72,,,369,,371',
'77,,90,94,374,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47,51,54,60,67',
',127,,,,98,104,,,,22,,34,40,44,48,58,61,68,,,,,,100,106,5,8,15,19,28',
',,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,118,72,,,120,,123,77,',
'90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47,51,54,60,67,,127,',
',,98,104,,,,22,,34,40,44,116,117,61,68,,,,,,131,251,240,8,15,19,28,',
',,,53,59,66,74,80,81,86,91,96,133,4,9,,21,27,32,118,72,,,120,,123,77',
',90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47,51,54,60,67,,127',
',,,98,104,,,,22,,34,40,44,116,117,61,68,,,,,,131,106,5,8,15,19,28,,',
',,53,59,66,74,80,81,86,91,96,133,4,9,,21,27,32,118,72,,,120,,123,77',
',90,94,132,134,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47,51,54,60,67',
',127,,,,98,104,,,,22,,34,40,44,116,117,61,68,,,,,,131,251,240,8,15,19',
'28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,62,72,,,120,,123,77',
',90,94,635,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,42,47,51,54,60,67',
',127,,,,98,104,,,,22,,34,40,44,48,58,61,68,,,,,,100,106,5,8,15,19,28',
',,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,62,72,,,120,,123,77,,90',
'94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,42,47,51,54,60,67,,127,,',
',98,104,,,,22,,34,40,44,48,58,61,68,,,,,,100,106,5,8,15,19,28,,,,,53',
'59,66,74,80,81,86,91,96,,4,9,,21,27,32,118,72,,,120,,123,77,,90,94,',
',6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47,51,54,60,67,,127,,,,98,104',
',,,22,,34,40,44,116,117,61,68,,,,,,131,251,240,8,15,19,28,,,,,53,59',
'66,74,80,81,86,91,96,,4,9,,21,27,32,118,72,,,120,,123,77,,90,94,,,6',
'10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47,51,54,60,67,,127,,,,98,104,',
',,22,,34,40,44,48,58,61,68,,,,,,100,106,5,8,15,19,28,,,,,53,59,66,74',
'80,81,86,91,96,,4,9,,21,27,32,118,72,,,120,,123,77,,90,94,,,6,10,16',
'20,29,33,38,,,,,,,,,,,,24,30,,,47,51,54,60,67,,127,,,,98,104,,,,22,',
'34,40,44,48,58,61,68,,,,,,100,106,5,8,15,19,28,,,,,53,59,66,74,80,81',
'86,91,96,,4,9,,21,27,32,62,72,,,120,,123,77,,90,94,545,,6,10,16,20,29',
'33,38,,,,,,,,,,,,24,30,,42,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40',
'44,48,58,61,68,,,,,,100,106,5,8,15,19,28,,,,,53,59,66,74,80,81,86,91',
'96,,4,9,,21,27,32,62,72,,,120,,123,77,,90,94,,,6,10,16,20,29,33,38,',
',,,,,,,,,,24,30,,42,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,48',
'58,61,68,,,,,,100,106,5,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4',
'9,,21,27,32,118,249,,,120,,123,77,,90,94,,,6,10,16,20,29,33,38,,,,,',
',,,,,,242,,,,,,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117,61,68',
',,,,,131,251,240,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21',
'27,32,118,72,,,876,,123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24',
'30,,,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117,61,68,,,',
',,131,251,240,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,133,4,9,,21',
'27,32,118,72,,,120,,123,77,,90,94,132,,6,10,16,20,29,33,38,,,,,,,,,',
',,24,30,,,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,48,58,61,68',
',,,,,100,106,5,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27',
'32,118,72,,,120,,123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30',
',,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117,61,68,,,,,,131',
'251,240,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,118',
'72,,,120,,123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47',
'51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117,61,68,,,,,,131,106',
'5,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,133,4,9,,21,27,32,118,72',
',,120,,123,77,,90,94,132,134,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,',
'47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117,61,68,,,,,,131',
'251,240,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,118',
'72,,,120,,123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47',
'51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117,61,68,,,,,,131,251',
'240,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,118,72',
',,120,,123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47,51',
'54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117,61,68,,,,,,131,251,240',
'8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,118,72,,,120',
',123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47,51,54,60',
'67,,127,,,,98,104,,,,22,,34,40,44,116,117,61,68,,,,,,131,251,240,8,15',
'19,28,,,,,53,59,66,74,80,81,86,91,96,133,4,9,,21,27,32,118,249,,,120',
',123,77,,90,94,,134,6,10,16,20,29,33,38,,,,,,,,,,,,242,,,,,,54,60,67',
',127,,,,98,104,,,,22,,34,40,44,116,117,61,68,,,,,,131,251,240,8,15,19',
'28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,118,72,,,369,,371,77',
',90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47,51,54,60,67,,127',
',,,98,104,,,,22,,34,40,44,116,117,61,68,,,,,,131,106,5,8,15,19,28,,',
',,53,59,66,74,80,81,86,91,96,133,4,9,,21,27,32,118,72,,,120,,123,77',
',90,94,132,134,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47,51,54,60,67',
',127,,,,98,104,,,,22,,34,40,44,116,117,61,68,,,,,,131,251,240,8,15,19',
'28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,118,72,,,120,,123,77',
',90,94,132,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47,51,54,60,67,,127',
',,,98,104,,,,22,,34,40,44,116,117,61,68,,,,,,131,251,240,8,15,19,28',
',,,,53,59,66,74,80,81,86,91,96,133,4,9,,21,27,32,118,72,,,120,,123,77',
',90,94,635,134,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47,51,54,60,67',
',127,,,,98,104,,,,22,,34,40,44,116,117,61,68,,,,,,131,251,240,8,15,19',
'28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,118,72,,,120,,123,77',
',90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47,51,54,60,67,,127',
',,,98,104,,,,22,,34,40,44,116,117,61,68,,,,,,131,251,240,8,15,19,28',
',,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,118,72,,,120,,123,77,',
'90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47,51,54,60,67,,127,',
',,98,104,,,,22,,34,40,44,116,117,61,68,,,,,,131,106,5,8,15,19,28,,,',
',53,59,66,74,80,81,86,91,96,133,4,9,,21,27,32,118,72,,,120,,123,77,',
'90,94,132,134,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47,51,54,60,67',
',127,,,,98,104,,,,22,,34,40,44,116,117,61,68,,,,,,131,251,240,8,15,19',
'28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,118,72,,,120,,123,77',
',90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47,51,54,60,67,,127',
',,,98,104,,,,22,,34,40,44,116,117,61,68,,,,,,131,251,240,8,15,19,28',
',,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,118,72,,,120,,123,77,',
'90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47,51,54,60,67,,127,',
',,98,104,,,,22,,34,40,44,116,117,61,68,,,,,,131,251,240,8,15,19,28,',
',,,53,59,66,74,80,81,86,91,96,133,4,9,,21,27,32,118,72,,,120,,123,77',
',90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47,51,54,60,67,,127',
',,,98,104,,,,22,,34,40,44,116,117,61,68,,,,,,131,106,5,8,15,19,28,,',
',,53,59,66,74,80,81,86,91,96,133,4,9,,21,27,32,118,72,,,120,,123,77',
',90,94,132,134,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47,51,54,60,67',
',127,,,,98,104,,,,22,,34,40,44,116,117,61,68,,,,,,131,251,240,8,15,19',
'28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,118,72,,,120,,123,77',
',90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47,51,54,60,67,,127',
',,,98,104,,,,22,,34,40,44,116,117,61,68,,,,,,131,251,240,8,15,19,28',
',,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,62,72,,,120,,123,77,,90',
'94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,42,47,51,54,60,67,,127,,',
',98,104,,,,22,,34,40,44,48,58,61,68,,,,,,100,106,5,8,15,19,28,,,,,53',
'59,66,74,80,81,86,91,96,,4,9,,21,27,32,118,249,,,120,,123,77,,90,94',
',,6,10,16,20,29,33,38,,,,,,,,,,,,242,,,,,,54,60,67,,127,,,,98,104,,',
',22,,34,40,44,116,117,61,68,,,,,,131,251,240,8,15,19,28,,,,,53,59,66',
'74,80,81,86,91,96,,4,9,,21,27,32,118,72,,,369,,371,77,,90,94,,,6,10',
'16,20,29,33,38,,,,,,,,,,,,24,30,,,47,51,54,60,67,,127,,,,98,104,,,,22',
',34,40,44,48,58,61,68,,,,,,100,106,5,8,15,19,28,,,,,53,59,66,74,80,81',
'86,91,96,,4,9,,21,27,32,118,249,,,120,,123,77,,90,94,,,6,10,16,20,29',
'33,38,,,,,,,,,,,,242,,,,,,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116',
'117,61,68,,,,,,131,251,240,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96',
',4,9,,21,27,32,62,72,,,369,,371,77,,90,94,,,6,10,16,20,29,33,38,,,,',
',,,,,,,24,30,,42,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,48,58',
'61,68,,,,,,100,106,5,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9',
',21,27,32,62,72,,,120,,123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,,,,',
',,24,30,,42,47,51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,48,58,61,68',
',,,,,100,106,5,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27',
'32,118,249,,,120,,123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,242',
',,,,,54,60,67,,127,,,,98,104,,,,22,,34,40,44,116,117,61,68,,,,,,131',
'251,240,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,62',
'72,,,369,,371,77,,90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,42,47',
'51,54,60,67,76,127,,,,98,104,,,,22,,34,40,44,48,58,61,68,,,,,,100,106',
'5,8,15,19,28,36,,,49,53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,62,72',
',,64,,75,77,,90,94,103,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,42,47',
'51,54,60,67,,127,,,,98,104,,,,22,,34,40,44,48,58,61,68,,,,,,100,106',
'5,8,15,19,28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,62,72,,,120',
',123,77,,90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,42,47,51,54,60',
'67,,127,,,,98,104,,,,22,,34,40,44,48,58,61,68,,,,,,100,106,5,8,15,19',
'28,,,,,53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,62,72,,,120,,123,77',
',90,94,,,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,42,47,51,54,60,67,,127',
',,,98,104,,,,22,,34,40,44,48,58,61,68,,,,,,100,106,5,8,15,19,28,,,,',
'53,59,66,74,80,81,86,91,96,,4,9,,21,27,32,118,72,,,120,,123,77,,90,94',
',,6,10,16,20,29,33,38,,,,,,,,,,,,24,30,,,47,51,54,60,67,,127,,,,98,104',
',,,22,,34,40,44,116,117,61,68,,,,,,131,251,240,8,15,19,28,,,,,53,59',
'66,74,80,81,86,91,96,,4,9,136,21,27,32,,152,,136,120,,123,77,152,90',
'94,,,6,10,16,20,29,33,38,,,,,,,,,,136,,,,,152,,,,,,136,,,,,152,,,,,',
'138,,144,148,150,153,154,679,,144,148,150,153,154,,136,,,,156,152,,136',
',143,147,156,152,,,,143,147,138,,144,148,150,153,154,,,,,679,547,144',
'148,150,153,154,136,156,,,,152,143,147,136,,,,156,152,,,,143,147,679',
',144,148,150,153,154,138,,144,148,150,153,154,,136,,,,156,152,,,,143',
'147,156,,,,,143,147,,,,138,,144,148,150,153,154,,138,,144,148,150,153',
'154,,,,,156,,,,,143,147,,156,,,,,143,147,138,,144,148,150,153,154,,',
',,,,,,,,,,156,,,,,143,147,261,,268,271,272,274,276,253,256,258,259,262',
'264,266,269,273,275,277,254,255,257,260,263,265,267,270,,261,278,268',
'271,272,274,276,253,256,258,259,262,264,266,269,273,275,277,254,255',
'257,260,263,265,267,270,,261,278,268,271,272,274,276,253,256,258,259',
'262,264,266,269,273,275,277,254,255,257,260,263,265,267,270,,261,278',
'268,271,272,274,276,253,256,258,259,262,264,266,269,273,275,277,254',
'255,257,260,263,265,267,270,,261,278,268,271,272,274,276,253,256,258',
'259,262,264,266,269,273,275,277,254,255,257,260,263,265,267,270,,261',
'278,268,271,272,274,276,253,256,258,259,262,264,266,269,273,275,277',
'254,255,257,260,263,265,267,270,,261,278,268,271,272,274,276,253,256',
'258,259,262,264,266,269,273,275,277,254,255,257,260,263,265,267,270',
',261,278,268,271,272,274,276,253,256,258,259,262,264,266,269,273,275',
'277,254,255,257,260,263,265,267,270,261,,268,271,272,274,276,253,256',
'258,259,262,264,266,269,273,275,277,254,255,257,260,263,261,,268,271',
'272,274,276,253,256,258,259,262,264,266,269,273,275,277,254,255,257',
'260,263,261,,268,271,272,274,276,253,256,258,259,262,264,266,269,273',
'275,277,254,255,257,260,263' ]
        racc_action_table = arr = Array.new(17875, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'571,747,744,744,571,571,571,571,571,571,864,78,571,571,571,571,717,571',
'571,571,571,571,571,571,571,571,571,571,571,571,571,571,571,571,571',
'571,571,571,571,571,571,138,395,571,287,679,379,141,561,561,252,56,571',
'571,571,546,546,676,571,571,247,571,368,368,85,85,512,738,738,507,507',
'250,287,322,576,576,283,37,311,128,128,108,108,578,578,347,347,311,311',
'717,512,512,330,752,479,381,479,479,141,322,283,283,381,37,571,283,512',
'395,56,395,673,379,252,379,717,717,717,247,330,676,747,717,376,247,598',
'753,888,675,571,571,571,571,744,250,571,138,571,80,571,679,80,80,80',
'80,80,80,80,78,765,78,752,80,80,80,80,80,80,80,80,80,80,80,80,80,80',
'80,80,80,80,80,80,80,80,80,80,80,80,80,561,287,80,287,753,85,672,546',
'738,669,596,80,80,80,368,576,80,80,80,507,80,507,108,376,578,376,347',
'888,694,888,80,80,80,759,752,927,796,752,62,391,759,752,677,62,765,456',
'391,135,135,765,674,765,327,694,694,325,678,694,324,814,927,927,360',
'80,927,80,753,295,672,753,672,295,929,753,669,588,669,930,327,382,939',
'325,670,80,324,681,382,80,80,80,80,295,295,80,80,80,568,80,796,682,568',
'568,568,568,568,568,683,456,568,568,568,568,674,568,568,568,568,568',
'568,568,568,568,568,568,568,568,568,568,568,568,568,568,568,568,568',
'568,568,6,814,568,814,360,6,360,670,691,670,691,568,568,568,929,926',
'929,568,568,930,568,930,939,482,939,482,482,482,469,568,469,469,469',
'469,469,469,469,469,469,469,469,469,469,469,469,469,469,469,469,469',
'469,469,469,469,684,6,469,6,6,6,6,6,686,568,282,339,331,343,343,288',
'338,587,567,288,6,586,282,339,690,6,6,844,338,332,567,750,568,568,568',
'568,568,926,331,568,926,568,926,568,343,343,6,343,343,343,343,343,343',
'671,343,332,750,750,343,343,750,844,548,343,548,343,343,343,343,343',
'343,343,480,749,480,480,575,343,343,343,343,343,343,343,844,625,844',
'844,343,343,343,343,343,343,343,343,343,469,343,343,280,343,343,343',
'497,315,497,749,343,695,343,343,52,343,343,400,400,343,343,343,343,343',
'343,343,280,280,280,242,242,333,749,315,749,749,559,716,749,52,52,558',
'329,343,612,612,612,612,400,400,700,328,400,400,400,400,400,333,400',
'402,703,402,400,400,879,102,102,400,329,400,400,400,400,400,400,400',
'716,328,71,553,71,400,400,400,400,400,400,400,706,879,879,627,400,400',
'400,400,400,400,400,400,400,400,400,400,542,400,400,400,540,890,716',
'890,400,910,400,400,536,400,400,400,400,400,400,400,400,400,400,400',
'107,107,503,720,878,716,722,716,716,716,910,910,724,476,716,476,476',
'400,441,535,441,441,441,441,441,361,361,503,503,878,878,107,107,727',
'107,107,107,107,107,107,301,107,301,770,770,107,107,319,24,24,107,728',
'107,107,107,107,107,107,107,692,522,441,411,411,107,107,107,107,107',
'107,107,663,319,319,460,107,107,107,107,107,107,107,107,107,735,107',
'107,69,107,107,107,745,745,692,445,107,440,107,107,248,107,107,517,517',
'107,107,107,107,107,107,107,739,69,69,640,640,692,439,692,692,866,741',
'692,427,248,248,107,646,107,646,646,646,646,517,517,426,517,517,517',
'517,517,517,517,517,662,866,866,517,517,592,932,932,517,661,517,517',
'517,517,517,517,517,562,562,793,639,639,517,517,517,517,517,517,517',
'517,592,592,517,517,517,517,517,517,517,517,517,517,407,517,517,375',
'517,517,517,404,751,357,357,517,403,517,517,658,517,517,517,398,517',
'517,517,517,517,517,517,372,375,375,756,757,793,758,793,793,793,793',
'793,393,357,357,517,357,357,357,357,357,357,357,357,793,372,372,357',
'357,370,793,760,357,761,357,357,357,357,357,357,357,390,764,380,290',
'373,357,357,357,357,357,357,357,357,370,370,357,357,357,357,357,357',
'357,357,357,357,629,357,357,161,357,357,357,369,367,775,365,357,290',
'357,357,364,357,357,357,362,357,357,357,357,357,357,357,161,161,161',
'46,46,46,46,656,290,348,290,290,789,318,290,357,46,46,46,46,46,46,46',
'46,46,46,46,46,46,46,46,46,46,46,46,46,314,46,46,46,46,46,46,46,46,46',
'46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,877,305',
'297,46,46,46,46,46,46,46,46,298,304,122,46,46,46,46,46,46,46,46,46,289',
'632,877,877,297,297,800,299,46,46,285,284,298,298,298,122,122,786,46',
'786,786,786,786,786,811,289,289,551,551,551,551,855,251,855,855,855',
'855,249,46,46,551,551,551,551,551,551,551,551,551,551,551,551,551,551',
'551,551,551,551,551,551,786,551,551,551,551,551,551,551,551,551,551',
'551,551,551,551,551,551,551,551,551,551,551,551,551,551,551,551,551',
'551,551,246,820,654,551,551,551,551,551,551,551,551,241,828,240,551',
'551,551,551,551,841,443,551,443,443,443,443,443,699,699,699,699,551',
'551,303,303,303,303,699,158,443,154,551,845,303,443,449,449,846,449',
'590,590,590,590,151,449,449,146,145,142,856,857,551,590,590,590,590',
'590,590,590,590,590,590,590,590,590,590,590,590,590,590,590,590,858',
'590,590,590,590,590,590,590,590,590,590,590,590,590,590,590,590,590',
'590,590,590,590,590,590,590,590,590,590,590,590,859,652,861,590,590',
'590,590,590,590,590,590,130,863,624,590,590,590,590,590,865,650,590',
'868,655,869,655,655,655,655,655,871,590,590,872,156,873,156,156,156',
'156,156,590,655,876,590,124,121,655,120,36,36,36,36,156,119,882,883',
'118,156,649,114,590,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36',
'36,36,36,36,109,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36',
'36,36,36,36,36,36,36,36,36,36,36,898,648,92,36,36,36,36,36,36,36,36',
'88,72,647,36,36,36,36,36,36,897,36,897,897,897,897,897,515,515,515,515',
'36,36,93,93,93,93,515,64,897,63,36,57,93,36,914,49,920,921,10,10,10',
'10,922,923,924,925,45,38,928,33,36,10,10,10,10,10,10,10,10,10,10,10',
'10,10,10,10,10,10,10,10,10,634,10,10,10,10,10,10,10,10,10,10,10,10,10',
'10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,638,17,2,10,10,10,10',
'10,10,10,10,941,,,10,10,10,10,10,10,10,10,10,860,,860,860,860,860,860',
',10,10,,657,,657,657,657,657,657,10,860,,,,,,,76,76,76,76,657,,,,,,',
',10,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,,76',
'76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76',
'76,76,76,76,76,,,,76,76,76,76,76,76,76,76,,,,76,76,76,76,76,,862,76',
'862,862,862,862,862,,,,,76,76,,,,,,,862,,76,,,76,,,,,523,523,523,523',
',,,,,,,,76,523,523,523,523,523,523,523,523,523,523,523,523,523,523,523',
'523,523,523,523,523,,523,523,523,523,523,523,523,523,523,523,523,523',
'523,523,523,523,523,523,523,523,523,523,523,523,523,523,523,523,523',
',,,523,523,523,523,523,523,523,523,,,,523,523,523,523,523,,788,523,788',
'788,788,788,788,636,636,636,636,523,523,,,,,,,788,,523,,470,523,470',
'470,470,470,470,470,470,470,470,470,,,,636,636,,523,636,636,636,636',
'636,,636,,,,636,636,,,,636,,636,636,636,636,636,636,636,,785,,,,636',
'636,636,636,636,636,636,781,,,,636,636,636,636,636,636,636,636,636,636',
'636,636,,636,636,636,,,,,636,,636,636,,636,636,636,636,636,636,636,636',
'636,636,636,637,637,637,637,785,,785,785,785,785,785,,636,,,781,,781',
'781,781,781,781,,785,,,,,,785,,637,637,,781,637,637,637,637,637,781',
'637,,,,637,637,,,,637,,637,637,637,637,637,637,637,,,896,,,637,637,637',
'637,637,637,637,,,,,637,637,637,637,637,637,637,637,637,637,637,637',
',637,637,637,,,5,5,637,,637,637,,637,637,637,637,637,637,637,637,637',
'637,637,,,,,,896,,896,896,896,896,896,637,5,5,,,5,5,5,5,5,,5,896,,,5',
'5,,896,,5,,5,5,5,5,5,5,5,,,908,,,5,5,5,5,5,5,5,,,,,5,5,5,5,5,5,5,5,5',
'5,5,5,,5,5,5,,,569,569,5,,5,5,,5,5,5,5,5,5,5,5,5,5,5,,,,,,908,,908,908',
'908,908,908,5,569,569,,,569,569,569,569,569,,569,908,,,569,569,,908',
',569,,569,569,569,569,569,569,569,,,806,,,569,569,569,569,569,569,569',
',,,,569,569,569,569,569,569,569,569,569,569,569,569,,569,569,569,,,532',
'532,569,,569,569,,569,569,569,569,569,569,569,569,569,569,569,,,,,,806',
',806,806,806,806,806,569,532,532,,,532,532,532,532,532,,532,806,,,532',
'532,,806,,532,,532,532,532,532,532,532,532,,,437,,,532,532,532,532,532',
'532,532,,,,,532,532,532,532,532,532,532,532,532,532,532,532,,532,532',
'532,,,529,529,532,,532,532,,532,532,532,532,532,532,532,532,532,532',
'532,,,,,,437,,437,437,437,437,437,532,529,529,,,529,529,529,529,529',
',529,437,,,529,529,,437,,529,,529,529,529,529,529,529,529,,,905,,,529',
'529,529,529,529,529,529,,,,,529,529,529,529,529,529,529,529,529,529',
'529,529,,529,529,529,,,570,570,529,,529,529,,529,529,529,529,529,529',
'529,529,529,529,529,,,,,,905,,905,905,905,905,905,529,570,570,,,570',
'570,570,570,570,,570,905,,,570,570,,905,,570,,570,570,570,570,570,570',
'570,,,936,,,570,570,570,570,570,570,570,,,,,570,570,570,570,570,570',
'570,570,570,570,570,570,,570,570,570,,,106,106,570,,570,570,,570,570',
'570,570,570,570,570,570,570,570,570,,,,,,936,,936,936,936,936,936,570',
'106,106,,,106,106,106,106,106,,106,936,,,106,106,,936,,106,,106,106',
'106,106,106,106,106,,,,,,106,106,106,106,106,106,106,,,,,106,106,106',
'106,106,106,106,106,106,106,106,106,,106,106,106,,,65,65,106,,106,106',
',106,106,106,106,106,106,106,106,106,106,106,461,,461,461,461,461,461',
'461,461,461,461,461,106,65,65,,,65,65,65,65,65,,65,,,,65,65,,,,65,,65',
'65,65,65,65,65,65,,65,,,,65,65,65,65,65,65,65,,,,,65,65,65,65,65,65',
'65,65,65,65,65,65,,65,65,65,,,359,359,65,,65,65,,65,65,65,65,65,65,65',
'65,65,65,65,,,,,,,65,,,,,,65,359,359,,,359,359,359,359,359,,359,,,,359',
'359,,,,359,,359,359,359,359,359,359,359,,,,,,359,359,359,359,359,359',
'359,,,,,359,359,359,359,359,359,359,359,359,,359,359,,359,359,359,,',
'91,91,359,,359,359,,359,359,,,359,359,359,359,359,359,359,464,,464,464',
'464,464,464,464,464,464,464,464,359,91,91,,,91,91,91,91,91,,91,,,,91',
'91,,,,91,,91,91,91,91,91,91,91,,91,,,,91,91,91,91,91,91,91,,,,,91,91',
'91,91,91,91,91,91,91,91,91,91,,91,91,91,,,577,577,91,,91,91,,91,91,91',
'91,91,91,91,91,91,91,91,,,,,,,91,,,,,,91,577,577,,,577,577,577,577,577',
',577,,,,577,577,,,,577,,577,577,577,577,577,577,577,,,,,,577,577,577',
'577,577,577,577,,,,,577,577,577,577,577,577,577,577,577,577,577,577',
',577,577,577,,,74,74,577,,577,577,,577,577,577,577,577,577,577,577,577',
'577,577,466,,466,466,466,466,466,466,466,466,466,466,577,74,74,,,74',
'74,74,74,74,,74,,,,74,74,,,,74,,74,74,74,74,74,74,74,,74,,,,74,74,74',
'74,74,74,74,,,,,74,74,74,74,74,74,74,74,74,74,74,74,,74,74,74,,,574',
'574,74,,74,74,,74,74,74,74,74,74,74,74,74,74,74,,,,,,,74,,,,,,74,574',
'574,,,574,574,574,574,574,,574,,,,574,574,,,,574,,574,574,574,574,574',
'574,574,,,,,,574,574,574,574,574,574,574,,,,,574,574,574,574,574,574',
'574,574,574,574,574,574,,574,574,574,103,103,,,574,,574,574,,574,574',
'574,574,574,574,574,574,574,574,574,,,,,,,,,,,,103,574,,,,,103,103,103',
',103,,,,103,103,,,,103,,103,103,103,103,103,103,103,,293,,,,103,103',
'103,103,103,103,103,,,,,103,103,103,103,103,103,103,103,103,,103,103',
',103,103,103,374,374,,293,103,,103,103,,103,103,,,103,103,103,103,103',
'103,103,,,,,,,293,,293,293,103,374,293,,,,,374,374,374,,374,,,,374,374',
',,,374,,374,374,374,374,374,374,374,,,,,,374,374,374,374,374,374,374',
',,,,374,374,374,374,374,374,374,374,374,75,374,374,,374,374,374,,,75',
'75,374,,374,374,,374,374,,,374,374,374,374,374,374,374,,,,,,,,,,,374',
',,75,75,,75,75,75,75,75,75,75,75,,,,75,75,,,,75,,75,75,75,75,75,75,75',
',,,,,75,75,75,75,75,75,75,75,,,75,75,75,75,75,75,75,75,75,75,490,75',
'75,,75,75,75,,,490,490,75,,75,75,,75,75,75,,75,75,75,75,75,75,75,467',
',467,467,467,467,467,467,467,467,467,467,,490,490,,490,490,490,490,490',
'490,490,490,,,,490,490,,,,490,,490,490,490,490,490,490,490,,,,,,490',
'490,490,490,490,490,490,490,,,490,490,490,490,490,490,490,490,490,490',
'733,490,490,,490,490,490,,,733,733,490,,490,490,,490,490,490,,490,490',
'490,490,490,490,490,472,,472,472,472,472,472,472,472,472,472,472,,733',
'733,,733,733,733,733,733,733,733,733,,,,733,733,,,,733,,733,733,733',
'733,733,733,733,,,,,,733,733,733,733,733,733,733,733,,,733,733,733,733',
'733,733,733,733,733,733,448,733,733,,733,733,733,,,448,448,733,,733',
'733,,733,733,733,,733,733,733,733,733,733,733,484,,484,484,484,484,484',
'484,484,484,484,484,,448,448,,448,448,448,448,448,448,448,448,,,,448',
'448,,,,448,,448,448,448,448,448,448,448,,,,,,448,448,448,448,448,448',
'448,448,,,448,448,448,448,448,448,448,448,448,448,430,448,448,,448,448',
'448,,,430,430,448,,448,448,,448,448,448,,448,448,448,448,448,448,448',
'474,,474,474,474,474,474,474,474,474,474,474,,430,430,,430,430,430,430',
'430,430,430,430,,,,430,430,,,,430,,430,430,430,430,430,430,430,,,,,',
'430,430,430,430,430,430,430,430,,,430,430,430,430,430,430,430,430,430',
'430,429,430,430,,430,430,430,,,429,429,430,,430,430,,430,430,430,,430',
'430,430,430,430,430,430,481,,481,481,481,481,481,481,481,481,481,481',
',429,429,,429,429,429,429,429,429,429,429,,,,429,429,,,,429,,429,429',
'429,429,429,429,429,,,,,,429,429,429,429,429,429,429,429,,,429,429,429',
'429,429,429,429,429,429,429,498,429,429,,429,429,429,,,498,498,429,',
'429,429,,429,429,429,,429,429,429,429,429,429,429,477,,477,477,477,477',
'477,477,477,477,477,477,,498,498,,498,498,498,498,498,498,498,498,,',
',498,498,,,,498,,498,498,498,498,498,498,498,,,,,,498,498,498,498,498',
'498,498,498,,,498,498,498,498,498,498,498,498,498,498,549,498,498,,498',
'498,498,,,549,549,498,,498,498,,498,498,498,,498,498,498,498,498,498',
'498,,,,,,,,,,,,,,549,549,,549,549,549,549,549,549,549,549,,,,549,549',
',,,549,,549,549,549,549,549,549,549,,,,,,549,549,549,549,549,549,549',
'549,,,549,549,549,549,549,549,549,549,549,549,705,549,549,,549,549,549',
',,705,705,549,,549,549,,549,549,549,,549,549,549,549,549,549,549,,,',
',,,,,,,,,,705,705,,705,705,705,705,705,705,705,705,,,,705,705,,,,705',
',705,705,705,705,705,705,705,,,,,,705,705,705,705,705,705,705,705,,',
'705,705,705,705,705,705,705,705,705,705,916,705,705,,705,705,705,,,916',
'916,705,,705,705,,705,705,705,,705,705,705,705,705,705,705,,,,,,,,,',
',,,,916,916,,916,916,916,916,916,916,916,916,,,,916,916,,,,916,,916',
'916,916,916,916,916,916,,,,,,916,916,916,916,916,916,916,916,,,916,916',
'916,916,916,916,916,916,916,916,554,916,916,,916,916,916,,,554,554,916',
',916,916,,916,916,916,,916,916,916,916,916,916,916,,,,,,,,,,,,,,554',
'554,,554,554,554,554,554,554,554,554,,,,554,554,,,,554,,554,554,554',
'554,554,554,554,,,,,,554,554,554,554,554,554,554,554,,,554,554,554,554',
'554,554,554,554,554,554,555,554,554,,554,554,554,,,555,555,554,,554',
'554,,554,554,554,,554,554,554,554,554,554,554,,,,,,,,,,,,,,555,555,',
'555,555,555,555,555,555,555,555,,,,555,555,,,,555,,555,555,555,555,555',
'555,555,,,,,,555,555,555,555,555,555,555,555,,,555,555,555,555,555,555',
'555,555,555,555,696,555,555,,555,555,555,,,696,696,555,,555,555,,555',
'555,555,,555,555,555,555,555,555,555,,,,,,,,,,,,,,696,696,,696,696,696',
'696,696,696,696,696,,,,696,696,,,,696,,696,696,696,696,696,696,696,',
',,,,696,696,696,696,696,696,696,696,,,696,696,696,696,696,696,696,696',
'696,696,35,696,696,,696,696,696,,,35,35,696,,696,696,,696,696,696,,696',
'696,696,696,696,696,696,,,,,,,,,,,,,,35,35,,35,35,35,35,35,35,35,35',
',,,35,35,,,,35,,35,35,35,35,35,35,35,,,,,,35,35,35,35,35,35,35,35,,',
'35,35,35,35,35,35,35,35,35,35,371,35,35,,35,35,35,,,371,371,35,,35,35',
',35,35,35,,35,35,35,35,35,35,35,,,,,,,,,,,,,,371,371,,371,371,371,371',
'371,371,371,371,,,,371,371,,,,371,,371,371,371,371,371,371,371,,,,,',
'371,371,371,371,371,371,371,371,,,371,371,371,371,371,371,371,371,371',
'371,363,371,371,,371,371,371,,,363,363,371,,371,371,,371,371,371,,371',
'371,371,371,371,371,371,,,,,,,,,,,,,,363,363,,363,363,363,363,363,363',
'363,363,,,,363,363,,,,363,,363,363,363,363,363,363,363,,,,,,363,363',
'363,363,363,363,363,363,,,363,363,363,363,363,363,363,363,363,363,584',
'363,363,,363,363,363,,,584,584,363,,363,363,,363,363,363,,363,363,363',
'363,363,363,363,,,,,,,,,,,,,,584,584,,584,584,584,584,584,584,584,584',
',,,584,584,,,,584,,584,584,584,584,584,584,584,,,,,,584,584,584,584',
'584,584,584,584,,,584,584,584,584,584,584,584,584,584,584,600,584,584',
',584,584,584,,,600,600,584,,584,584,,584,584,584,,584,584,584,584,584',
'584,584,,,,,,,,,,,,,,600,600,,600,600,600,600,600,600,600,600,,,,600',
'600,,,,600,,600,600,600,600,600,600,600,,,,,,600,600,600,600,600,600',
'600,600,,,600,600,600,600,600,600,600,600,600,600,880,600,600,,600,600',
'600,,,880,880,600,,600,600,,600,600,600,,600,600,600,600,600,600,600',
',,,,,,,,,,,,,880,880,,880,880,880,880,880,880,880,880,,,,880,880,,,',
'880,,880,880,880,880,880,880,880,,,,,,880,880,880,880,880,880,880,880',
',,880,880,880,880,880,880,880,880,880,880,852,880,880,,880,880,880,',
',852,852,880,,880,880,,880,880,880,,880,880,880,880,880,880,880,,,,',
',,,,,,,,,852,852,,852,852,852,852,852,852,852,852,,,,852,852,,,,852',
',852,852,852,852,852,852,852,,,,,,852,852,852,852,852,852,852,852,,',
'852,852,852,852,852,852,852,852,852,852,605,852,852,,852,852,852,,,605',
'605,852,,852,852,,852,852,852,,852,852,852,852,852,852,852,,,,,,,,,',
',,,,605,605,,605,605,605,605,605,605,605,605,,,,605,605,,,,605,,605',
'605,605,605,605,605,605,,,,,,605,605,605,605,605,605,605,605,,,605,605',
'605,605,605,605,605,605,605,605,123,605,605,,605,605,605,,,123,123,605',
',605,605,,605,605,605,,605,605,605,605,605,605,605,,,,,,,,,,,,,,123',
'123,,123,123,123,123,123,123,123,123,,,,123,123,,,,123,,123,123,123',
'123,123,123,123,,,,,,123,123,123,123,123,123,123,123,,,123,123,123,123',
'123,123,123,123,123,123,336,123,123,,123,123,123,,,336,336,123,,123',
'123,,123,123,123,,123,123,123,123,123,123,123,,,,,,,,,,,,,,336,336,',
'336,336,336,336,336,336,336,336,,,,336,336,,,,336,,336,336,336,336,336',
'336,336,,,,,,336,336,336,336,336,336,336,336,,,336,336,336,336,336,336',
'336,336,336,336,316,336,336,,336,336,336,,,316,316,336,,336,336,,336',
'336,336,,336,336,336,336,336,336,336,,,,,,,,,,,,,,316,316,,316,316,316',
'316,316,316,316,316,,,,316,316,,,,316,,316,316,316,316,316,316,316,',
',,,,316,316,316,316,316,316,316,316,,,316,316,316,316,316,316,316,316',
'316,316,795,316,316,,316,316,316,,,795,795,316,,316,316,,316,316,316',
',316,316,316,316,316,316,316,,,,,,,,,,,,,,795,795,,795,795,795,795,795',
'795,795,795,,,,795,795,,,,795,,795,795,795,795,795,795,795,,,,,,795',
'795,795,795,795,795,795,795,,,795,795,795,795,795,795,795,795,795,795',
'619,795,795,,795,795,795,,,619,619,795,,795,795,,795,795,795,,795,795',
'795,795,795,795,795,,,,,,,,,,,,,,619,619,,619,619,619,619,619,619,619',
'619,,,,619,619,,,,619,,619,619,619,619,619,619,619,,,,,,619,619,619',
'619,619,619,619,619,,,619,619,619,619,619,619,619,619,619,619,818,619',
'619,,619,619,619,,,818,818,619,,619,619,,619,619,619,,619,619,619,619',
'619,619,619,,,,,,,,,,,,,,818,818,,818,818,818,818,818,818,818,818,,',
',818,818,,,,818,,818,818,818,818,818,818,818,,,,,,818,818,818,818,818',
'818,818,818,,,818,818,818,818,818,818,818,818,818,818,824,818,818,,818',
'818,818,,,824,824,818,,818,818,,818,818,818,,818,818,818,818,818,818',
'818,,,,,,,,,,,,,,824,824,,824,824,824,824,824,824,824,824,,,,824,824',
',,,824,,824,824,824,824,824,824,824,,,,,,824,824,824,824,824,824,824',
'824,,,824,824,824,824,824,824,824,824,824,824,1,824,824,,824,824,824',
',,1,1,824,,824,824,,824,824,824,,824,824,824,824,824,824,824,,,,,,,',
',,,,,,1,1,,1,1,1,1,1,1,1,1,,,,1,1,,,,1,,1,1,1,1,1,1,1,,,,,,1,1,1,1,1',
'1,1,1,,,1,1,1,1,1,1,1,1,1,1,,1,1,,1,1,1,,,,,1,,1,1,,1,1,1,,1,1,1,1,1',
'1,1,353,353,353,353,353,353,353,353,353,353,353,353,353,353,353,353',
'353,353,353,353,,353,353,353,353,353,901,901,901,901,901,901,901,901',
'901,901,901,901,901,901,901,901,901,901,901,901,,901,901,901,901,901',
',,,,,,,,,,,,,,,353,353,,,353,,,,,,,,,,353,353,,,,,,,,,353,,901,901,',
',901,,,,,,,,,,901,901,,,353,353,,,,471,901,471,471,471,471,471,471,471',
'471,471,471,471,471,471,471,471,471,471,471,471,901,901,415,415,415',
'415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415',
',415,415,415,415,415,417,417,417,417,417,417,417,417,417,417,417,417',
'417,417,417,417,417,417,417,417,,417,417,417,417,417,,,,,,,,,,,,,,,',
'415,415,,,415,,,,,,,,,,415,415,,,,,,,,,415,,417,417,,,417,,,,,,,,,,417',
'417,,,415,415,,,,468,417,468,468,468,468,468,468,468,468,468,468,468',
'468,468,468,468,468,468,468,468,417,417,351,351,351,351,351,351,351',
'351,351,351,351,351,351,351,351,351,351,351,351,351,,351,351,351,351',
'351,457,457,457,457,457,457,457,457,457,457,457,457,457,457,457,457',
'457,457,457,457,,457,457,457,457,457,,,,,,,,,,,,,,,,351,351,,,351,,',
',,,,,,,351,351,,,,,,,,,351,,457,457,,,457,,,,,,,,,,457,457,,,351,351',
',,,463,457,463,463,463,463,463,463,463,463,463,463,463,463,463,463,463',
'463,463,,,457,457,459,459,459,459,459,459,459,459,459,459,459,459,459',
'459,459,459,459,459,459,459,,459,459,459,459,459,504,504,504,504,504',
'504,504,504,504,504,504,504,504,504,504,504,504,504,504,504,,504,504',
'504,504,504,,,,,,,,,,,,,,,,459,459,,,459,,,,,,,,,,459,459,,,,,,,,,459',
',504,504,,,504,,,,,,,,,,504,504,,,459,459,,,,465,504,465,465,465,465',
'465,465,465,465,465,465,465,465,465,465,465,465,465,,,504,504,506,506',
'506,506,506,506,506,506,506,506,506,506,506,506,506,506,506,506,506',
'506,,506,506,506,506,506,539,539,539,539,539,539,539,539,539,539,539',
'539,539,539,539,539,539,539,539,539,,539,539,539,539,539,,,,,,,,,,,',
',,,,506,506,,,506,,,,,,,,,,506,506,,,,,,,,,506,,539,539,,,539,,,,,,',
',,,539,539,,,506,506,,,,462,539,462,462,462,462,462,462,462,462,462',
'462,462,462,462,462,462,462,,,,539,539,510,510,510,510,510,510,510,510',
'510,510,510,510,510,510,510,510,510,510,510,510,,510,510,510,510,510',
'911,911,911,911,911,911,911,911,911,911,911,911,911,911,911,911,911',
'911,911,911,,911,911,911,911,911,,,,,,,,,,,,,,,,510,510,,,510,,,,,,',
',,,510,510,,,,,,,,,510,,911,911,,,911,,,,,,,,,,911,911,,,510,510,,,',
'485,911,485,485,485,485,485,485,485,485,485,485,485,485,485,485,,,,',
',911,911,913,913,913,913,913,913,913,913,913,913,913,913,913,913,913',
'913,913,913,913,913,,913,913,913,913,913,593,593,593,593,593,593,593',
'593,593,593,593,593,593,593,593,593,593,593,593,593,,593,593,593,593',
'593,,,,,,,,,,,,,,,,913,913,,,913,,,,,,,,,,913,913,,,,,,,,,913,,593,593',
',,593,,,,,,,,,,593,593,,,913,913,,,,483,593,483,483,483,483,483,483',
'483,483,483,483,483,483,483,483,,,,,,593,593,538,538,538,538,538,538',
'538,538,538,538,538,538,538,538,538,538,538,538,538,538,,538,538,538',
'538,538,595,595,595,595,595,595,595,595,595,595,595,595,595,595,595',
'595,595,595,595,595,,595,595,595,595,595,,,,,,,,,,,,,,,,538,538,,,538',
',,,,,,,,,538,538,,,,,,,,,538,,595,595,,,595,,,,,,,,,,595,595,,,538,538',
',,,,595,,,,,,,,,,,,,,,,,,,,595,595,509,509,509,509,509,509,509,509,509',
'509,509,509,509,509,509,509,509,509,509,509,,509,509,509,509,509,312',
'312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312',
'312,312,,312,312,312,312,312,,,,,,,,,,,,,,,,509,509,,,509,,,,,,,,,,509',
'509,,,,,,,,,509,,312,312,,,312,,,,,,,,,,312,312,493,,509,509,,493,,323',
'312,,,,323,,,,,,,,,,,,,,,,312,313,313,313,313,313,313,313,313,313,313',
'313,313,313,313,313,313,313,313,313,313,,313,313,313,313,313,493,,493',
'493,493,493,493,323,,323,323,323,323,323,,,,,,493,,,346,346,493,493',
'323,,,,,323,323,,,,,,,,,313,313,,,313,,,493,,,,323,346,346,313,313,346',
'346,346,346,346,,346,,313,,346,346,,,,346,,346,346,346,346,346,346,346',
',,,,313,346,346,346,346,346,346,346,,,,,346,346,346,346,346,346,346',
'346,346,,346,346,,346,346,346,582,582,,,346,,346,346,,346,346,,,346',
'346,346,346,346,346,346,,,,,,,,,,,,582,582,,582,582,582,582,582,582',
',582,,,,582,582,,,,582,,582,582,582,582,582,582,582,,,,,,582,582,582',
'582,582,582,582,,,,,582,582,582,582,582,582,582,582,582,,582,582,,582',
'582,582,253,253,,,582,,582,582,,582,582,,,582,582,582,582,582,582,582',
',,,,,,,,,,,253,253,,,253,253,253,253,253,,253,,,,253,253,,,,253,,253',
'253,253,253,253,253,253,,,,,,253,253,253,253,253,253,253,,,,,253,253',
'253,253,253,253,253,253,253,,253,253,,253,253,253,254,254,,,253,,253',
'253,,253,253,,,253,253,253,253,253,253,253,,,,,,,,,,,,254,254,,,254',
'254,254,254,254,,254,,,,254,254,,,,254,,254,254,254,254,254,254,254',
',,,,,254,254,254,254,254,254,254,,,,,254,254,254,254,254,254,254,254',
'254,,254,254,,254,254,254,255,255,,,254,,254,254,,254,254,,,254,254',
'254,254,254,254,254,,,,,,,,,,,,255,255,,,255,255,255,255,255,,255,,',
',255,255,,,,255,,255,255,255,255,255,255,255,,,,,,255,255,255,255,255',
'255,255,,,,,255,255,255,255,255,255,255,255,255,,255,255,,255,255,255',
'256,256,,,255,,255,255,,255,255,,,255,255,255,255,255,255,255,,,,,,',
',,,,,256,256,,,256,256,256,256,256,,256,,,,256,256,,,,256,,256,256,256',
'256,256,256,256,,,,,,256,256,256,256,256,256,256,,,,,256,256,256,256',
'256,256,256,256,256,,256,256,,256,256,256,257,257,,,256,,256,256,,256',
'256,,,256,256,256,256,256,256,256,,,,,,,,,,,,257,257,,,257,257,257,257',
'257,,257,,,,257,257,,,,257,,257,257,257,257,257,257,257,,,,,,257,257',
'257,257,257,257,257,,,,,257,257,257,257,257,257,257,257,257,,257,257',
',257,257,257,258,258,,,257,,257,257,,257,257,,,257,257,257,257,257,257',
'257,,,,,,,,,,,,258,258,,,258,258,258,258,258,,258,,,,258,258,,,,258',
',258,258,258,258,258,258,258,,,,,,258,258,258,258,258,258,258,,,,,258',
'258,258,258,258,258,258,258,258,,258,258,,258,258,258,259,259,,,258',
',258,258,,258,258,,,258,258,258,258,258,258,258,,,,,,,,,,,,259,259,',
',259,259,259,259,259,,259,,,,259,259,,,,259,,259,259,259,259,259,259',
'259,,,,,,259,259,259,259,259,259,259,,,,,259,259,259,259,259,259,259',
'259,259,,259,259,,259,259,259,260,260,,,259,,259,259,,259,259,,,259',
'259,259,259,259,259,259,,,,,,,,,,,,260,260,,,260,260,260,260,260,,260',
',,,260,260,,,,260,,260,260,260,260,260,260,260,,,,,,260,260,260,260',
'260,260,260,,,,,260,260,260,260,260,260,260,260,260,,260,260,,260,260',
'260,261,261,,,260,,260,260,,260,260,,,260,260,260,260,260,260,260,,',
',,,,,,,,,261,261,,,261,261,261,261,261,,261,,,,261,261,,,,261,,261,261',
'261,261,261,261,261,,,,,,261,261,261,261,261,261,261,,,,,261,261,261',
'261,261,261,261,261,261,,261,261,,261,261,261,262,262,,,261,,261,261',
',261,261,,,261,261,261,261,261,261,261,,,,,,,,,,,,262,262,,,262,262',
'262,262,262,,262,,,,262,262,,,,262,,262,262,262,262,262,262,262,,,,',
',262,262,262,262,262,262,262,,,,,262,262,262,262,262,262,262,262,262',
',262,262,,262,262,262,263,263,,,262,,262,262,,262,262,,,262,262,262',
'262,262,262,262,,,,,,,,,,,,263,263,,,263,263,263,263,263,,263,,,,263',
'263,,,,263,,263,263,263,263,263,263,263,,,,,,263,263,263,263,263,263',
'263,,,,,263,263,263,263,263,263,263,263,263,,263,263,,263,263,263,264',
'264,,,263,,263,263,,263,263,,,263,263,263,263,263,263,263,,,,,,,,,,',
',264,264,,,264,264,264,264,264,,264,,,,264,264,,,,264,,264,264,264,264',
'264,264,264,,,,,,264,264,264,264,264,264,264,,,,,264,264,264,264,264',
'264,264,264,264,,264,264,,264,264,264,265,265,,,264,,264,264,,264,264',
',,264,264,264,264,264,264,264,,,,,,,,,,,,265,265,,,265,265,265,265,265',
',265,,,,265,265,,,,265,,265,265,265,265,265,265,265,,,,,,265,265,265',
'265,265,265,265,,,,,265,265,265,265,265,265,265,265,265,,265,265,,265',
'265,265,266,266,,,265,,265,265,,265,265,,,265,265,265,265,265,265,265',
',,,,,,,,,,,266,266,,,266,266,266,266,266,,266,,,,266,266,,,,266,,266',
'266,266,266,266,266,266,,,,,,266,266,266,266,266,266,266,,,,,266,266',
'266,266,266,266,266,266,266,,266,266,,266,266,266,389,389,,,266,,266',
'266,,266,266,,,266,266,266,266,266,266,266,,,,,,,,,,,,389,389,,389,389',
'389,389,389,389,,389,,,,389,389,,,,389,,389,389,389,389,389,389,389',
',,,,,389,389,389,389,389,389,389,,,,,389,389,389,389,389,389,389,389',
'389,,389,389,,389,389,389,268,268,,,389,,389,389,,389,389,,,389,389',
'389,389,389,389,389,,,,,,,,,,,,268,268,,,268,268,268,268,268,,268,,',
',268,268,,,,268,,268,268,268,268,268,268,268,,,,,,268,268,268,268,268',
'268,268,,,,,268,268,268,268,268,268,268,268,268,,268,268,,268,268,268',
'269,269,,,268,,268,268,,268,268,,,268,268,268,268,268,268,268,,,,,,',
',,,,,269,269,,,269,269,269,269,269,,269,,,,269,269,,,,269,,269,269,269',
'269,269,269,269,,,,,,269,269,269,269,269,269,269,,,,,269,269,269,269',
'269,269,269,269,269,,269,269,,269,269,269,270,270,,,269,,269,269,,269',
'269,,,269,269,269,269,269,269,269,,,,,,,,,,,,270,270,,,270,270,270,270',
'270,,270,,,,270,270,,,,270,,270,270,270,270,270,270,270,,,,,,270,270',
'270,270,270,270,270,,,,,270,270,270,270,270,270,270,270,270,,270,270',
',270,270,270,271,271,,,270,,270,270,,270,270,,,270,270,270,270,270,270',
'270,,,,,,,,,,,,271,271,,,271,271,271,271,271,,271,,,,271,271,,,,271',
',271,271,271,271,271,271,271,,,,,,271,271,271,271,271,271,271,,,,,271',
'271,271,271,271,271,271,271,271,,271,271,,271,271,271,272,272,,,271',
',271,271,,271,271,,,271,271,271,271,271,271,271,,,,,,,,,,,,272,272,',
',272,272,272,272,272,,272,,,,272,272,,,,272,,272,272,272,272,272,272',
'272,,,,,,272,272,272,272,272,272,272,,,,,272,272,272,272,272,272,272',
'272,272,,272,272,,272,272,272,273,273,,,272,,272,272,,272,272,,,272',
'272,272,272,272,272,272,,,,,,,,,,,,273,273,,,273,273,273,273,273,,273',
',,,273,273,,,,273,,273,273,273,273,273,273,273,,,,,,273,273,273,273',
'273,273,273,,,,,273,273,273,273,273,273,273,273,273,,273,273,,273,273',
'273,274,274,,,273,,273,273,,273,273,,,273,273,273,273,273,273,273,,',
',,,,,,,,,274,274,,,274,274,274,274,274,,274,,,,274,274,,,,274,,274,274',
'274,274,274,274,274,,,,,,274,274,274,274,274,274,274,,,,,274,274,274',
'274,274,274,274,274,274,,274,274,,274,274,274,275,275,,,274,,274,274',
',274,274,,,274,274,274,274,274,274,274,,,,,,,,,,,,275,275,,,275,275',
'275,275,275,,275,,,,275,275,,,,275,,275,275,275,275,275,275,275,,,,',
',275,275,275,275,275,275,275,,,,,275,275,275,275,275,275,275,275,275',
',275,275,,275,275,275,276,276,,,275,,275,275,,275,275,,,275,275,275',
'275,275,275,275,,,,,,,,,,,,276,276,,,276,276,276,276,276,,276,,,,276',
'276,,,,276,,276,276,276,276,276,276,276,,,,,,276,276,276,276,276,276',
'276,,,,,276,276,276,276,276,276,276,276,276,,276,276,,276,276,276,277',
'277,,,276,,276,276,,276,276,,,276,276,276,276,276,276,276,,,,,,,,,,',
',277,277,,,277,277,277,277,277,,277,,,,277,277,,,,277,,277,277,277,277',
'277,277,277,,,,,,277,277,277,277,277,277,277,,,,,277,277,277,277,277',
'277,277,277,277,,277,277,,277,277,277,278,278,,,277,,277,277,,277,277',
',,277,277,277,277,277,277,277,,,,,,,,,,,,278,278,,,278,278,278,278,278',
',278,,,,278,278,,,,278,,278,278,278,278,278,278,278,,,,,,278,278,278',
'278,278,278,278,,,,,278,278,278,278,278,278,278,278,278,,278,278,,278',
'278,278,26,26,,,278,,278,278,,278,278,,,278,278,278,278,278,278,278',
',,,,26,,,,,,,26,,,,,,26,26,26,,26,,,,26,26,,,,26,,26,26,26,26,26,26',
'26,,,,,,26,26,26,26,26,26,26,,,,,26,26,26,26,26,26,26,26,26,,26,26,',
'26,26,26,30,30,,,26,,26,26,,26,26,,,26,26,26,26,26,26,26,,,,,,,,,,,',
'30,30,,,30,30,30,30,30,,30,,,,30,30,,,,30,,30,30,30,30,30,30,30,,,,',
',30,30,30,30,30,30,30,,,,,30,30,30,30,30,30,30,30,30,,30,30,,30,30,30',
'41,41,,,30,,30,30,,30,30,,,30,30,30,30,30,30,30,,,,,,,,,,,,41,,,,,,41',
'41,41,,41,,,,41,41,,,,41,,41,41,41,41,41,41,41,,,,,,41,41,41,41,41,41',
'41,,,,,41,41,41,41,41,41,41,41,41,,41,41,,41,41,41,565,565,,,41,,41',
'41,,41,41,,,41,41,41,41,41,41,41,,,,,,,,,,,,565,565,,,565,565,565,565',
'565,,565,,,,565,565,,,,565,,565,565,565,565,565,565,565,,,,,,565,565',
'565,565,565,565,565,,,,,565,565,565,565,565,565,565,565,565,,565,565',
',565,565,565,42,42,,,565,,565,565,,565,565,,,565,565,565,565,565,565',
'565,,,,,,,,,,,,42,,,,,,42,42,42,,42,,,,42,42,,,,42,,42,42,42,42,42,42',
'42,,,,,,42,42,42,42,42,42,42,,,,,42,42,42,42,42,42,42,42,42,,42,42,',
'42,42,42,132,132,,,42,,42,42,,42,42,,,42,42,42,42,42,42,42,,,,,,,,,',
',,132,132,,,132,132,132,132,132,,132,,,,132,132,,,,132,,132,132,132',
'132,132,132,132,,,,,,132,132,132,132,132,132,132,,,,,132,132,132,132',
'132,132,132,132,132,,132,132,,132,132,132,47,47,,,132,,132,132,,132',
'132,,,132,132,132,132,132,132,132,,,,,,,,,,,,47,47,,,47,47,47,47,47',
',47,,,,47,47,,,,47,,47,47,47,47,47,47,47,,,,,,47,47,47,47,47,47,47,',
',,,47,47,47,47,47,47,47,47,47,,47,47,,47,47,47,48,48,,,47,,47,47,,47',
'47,,,47,47,47,47,47,47,47,,,,,,,,,,,,48,48,,,48,48,48,48,48,,48,,,,48',
'48,,,,48,,48,48,48,48,48,48,48,,,,,,48,48,48,48,48,48,48,,,,,48,48,48',
'48,48,48,48,48,48,48,48,48,,48,48,48,51,51,,,48,,48,48,,48,48,48,48',
'48,48,48,48,48,48,48,,,,,,,,,,,,51,51,,,51,51,51,51,51,,51,,,,51,51',
',,,51,,51,51,51,51,51,51,51,,,,,,51,51,51,51,51,51,51,,,,,51,51,51,51',
'51,51,51,51,51,,51,51,,51,51,51,292,292,,,51,,51,51,,51,51,,,51,51,51',
'51,51,51,51,,,,,,,,,,,,292,292,,292,292,292,292,292,292,,292,,,,292',
'292,,,,292,,292,292,292,292,292,292,292,,,,,,292,292,292,292,292,292',
'292,,,,,292,292,292,292,292,292,292,292,292,,292,292,,292,292,292,13',
'13,,,292,,292,292,,292,292,,,292,292,292,292,292,292,292,,,,,,,,,,,',
'13,13,,13,13,13,13,13,13,13,13,,,,13,13,,,,13,,13,13,13,13,13,13,13',
',,,,,13,13,13,13,13,13,13,13,,,13,13,13,13,13,13,13,13,13,13,,13,13',
',13,13,13,545,545,,,13,,13,13,,13,13,13,,13,13,13,13,13,13,13,,,,,,',
',,,,,545,545,,,545,545,545,545,545,,545,,,,545,545,,,,545,,545,545,545',
'545,545,545,545,,,,,,545,545,545,545,545,545,545,,,,,545,545,545,545',
'545,545,545,545,545,,545,545,,545,545,545,718,718,,,545,,545,545,,545',
'545,,,545,545,545,545,545,545,545,,,,,,,,,,,,718,718,,,718,718,718,718',
'718,,718,,,,718,718,,,,718,,718,718,718,718,718,718,718,,,,,,718,718',
'718,718,718,718,718,,,,,718,718,718,718,718,718,718,718,718,,718,718',
',718,718,718,594,594,,,718,,718,718,,718,718,,,718,718,718,718,718,718',
'718,,,,,,,,,,,,594,594,,,594,594,594,594,594,,594,,,,594,594,,,,594',
',594,594,594,594,594,594,594,,,,,,594,594,594,594,594,594,594,,,,,594',
'594,594,594,594,594,594,594,594,594,594,594,,594,594,594,133,133,,,594',
',594,594,,594,594,594,594,594,594,594,594,594,594,594,,,,,,,,,,,,133',
'133,,,133,133,133,133,133,,133,,,,133,133,,,,133,,133,133,133,133,133',
'133,133,,,,,,133,133,133,133,133,133,133,,,,,133,133,133,133,133,133',
'133,133,133,,133,133,,133,133,133,719,719,,,133,,133,133,,133,133,,',
'133,133,133,133,133,133,133,,,,,,,,,,,,719,719,,,719,719,719,719,719',
',719,,,,719,719,,,,719,,719,719,719,719,719,719,719,,,,,,719,719,719',
'719,719,719,719,,,,,719,719,719,719,719,719,719,719,719,,719,719,,719',
'719,719,300,300,,,719,,719,719,,719,719,719,,719,719,719,719,719,719',
'719,,,,,,,,,,,,300,300,,300,300,300,300,300,300,300,300,,,,300,300,',
',,300,,300,300,300,300,300,300,300,,,,,,300,300,300,300,300,300,300',
'300,,,300,300,300,300,300,300,300,300,300,300,,300,300,,300,300,300',
'799,799,,,300,,300,300,,300,300,300,,300,300,300,300,300,300,300,,,',
',,,,,,,,799,,,,,,799,799,799,,799,,,,799,799,,,,799,,799,799,799,799',
'799,799,799,,,,,,799,799,799,799,799,799,799,,,,,799,799,799,799,799',
'799,799,799,799,,799,799,,799,799,799,58,58,,,799,,799,799,,799,799',
',,799,799,799,799,799,799,799,,,,,,,,,,,,58,58,,,58,58,58,58,58,,58',
',,,58,58,,,,58,,58,58,58,58,58,58,58,,,,,,58,58,58,58,58,58,58,,,,,58',
'58,58,58,58,58,58,58,58,58,58,58,,58,58,58,797,797,,,58,,58,58,,58,58',
'58,58,58,58,58,58,58,58,58,,,,,,,,,,,,797,797,,,797,797,797,797,797',
',797,,,,797,797,,,,797,,797,797,797,797,797,797,797,,,,,,797,797,797',
'797,797,797,797,,,,,797,797,797,797,797,797,797,797,797,,797,797,,797',
'797,797,912,912,,,797,,797,797,,797,797,,,797,797,797,797,797,797,797',
',,,,,,,,,,,912,912,,,912,912,912,912,912,,912,,,,912,912,,,,912,,912',
'912,912,912,912,912,912,,,,,,912,912,912,912,912,912,912,,,,,912,912',
'912,912,912,912,912,912,912,912,912,912,,912,912,912,731,731,,,912,',
'912,912,,912,912,912,912,912,912,912,912,912,912,912,,,,,,,,,,,,731',
'731,,,731,731,731,731,731,,731,,,,731,731,,,,731,,731,731,731,731,731',
'731,731,,,,,,731,731,731,731,731,731,731,,,,,731,731,731,731,731,731',
'731,731,731,,731,731,,731,731,731,821,821,,,731,,731,731,,731,731,,',
'731,731,731,731,731,731,731,,,,,,,,,,,,821,821,,,821,821,821,821,821',
',821,,,,821,821,,,,821,,821,821,821,821,821,821,821,,,,,,821,821,821',
'821,821,821,821,,,,,821,821,821,821,821,821,821,821,821,,821,821,,821',
'821,821,134,134,,,821,,821,821,,821,821,,,821,821,821,821,821,821,821',
',,,,,,,,,,,134,134,,,134,134,134,134,134,,134,,,,134,134,,,,134,,134',
'134,134,134,134,134,134,,,,,,134,134,134,134,134,134,134,,,,,134,134',
'134,134,134,134,134,134,134,,134,134,,134,134,134,521,521,,,134,,134',
'134,,134,134,,,134,134,134,134,134,134,134,,,,,,,,,,,,521,521,,,521',
'521,521,521,521,,521,,,,521,521,,,,521,,521,521,521,521,521,521,521',
',,,,,521,521,521,521,521,521,521,,,,,521,521,521,521,521,521,521,521',
'521,,521,521,,521,521,521,833,833,,,521,,521,521,,521,521,521,,521,521',
'521,521,521,521,521,,,,,,,,,,,,833,833,,,833,833,833,833,833,,833,,',
',833,833,,,,833,,833,833,833,833,833,833,833,,,,,,833,833,833,833,833',
'833,833,,,,,833,833,833,833,833,833,833,833,833,,833,833,,833,833,833',
'599,599,,,833,,833,833,,833,833,,,833,833,833,833,833,833,833,,,,,,',
',,,,,599,,,,,,599,599,599,,599,,,,599,599,,,,599,,599,599,599,599,599',
'599,599,,,,,,599,599,599,599,599,599,599,,,,,599,599,599,599,599,599',
'599,599,599,,599,599,,599,599,599,842,842,,,599,,599,599,,599,599,,',
'599,599,599,599,599,599,599,,,,,,,,,,,,842,842,,842,842,842,842,842',
'842,,842,,,,842,842,,,,842,,842,842,842,842,842,842,842,,,,,,842,842',
'842,842,842,842,842,,,,,842,842,842,842,842,842,842,842,842,,842,842',
',842,842,842,11,11,,,842,,842,842,,842,842,,,842,842,842,842,842,842',
'842,,,,,,,,,,,,11,,,,,,11,11,11,,11,,,,11,11,,,,11,,11,11,11,11,11,11',
'11,,,,,,11,11,11,11,11,11,11,,,,,11,11,11,11,11,11,11,11,11,,11,11,',
'11,11,11,320,320,,,11,,11,11,,11,11,11,,11,11,11,11,11,11,11,,,,,,,',
',,,,320,320,,,320,320,320,320,320,,320,,,,320,320,,,,320,,320,320,320',
'320,320,320,320,,,,,,320,320,320,320,320,320,320,,,,,320,320,320,320',
'320,320,320,320,320,,320,320,,320,320,320,321,321,,,320,,320,320,,320',
'320,320,,320,320,320,320,320,320,320,,,,,,,,,,,,321,321,,321,321,321',
'321,321,321,,321,,,,321,321,,,,321,,321,321,321,321,321,321,321,,,,',
',321,321,321,321,321,321,321,,,,,321,321,321,321,321,321,321,321,321',
',321,321,,321,321,321,505,505,,,321,,321,321,,321,321,,,321,321,321',
'321,321,321,321,,,,,,,,,,,,505,505,,,505,505,505,505,505,,505,,,,505',
'505,,,,505,,505,505,505,505,505,505,505,,,,,,505,505,505,505,505,505',
'505,,,,,505,505,505,505,505,505,505,505,505,505,505,505,,505,505,505',
'609,609,,,505,,505,505,,505,505,505,505,505,505,505,505,505,505,505',
',,,,,,,,,,,609,609,,,609,609,609,609,609,,609,,,,609,609,,,,609,,609',
'609,609,609,609,609,609,,,,,,609,609,609,609,609,609,609,,,,,609,609',
'609,609,609,609,609,609,609,609,609,609,,609,609,609,500,500,,,609,',
'609,609,,609,609,609,,609,609,609,609,609,609,609,,,,,,,,,,,,500,500',
',500,500,500,500,500,500,,500,,,,500,500,,,,500,,500,500,500,500,500',
'500,500,,,,,,500,500,500,500,500,500,500,,,,,500,500,500,500,500,500',
'500,500,500,,500,500,,500,500,500,496,496,,,500,,500,500,,500,500,,',
'500,500,500,500,500,500,500,,,,,,,,,,,,496,496,,,496,496,496,496,496',
',496,,,,496,496,,,,496,,496,496,496,496,496,496,496,,,,,,496,496,496',
'496,496,496,496,,,,,496,496,496,496,496,496,496,496,496,,496,496,,496',
'496,496,495,495,,,496,,496,496,,496,496,,,496,496,496,496,496,496,496',
',,,,,,,,,,,495,495,,,495,495,495,495,495,,495,,,,495,495,,,,495,,495',
'495,495,495,495,495,495,,,,,,495,495,495,495,495,495,495,,,,,495,495',
'495,495,495,495,495,495,495,,495,495,,495,495,495,73,73,,,495,,495,495',
',495,495,,,495,495,495,495,495,495,495,,,,,,,,,,,,73,73,,73,73,73,73',
'73,73,,73,,,,73,73,,,,73,,73,73,73,73,73,73,73,,,,,,73,73,73,73,73,73',
'73,,,,,73,73,73,73,73,73,73,73,73,,73,73,,73,73,73,77,77,,,73,,73,73',
',73,73,,,73,73,73,73,73,73,73,,,,,,,,,,,,77,77,,77,77,77,77,77,77,,77',
',,,77,77,,,,77,,77,77,77,77,77,77,77,,,,,,77,77,77,77,77,77,77,,,,,77',
'77,77,77,77,77,77,77,77,,77,77,,77,77,77,82,82,,,77,,77,77,,77,77,,',
'77,77,77,77,77,77,77,,,,,,,,,,,,82,,,,,,82,82,82,,82,,,,82,82,,,,82',
',82,82,82,82,82,82,82,,,,,,82,82,82,82,82,82,82,,,,,82,82,82,82,82,82',
'82,82,82,,82,82,,82,82,82,734,734,,,82,,82,82,,82,82,82,,82,82,82,82',
'82,82,82,,,,,,,,,,,,734,734,,,734,734,734,734,734,,734,,,,734,734,,',
',734,,734,734,734,734,734,734,734,,,,,,734,734,734,734,734,734,734,',
',,,734,734,734,734,734,734,734,734,734,,734,734,,734,734,734,611,611',
',,734,,734,734,,734,734,,,734,734,734,734,734,734,734,,,,,,,,,,,,611',
'611,,,611,611,611,611,611,,611,,,,611,611,,,,611,,611,611,611,611,611',
'611,611,,,,,,611,611,611,611,611,611,611,,,,,611,611,611,611,611,611',
'611,611,611,611,611,611,,611,611,611,458,458,,,611,,611,611,,611,611',
',,611,611,611,611,611,611,611,,,,,,,,,,,,458,458,,,458,458,458,458,458',
',458,,,,458,458,,,,458,,458,458,458,458,458,458,458,,,,,,458,458,458',
'458,458,458,458,,,,,458,458,458,458,458,458,458,458,458,458,458,458',
',458,458,458,853,853,,,458,,458,458,,458,458,458,458,458,458,458,458',
'458,458,458,,,,,,,,,,,,853,853,,,853,853,853,853,853,,853,,,,853,853',
',,,853,,853,853,853,853,853,853,853,,,,,,853,853,853,853,853,853,853',
',,,,853,853,853,853,853,853,853,853,853,,853,853,,853,853,853,453,453',
',,853,,853,853,,853,853,853,,853,853,853,853,853,853,853,,,,,,,,,,,',
'453,453,,453,453,453,453,453,453,,453,,,,453,453,,,,453,,453,453,453',
'453,453,453,453,,,,,,453,453,453,453,453,453,453,,,,,453,453,453,453',
'453,453,453,453,453,,453,453,,453,453,453,84,84,,,453,,453,453,,453',
'453,,,453,453,453,453,453,453,453,,,,,,,,,,,,84,84,,84,84,84,84,84,84',
',84,,,,84,84,,,,84,,84,84,84,84,84,84,84,,,,,,84,84,84,84,84,84,84,',
',,,84,84,84,84,84,84,84,84,84,,84,84,,84,84,84,737,737,,,84,,84,84,',
'84,84,,,84,84,84,84,84,84,84,,,,,,,,,,,,737,737,,,737,737,737,737,737',
',737,,,,737,737,,,,737,,737,737,737,737,737,737,737,,,,,,737,737,737',
'737,737,737,737,,,,,737,737,737,737,737,737,737,737,737,,737,737,,737',
'737,737,740,740,,,737,,737,737,,737,737,,,737,737,737,737,737,737,737',
',,,,,,,,,,,740,740,,,740,740,740,740,740,,740,,,,740,740,,,,740,,740',
'740,740,740,740,740,740,,,,,,740,740,740,740,740,740,740,,,,,740,740',
'740,740,740,740,740,740,740,,740,740,,740,740,740,341,341,,,740,,740',
'740,,740,740,,,740,740,740,740,740,740,740,,,,,,,,,,,,341,341,,,341',
'341,341,341,341,,341,,,,341,341,,,,341,,341,341,341,341,341,341,341',
',,,,,341,341,341,341,341,341,341,,,,,341,341,341,341,341,341,341,341',
'341,,341,341,,341,341,341,89,89,,,341,,341,341,,341,341,341,,341,341',
'341,341,341,341,341,,,,,,,,,,,,89,89,,89,89,89,89,89,89,,89,,,,89,89',
',,,89,,89,89,89,89,89,89,89,,,,,,89,89,89,89,89,89,89,,,,,89,89,89,89',
'89,89,89,89,89,,89,89,,89,89,89,345,345,,,89,,89,89,,89,89,,,89,89,89',
'89,89,89,89,,,,,,,,,,,,345,345,,345,345,345,345,345,345,,345,,,,345',
'345,,,,345,,345,345,345,345,345,345,345,,,,,,345,345,345,345,345,345',
'345,,,,,345,345,345,345,345,345,345,345,345,,345,345,,345,345,345,813',
'813,,,345,,345,345,,345,345,,,345,345,345,345,345,345,345,,,,,,,,,,',
',813,,,,,,813,813,813,,813,,,,813,813,,,,813,,813,813,813,813,813,813',
'813,,,,,,813,813,813,813,813,813,813,,,,,813,813,813,813,813,813,813',
'813,813,,813,813,,813,813,813,90,90,,,813,,813,813,,813,813,,,813,813',
'813,813,813,813,813,,,,,,,,,,,,90,90,,,90,90,90,90,90,,90,,,,90,90,',
',,90,,90,90,90,90,90,90,90,,,,,,90,90,90,90,90,90,90,,,,,90,90,90,90',
'90,90,90,90,90,90,90,90,,90,90,90,743,743,,,90,,90,90,,90,90,90,,90',
'90,90,90,90,90,90,,,,,,,,,,,,743,743,,,743,743,743,743,743,,743,,,,743',
'743,,,,743,,743,743,743,743,743,743,743,,,,,,743,743,743,743,743,743',
'743,,,,,743,743,743,743,743,743,743,743,743,,743,743,,743,743,743,854',
'854,,,743,,743,743,,743,743,,,743,743,743,743,743,743,743,,,,,,,,,,',
',854,854,,,854,854,854,854,854,,854,,,,854,854,,,,854,,854,854,854,854',
'854,854,854,,,,,,854,854,854,854,854,854,854,,,,,854,854,854,854,854',
'854,854,854,854,,854,854,,854,854,854,352,352,,,854,,854,854,,854,854',
',,854,854,854,854,854,854,854,,,,,,,,,,,,352,352,,,352,352,352,352,352',
',352,,,,352,352,,,,352,,352,352,352,352,352,352,352,,,,,,352,352,352',
'352,352,352,352,,,,,352,352,352,352,352,352,352,352,352,352,352,352',
',352,352,352,425,425,,,352,,352,352,,352,352,352,352,352,352,352,352',
'352,352,352,,,,,,,,,,,,425,425,,,425,425,425,425,425,,425,,,,425,425',
',,,425,,425,425,425,425,425,425,425,,,,,,425,425,425,425,425,425,425',
',,,,425,425,425,425,425,425,425,425,425,,425,425,,425,425,425,421,421',
',,425,,425,425,,425,425,,,425,425,425,425,425,425,425,,,,,,,,,,,,421',
'421,,,421,421,421,421,421,,421,,,,421,421,,,,421,,421,421,421,421,421',
'421,421,,,,,,421,421,421,421,421,421,421,,,,,421,421,421,421,421,421',
'421,421,421,,421,421,,421,421,421,420,420,,,421,,421,421,,421,421,,',
'421,421,421,421,421,421,421,,,,,,,,,,,,420,420,,,420,420,420,420,420',
',420,,,,420,420,,,,420,,420,420,420,420,420,420,420,,,,,,420,420,420',
'420,420,420,420,,,,,420,420,420,420,420,420,420,420,420,,420,420,,420',
'420,420,419,419,,,420,,420,420,,420,420,,,420,420,420,420,420,420,420',
',,,,,,,,,,,419,419,,,419,419,419,419,419,,419,,,,419,419,,,,419,,419',
'419,419,419,419,419,419,,,,,,419,419,419,419,419,419,419,,,,,419,419',
'419,419,419,419,419,419,419,419,419,419,,419,419,419,622,622,,,419,',
'419,419,,419,419,,419,419,419,419,419,419,419,419,,,,,,,,,,,,622,,,',
',,622,622,622,,622,,,,622,622,,,,622,,622,622,622,622,622,622,622,,',
',,,622,622,622,622,622,622,622,,,,,622,622,622,622,622,622,622,622,622',
',622,622,,622,622,622,416,416,,,622,,622,622,,622,622,,,622,622,622',
'622,622,622,622,,,,,,,,,,,,416,416,,,416,416,416,416,416,,416,,,,416',
'416,,,,416,,416,416,416,416,416,416,416,,,,,,416,416,416,416,416,416',
'416,,,,,416,416,416,416,416,416,416,416,416,416,416,416,,416,416,416',
'628,628,,,416,,416,416,,416,416,416,416,416,416,416,416,416,416,416',
',,,,,,,,,,,628,628,,,628,628,628,628,628,,628,,,,628,628,,,,628,,628',
'628,628,628,628,628,628,,,,,,628,628,628,628,628,628,628,,,,,628,628',
'628,628,628,628,628,628,628,,628,628,,628,628,628,414,414,,,628,,628',
'628,,628,628,628,,628,628,628,628,628,628,628,,,,,,,,,,,,414,414,,,414',
'414,414,414,414,,414,,,,414,414,,,,414,,414,414,414,414,414,414,414',
',,,,,414,414,414,414,414,414,414,,,,,414,414,414,414,414,414,414,414',
'414,414,414,414,,414,414,414,410,410,,,414,,414,414,,414,414,414,414',
'414,414,414,414,414,414,414,,,,,,,,,,,,410,410,,,410,410,410,410,410',
',410,,,,410,410,,,,410,,410,410,410,410,410,410,410,,,,,,410,410,410',
'410,410,410,410,,,,,410,410,410,410,410,410,410,410,410,,410,410,,410',
'410,410,772,772,,,410,,410,410,,410,410,,,410,410,410,410,410,410,410',
',,,,,,,,,,,772,772,,,772,772,772,772,772,,772,,,,772,772,,,,772,,772',
'772,772,772,772,772,772,,,,,,772,772,772,772,772,772,772,,,,,772,772',
'772,772,772,772,772,772,772,,772,772,,772,772,772,110,110,,,772,,772',
'772,,772,772,,,772,772,772,772,772,772,772,,,,,,,,,,,,110,110,,,110',
'110,110,110,110,,110,,,,110,110,,,,110,,110,110,110,110,110,110,110',
',,,,,110,110,110,110,110,110,110,,,,,110,110,110,110,110,110,110,110',
'110,110,110,110,,110,110,110,771,771,,,110,,110,110,,110,110,110,110',
'110,110,110,110,110,110,110,,,,,,,,,,,,771,771,,,771,771,771,771,771',
',771,,,,771,771,,,,771,,771,771,771,771,771,771,771,,,,,,771,771,771',
'771,771,771,771,,,,,771,771,771,771,771,771,771,771,771,,771,771,,771',
'771,771,409,409,,,771,,771,771,,771,771,,,771,771,771,771,771,771,771',
',,,,,,,,,,,409,409,,,409,409,409,409,409,,409,,,,409,409,,,,409,,409',
'409,409,409,409,409,409,,,,,,409,409,409,409,409,409,409,,,,,409,409',
'409,409,409,409,409,409,409,,409,409,,409,409,409,94,94,,,409,,409,409',
',409,409,,,409,409,409,409,409,409,409,,,,,,,,,,,,94,94,,,94,94,94,94',
'94,,94,,,,94,94,,,,94,,94,94,94,94,94,94,94,,,,,,94,94,94,94,94,94,94',
',,,,94,94,94,94,94,94,94,94,94,94,94,94,,94,94,94,100,100,,,94,,94,94',
',94,94,,,94,94,94,94,94,94,94,,,,,,,,,,,,100,100,,,100,100,100,100,100',
',100,,,,100,100,,,,100,,100,100,100,100,100,100,100,,,,,,100,100,100',
'100,100,100,100,,,,,100,100,100,100,100,100,100,100,100,100,100,100',
',100,100,100,769,769,,,100,,100,100,,100,100,100,100,100,100,100,100',
'100,100,100,,,,,,,,,,,,769,769,,,769,769,769,769,769,,769,,,,769,769',
',,,769,,769,769,769,769,769,769,769,,,,,,769,769,769,769,769,769,769',
',,,,769,769,769,769,769,769,769,769,769,,769,769,,769,769,769,635,635',
',,769,,769,769,,769,769,,,769,769,769,769,769,769,769,,,,,,,,,,,,635',
'635,,,635,635,635,635,635,,635,,,,635,635,,,,635,,635,635,635,635,635',
'635,635,,,,,,635,635,635,635,635,635,635,,,,,635,635,635,635,635,635',
'635,635,635,,635,635,,635,635,635,101,101,,,635,,635,635,,635,635,,',
'635,635,635,635,635,635,635,,,,,,,,,,,,101,101,,101,101,101,101,101',
'101,,101,,,,101,101,,,,101,,101,101,101,101,101,101,101,,,,,,101,101',
'101,101,101,101,101,,,,,101,101,101,101,101,101,101,101,101,,101,101',
',101,101,101,399,399,,,101,,101,101,,101,101,,,101,101,101,101,101,101',
'101,,,,,,,,,,,,399,,,,,,399,399,399,,399,,,,399,399,,,,399,,399,399',
'399,399,399,399,399,,,,,,399,399,399,399,399,399,399,,,,,399,399,399',
'399,399,399,399,399,399,,399,399,,399,399,399,377,377,,,399,,399,399',
',399,399,,,399,399,399,399,399,399,399,,,,,,,,,,,,377,377,,,377,377',
'377,377,377,,377,,,,377,377,,,,377,,377,377,377,377,377,377,377,,,,',
',377,377,377,377,377,377,377,,,,,377,377,377,377,377,377,377,377,377',
',377,377,,377,377,377,755,755,,,377,,377,377,,377,377,,,377,377,377',
'377,377,377,377,,,,,,,,,,,,755,,,,,,755,755,755,,755,,,,755,755,,,,755',
',755,755,755,755,755,755,755,,,,,,755,755,755,755,755,755,755,,,,,755',
'755,755,755,755,755,755,755,755,,755,755,,755,755,755,397,397,,,755',
',755,755,,755,755,,,755,755,755,755,755,755,755,,,,,,,,,,,,397,397,',
'397,397,397,397,397,397,,397,,,,397,397,,,,397,,397,397,397,397,397',
'397,397,,,,,,397,397,397,397,397,397,397,,,,,397,397,397,397,397,397',
'397,397,397,,397,397,,397,397,397,396,396,,,397,,397,397,,397,397,,',
'397,397,397,397,397,397,397,,,,,,,,,,,,396,396,,396,396,396,396,396',
'396,,396,,,,396,396,,,,396,,396,396,396,396,396,396,396,,,,,,396,396',
'396,396,396,396,396,,,,,396,396,396,396,396,396,396,396,396,,396,396',
',396,396,396,762,762,,,396,,396,396,,396,396,,,396,396,396,396,396,396',
'396,,,,,,,,,,,,762,,,,,,762,762,762,,762,,,,762,762,,,,762,,762,762',
'762,762,762,762,762,,,,,,762,762,762,762,762,762,762,,,,,762,762,762',
'762,762,762,762,762,762,,762,762,,762,762,762,385,385,,,762,,762,762',
',762,762,,,762,762,762,762,762,762,762,,,,,,,,,,,,385,385,,385,385,385',
'385,385,385,385,385,,,,385,385,,,,385,,385,385,385,385,385,385,385,',
',,,,385,385,385,385,385,385,385,385,,,385,385,385,385,385,385,385,385',
'385,385,,385,385,,385,385,385,386,386,,,385,,385,385,,385,385,385,,385',
'385,385,385,385,385,385,,,,,,,,,,,,386,386,,386,386,386,386,386,386',
',386,,,,386,386,,,,386,,386,386,386,386,386,386,386,,,,,,386,386,386',
'386,386,386,386,,,,,386,386,386,386,386,386,386,386,386,,386,386,,386',
'386,386,387,387,,,386,,386,386,,386,386,,,386,386,386,386,386,386,386',
',,,,,,,,,,,387,387,,387,387,387,387,387,387,,387,,,,387,387,,,,387,',
'387,387,387,387,387,387,387,,,,,,387,387,387,387,387,387,387,,,,,387',
'387,387,387,387,387,387,387,387,,387,387,,387,387,387,388,388,,,387',
',387,387,,387,387,,,387,387,387,387,387,387,387,,,,,,,,,,,,388,388,',
'388,388,388,388,388,388,,388,,,,388,388,,,,388,,388,388,388,388,388',
'388,388,,,,,,388,388,388,388,388,388,388,,,,,388,388,388,388,388,388',
'388,388,388,,388,388,,388,388,388,267,267,,,388,,388,388,,388,388,,',
'388,388,388,388,388,388,388,,,,,,,,,,,,267,267,,,267,267,267,267,267',
',267,,,,267,267,,,,267,,267,267,267,267,267,267,267,,,,,,267,267,267',
'267,267,267,267,,,,,267,267,267,267,267,267,267,267,267,,267,267,725',
'267,267,267,,725,,802,267,,267,267,802,267,267,,,267,267,267,267,267',
'267,267,,,,,,,,,,547,,,,,547,,,,,,903,,,,,903,,,,,,725,,725,725,725',
'725,725,802,,802,802,802,802,802,,804,,,,725,804,,447,,725,725,802,447',
',,,802,802,547,,547,547,547,547,547,,,,,903,725,903,903,903,903,903',
'434,547,,,,434,547,547,140,,,,903,140,,,,903,903,804,,804,804,804,804',
'804,447,,447,447,447,447,447,,783,,,,804,783,,,,804,804,447,,,,,447',
'447,,,,434,,434,434,434,434,434,,140,,140,140,140,140,140,,,,,434,,',
',,434,434,,140,,,,,140,140,783,,783,783,783,783,783,,,,,,,,,,,,,783',
',,,,783,783,688,,688,688,688,688,688,688,688,688,688,688,688,688,688',
'688,688,688,688,688,688,688,688,688,688,688,,337,688,337,337,337,337',
'337,337,337,337,337,337,337,337,337,337,337,337,337,337,337,337,337',
'337,337,337,,687,337,687,687,687,687,687,687,687,687,687,687,687,687',
'687,687,687,687,687,687,687,687,687,687,687,687,,334,687,334,334,334',
'334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334',
'334,334,334,334,,12,334,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12',
'12,12,12,12,12,12,12,12,12,,111,12,111,111,111,111,111,111,111,111,111',
'111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,,486,111',
'486,486,486,486,486,486,486,486,486,486,486,486,486,486,486,486,486',
'486,486,486,486,486,486,486,,296,486,296,296,296,296,296,296,296,296',
'296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,475',
',475,475,475,475,475,475,475,475,475,475,475,475,475,475,475,475,475',
'475,475,475,475,478,,478,478,478,478,478,478,478,478,478,478,478,478',
'478,478,478,478,478,478,478,478,478,473,,473,473,473,473,473,473,473',
'473,473,473,473,473,473,473,473,473,473,473,473,473,473' ]
        racc_action_check = arr = Array.new(17875, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
   nil,  5763,  1418,   nil,   nil,  1861,   282,   nil,   nil,   nil,
  1345, 12268, 17684, 10630,   nil,   nil,   nil,  1345,   nil,   nil,
   nil,   nil,   nil,   nil,   548,   nil,  9720,   nil,   nil,   nil,
  9811,   nil,   nil,  1227,   nil,  4368,  1233,   -27,  1225,   nil,
   nil,  9902, 10084,   nil,   nil,  1349,   896, 10266, 10357,  1223,
   nil, 10448,   377,   nil,   nil,   nil,   -19,  1334, 11358,   nil,
   nil,   nil,    83,  1331,  1250,  2419,   nil,   nil,   nil,   578,
   nil,   409,  1178, 12996,  2791,  3159,  1457, 13087,    11,   nil,
   137,   nil, 13178,   nil, 13724,    52,   nil,   nil,  1184, 14088,
 14361,  2605,  1190,  1333, 15908,   nil,   nil,   nil,   nil,   nil,
 15999, 16272,   524,  2975,   nil,   nil,  2326,   585,    69,  1274,
 15635, 17711,   nil,   nil,  1240,   nil,   nil,   nil,  1116,  1233,
  1148,  1107,   876,  5112,  1106,   nil,   nil,   nil,    67,   nil,
  1097,   nil, 10175, 10994, 11813,   213,   nil,   nil,    29,   nil,
 17451,   -26,  1050,   nil,   nil,  1006,  1048,   nil,   nil,   nil,
   nil,  1002,   nil,   nil,  1032,   nil,  1138,   nil,   987,   nil,
   nil,   780,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   960,  1022,   401,   nil,   nil,   nil,   988,   -10,   590,   889,
     2,   889,   -19,  7354,  7445,  7536,  7627,  7718,  7809,  7900,
  7991,  8082,  8173,  8264,  8355,  8446,  8537, 17273,  8719,  8810,
  8901,  8992,  9083,  9174,  9265,  9356,  9447,  9538,  9629,   nil,
   372,   nil,   360,   -21,   958,   957,   nil,    43,   296,   886,
   782,   nil, 10539,  2975,   nil,   148, 17765,   865,   881,   874,
 11176,   499,   nil,  1109,   925,   916,   nil,   nil,   nil,   nil,
   nil,   -12,  7001,  7113,   814,   377,  5298,   nil,   822,   538,
 12359, 12450,   -31,  7079,   132,   129,   nil,   126,   414,   405,
   -12,   277,   294,   394, 17657,   nil,  5205, 17603,   366,   361,
   nil, 13997,   nil,   372,   nil, 14179,  7172,    73,   907,   nil,
   nil,  6141, 14634,  5863,   nil,   nil,   nil,   780,   nil,  2512,
   183,   612,   881,  4554,   751,   750,   nil,   751,    54,   789,
   733,  4461,   704,   722,  3066,   680,    65, 16454,   nil,   -25,
   716,   -36,   126,   nil,   nil, 16909, 17000, 17091, 17182,  8628,
   721,    86,   nil,   714,   nil,   -29, 16727, 16636,   669, 16363,
   474,   nil,   390,   732,   652,   nil,   nil,   643,   nil, 15817,
 15453,   645,   nil,   nil, 15362,  6002, 15180,  6028,   nil, 14998,
 14907, 14816,   nil,   nil,   nil, 14725,   642,   582,   nil,  3624,
  3531,   nil,   nil,   nil, 17443,   nil,   nil,  2085,   nil,   606,
   560,   525,   nil,  1012,   nil,   551,   nil, 17414,  3438,  1035,
   nil,   nil,   nil, 13633,   nil,   nil,   154,  6167, 13451,  6280,
   536,  2432,  6541,  6263,  2618,  6402,  2804,  3265,  6124,   328,
  1668,  5985,  3358, 17837,  3544, 17791,   593,  3730, 17814,    79,
   426,  3637,   323,  6819,  3451,  6680, 17738,   nil,   nil,   nil,
  3252,   nil,   nil,  7072,   nil, 12905, 12814,   337,  3717,   nil,
 12723,   nil,   nil,   493,  6306, 12541,  6419,    61,   nil,  6975,
  6558,   nil,   -31,   nil,   nil,  1327,   nil,   687,   nil,   nil,
   nil, 11904,   596,  1569,   nil,   nil,   nil,   nil,   nil,  2140,
   nil,   nil,  2047,   nil,   nil,   477,   529,   nil,  6836,  6445,
   444,   nil,   440,   nil,   nil, 10721,    47, 17370,   295,  3810,
   nil,  1009,   nil,   418,  4089,  4182,   nil,   nil,   377,   369,
   nil,    40,   748,   nil,   nil,  9993,   nil,   368,   274,  1954,
  2233,     0,   nil,   nil,  2884,   307,    62,  2698,    71,   nil,
   nil,   nil,  7263,   nil,  4647,   nil,   333,   248,   122,   nil,
  1121,   nil,   640,  6723, 10903,  6862,    50,   nil,    -7, 12086,
  4740,   nil,   nil,   nil,   nil,  5019,   nil,   nil,   nil, 12632,
   nil, 13360,   507,   nil,   nil,   nil,   nil,   nil,   nil,  5484,
   nil,   nil, 15089,   nil,  1074,   316,   nil,   497, 15271,   820,
   nil,   nil,   860,   nil,  1280, 16181,  1657,  1768,  1278,   747,
   697,   nil,   nil,   nil,   nil,   nil,   634,  1179,  1177,  1197,
  1081,   nil,  1062,   nil,   951,  1127,   777,  1362,   658,   nil,
   nil,   617,   608,   538,   nil,   nil,   nil,   nil,   nil,   116,
   191,   289,   115,   -28,   159,    -6,   -12,   204,   180,    33,
   nil,   127,   146,   153,   238,   nil,   346, 17630, 17576,   nil,
   339,   187,   584,   nil,   102,   340,  4275,   nil,   nil,  1103,
   411,   nil,   nil,   396,   nil,  3903,   502,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   473,   -15, 10812, 11085,
   467,   nil,   463,   nil,   553, 17337,   nil,   574,   518,   nil,
   nil, 11631,   nil,  3345, 13269,   676,   nil, 13815,    55,   571,
 13906,   713,   nil, 14452,    -6,   628,   nil,   -11,   nil,   372,
   296,   651,    81,   113,   nil, 16545,   680,   753,   760,    80,
   785,   710, 16818,   nil,   796,    91,   nil,   nil,   nil, 16090,
   626, 15726, 15544,   nil,   nil,   752,   nil,   nil,   nil,   nil,
   nil,  1705,   nil, 17477,   nil,  1694,   919,   nil,  1572,   782,
   nil,   nil,   nil,   725,   nil,  5391,   145, 11449,   nil, 11267,
   965,   nil, 17344,   nil, 17407,   nil,  1992,   nil,   nil,   nil,
   nil,   960,   nil, 14270,   180,   nil,   nil,   nil,  5577,   nil,
   950, 11722,   nil,   nil,  5670,   nil,   nil,   nil,   964,   nil,
   nil,   nil,   nil, 11995,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,  1045, 12177,   nil,   326,   991,  1073,   nil,   nil,   nil,
   nil,   nil,  4926, 13542, 14543,   933,  1008,  1009,  1031,  1061,
  1351,  1063,  1460,  1073,   -44,  1196,   611,   nil,  1083,  1085,
   nil,  1091,  1094,  1096,   nil,   nil,  1143,   863,   495,   427,
  4833,   nil,  1116,  1194,   nil,   nil,   nil,   nil,    69,   nil,
   517,   nil,   nil,   nil,   nil,   nil,  1806,  1236,  1173,   nil,
   nil,  5889,   nil, 17381,   nil,  2178,   nil,   nil,  1899,   nil,
   476,  6584, 11540,  6697,  1297,   nil,  3996,   nil,   nil,   nil,
  1220,  1221,  1226,  1227,  1228,  1229,   273,   109,  1225,   193,
   198,   nil,   687,   nil,   nil,   nil,  2271,   nil,   nil,   201,
   nil,  1296,   nil ]

racc_action_default = [
    -2,  -532,  -533,    -1,  -432,  -379,  -471,  -260,  -442,  -433,
  -417,  -533,   -46,  -533,  -261,  -441,  -415,   -48,  -262,  -443,
  -417,  -399,  -307,   -49,  -533,  -263,  -533,  -450,  -444,  -417,
  -533,  -264,  -451,  -407,  -305,  -532,  -533,   -53,  -413,  -396,
  -306,  -533,  -533,  -397,  -308,  -533,  -533,  -533,  -297,  -533,
   -41,  -533,  -230,  -446,  -309,    -3,  -282,  -533,  -298,  -445,
  -310,  -299,  -521,  -533,  -533,  -533,  -447,  -311,  -300,  -533,
   -65,  -519,  -521,  -533,  -436,  -532,  -533,  -533,  -302,    -5,
  -509,  -438,   -69,    -6,  -533,  -265,  -437,  -395,  -533,  -533,
  -532,  -439,  -398,    -9,  -532,   -79,  -440,  -400,  -303,  -258,
  -274,  -533,   -40,   -77,  -304,  -259,  -277,  -519,  -448,  -533,
  -532,  -231,  -241,  -246,  -533,   -63,  -297,  -298,  -533,  -533,
  -533,  -532,  -533,  -532,  -532,  -503,  -378,  -302,  -265,  -245,
  -251,  -274,  -533,  -533,  -533,  -448,  -494,  -488,  -477,  -476,
  -471,  -533,  -493,  -491,  -474,  -532,  -533,  -495,  -473,  -365,
  -472,  -532,  -490,  -475,  -533,  -470,  -533,  -480,  -532,  -482,
  -284,  -533,  -177,  -134,  -178,  -136,  -161,  -176,  -427,  -120,
  -137,  -160,  -169,  -109,  -155,  -179,  -121,  -181,  -142,  -110,
  -164,  -122,  -185,  -138,  -151,  -129,  -426,  -186,  -123,  -139,
  -165,  -124,  -143,  -140,  -154,  -171,  -125,  -144,  -141,  -152,
  -146,  -126,  -156,  -168,  -170,  -147,  -127,  -167,  -172,  -148,
  -128,  -157,  -174,  -158,  -180,  -117,  -166,  -106,  -118,  -149,
  -159,  -108,  -429,  -173,  -119,  -428,  -163,  -130,  -150,  -107,
  -131,  -430,  -183,  -175,  -132,  -135,  -184,  -182,  -133,  -145,
  -379,  -533,  -533,  -322,  -301,  -323,  -533,  -533,  -533,  -521,
  -265,  -277,  -448,  -533,  -533,  -533,  -533,  -533,  -533,  -533,
  -533,  -533,  -533,  -533,  -533,  -533,  -533,  -533,  -533,  -533,
  -533,  -533,  -533,  -533,  -533,  -533,  -533,  -533,  -533,    -8,
  -533,  -369,  -532,  -533,  -434,  -435,  -104,  -533,  -533,  -533,
  -101,  -265,  -533,  -102,  -448,  -533,  -209,  -533,  -533,  -533,
  -533,  -519,   -13,   -14,  -533,  -532,  -111,   -17,  -113,  -112,
  -114,  -533,  -533,  -533,  -533,  -533,  -532,   -45,  -533,  -533,
  -533,  -533,  -176,  -471,  -169,  -179,  -499,  -164,  -533,  -146,
  -147,  -148,  -106,  -107,  -223,   -51,  -532,  -208,  -532,  -532,
  -283,  -533,   -52,  -521,  -522,  -533,  -533,  -271,   -57,  -281,
  -372,  -533,  -532,  -533,  -530,    -4,  -528,  -520,  -529,  -533,
  -533,   -47,   -67,  -532,  -521,  -533,  -115,   -22,  -521,  -533,
  -533,  -532,   -92,   -70,   -73,   -85,  -533,  -533,   -81,  -533,
  -533,  -525,  -525,  -232,  -401,  -533,  -533,  -533,  -533,  -533,
  -533,  -525,  -501,  -533,   -50,  -533,  -533,  -533,   -75,  -533,
  -521,   -64,  -519,  -533,  -520,   943,  -240,  -521,  -239,  -533,
  -533,  -271,  -250,  -242,  -249,  -533,  -532,  -533,  -243,  -249,
  -533,  -533,  -252,  -506,  -247,  -533,  -533,  -532,  -363,  -532,
  -532,  -492,  -498,  -463,  -533,  -496,  -468,  -533,  -479,  -477,
  -328,  -335,  -326,  -533,  -324,  -521,  -466,  -533,  -532,  -533,
  -431,  -418,  -419,  -533,  -434,  -435,  -271,  -533,  -532,  -533,
  -533,  -218,  -212,  -224,  -219,  -225,  -220,  -221,  -200,  -521,
  -222,  -201,  -214,  -202,  -215,  -203,  -198,  -216,  -204,  -199,
  -227,  -217,  -226,  -210,  -213,  -211,  -205,  -402,  -416,  -352,
  -532,  -353,  -355,  -532,  -403,  -533,  -533,  -533,  -532,  -452,
  -533,  -101,  -103,  -102,  -533,  -532,  -533,  -533,  -404,  -533,
  -533,  -406,  -533,  -409,  -405,   -16,   -12,  -520,  -267,  -312,
  -387,  -532,  -532,  -533,   -21,   -20,   -19,  -510,  -512,  -532,
  -511,  -513,  -532,  -411,  -412,  -533,  -533,  -271,  -533,  -533,
  -187,   -29,  -533,   -37,  -251,  -533,  -521,  -471,  -533,  -532,
  -518,  -533,  -517,  -533,  -532,  -532,   -30,   -39,   -38,  -533,
  -280,  -521,   -44,  -189,   -31,  -533,   -58,  -532,  -510,  -515,
  -533,  -511,  -377,  -375,  -516,  -521,  -510,  -532,  -511,  -376,
  -531,    -7,  -533,  -228,  -532,  -314,  -313,  -521,   -66,  -269,
  -533,  -268,   -91,  -533,  -532,  -533,  -521,   -82,   -71,  -533,
  -532,  -197,   -36,  -316,  -317,  -532,  -272,  -233,  -526,  -527,
  -235,  -527,   -27,   -23,   -24,   -25,   -26,  -273,  -502,  -532,
   -43,   -42,  -533,   -83,   -78,  -521,  -276,  -533,  -533,  -533,
  -236,  -187,  -532,  -248,  -253,  -533,  -514,  -270,  -521,  -510,
  -511,  -504,  -505,  -484,  -478,  -357,  -533,  -521,  -533,  -533,
  -532,  -497,  -532,  -483,  -532,  -533,  -333,  -533,  -521,  -481,
  -489,  -532,  -532,  -533,  -425,  -422,  -423,  -424,  -420,  -533,
  -514,  -533,  -270,  -521,  -510,  -532,  -511,  -533,  -533,  -477,
  -486,  -532,  -532,  -532,  -532,  -351,  -533,  -206,  -207,  -454,
  -533,  -533,  -101,  -105,  -102,  -521,  -532,  -410,  -408,   -15,
  -532,  -390,  -389,  -388,  -320,  -532,  -532,   -18,   -55,  -238,
  -237,  -371,   -54,  -370,  -414,  -294,  -510,  -511,  -533,  -533,
  -257,  -500,  -521,  -456,  -533,  -471,   -28,  -533,  -533,  -523,
  -279,  -533,  -196,  -532,  -533,   -61,  -374,  -533,  -380,  -533,
  -533,   -59,  -373,  -533,  -521,  -532,  -315,   -68,  -116,   -88,
   -90,  -521,  -510,  -511,   -80,  -533,   -74,  -532,  -533,  -525,
  -533,   -76,  -533,  -275,  -533,  -533,  -290,  -244,  -254,  -533,
  -380,  -533,  -533,  -362,  -361,  -358,  -359,  -364,  -366,  -367,
  -461,  -533,  -459,  -533,  -469,  -533,  -331,  -327,  -533,  -336,
  -325,  -467,  -464,  -533,  -421,  -532,  -380,  -533,  -368,  -533,
  -533,  -344,  -342,  -347,  -533,  -349,  -533,  -354,  -292,  -453,
  -380,  -533,  -392,  -533,  -533,  -321,   -11,  -394,  -532,  -188,
  -255,  -533,  -455,  -295,  -532,  -382,  -381,  -190,  -533,  -194,
   -35,   -62,  -195,  -533,  -524,  -192,   -33,   -60,  -193,   -34,
  -278,  -533,  -533,  -318,   -86,   -72,  -533,  -287,  -234,  -288,
   -84,  -289,  -532,  -533,  -533,  -533,  -532,  -532,  -532,  -329,
  -533,  -334,  -533,  -532,  -533,  -229,  -485,  -356,  -532,  -532,
  -487,  -532,  -532,  -532,  -293,  -391,  -533,  -533,  -100,   -93,
  -532,  -393,  -256,  -533,   -56,  -191,   -32,  -285,  -533,  -286,
  -532,  -253,  -360,  -462,  -460,  -457,  -533,  -533,  -332,  -465,
  -291,  -533,  -339,  -533,  -341,  -533,  -348,  -345,  -533,  -350,
   -99,  -533,  -532,  -533,  -532,  -296,  -532,  -383,  -385,  -384,
  -532,  -330,  -532,  -532,  -532,  -532,  -514,   -98,  -521,  -510,
  -511,  -386,  -532,  -458,  -340,  -337,  -533,  -343,  -346,  -380,
  -319,  -532,  -338 ]

clist = [
'79,522,112,309,173,407,155,149,381,307,304,168,629,373,310,335,115,549',
'624,566,382,345,529,532,391,342,584,706,660,244,173,359,398,653,445',
'738,605,650,413,355,173,418,600,309,244,112,83,323,683,366,662,502,619',
'789,310,112,357,490,279,244,244,570,112,577,607,610,488,394,647,317',
'173,773,787,776,618,403,348,406,841,641,93,428,870,543,513,633,287,390',
'326,383,633,444,93,392,681,160,684,112,770,711,244,316,713,112,557,551',
'380,112,360,408,328,523,245,554,555,362,161,401,775,376,412,244,364',
'412,379,570,283,577,367,816,141,340,71,796,686,295,395,281,917,700,155',
'427,402,814,432,384,280,498,298,512,432,1,315,668,186,810,652,432,518',
'55,3,241,2,,,,,,,675,,,,,,,,,,,63,870,,,861,,,,,,,,63,,,,,,,,,,,,,,',
',460,,,844,,,63,,675,,756,,675,,,,,,,,,,,,,,,,764,,542,,,761,,,,,,575',
'570,577,,,,,63,,898,,,542,69,,846,,122,940,,693,,516,248,641,69,,,,',
',,787,773,489,892,,702,289,517,,,,,536,,921,69,,,,697,,289,319,63,598',
'520,675,,122,,,,638,,,,,,122,,406,126,658,800,155,122,,795,,,,623,,122',
',69,,122,489,489,,,370,733,122,632,574,,541,122,112,,408,,673,,,,868',
',122,122,,370,,660,122,122,625,556,122,627,,,564,845,,656,,444,515,350',
',69,406,653,,858,,939,,715,,244,,,919,,112,,,695,653,581,362,602,869',
'831,872,,574,587,362,837,112,,408,,244,596,824,,613,614,615,616,406',
'645,,677,,,852,,,433,,93,,,542,436,,848,,,,,446,,,,574,,,,112,,408,',
',,,,,612,,654,,,,,,406,690,,,661,,,63,880,,,766,,,,,669,751,309,,645',
'685,,63,707,,574,918,,310,112,574,408,,923,,,,,,,,,63,,173,,,701,704',
'682,,724,,112,,710,112,623,710,574,,739,691,63,,,759,708,,63,712,808',
'173,765,155,722,767,63,122,725,623,916,126,,309,,69,,406,350,748,63',
',489,112,310,,,,,,112,69,710,,823,122,122,735,,,173,,,574,741,,444,112',
'444,408,,69,699,739,,,122,,122,,122,122,,,63,63,931,122,847,,849,,69',
'244,851,,,,69,675,,,,63,,,69,412,739,370,,,122,,,,244,,,,69,122,122',
'122,122,432,,432,,432,739,122,122,,370,122,432,432,,,,874,,,579,63,',
'811,,,710,122,,63,,,645,432,432,432,,,623,,69,69,,,,850,,887,63,,,812',
'889,85,,,,817,,69,,,739,250,122,85,,,,122,900,,,859,,444,,155,291,,63',
',,,579,63,63,85,,915,,,,291,291,,704,,,,,69,,,,,,,704,69,,122,,830,',
'63,122,,,836,,,839,,,244,579,85,69,,,63,244,,372,,63,,,,122,,,122,,',
',444,,444,63,883,,365,,372,,,,928,69,,856,,857,69,69,,,244,,,,579,863',
'85,,579,,,,122,,244,444,871,,873,122,,,,,122,,69,709,,,709,,365,,,,122',
'579,432,432,432,370,69,886,,432,,69,,,432,432,,432,432,432,,,63,,888',
'69,406,,370,,,63,736,,739,,704,,,709,,354,574,,,,,,,,,108,574,,,,112',
'579,408,63,520,252,,108,,,432,,432,432,432,432,920,,,,294,354,704,922',
',924,,,925,108,780,432,782,,784,294,294,,,,294,791,792,,,,69,,,,,,,',
',69,941,,,,,,801,803,805,63,,,,108,,,,,,,375,736,,560,,709,,69,122,',
',,63,,122,85,,122,63,,,375,,,588,,,,591,370,,85,,,,,370,45,,,,108,,',
',,63,243,,45,,85,,,,,,,,,626,,,,,,,630,,69,,45,85,866,63,,,553,85,,',
',,,,,85,877,,372,,,69,,,,,,69,,85,,,,365,659,,122,,,63,45,365,,372,',
'122,,393,,,,,,,499,69,,,,,,,,,,,,,354,,,,,85,85,,,,,,,,,69,,422,423',
'424,45,893,894,895,85,664,,,899,,,648,649,902,904,,906,907,909,,,,,',
',,,122,,,663,69,,,,,,,,,,,,,,,85,721,,,,,,,85,,,,603,108,,,730,,,933',
',934,935,937,938,,678,85,603,108,,,,,,354,,,579,,942,,747,,361,,,,368',
'108,,754,,,,361,,,,85,361,,,,85,85,,,,,108,,361,,,,108,,361,,763,,,',
'108,,,375,,,727,728,,,85,,,,108,,,,777,,,,,,,372,85,,375,790,,85,,,',
',745,,,,,,,,,85,689,45,372,,,,757,,,544,696,758,108,108,,,,45,,,,,,',
',760,,,,,558,108,,,,,,45,,,,,,,,,,822,,,,723,,,,,,,45,,,,,,45,,,,,840',
',,45,108,,,85,,,,,108,,,,85,45,,,,,,,,,,,,,,108,,,634,,,,,393,,642,815',
',85,643,,,,,,,,,,,,,,,,45,45,108,507,,372,,108,108,828,,,372,,,,,,,45',
',,,,,,,,,,,,546,,,,,108,,,,,603,,,85,,,,291,,,375,108,561,,562,,108',
',,45,,878,809,,,,85,45,,864,108,,85,375,,,,,703,,,,,,,,45,,111,,,,881',
',,361,361,361,361,,85,,720,,,620,621,,,,,,,296,,,,,45,,,,,45,45,,890',
',85,,334,111,,,337,,,,,,,111,,,,,,108,111,,,,,45,914,,108,,,,,,361,',
'85,,634,,393,45,,,,111,45,,,111,,,,,,111,108,544,,,45,111,932,,768,111',
',,,,,,,,,,,,375,,,361,,,,375,,111,111,111,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,108,,,,294,,,,,,,,,,,,,,879,45,,,,108,,,,,45,108,820,,,,,,,,,,,,,',
',744,,,,,,,,,,,45,108,,,,,,,,,,,,,,,,,,,,,,,,,,,,108,,,,,461,462,463',
'464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480',
'481,482,483,484,485,486,,,45,,,108,,,,,,,,,,,882,,,,875,,,,,45,,,,,',
'45,,,,,,,,,,540,,,,,,,891,,,,,,,,,,,45,,,111,,,,,563,,,,,,111,,,,,,',
'583,,,,,,,45,,,,,,,,,,,601,,,,,,,,,,,,,,,,,,,247,,,,111,,45,,,,,,,631',
'563,247,,,111,247,111,,,111,601,111,,,,111,247,,,,,,247,,,,247,,,,,',
',,,,,,,,,,,,,,,,111,,,,,,,,,247,361,,,,,,,247,,,,247,,,,,,,,,247,,,',
',,,687,688,,,,,,,,,111,,,,,,,,,,,,247,247,247,,111,,,,,,,,111,,,111',
',,,,,,,,,,,,111,,,,,,,,,,,,,,,,,,,,732,,,,,111,,,,,,,111,,,,,,,,,,,',
',,,,,111,,,,,,,,,,,,,,,111,,111,,,,,,,,,,,,,,,,,111,,,,,,,111,,,247',
'247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247',
'247,247,247,247,247,247,247,247,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,819,111,,,,,,,,,,,,827,,,829,,,832,,,835,,,838,247',
',,,,,,,,,,,,,,247,,,,,,,,,,829,,835,838,,,,,,,,,,,,247,,,,,,,,,,247',
'247,,865,,247,,,,,247,247,247,,,,247,,,,,,,,,,,111,,,,,,,,,,,,885,,',
',,,,,,,,,,,,,,,,,111,885,,,,,,,,,,,,,,,,,,,,,,,,,,247,247,,,,,,,,,,',
',,,,,,,,,,,,,,247,,,,,,111,,,,,,,,,,,,,,,,,,247,,,,,,,,,,,,,,,,,,,,247',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,247,,,,,,,,,,247,,247,,,,,,,,,,,247',
',,,,,247,,,,,,,247,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,247,247,,,,,,,,,,,,247,,,,,,247,,,',
',,,,,,,,,,,,,,247,,,,,,,247,,,,,,,247,,247,247,,,,,,,,,,,,,,,,,,,,,',
',,,247,,247,,,,,,,,,,,,,,247,,,,,,,,247,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,247,247' ]
        racc_goto_table = arr = Array.new(2775, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'7,13,34,57,54,25,109,117,61,17,11,53,89,47,58,36,39,97,49,40,63,32,38',
'38,63,36,82,14,136,59,54,32,48,135,102,26,86,107,66,6,54,66,82,57,59',
'34,8,53,106,17,107,51,86,103,58,34,9,41,8,59,59,38,34,38,62,62,130,36',
'111,21,54,114,100,113,62,6,39,36,83,140,10,116,137,28,130,67,52,77,74',
'7,67,101,10,7,104,80,107,34,26,65,59,52,65,34,28,99,60,34,19,7,98,31',
'22,41,41,43,127,39,112,19,7,59,44,7,19,38,127,38,18,15,115,78,5,26,111',
'127,19,118,120,121,109,117,19,122,7,125,126,93,128,129,7,4,131,132,133',
'26,134,7,76,3,2,91,1,,,,,,,38,,,,,,,,,,,23,137,,,103,,,,,,,,23,,,,,',
',,,,,,,,,,32,,,26,,,23,,38,,49,,38,,,,,,,,,,,,,,,,89,,61,,,49,,,,,,25',
'38,38,,,,,23,,103,,,61,24,,14,,24,83,,51,,6,24,140,24,,,,,,,100,114',
'7,113,,28,24,9,,,,,11,,103,24,,,,130,,24,24,23,48,7,38,,24,,,,25,,,',
',,24,,36,64,102,111,109,24,,86,,,,47,,24,,24,,24,7,7,,,24,41,24,63,54',
',21,24,34,,7,,25,,,,106,,24,24,,24,,136,24,24,36,21,24,6,,,21,49,,101',
',101,10,64,,24,36,135,,107,,26,,76,,59,,,14,,34,,,25,135,8,43,21,107',
'40,107,,54,44,43,40,34,,7,,59,44,97,,19,19,19,19,36,7,,32,,,82,,,108',
',10,,,61,108,,62,,,,,108,,,,54,,,,34,,7,,,,,,,10,,105,,,,,,36,11,,,105',
',,23,82,,,76,,,,,19,25,57,,7,109,,23,17,,54,89,,58,34,54,7,,107,,,,',
',,,,23,,54,,,7,7,105,,11,,34,,7,34,47,7,54,,32,19,23,,,63,39,,23,39',
'76,54,61,109,117,66,23,24,53,47,82,64,,57,,24,,36,64,17,23,,7,34,58',
',,,,,34,24,7,,76,24,24,39,,,54,,,54,39,,101,34,101,7,,24,10,32,,,24',
',24,,24,24,,,23,23,13,24,76,,76,,24,59,76,,,,24,38,,,,23,,,24,7,32,24',
',,24,,,,59,,,,24,24,24,24,24,7,,7,,7,32,24,24,,24,24,7,7,,,,76,,,64',
'23,,11,,,7,24,,23,,,7,7,7,7,,,47,,24,24,,,,47,,76,23,,,7,76,27,,,,7',
',24,,,32,27,24,27,,,,24,76,,,101,,101,,109,27,,23,,,,64,23,23,27,,76',
',,,27,27,,7,,,,,24,,,,,,,7,24,,24,,21,,23,24,,,21,,,21,,,59,64,27,24',
',,23,59,,27,,23,,,,24,,,24,,,,101,,101,23,11,,12,,27,,,,25,24,,105,',
'105,24,24,,,59,,,,64,105,27,,64,,,,24,,59,101,105,,105,24,,,,,24,,24',
'64,,,64,,12,,,,24,64,7,7,7,24,24,21,,7,,24,,,7,7,,7,7,7,,,23,,19,24',
'36,,24,,,23,64,,32,,7,,,64,,94,54,,,,,,,,,50,54,,,,34,64,7,23,7,50,',
'50,,,7,,7,7,7,7,105,,,,50,94,7,105,,105,,,105,50,108,7,108,,108,50,50',
',,,50,108,108,,,,24,,,,,,,,,24,105,,,,,,108,108,108,23,,,,50,,,,,,,50',
'64,,45,,64,,24,24,,,,23,,24,27,,24,23,,,50,,,45,,,,45,24,,27,,,,,24',
'20,,,,50,,,,,23,20,,20,,27,,,,,,,,,45,,,,,,,45,,24,,20,27,24,23,,,12',
'27,,,,,,,,27,24,,27,,,24,,,,,,24,,27,,,,12,45,,24,,,23,20,12,,27,,24',
',29,,,,,,,94,24,,,,,,,,,,,,,94,,,,,27,27,,,,,,,,,24,,29,29,29,20,108',
'108,108,27,27,,,108,,,12,12,108,108,,108,108,108,,,,,,,,,24,,,12,24',
',,,,,,,,,,,,,,27,45,,,,,,,27,,,,94,50,,,45,,,108,,108,108,108,108,,12',
'27,94,50,,,,,,94,,,64,,108,,45,,30,,,,30,50,,45,,,,30,,,,27,30,,,,27',
'27,,,,,50,,30,,,,50,,30,,45,,,,50,,,50,,,12,12,,,27,,,,50,,,,45,,,,',
',,27,27,,50,45,,27,,,,,12,,,,,,,,,27,94,20,27,,,,12,,,29,94,12,50,50',
',,,20,,,,,,,,12,,,,,29,50,,,,,,20,,,,,,,,,,45,,,,94,,,,,,,20,,,,,,20',
',,,,45,,,20,50,,,27,,,,,50,,,,27,20,,,,,,,,,,,,,,50,,,29,,,,,29,,29',
'12,,27,29,,,,,,,,,,,,,,,,20,20,50,30,,27,,50,50,12,,,27,,,,,,,20,,,',
',,,,,,,,,30,,,,,50,,,,,94,,,27,,,,27,,,50,50,30,,30,,50,,,20,,27,94',
',,,27,20,,12,50,,27,50,,,,,29,,,,,,,,20,,33,,,,12,,,30,30,30,30,,27',
',29,,,30,30,,,,,,,33,,,,,20,,,,,20,20,,12,,27,,33,33,,,33,,,,,,,33,',
',,,,50,33,,,,,20,12,,50,,,,,,30,,27,,29,,29,20,,,,33,20,,,33,,,,,,33',
'50,29,,,20,33,12,,29,33,,,,,,,,,,,,,50,,,30,,,,50,,33,33,33,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,50,,,,50,,,,,,,,,,,,,,50,20,,,,50,,,,,20,50,29,',
',,,,,,,,,,,,,30,,,,,,,,,,,20,50,,,,,,,,,,,,,,,,,,,,,,,,,,,,50,,,,,33',
'33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33',
'33,33,,,20,,,50,,,,,,,,,,,29,,,,20,,,,,20,,,,,,20,,,,,,,,,,33,,,,,,',
'29,,,,,,,,,,,20,,,33,,,,,33,,,,,,33,,,,,,,33,,,,,,,20,,,,,,,,,,,33,',
',,,,,,,,,,,,,,,,,42,,,,33,,20,,,,,,,33,33,42,,,33,42,33,,,33,33,33,',
',,33,42,,,,,,42,,,,42,,,,,,,,,,,,,,,,,,,,,,33,,,,,,,,,42,30,,,,,,,42',
',,,42,,,,,,,,,42,,,,,,,33,33,,,,,,,,,33,,,,,,,,,,,,42,42,42,,33,,,,',
',,,33,,,33,,,,,,,,,,,,,33,,,,,,,,,,,,,,,,,,,,33,,,,,33,,,,,,,33,,,,',
',,,,,,,,,,,,33,,,,,,,,,,,,,,,33,,33,,,,,,,,,,,,,,,,,33,,,,,,,33,,,42',
'42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42',
'42,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,33,33,,',
',,,,,,,,,33,,,33,,,33,,,33,,,33,42,,,,,,,,,,,,,,,42,,,,,,,,,,33,,33',
'33,,,,,,,,,,,,42,,,,,,,,,,42,42,,33,,42,,,,,42,42,42,,,,42,,,,,,,,,',
',33,,,,,,,,,,,,33,,,,,,,,,,,,,,,,,,,,33,33,,,,,,,,,,,,,,,,,,,,,,,,,',
'42,42,,,,,,,,,,,,,,,,,,,,,,,,,42,,,,,,33,,,,,,,,,,,,,,,,,,42,,,,,,,',
',,,,,,,,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,42,,,,,,,,,,42,,42,',
',,,,,,,,,42,,,,,,42,,,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,42,42,,,,,,,,,,,,42,,,,,',
'42,,,,,,,,,,,,,,,,,,42,,,,,,,42,,,,,,,42,,42,42,,,,,,,,,,,,,,,,,,,,',
',,,,42,,42,,,,,,,,,,,,,,42,,,,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
'42,42' ]
        racc_goto_check = arr = Array.new(2775, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_goto_pointer = [
   nil,   162,   160,   158,   151,   131,   -32,    -1,    45,   -15,
    79,   -25,   726,  -304,  -495,  -577,   nil,   -27,    52,    35,
  1021,    27,   101,   179,   259,  -105,  -540,   700,  -237,  1009,
  1161,  -196,   -41,  1535,    -3,   nil,   -33,   nil,  -290,    11,
  -329,  -225,  1920,    40,    47,   645,   nil,   -69,   -71,  -381,
   903,  -237,    60,     1,    -6,   nil,   nil,   -33,   -22,    18,
    16,   -82,  -317,   -70,   315,  -430,   -83,  -329,   nil,   nil,
   nil,   nil,   nil,   nil,    42,   nil,  -146,    -7,    75,   nil,
    89,   nil,  -334,  -667,   nil,   nil,  -343,   nil,   nil,  -391,
   nil,   150,   nil,  -140,   823,   nil,   nil,  -306,    64,  -223,
  -583,   -65,  -122,  -604,  -399,    29,  -445,  -397,   289,     0,
   nil,  -359,  -528,  -573,  -575,   124,   -60,     1,   120,   nil,
  -752,  -382,  -557,   nil,   nil,    53,   130,   106,   115,  -149,
  -214,   114,  -296,   144,  -278,  -401,  -419,  -722,   nil,   nil,
  -340 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   302,   nil,   404,
   303,   nil,   305,   nil,   843,   nil,   301,   nil,   nil,   nil,
   114,    50,    57,   119,   297,   nil,   nil,   128,   nil,   130,
   102,   nil,   559,    12,    17,    23,   113,    37,   671,   nil,
   nil,   nil,    65,    70,   nil,   nil,    82,    88,    95,   nil,
   135,   286,   nil,   306,   531,   179,   308,    39,    43,    52,
   nil,   121,   nil,   124,   572,   742,   nil,   129,    99,   105,
     7,    14,    18,    25,    31,    35,   nil,   nil,   349,    56,
   nil,    73,   nil,   nil,    84,    89,   nil,   101,   107,   nil,
    11,   nil,    26,   nil,   586,    41,    46,   nil,   nil,   nil,
   442,   157,   nil,   440,   nil,   145,   nil,   151,   nil,   651,
   491,   nil,   nil,   nil,   139,   nil,   nil,   548,   nil,   573,
   nil,   nil,   nil,    87,    92,    97,   nil,   nil,   nil,   nil,
   451,   nil,   nil,   nil,   158,   159,   137,   680,   142,   146,
   125 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 140, :_reduce_1,
  0, 143, :_reduce_2,
  2, 141, :_reduce_3,
  2, 142, :_reduce_4,
  1, 144, :_reduce_5,
  1, 144, :_reduce_6,
  3, 144, :_reduce_7,
  2, 144, :_reduce_8,
  1, 147, :_reduce_9,
  1, 147, :_reduce_none,
  4, 150, :_reduce_11,
  2, 151, :_reduce_12,
  1, 155, :_reduce_13,
  1, 155, :_reduce_14,
  3, 155, :_reduce_15,
  2, 155, :_reduce_none,
  0, 170, :_reduce_17,
  4, 149, :_reduce_18,
  3, 149, :_reduce_none,
  3, 149, :_reduce_none,
  3, 149, :_reduce_none,
  2, 149, :_reduce_none,
  3, 149, :_reduce_23,
  3, 149, :_reduce_24,
  3, 149, :_reduce_none,
  3, 149, :_reduce_none,
  3, 149, :_reduce_none,
  4, 149, :_reduce_none,
  3, 149, :_reduce_29,
  3, 149, :_reduce_none,
  3, 149, :_reduce_none,
  6, 149, :_reduce_none,
  5, 149, :_reduce_none,
  5, 149, :_reduce_none,
  5, 149, :_reduce_none,
  3, 149, :_reduce_none,
  3, 149, :_reduce_none,
  3, 149, :_reduce_none,
  3, 149, :_reduce_none,
  1, 149, :_reduce_none,
  1, 169, :_reduce_none,
  3, 169, :_reduce_none,
  3, 169, :_reduce_none,
  3, 169, :_reduce_none,
  2, 169, :_reduce_none,
  1, 169, :_reduce_none,
  1, 158, :_reduce_none,
  1, 160, :_reduce_none,
  1, 160, :_reduce_none,
  2, 160, :_reduce_none,
  2, 160, :_reduce_none,
  2, 160, :_reduce_none,
  1, 174, :_reduce_none,
  4, 174, :_reduce_none,
  4, 174, :_reduce_none,
  4, 179, :_reduce_none,
  2, 173, :_reduce_57,
  3, 173, :_reduce_none,
  4, 173, :_reduce_none,
  5, 173, :_reduce_none,
  4, 173, :_reduce_none,
  5, 173, :_reduce_none,
  2, 173, :_reduce_none,
  2, 173, :_reduce_none,
  1, 161, :_reduce_none,
  3, 161, :_reduce_none,
  1, 183, :_reduce_none,
  3, 183, :_reduce_none,
  1, 182, :_reduce_none,
  2, 182, :_reduce_none,
  3, 182, :_reduce_none,
  5, 182, :_reduce_none,
  2, 182, :_reduce_none,
  4, 182, :_reduce_none,
  2, 182, :_reduce_none,
  4, 182, :_reduce_none,
  1, 182, :_reduce_none,
  3, 182, :_reduce_none,
  1, 186, :_reduce_none,
  3, 186, :_reduce_none,
  2, 185, :_reduce_none,
  3, 185, :_reduce_none,
  1, 188, :_reduce_none,
  3, 188, :_reduce_none,
  1, 187, :_reduce_none,
  4, 187, :_reduce_none,
  3, 187, :_reduce_none,
  3, 187, :_reduce_none,
  3, 187, :_reduce_none,
  3, 187, :_reduce_none,
  2, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 159, :_reduce_none,
  4, 159, :_reduce_none,
  3, 159, :_reduce_95,
  3, 159, :_reduce_none,
  3, 159, :_reduce_none,
  3, 159, :_reduce_none,
  2, 159, :_reduce_none,
  1, 159, :_reduce_none,
  1, 190, :_reduce_101,
  1, 190, :_reduce_102,
  2, 191, :_reduce_103,
  1, 191, :_reduce_104,
  3, 191, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_109,
  1, 192, :_reduce_110,
  1, 195, :_reduce_none,
  1, 195, :_reduce_none,
  1, 156, :_reduce_none,
  1, 156, :_reduce_none,
  1, 157, :_reduce_none,
  3, 157, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  3, 172, :_reduce_187,
  5, 172, :_reduce_none,
  3, 172, :_reduce_none,
  5, 172, :_reduce_none,
  6, 172, :_reduce_none,
  5, 172, :_reduce_none,
  5, 172, :_reduce_none,
  5, 172, :_reduce_none,
  5, 172, :_reduce_none,
  4, 172, :_reduce_none,
  3, 172, :_reduce_none,
  3, 172, :_reduce_none,
  3, 172, :_reduce_none,
  3, 172, :_reduce_200,
  3, 172, :_reduce_201,
  3, 172, :_reduce_202,
  3, 172, :_reduce_203,
  3, 172, :_reduce_204,
  3, 172, :_reduce_205,
  4, 172, :_reduce_none,
  4, 172, :_reduce_none,
  2, 172, :_reduce_none,
  2, 172, :_reduce_209,
  3, 172, :_reduce_210,
  3, 172, :_reduce_211,
  3, 172, :_reduce_212,
  3, 172, :_reduce_213,
  3, 172, :_reduce_214,
  3, 172, :_reduce_215,
  3, 172, :_reduce_216,
  3, 172, :_reduce_217,
  3, 172, :_reduce_218,
  3, 172, :_reduce_219,
  3, 172, :_reduce_220,
  3, 172, :_reduce_221,
  3, 172, :_reduce_222,
  2, 172, :_reduce_223,
  3, 172, :_reduce_224,
  3, 172, :_reduce_225,
  3, 172, :_reduce_none,
  3, 172, :_reduce_none,
  3, 172, :_reduce_none,
  6, 172, :_reduce_none,
  1, 172, :_reduce_none,
  1, 168, :_reduce_none,
  1, 199, :_reduce_none,
  2, 199, :_reduce_none,
  4, 199, :_reduce_none,
  2, 199, :_reduce_none,
  3, 203, :_reduce_236,
  1, 204, :_reduce_none,
  1, 204, :_reduce_none,
  1, 164, :_reduce_239,
  1, 164, :_reduce_none,
  1, 175, :_reduce_none,
  2, 175, :_reduce_none,
  2, 175, :_reduce_none,
  4, 175, :_reduce_none,
  1, 175, :_reduce_none,
  1, 178, :_reduce_none,
  2, 206, :_reduce_247,
  2, 205, :_reduce_248,
  1, 205, :_reduce_none,
  1, 205, :_reduce_none,
  1, 200, :_reduce_251,
  2, 200, :_reduce_252,
  3, 200, :_reduce_253,
  4, 200, :_reduce_254,
  3, 167, :_reduce_none,
  4, 167, :_reduce_none,
  2, 167, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  3, 198, :_reduce_none,
  3, 198, :_reduce_none,
  3, 198, :_reduce_none,
  3, 198, :_reduce_none,
  2, 198, :_reduce_none,
  3, 198, :_reduce_272,
  3, 198, :_reduce_273,
  1, 198, :_reduce_none,
  4, 198, :_reduce_none,
  3, 198, :_reduce_none,
  1, 198, :_reduce_none,
  5, 198, :_reduce_none,
  4, 198, :_reduce_none,
  3, 198, :_reduce_none,
  2, 198, :_reduce_281,
  1, 198, :_reduce_282,
  2, 198, :_reduce_283,
  2, 198, :_reduce_none,
  6, 198, :_reduce_285,
  6, 198, :_reduce_286,
  5, 198, :_reduce_none,
  5, 198, :_reduce_none,
  5, 198, :_reduce_none,
  4, 198, :_reduce_none,
  7, 198, :_reduce_none,
  5, 198, :_reduce_292,
  6, 198, :_reduce_none,
  4, 198, :_reduce_294,
  5, 198, :_reduce_295,
  7, 198, :_reduce_296,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 163, :_reduce_none,
  1, 214, :_reduce_none,
  1, 220, :_reduce_none,
  1, 223, :_reduce_none,
  1, 224, :_reduce_none,
  1, 226, :_reduce_none,
  1, 227, :_reduce_none,
  1, 229, :_reduce_none,
  1, 231, :_reduce_none,
  1, 234, :_reduce_none,
  1, 235, :_reduce_none,
  1, 215, :_reduce_none,
  1, 221, :_reduce_none,
  1, 221, :_reduce_none,
  2, 221, :_reduce_none,
  1, 225, :_reduce_none,
  1, 225, :_reduce_none,
  1, 222, :_reduce_318,
  5, 222, :_reduce_319,
  1, 153, :_reduce_320,
  2, 153, :_reduce_321,
  1, 230, :_reduce_none,
  1, 230, :_reduce_none,
  1, 239, :_reduce_none,
  3, 239, :_reduce_none,
  1, 242, :_reduce_none,
  3, 242, :_reduce_none,
  1, 241, :_reduce_none,
  4, 241, :_reduce_none,
  6, 241, :_reduce_none,
  3, 241, :_reduce_none,
  5, 241, :_reduce_none,
  2, 241, :_reduce_none,
  4, 241, :_reduce_none,
  1, 241, :_reduce_none,
  3, 241, :_reduce_none,
  6, 243, :_reduce_none,
  8, 243, :_reduce_none,
  4, 243, :_reduce_none,
  6, 243, :_reduce_none,
  4, 243, :_reduce_none,
  2, 243, :_reduce_none,
  6, 243, :_reduce_none,
  2, 243, :_reduce_none,
  4, 243, :_reduce_none,
  6, 243, :_reduce_none,
  2, 243, :_reduce_none,
  4, 243, :_reduce_none,
  2, 243, :_reduce_none,
  4, 243, :_reduce_none,
  1, 243, :_reduce_none,
  1, 180, :_reduce_none,
  1, 180, :_reduce_none,
  3, 249, :_reduce_none,
  1, 249, :_reduce_none,
  4, 249, :_reduce_none,
  1, 250, :_reduce_none,
  2, 250, :_reduce_none,
  1, 251, :_reduce_none,
  3, 251, :_reduce_none,
  1, 252, :_reduce_none,
  1, 252, :_reduce_none,
  2, 219, :_reduce_none,
  4, 254, :_reduce_none,
  1, 254, :_reduce_none,
  3, 255, :_reduce_none,
  3, 255, :_reduce_none,
  4, 257, :_reduce_none,
  2, 176, :_reduce_none,
  4, 176, :_reduce_none,
  4, 176, :_reduce_none,
  2, 218, :_reduce_372,
  4, 218, :_reduce_373,
  4, 218, :_reduce_374,
  3, 218, :_reduce_375,
  3, 218, :_reduce_none,
  3, 218, :_reduce_none,
  2, 218, :_reduce_none,
  1, 218, :_reduce_none,
  4, 218, :_reduce_none,
  4, 217, :_reduce_381,
  4, 217, :_reduce_382,
  5, 228, :_reduce_none,
  1, 259, :_reduce_none,
  1, 259, :_reduce_none,
  6, 152, :_reduce_none,
  1, 152, :_reduce_none,
  1, 260, :_reduce_none,
  1, 260, :_reduce_none,
  1, 260, :_reduce_none,
  2, 261, :_reduce_none,
  1, 261, :_reduce_none,
  2, 154, :_reduce_none,
  1, 154, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 208, :_reduce_none,
  1, 263, :_reduce_none,
  1, 263, :_reduce_none,
  2, 263, :_reduce_none,
  3, 264, :_reduce_402,
  3, 209, :_reduce_403,
  3, 210, :_reduce_none,
  3, 211, :_reduce_none,
  3, 211, :_reduce_none,
  0, 267, :_reduce_none,
  3, 267, :_reduce_none,
  1, 268, :_reduce_none,
  2, 268, :_reduce_none,
  3, 212, :_reduce_none,
  3, 212, :_reduce_none,
  0, 270, :_reduce_413,
  3, 270, :_reduce_none,
  0, 265, :_reduce_415,
  2, 265, :_reduce_416,
  0, 266, :_reduce_417,
  2, 266, :_reduce_418,
  1, 269, :_reduce_419,
  2, 269, :_reduce_420,
  3, 269, :_reduce_421,
  1, 271, :_reduce_none,
  1, 271, :_reduce_none,
  1, 271, :_reduce_none,
  1, 271, :_reduce_none,
  2, 196, :_reduce_426,
  1, 272, :_reduce_none,
  1, 272, :_reduce_none,
  1, 272, :_reduce_none,
  1, 272, :_reduce_none,
  3, 197, :_reduce_none,
  1, 262, :_reduce_432,
  1, 262, :_reduce_433,
  2, 262, :_reduce_none,
  2, 262, :_reduce_none,
  1, 189, :_reduce_436,
  1, 189, :_reduce_437,
  1, 189, :_reduce_438,
  1, 189, :_reduce_439,
  1, 189, :_reduce_440,
  1, 189, :_reduce_441,
  1, 189, :_reduce_442,
  1, 189, :_reduce_443,
  1, 189, :_reduce_444,
  1, 189, :_reduce_445,
  1, 189, :_reduce_446,
  1, 189, :_reduce_447,
  1, 213, :_reduce_none,
  1, 162, :_reduce_none,
  1, 166, :_reduce_none,
  1, 166, :_reduce_none,
  1, 232, :_reduce_none,
  3, 232, :_reduce_none,
  2, 232, :_reduce_454,
  3, 236, :_reduce_455,
  2, 236, :_reduce_456,
  6, 256, :_reduce_457,
  8, 256, :_reduce_458,
  4, 256, :_reduce_459,
  6, 256, :_reduce_460,
  4, 256, :_reduce_461,
  6, 256, :_reduce_462,
  2, 256, :_reduce_463,
  4, 256, :_reduce_464,
  6, 256, :_reduce_465,
  2, 256, :_reduce_466,
  4, 256, :_reduce_467,
  2, 256, :_reduce_468,
  4, 256, :_reduce_469,
  1, 256, :_reduce_470,
  0, 256, :_reduce_471,
  1, 253, :_reduce_none,
  1, 253, :_reduce_none,
  1, 253, :_reduce_none,
  1, 253, :_reduce_none,
  1, 240, :_reduce_none,
  1, 240, :_reduce_477,
  3, 240, :_reduce_478,
  2, 240, :_reduce_479,
  1, 274, :_reduce_480,
  3, 274, :_reduce_none,
  1, 244, :_reduce_482,
  3, 244, :_reduce_483,
  3, 275, :_reduce_none,
  3, 276, :_reduce_none,
  1, 245, :_reduce_none,
  3, 245, :_reduce_none,
  1, 273, :_reduce_none,
  3, 273, :_reduce_none,
  1, 277, :_reduce_none,
  1, 277, :_reduce_none,
  2, 246, :_reduce_none,
  1, 246, :_reduce_none,
  1, 278, :_reduce_none,
  1, 278, :_reduce_none,
  2, 248, :_reduce_496,
  2, 247, :_reduce_497,
  1, 247, :_reduce_none,
  1, 237, :_reduce_none,
  3, 237, :_reduce_none,
  1, 216, :_reduce_501,
  2, 216, :_reduce_502,
  1, 202, :_reduce_503,
  3, 202, :_reduce_504,
  3, 279, :_reduce_505,
  2, 279, :_reduce_506,
  1, 181, :_reduce_none,
  1, 181, :_reduce_none,
  1, 181, :_reduce_none,
  1, 177, :_reduce_none,
  1, 177, :_reduce_none,
  1, 177, :_reduce_none,
  1, 177, :_reduce_none,
  1, 258, :_reduce_none,
  1, 258, :_reduce_none,
  1, 258, :_reduce_none,
  1, 238, :_reduce_none,
  1, 238, :_reduce_none,
  0, 145, :_reduce_none,
  1, 145, :_reduce_none,
  0, 171, :_reduce_none,
  1, 171, :_reduce_none,
  2, 184, :_reduce_none,
  2, 165, :_reduce_none,
  0, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 233, :_reduce_none,
  1, 233, :_reduce_none,
  1, 148, :_reduce_none,
  2, 148, :_reduce_none,
  0, 146, :_reduce_none ]

racc_reduce_n = 533

racc_shift_n = 943

racc_token_table = {
  false => 0,
  :error => 1,
  :tLOWEST => 2,
  :tLBRACE_ARG => 3,
  :kIF_MOD => 4,
  :kUNLESS_MOD => 5,
  :kWHILE_MOD => 6,
  :kUNTIL_MOD => 7,
  :kOR => 8,
  :kAND => 9,
  :kNOT => 10,
  :kDEFined => 11,
  "=" => 12,
  :tOP_ASGN => 13,
  :kRESCUE_MOD => 14,
  "?" => 15,
  ":" => 16,
  :tDOT2 => 17,
  :tDOT3 => 18,
  :tOROP => 19,
  :tANDOP => 20,
  :tCMP => 21,
  :tEQ => 22,
  :tEQQ => 23,
  :tNEQ => 24,
  :tMATCH => 25,
  :tNMATCH => 26,
  ">" => 27,
  :tGEQ => 28,
  "<" => 29,
  :tLEQ => 30,
  "|" => 31,
  "^" => 32,
  "&" => 33,
  :tLSHFT => 34,
  :tRSHFT => 35,
  "+" => 36,
  "-" => 37,
  "*" => 38,
  "/" => 39,
  "%" => 40,
  :tUMINUS_NUM => 41,
  :tUMINUS => 42,
  :tPOW => 43,
  "!" => 44,
  "~" => 45,
  :tUPLUS => 46,
  :kCLASS => 47,
  :kMODULE => 48,
  :kDEF => 49,
  :kUNDEF => 50,
  :kBEGIN => 51,
  :kRESCUE => 52,
  :kENSURE => 53,
  :kEND => 54,
  :kIF => 55,
  :kUNLESS => 56,
  :kTHEN => 57,
  :kELSIF => 58,
  :kELSE => 59,
  :kCASE => 60,
  :kWHEN => 61,
  :kWHILE => 62,
  :kUNTIL => 63,
  :kFOR => 64,
  :kBREAK => 65,
  :kNEXT => 66,
  :kREDO => 67,
  :kRETRY => 68,
  :kIN => 69,
  :kDO => 70,
  :kDO_COND => 71,
  :kDO_BLOCK => 72,
  :kDO_LAMBDA => 73,
  :kRETURN => 74,
  :kYIELD => 75,
  :kSUPER => 76,
  :kSELF => 77,
  :kNIL => 78,
  :kTRUE => 79,
  :kFALSE => 80,
  :kALIAS => 81,
  :kDEFINED => 82,
  :klBEGIN => 83,
  :klEND => 84,
  :k__LINE__ => 85,
  :k__FILE__ => 86,
  :k__ENCODING__ => 87,
  :tIDENTIFIER => 88,
  :tFID => 89,
  :tGVAR => 90,
  :tIVAR => 91,
  :tCONSTANT => 92,
  :tCVAR => 93,
  :tLABEL => 94,
  :tINTEGER => 95,
  :tFLOAT => 96,
  :tSTRING_CONTENT => 97,
  :tCHAR => 98,
  :tNTH_REF => 99,
  :tBACK_REF => 100,
  :tREGEXP_END => 101,
  :tAREF => 102,
  :tASET => 103,
  :tCOLON2 => 104,
  :tCOLON3 => 105,
  :tASSOC => 106,
  :tLPAREN => 107,
  :tLPAREN_ARG => 108,
  :tRPAREN => 109,
  :tLBRACK => 110,
  :tLBRACE => 111,
  :tSTAR => 112,
  :tAMPER => 113,
  :tLAMBDA => 114,
  :tSYMBEG => 115,
  :tSTRING_BEG => 116,
  :tXSTRING_BEG => 117,
  :tREGEXP_BEG => 118,
  :tWORDS_BEG => 119,
  :tQWORDS_BEG => 120,
  :tSTRING_DBEG => 121,
  :tSTRING_DVAR => 122,
  :tSTRING_END => 123,
  :tLAMBEG => 124,
  :tSTRING => 125,
  :tXSTRING_END => 126,
  "{" => 127,
  "}" => 128,
  "[" => 129,
  "." => 130,
  "," => 131,
  "`" => 132,
  "(" => 133,
  ")" => 134,
  "]" => 135,
  ";" => 136,
  " " => 137,
  "\\n" => 138 }

racc_nt_base = 139

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "tLOWEST",
  "tLBRACE_ARG",
  "kIF_MOD",
  "kUNLESS_MOD",
  "kWHILE_MOD",
  "kUNTIL_MOD",
  "kOR",
  "kAND",
  "kNOT",
  "kDEFined",
  "\"=\"",
  "tOP_ASGN",
  "kRESCUE_MOD",
  "\"?\"",
  "\":\"",
  "tDOT2",
  "tDOT3",
  "tOROP",
  "tANDOP",
  "tCMP",
  "tEQ",
  "tEQQ",
  "tNEQ",
  "tMATCH",
  "tNMATCH",
  "\">\"",
  "tGEQ",
  "\"<\"",
  "tLEQ",
  "\"|\"",
  "\"^\"",
  "\"&\"",
  "tLSHFT",
  "tRSHFT",
  "\"+\"",
  "\"-\"",
  "\"*\"",
  "\"/\"",
  "\"%\"",
  "tUMINUS_NUM",
  "tUMINUS",
  "tPOW",
  "\"!\"",
  "\"~\"",
  "tUPLUS",
  "kCLASS",
  "kMODULE",
  "kDEF",
  "kUNDEF",
  "kBEGIN",
  "kRESCUE",
  "kENSURE",
  "kEND",
  "kIF",
  "kUNLESS",
  "kTHEN",
  "kELSIF",
  "kELSE",
  "kCASE",
  "kWHEN",
  "kWHILE",
  "kUNTIL",
  "kFOR",
  "kBREAK",
  "kNEXT",
  "kREDO",
  "kRETRY",
  "kIN",
  "kDO",
  "kDO_COND",
  "kDO_BLOCK",
  "kDO_LAMBDA",
  "kRETURN",
  "kYIELD",
  "kSUPER",
  "kSELF",
  "kNIL",
  "kTRUE",
  "kFALSE",
  "kALIAS",
  "kDEFINED",
  "klBEGIN",
  "klEND",
  "k__LINE__",
  "k__FILE__",
  "k__ENCODING__",
  "tIDENTIFIER",
  "tFID",
  "tGVAR",
  "tIVAR",
  "tCONSTANT",
  "tCVAR",
  "tLABEL",
  "tINTEGER",
  "tFLOAT",
  "tSTRING_CONTENT",
  "tCHAR",
  "tNTH_REF",
  "tBACK_REF",
  "tREGEXP_END",
  "tAREF",
  "tASET",
  "tCOLON2",
  "tCOLON3",
  "tASSOC",
  "tLPAREN",
  "tLPAREN_ARG",
  "tRPAREN",
  "tLBRACK",
  "tLBRACE",
  "tSTAR",
  "tAMPER",
  "tLAMBDA",
  "tSYMBEG",
  "tSTRING_BEG",
  "tXSTRING_BEG",
  "tREGEXP_BEG",
  "tWORDS_BEG",
  "tQWORDS_BEG",
  "tSTRING_DBEG",
  "tSTRING_DVAR",
  "tSTRING_END",
  "tLAMBEG",
  "tSTRING",
  "tXSTRING_END",
  "\"{\"",
  "\"}\"",
  "\"[\"",
  "\".\"",
  "\",\"",
  "\"`\"",
  "\"(\"",
  "\")\"",
  "\"]\"",
  "\";\"",
  "\" \"",
  "\"\\\\n\"",
  "$start",
  "target",
  "program",
  "top_compstmt",
  "@1",
  "top_stmts",
  "opt_terms",
  "none",
  "top_stmt",
  "terms",
  "stmt",
  "bodystmt",
  "compstmt",
  "opt_rescue",
  "opt_else",
  "opt_ensure",
  "stmts",
  "fitem",
  "undef_list",
  "expr_value",
  "lhs",
  "command_call",
  "mlhs",
  "var_lhs",
  "primary_value",
  "opt_call_args",
  "rbracket",
  "backref",
  "mrhs",
  "arg_value",
  "expr",
  "@2",
  "opt_nl",
  "arg",
  "command",
  "block_command",
  "call_args",
  "block_call",
  "operation2",
  "command_args",
  "cmd_brace_block",
  "opt_block_param",
  "operation",
  "mlhs_basic",
  "mlhs_inner",
  "rparen",
  "mlhs_head",
  "mlhs_item",
  "mlhs_node",
  "mlhs_post",
  "variable",
  "cname",
  "cpath",
  "fname",
  "op",
  "reswords",
  "fsym",
  "symbol",
  "dsym",
  "primary",
  "aref_args",
  "args",
  "trailer",
  "assocs",
  "paren_args",
  "opt_paren_args",
  "opt_block_arg",
  "block_arg",
  "literal",
  "strings",
  "xstring",
  "regexp",
  "words",
  "qwords",
  "var_ref",
  "k_begin",
  "k_end",
  "assoc_list",
  "brace_block",
  "method_call",
  "lambda",
  "k_if",
  "then",
  "if_tail",
  "k_unless",
  "k_while",
  "do",
  "k_until",
  "k_case",
  "case_body",
  "k_for",
  "for_var",
  "k_class",
  "superclass",
  "term",
  "k_module",
  "k_def",
  "f_arglist",
  "singleton",
  "dot_or_colon",
  "f_marg",
  "f_norm_arg",
  "f_margs",
  "f_marg_list",
  "block_param",
  "f_arg",
  "f_block_optarg",
  "f_rest_arg",
  "opt_f_block_arg",
  "f_block_arg",
  "block_param_def",
  "opt_bv_decl",
  "bv_decls",
  "bvar",
  "f_bad_arg",
  "f_larglist",
  "lambda_body",
  "f_args",
  "do_block",
  "operation3",
  "cases",
  "exc_list",
  "exc_var",
  "numeric",
  "string",
  "string1",
  "string_contents",
  "xstring_contents",
  "word_list",
  "word",
  "string_content",
  "qword_list",
  "string_dvar",
  "sym",
  "f_optarg",
  "f_arg_item",
  "f_opt",
  "f_block_opt",
  "restarg_mark",
  "blkarg_mark",
  "assoc" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 75)
  def _reduce_1(val, _values, result)
                        # puts 'well, we got here..'
                    # puts val[0]
                    @parser_result = val[0]
                    result = val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 83)
  def _reduce_2(val, _values, result)
                        self.lex_state = :EXPR_BEG
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 87)
  def _reduce_3(val, _values, result)
                        # puts 'program'
                    # puts val[1]
                    result = val[1]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 94)
  def _reduce_4(val, _values, result)
                        # puts 'top_compstmt'
                    # puts val[0]
                    # puts val[1]
                    result = val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 102)
  def _reduce_5(val, _values, result)
                        result = []
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 106)
  def _reduce_6(val, _values, result)
                        result = [val[0]]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 110)
  def _reduce_7(val, _values, result)
                        result = val[0] + [val[2]]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 114)
  def _reduce_8(val, _values, result)
                        result = val[1]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 119)
  def _reduce_9(val, _values, result)
                        result = val[0]
                  
    result
  end
.,.,

# reduce 10 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 125)
  def _reduce_11(val, _values, result)
                        result = val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 130)
  def _reduce_12(val, _values, result)
                        result = val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 135)
  def _reduce_13(val, _values, result)
                        result = []
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 139)
  def _reduce_14(val, _values, result)
                        result = [val[0]]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 143)
  def _reduce_15(val, _values, result)
                        result = val[0] + [val[2]]
		              
    result
  end
.,.,

# reduce 16 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 149)
  def _reduce_17(val, _values, result)
                        self.lex_state = :EXPR_FNAME
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 154)
  def _reduce_18(val, _values, result)
                      
    result
  end
.,.,

# reduce 19 omitted

# reduce 20 omitted

# reduce 21 omitted

# reduce 22 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 161)
  def _reduce_23(val, _values, result)
                		    result = node :if_mod, :stmt => val[0], :expr => val[2]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 165)
  def _reduce_24(val, _values, result)
                		    result = node :unless_mod, :stmt => val[0], :expr => val[2]
            		  
    result
  end
.,.,

# reduce 25 omitted

# reduce 26 omitted

# reduce 27 omitted

# reduce 28 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 173)
  def _reduce_29(val, _values, result)
                		    result = node :assign, :lhs => val[0], :rhs => val[2]
            		  
    result
  end
.,.,

# reduce 30 omitted

# reduce 31 omitted

# reduce 32 omitted

# reduce 33 omitted

# reduce 34 omitted

# reduce 35 omitted

# reduce 36 omitted

# reduce 37 omitted

# reduce 38 omitted

# reduce 39 omitted

# reduce 40 omitted

# reduce 41 omitted

# reduce 42 omitted

# reduce 43 omitted

# reduce 44 omitted

# reduce 45 omitted

# reduce 46 omitted

# reduce 47 omitted

# reduce 48 omitted

# reduce 49 omitted

# reduce 50 omitted

# reduce 51 omitted

# reduce 52 omitted

# reduce 53 omitted

# reduce 54 omitted

# reduce 55 omitted

# reduce 56 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 210)
  def _reduce_57(val, _values, result)
                        # command call - no brackets/recv
          		      result = node :call, :recv => nil, :meth => val[0], :args => val[1]
                  
    result
  end
.,.,

# reduce 58 omitted

# reduce 59 omitted

# reduce 60 omitted

# reduce 61 omitted

# reduce 62 omitted

# reduce 63 omitted

# reduce 64 omitted

# reduce 65 omitted

# reduce 66 omitted

# reduce 67 omitted

# reduce 68 omitted

# reduce 69 omitted

# reduce 70 omitted

# reduce 71 omitted

# reduce 72 omitted

# reduce 73 omitted

# reduce 74 omitted

# reduce 75 omitted

# reduce 76 omitted

# reduce 77 omitted

# reduce 78 omitted

# reduce 79 omitted

# reduce 80 omitted

# reduce 81 omitted

# reduce 82 omitted

# reduce 83 omitted

# reduce 84 omitted

# reduce 85 omitted

# reduce 86 omitted

# reduce 87 omitted

# reduce 88 omitted

# reduce 89 omitted

# reduce 90 omitted

# reduce 91 omitted

# reduce 92 omitted

# reduce 93 omitted

# reduce 94 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 260)
  def _reduce_95(val, _values, result)
                		    puts 'ZABADOO'
            		  
    result
  end
.,.,

# reduce 96 omitted

# reduce 97 omitted

# reduce 98 omitted

# reduce 99 omitted

# reduce 100 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 270)
  def _reduce_101(val, _values, result)
                        puts 'ERROR: cant use identifier for class/mod name'
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 274)
  def _reduce_102(val, _values, result)
                		    result = val[0]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 280)
  def _reduce_103(val, _values, result)
                      
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 283)
  def _reduce_104(val, _values, result)
      	                result = node :path, :cname => val[0]
  	              
    result
  end
.,.,

# reduce 105 omitted

# reduce 106 omitted

# reduce 107 omitted

# reduce 108 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 292)
  def _reduce_109(val, _values, result)
    		                self.lex_state = :EXPR_END
		                result = val[0]
		              
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 297)
  def _reduce_110(val, _values, result)
    		                self.lex_state = :EXPR_END
		                result = val[0]
		              
    result
  end
.,.,

# reduce 111 omitted

# reduce 112 omitted

# reduce 113 omitted

# reduce 114 omitted

# reduce 115 omitted

# reduce 116 omitted

# reduce 117 omitted

# reduce 118 omitted

# reduce 119 omitted

# reduce 120 omitted

# reduce 121 omitted

# reduce 122 omitted

# reduce 123 omitted

# reduce 124 omitted

# reduce 125 omitted

# reduce 126 omitted

# reduce 127 omitted

# reduce 128 omitted

# reduce 129 omitted

# reduce 130 omitted

# reduce 131 omitted

# reduce 132 omitted

# reduce 133 omitted

# reduce 134 omitted

# reduce 135 omitted

# reduce 136 omitted

# reduce 137 omitted

# reduce 138 omitted

# reduce 139 omitted

# reduce 140 omitted

# reduce 141 omitted

# reduce 142 omitted

# reduce 143 omitted

# reduce 144 omitted

# reduce 145 omitted

# reduce 146 omitted

# reduce 147 omitted

# reduce 148 omitted

# reduce 149 omitted

# reduce 150 omitted

# reduce 151 omitted

# reduce 152 omitted

# reduce 153 omitted

# reduce 154 omitted

# reduce 155 omitted

# reduce 156 omitted

# reduce 157 omitted

# reduce 158 omitted

# reduce 159 omitted

# reduce 160 omitted

# reduce 161 omitted

# reduce 162 omitted

# reduce 163 omitted

# reduce 164 omitted

# reduce 165 omitted

# reduce 166 omitted

# reduce 167 omitted

# reduce 168 omitted

# reduce 169 omitted

# reduce 170 omitted

# reduce 171 omitted

# reduce 172 omitted

# reduce 173 omitted

# reduce 174 omitted

# reduce 175 omitted

# reduce 176 omitted

# reduce 177 omitted

# reduce 178 omitted

# reduce 179 omitted

# reduce 180 omitted

# reduce 181 omitted

# reduce 182 omitted

# reduce 183 omitted

# reduce 184 omitted

# reduce 185 omitted

# reduce 186 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 333)
  def _reduce_187(val, _values, result)
                        result = node :assign, :lhs => val[0], :rhs => val[2]
                  
    result
  end
.,.,

# reduce 188 omitted

# reduce 189 omitted

# reduce 190 omitted

# reduce 191 omitted

# reduce 192 omitted

# reduce 193 omitted

# reduce 194 omitted

# reduce 195 omitted

# reduce 196 omitted

# reduce 197 omitted

# reduce 198 omitted

# reduce 199 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 349)
  def _reduce_200(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '+', :args => [val[2]]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 353)
  def _reduce_201(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '-', :args => [val[2]]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 357)
  def _reduce_202(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '*', :args => [val[2]]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 361)
  def _reduce_203(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '/', :args => [val[2]]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 365)
  def _reduce_204(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '%', :args => [val[2]]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 369)
  def _reduce_205(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '**', :args => [val[2]]
            		  
    result
  end
.,.,

# reduce 206 omitted

# reduce 207 omitted

# reduce 208 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 376)
  def _reduce_209(val, _values, result)
                		    result = node :call, :recv => val[1], :meth => '-@', :args => []
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 380)
  def _reduce_210(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '|', :args => [val[2]]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 384)
  def _reduce_211(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '^', :args => [val[2]]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 388)
  def _reduce_212(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '&', :args => [val[2]]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 392)
  def _reduce_213(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '<=>', :args => [val[2]]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 396)
  def _reduce_214(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '>', :args => [val[2]]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 400)
  def _reduce_215(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '>=', :args => [val[2]]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 404)
  def _reduce_216(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '<', :args => [val[2]]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 408)
  def _reduce_217(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '<=', :args => [val[2]]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 412)
  def _reduce_218(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '==', :args => [val[2]]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 416)
  def _reduce_219(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '===', :args => [val[2]]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 420)
  def _reduce_220(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '!=', :args => [val[2]]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 424)
  def _reduce_221(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '=~', :args => [val[2]]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 428)
  def _reduce_222(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '!~', :args => [val[2]]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 432)
  def _reduce_223(val, _values, result)
                		    result = node :call, :recv => val[1], :meth => '~', :args => []
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 436)
  def _reduce_224(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '<<', :args => [val[2]]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 440)
  def _reduce_225(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '>>', :args => [val[2]]
            		  
    result
  end
.,.,

# reduce 226 omitted

# reduce 227 omitted

# reduce 228 omitted

# reduce 229 omitted

# reduce 230 omitted

# reduce 231 omitted

# reduce 232 omitted

# reduce 233 omitted

# reduce 234 omitted

# reduce 235 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 457)
  def _reduce_236(val, _values, result)
                        result = val[1]
                  
    result
  end
.,.,

# reduce 237 omitted

# reduce 238 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 465)
  def _reduce_239(val, _values, result)
                        result = []
                  
    result
  end
.,.,

# reduce 240 omitted

# reduce 241 omitted

# reduce 242 omitted

# reduce 243 omitted

# reduce 244 omitted

# reduce 245 omitted

# reduce 246 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 479)
  def _reduce_247(val, _values, result)
                        result = self.node :block_arg, :arg => val[1]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 484)
  def _reduce_248(val, _values, result)
                        resul = val[1]
                  
    result
  end
.,.,

# reduce 249 omitted

# reduce 250 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 491)
  def _reduce_251(val, _values, result)
                        result = [val[0]]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 495)
  def _reduce_252(val, _values, result)
    		                result = [val[1]]
		              
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 499)
  def _reduce_253(val, _values, result)
    		                result = val[0] + [val[2]]
		              
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 503)
  def _reduce_254(val, _values, result)
    		                result = val[0] + [val[3]]
		              
    result
  end
.,.,

# reduce 255 omitted

# reduce 256 omitted

# reduce 257 omitted

# reduce 258 omitted

# reduce 259 omitted

# reduce 260 omitted

# reduce 261 omitted

# reduce 262 omitted

# reduce 263 omitted

# reduce 264 omitted

# reduce 265 omitted

# reduce 266 omitted

# reduce 267 omitted

# reduce 268 omitted

# reduce 269 omitted

# reduce 270 omitted

# reduce 271 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 526)
  def _reduce_272(val, _values, result)
                		    result = node :array, :args => val[1]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 530)
  def _reduce_273(val, _values, result)
                		    result = node :assoc_list, :list => val[1]
            		  
    result
  end
.,.,

# reduce 274 omitted

# reduce 275 omitted

# reduce 276 omitted

# reduce 277 omitted

# reduce 278 omitted

# reduce 279 omitted

# reduce 280 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 541)
  def _reduce_281(val, _values, result)
                		    puts 1
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 545)
  def _reduce_282(val, _values, result)
                		    puts 2
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 549)
  def _reduce_283(val, _values, result)
                		    val[0][:brace_block] = val[1]
            		    result = val[0]
            		  
    result
  end
.,.,

# reduce 284 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 555)
  def _reduce_285(val, _values, result)
                		    result = self.node :if, :expr => val[1], :compstmt => val[3], :tail => val[4]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 559)
  def _reduce_286(val, _values, result)
                		    result = self.node :unless, :expr => val[1], :compstmt => val[3], :tail => val[4]
            		  
    result
  end
.,.,

# reduce 287 omitted

# reduce 288 omitted

# reduce 289 omitted

# reduce 290 omitted

# reduce 291 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 568)
  def _reduce_292(val, _values, result)
                		    result = self.node_class(:cpath => val[1], :superclass => val[2], :bodystmt => val[3])
            		  
    result
  end
.,.,

# reduce 293 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 573)
  def _reduce_294(val, _values, result)
                		    result = self.node_module(:cpath => val[1], :body => val[2])
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 577)
  def _reduce_295(val, _values, result)
                		    result = self.node :def, :fname => val[1], :arglist => val[2], :bodystmt => val[3]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 581)
  def _reduce_296(val, _values, result)
                		    result = self.node :def, :singleton => val[1], :fname => val[3], :arglist => val[4], :bodystmt => val[5]
            		  
    result
  end
.,.,

# reduce 297 omitted

# reduce 298 omitted

# reduce 299 omitted

# reduce 300 omitted

# reduce 301 omitted

# reduce 302 omitted

# reduce 303 omitted

# reduce 304 omitted

# reduce 305 omitted

# reduce 306 omitted

# reduce 307 omitted

# reduce 308 omitted

# reduce 309 omitted

# reduce 310 omitted

# reduce 311 omitted

# reduce 312 omitted

# reduce 313 omitted

# reduce 314 omitted

# reduce 315 omitted

# reduce 316 omitted

# reduce 317 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 621)
  def _reduce_318(val, _values, result)
                        result = val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 625)
  def _reduce_319(val, _values, result)
                  	    result = [self.node(:elsif, :expr => val[1], :compstmt => val[3])] + val[4]
              	  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 630)
  def _reduce_320(val, _values, result)
                        result = []
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 634)
  def _reduce_321(val, _values, result)
                  	    result = [self.node(:else, :compstmt => val[1])]
              	  
    result
  end
.,.,

# reduce 322 omitted

# reduce 323 omitted

# reduce 324 omitted

# reduce 325 omitted

# reduce 326 omitted

# reduce 327 omitted

# reduce 328 omitted

# reduce 329 omitted

# reduce 330 omitted

# reduce 331 omitted

# reduce 332 omitted

# reduce 333 omitted

# reduce 334 omitted

# reduce 335 omitted

# reduce 336 omitted

# reduce 337 omitted

# reduce 338 omitted

# reduce 339 omitted

# reduce 340 omitted

# reduce 341 omitted

# reduce 342 omitted

# reduce 343 omitted

# reduce 344 omitted

# reduce 345 omitted

# reduce 346 omitted

# reduce 347 omitted

# reduce 348 omitted

# reduce 349 omitted

# reduce 350 omitted

# reduce 351 omitted

# reduce 352 omitted

# reduce 353 omitted

# reduce 354 omitted

# reduce 355 omitted

# reduce 356 omitted

# reduce 357 omitted

# reduce 358 omitted

# reduce 359 omitted

# reduce 360 omitted

# reduce 361 omitted

# reduce 362 omitted

# reduce 363 omitted

# reduce 364 omitted

# reduce 365 omitted

# reduce 366 omitted

# reduce 367 omitted

# reduce 368 omitted

# reduce 369 omitted

# reduce 370 omitted

# reduce 371 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 704)
  def _reduce_372(val, _values, result)
                        result = node :call, :recv => nil, :meth => val[0], :args => val[1]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 708)
  def _reduce_373(val, _values, result)
                        result = node :call, :recv => val[0], :meth => val[2], :args => val[3]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 712)
  def _reduce_374(val, _values, result)
                  	    puts 'SCOOOBY DOOOOOOOOOOOOOOOOOOOOOOOOOOOOO 2'
              	  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 716)
  def _reduce_375(val, _values, result)
                  	    puts 'SCOOOBY DOOOOOOOOOOOOOOOOOOOOOOOOOOOOO 3'
              	  
    result
  end
.,.,

# reduce 376 omitted

# reduce 377 omitted

# reduce 378 omitted

# reduce 379 omitted

# reduce 380 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 728)
  def _reduce_381(val, _values, result)
                      
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 731)
  def _reduce_382(val, _values, result)
                		    result = node :brace_block, :params => val[1], :compstmt => val[2]
            		  
    result
  end
.,.,

# reduce 383 omitted

# reduce 384 omitted

# reduce 385 omitted

# reduce 386 omitted

# reduce 387 omitted

# reduce 388 omitted

# reduce 389 omitted

# reduce 390 omitted

# reduce 391 omitted

# reduce 392 omitted

# reduce 393 omitted

# reduce 394 omitted

# reduce 395 omitted

# reduce 396 omitted

# reduce 397 omitted

# reduce 398 omitted

# reduce 399 omitted

# reduce 400 omitted

# reduce 401 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 764)
  def _reduce_402(val, _values, result)
                        result = node :string, :value => val[1]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 769)
  def _reduce_403(val, _values, result)
                        result = node :xstring, :value => val[1]
                  
    result
  end
.,.,

# reduce 404 omitted

# reduce 405 omitted

# reduce 406 omitted

# reduce 407 omitted

# reduce 408 omitted

# reduce 409 omitted

# reduce 410 omitted

# reduce 411 omitted

# reduce 412 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 788)
  def _reduce_413(val, _values, result)
                        # none..
                    result = []
                  
    result
  end
.,.,

# reduce 414 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 795)
  def _reduce_415(val, _values, result)
                        # none..
                    result = []
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 800)
  def _reduce_416(val, _values, result)
                		    result = val[0] + [val[1]]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 805)
  def _reduce_417(val, _values, result)
                        # none..
                    result = []
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 810)
  def _reduce_418(val, _values, result)
                		    result = val[0] + [val[1]]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 815)
  def _reduce_419(val, _values, result)
                        result = node :string_content, :value => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 819)
  def _reduce_420(val, _values, result)
                        result = node :string_dvar, :value => val[1]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 823)
  def _reduce_421(val, _values, result)
                        result = node :string_dbeg, :value => val[1]
                  
    result
  end
.,.,

# reduce 422 omitted

# reduce 423 omitted

# reduce 424 omitted

# reduce 425 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 833)
  def _reduce_426(val, _values, result)
                        result = node :symbol, :name => val[1]
                  
    result
  end
.,.,

# reduce 427 omitted

# reduce 428 omitted

# reduce 429 omitted

# reduce 430 omitted

# reduce 431 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 845)
  def _reduce_432(val, _values, result)
                        result = node :numeric, :value => val[0], :float => false
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 849)
  def _reduce_433(val, _values, result)
                        result = node :numeric, :value => val[0], :float => true
                  
    result
  end
.,.,

# reduce 434 omitted

# reduce 435 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 856)
  def _reduce_436(val, _values, result)
                        result = node :identifier, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 860)
  def _reduce_437(val, _values, result)
                        result = node :ivar, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 864)
  def _reduce_438(val, _values, result)
                        result = node :gvar, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 868)
  def _reduce_439(val, _values, result)
                        result = node :constant, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 872)
  def _reduce_440(val, _values, result)
                        result = node :cvar, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 876)
  def _reduce_441(val, _values, result)
                        result = node :nil, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 880)
  def _reduce_442(val, _values, result)
                        result = node :self, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 884)
  def _reduce_443(val, _values, result)
                        result = node :true, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 888)
  def _reduce_444(val, _values, result)
                        result = node :false, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 892)
  def _reduce_445(val, _values, result)
                        result = node :__FILE__, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 896)
  def _reduce_446(val, _values, result)
                        result = node :__LINE__, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 900)
  def _reduce_447(val, _values, result)
                        result = node :__ENCODING__, :name => val[0]
                  
    result
  end
.,.,

# reduce 448 omitted

# reduce 449 omitted

# reduce 450 omitted

# reduce 451 omitted

# reduce 452 omitted

# reduce 453 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 912)
  def _reduce_454(val, _values, result)
     puts 'OMFG' 
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 916)
  def _reduce_455(val, _values, result)
                        result = val[1]
                    self.lex_state = :EXPR_BEG
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 921)
  def _reduce_456(val, _values, result)
                        result = val[0]
                    self.lex_state = :EXPR_BEG
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 927)
  def _reduce_457(val, _values, result)
                 		    result = node :arg, :arg => val[0], :optarg => val[2], :rest_arg => val[4], :opt_block_arg => val[5]
             		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 931)
  def _reduce_458(val, _values, result)
                 		    result = node :arg, :arg => val[0], :optarg => val[2], :rest_arg => val[4], :arg2 => val[6], :opt_block_arg => val[7]
             		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 935)
  def _reduce_459(val, _values, result)
                  	    result = node :arg, :arg => val[0], :optarg => val[2], :opt_block_arg => val[3]
              	  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 939)
  def _reduce_460(val, _values, result)
                  	    result = node :arg, :arg => val[0], :optarg => val[2], :arg2 => val[4], :opt_block_arg => val[5]
              	  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 943)
  def _reduce_461(val, _values, result)
                		    result = node :arg, :arg => val[0], :rest_arg => val[2], :opt_block_arg => val[3]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 947)
  def _reduce_462(val, _values, result)
                		    result = node :arg, :arg => val[0], :rest_arg => val[2], :arg2 => val[4], :opt_block_arg => val[5]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 951)
  def _reduce_463(val, _values, result)
                 		    result = node :arg, :arg => val[0], :opt_block_arg => val[1]
             		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 955)
  def _reduce_464(val, _values, result)
                		    result = node :optarg, :optarg => val[0], :rest_arg => val[2], :opt_block_arg => val[3]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 959)
  def _reduce_465(val, _values, result)
                		    result = node :optarg, :optarg => val[0], :rest_arg => val[2], :arg => val[4], :opt_block_arg => val[5]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 963)
  def _reduce_466(val, _values, result)
                 		    result = node :optarg, :optarg => val[0], :opt_block_arg => val[1]
             		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 967)
  def _reduce_467(val, _values, result)
                 		    result = node :optarg, :optarg => val[0], :arg => val[2], :opt_block_arg => val[3]
             		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 971)
  def _reduce_468(val, _values, result)
                 		    result = node :rest_arg, :rest_arg => val[0], :opt_block_arg => val[1]
             		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 975)
  def _reduce_469(val, _values, result)
                 		    result = node :rest_arg, :rest_arg => val[0], :arg => val[2], :opt_block_arg => val[3]
             		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 979)
  def _reduce_470(val, _values, result)
                 		    result = node :arg, :opt_block_arg => val[0]
             		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 983)
  def _reduce_471(val, _values, result)
                  	    # none...
              	    result = nil
              	  
    result
  end
.,.,

# reduce 472 omitted

# reduce 473 omitted

# reduce 474 omitted

# reduce 475 omitted

# reduce 476 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 995)
  def _reduce_477(val, _values, result)
                        # result = val[0]
              	    result = node :norm_arg, :value => val[0]
              	  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1001)
  def _reduce_478(val, _values, result)
                      
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1004)
  def _reduce_479(val, _values, result)
                        result = node :label_arg, :name => val[0], :value => val[1]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1009)
  def _reduce_480(val, _values, result)
                        result = val[0]
                  
    result
  end
.,.,

# reduce 481 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1015)
  def _reduce_482(val, _values, result)
                        result = [val[0]]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1019)
  def _reduce_483(val, _values, result)
                        # val[0] + val[2]
                    result = val[0] + [val[2]]
            		  
    result
  end
.,.,

# reduce 484 omitted

# reduce 485 omitted

# reduce 486 omitted

# reduce 487 omitted

# reduce 488 omitted

# reduce 489 omitted

# reduce 490 omitted

# reduce 491 omitted

# reduce 492 omitted

# reduce 493 omitted

# reduce 494 omitted

# reduce 495 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1044)
  def _reduce_496(val, _values, result)
                        result = val[1]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1049)
  def _reduce_497(val, _values, result)
                        result = val[1]
                  
    result
  end
.,.,

# reduce 498 omitted

# reduce 499 omitted

# reduce 500 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1058)
  def _reduce_501(val, _values, result)
                        result = []
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1062)
  def _reduce_502(val, _values, result)
                  	    result = val[0]
              	  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1067)
  def _reduce_503(val, _values, result)
                        result = [val[0]]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1071)
  def _reduce_504(val, _values, result)
                		    result = val[0] + [val[2]]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1076)
  def _reduce_505(val, _values, result)
                        result = node :assoc, :key => val[0], :value => val[2]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1080)
  def _reduce_506(val, _values, result)
                        result = node :assoc, :key => val[0], :value => val[1]
                  
    result
  end
.,.,

# reduce 507 omitted

# reduce 508 omitted

# reduce 509 omitted

# reduce 510 omitted

# reduce 511 omitted

# reduce 512 omitted

# reduce 513 omitted

# reduce 514 omitted

# reduce 515 omitted

# reduce 516 omitted

# reduce 517 omitted

# reduce 518 omitted

# reduce 519 omitted

# reduce 520 omitted

# reduce 521 omitted

# reduce 522 omitted

# reduce 523 omitted

# reduce 524 omitted

# reduce 525 omitted

# reduce 526 omitted

# reduce 527 omitted

# reduce 528 omitted

# reduce 529 omitted

# reduce 530 omitted

# reduce 531 omitted

# reduce 532 omitted

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class RubyParser
  end   # module Vienna


