#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.6
# from Racc grammer file "".
#

require 'racc/parser.rb'


# require 'ctokenizer'
require 'strscan'

module Vienna
  class RubyParser < Racc::Parser

module_eval(<<'...end ruby_parser.rb.y/module_eval...', 'ruby_parser.rb.y', 1250)


...end ruby_parser.rb.y/module_eval...
##### State transition tables begin ###

clist = [
'-272,-10,546,-66,-272,-272,-272,-272,-272,-272,399,400,-98,749,-272',
'-272,519,-272,-272,-272,-272,-272,-272,-272,-272,-272,-272,-272,-272',
'-272,-272,-272,-272,-272,-272,-272,-272,-272,-272,-272,-272,399,400',
'-272,522,399,400,399,400,399,400,356,-272,-272,-272,-100,381,807,-272',
'-272,-272,-272,-518,-97,755,808,-518,-518,-518,-518,-518,-518,138,809',
'-96,746,-518,-518,655,-518,-518,-518,-518,-518,-518,-518,-518,-518,-518',
'-518,-518,-518,-518,-518,-518,-518,-518,-518,-518,-518,-518,-518,-518',
'429,-272,-518,-94,356,357,242,437,243,-95,752,-518,-518,-518,655,-94',
'-96,-518,-518,-80,-518,-449,-93,-452,442,-272,-272,-272,-90,-518,-272',
'-272,-95,-272,-10,-272,-10,350,615,-97,-100,-99,574,-94,846,614,617',
'-449,242,149,243,399,400,614,-97,-272,-272,-272,435,315,812,357,-272',
'-518,430,-447,242,110,243,118,76,-92,350,-87,350,814,350,-86,-88,-89',
'-514,816,-94,-89,-94,316,-518,-518,-518,-518,-88,-447,617,-518,430,-518',
'817,-518,427,614,26,32,-92,599,50,55,58,64,71,599,124,-95,818,-95,100',
'106,-89,-96,-97,24,-97,36,43,47,116,117,65,72,-87,599,-87,649,-99,130',
'107,6,10,17,21,30,-89,-85,-98,599,57,63,70,78,85,86,90,93,98,132,4,11',
'493,23,29,34,-91,599,-86,242,120,243,122,81,494,92,96,131,134,8,12,18',
'22,31,35,41,66,76,242,806,243,546,427,427,242,493,243,350,-87,-514,-91',
'-87,-96,350,-96,-87,-518,494,-89,458,-90,-89,-515,629,242,-89,243,26',
'32,617,45,50,55,58,64,71,614,124,242,110,243,100,106,454,455,-93,24',
'-95,36,43,47,51,62,65,72,-518,242,-446,243,701,101,107,6,10,17,21,30',
'242,242,243,243,57,63,70,78,85,86,90,93,98,422,4,11,-446,23,29,34,-448',
'350,-518,349,120,504,122,81,350,92,96,66,76,8,12,18,22,31,35,41,-85',
'242,-87,243,493,-518,-448,-518,-518,-518,505,506,493,-272,-518,242,494',
'243,258,493,-537,-537,26,32,494,45,50,55,58,64,71,494,124,276,803,278',
'100,106,-272,-272,110,24,-515,36,43,47,51,62,65,72,-518,624,242,518',
'243,101,107,6,10,17,21,30,516,517,565,546,57,63,70,78,85,86,90,93,98',
'350,4,11,359,23,29,34,-450,523,-518,798,120,525,122,81,566,92,96,66',
'76,8,12,18,22,31,35,41,783,360,361,854,727,-518,-450,-518,-518,-272',
'446,-514,148,150,153,157,451,350,388,389,390,391,26,32,-439,45,50,55',
'58,64,71,80,124,350,-272,-272,100,106,-515,612,242,24,243,36,43,47,51',
'62,65,72,-439,607,138,666,602,101,107,6,10,17,21,30,38,796,-442,52,57',
'63,70,78,85,86,90,93,98,826,4,11,509,23,29,34,-444,-253,66,76,68,597',
'79,81,-442,92,96,104,831,8,12,18,22,31,35,41,-272,414,510,399,400,446',
'-444,148,150,153,157,159,596,26,32,462,45,50,55,58,64,71,80,82,161,-272',
'-272,100,106,-515,149,727,24,460,36,43,47,51,62,65,72,242,350,243,-511',
'-254,101,107,6,10,17,21,30,38,350,-445,52,57,63,70,78,85,86,90,93,98',
'546,4,11,458,23,29,34,258,538,-537,-537,68,-439,79,81,-445,92,96,104',
'-65,8,12,18,22,31,35,41,454,455,511,197,201,206,215,537,-511,794,-439',
'-439,280,281,-511,462,171,178,183,187,189,192,198,203,208,212,217,220',
'226,229,232,236,240,164,166,172,792,180,185,190,194,200,204,209,213',
'216,221,225,228,230,234,238,165,167,173,176,179,184,188,191,196,205',
'210,214,218,222,-383,458,-273,235,239,163,336,338,339,340,186,458,840',
'-303,342,343,345,346,223,86,90,347,98,-267,841,454,455,-273,-273,526',
'497,193,199,576,-383,454,455,489,-303,-303,446,237,148,150,153,157,451',
'576,-267,-267,197,201,206,215,527,528,242,-383,243,-383,-383,241,335',
'171,178,183,187,189,192,198,203,208,212,217,220,226,229,232,236,240',
'164,166,172,872,180,185,190,194,200,204,209,213,216,221,225,228,230',
'234,238,165,167,173,176,179,184,188,191,196,205,210,214,218,222,458',
'548,-451,235,239,163,168,174,177,182,186,-273,546,603,202,207,211,219',
'223,-273,847,231,-267,791,454,455,456,-451,-451,413,258,193,199,923',
'-228,-226,-273,-273,604,605,576,237,399,400,-273,-273,350,-267,-267',
'197,201,206,215,539,414,415,-93,-452,924,925,536,241,171,178,183,187',
'189,192,198,203,208,212,217,220,226,229,232,236,240,164,166,172,785',
'180,185,190,194,200,204,209,213,216,221,225,228,230,234,238,165,167',
'173,176,179,184,188,191,196,205,210,214,218,222,912,783,540,235,239',
'163,168,174,177,182,186,-451,-100,421,202,207,211,219,223,305,546,231',
'854,727,350,527,528,527,541,458,514,193,199,508,-97,778,-451,-451,-95',
'777,430,237,-94,863,12,388,389,390,391,197,201,206,215,454,455,387,-99',
'574,500,501,422,241,171,178,183,187,189,192,198,203,208,212,217,220',
'226,229,232,236,240,164,166,172,773,180,185,190,194,200,204,209,213',
'216,221,225,228,230,234,238,165,167,173,176,179,184,188,191,196,205',
'210,214,218,222,-228,-226,420,235,239,163,168,174,177,182,186,727,546',
'773,202,207,211,219,223,404,350,231,350,446,503,148,150,153,157,451',
'502,193,199,350,446,110,148,150,153,157,451,237,452,865,12,671,672,449',
'673,197,201,206,215,452,29,34,499,498,800,667,870,241,171,178,183,187',
'189,192,198,203,208,212,217,220,226,229,232,236,240,164,166,172,350',
'180,185,190,194,200,204,209,213,216,221,225,228,230,234,238,165,167',
'173,176,179,184,188,191,196,205,210,214,218,222,773,468,465,235,239',
'163,168,174,177,182,186,462,877,460,202,207,211,219,223,442,460,231',
'445,446,441,148,150,153,157,451,546,193,199,440,446,438,148,150,153',
'157,451,237,452,258,12,265,268,449,-226,197,201,206,215,452,786,433',
'148,150,153,157,-255,241,171,178,183,187,189,192,198,203,208,212,217',
'220,226,229,232,236,240,164,166,172,546,180,185,190,194,200,204,209',
'213,216,221,225,228,230,234,238,165,167,173,176,179,184,188,191,196',
'205,210,214,218,222,767,895,422,235,239,163,168,174,177,182,186,350',
'546,420,202,207,211,219,223,224,227,231,233,446,773,148,150,153,157',
'451,546,193,199,418,446,783,148,150,153,157,451,237,452,760,388,389',
'390,391,783,197,201,206,215,452,387,786,905,148,150,153,157,241,171',
'178,183,187,189,192,198,203,208,212,217,220,226,229,232,236,240,164',
'166,172,783,180,185,190,194,200,204,209,213,216,221,225,228,230,234',
'238,165,167,173,176,179,184,188,191,196,205,210,214,218,222,870,-80',
'907,235,239,163,168,174,177,182,186,350,350,739,202,207,211,219,223',
'-516,-516,231,412,446,914,148,150,153,157,451,916,193,199,446,783,148',
'150,153,157,451,919,237,452,258,12,265,268,-228,-226,783,-516,-516,452',
'546,-516,-516,-516,-516,-516,922,-516,241,411,349,-516,-516,410,406',
'-256,-516,662,-516,-516,-516,-516,-516,-516,-516,18,592,138,-253,870',
'-516,-516,-516,-516,-516,-516,-516,546,382,350,732,-516,-516,-516,-516',
'-516,-516,-516,-516,-516,-516,-516,-516,353,-516,-516,-516,352,718,-517',
'-517,-516,334,-516,-516,548,-516,-516,-516,-516,-516,-516,-516,-516',
'-516,-516,-516,331,783,870,783,945,446,783,148,150,153,157,159,-516',
'-517,-517,783,328,-517,-517,-517,-517,-517,317,-517,161,350,299,-517',
'-517,730,149,-233,-517,727,-517,-517,-517,-517,-517,-517,-517,109,783',
'138,,,-517,-517,-517,-517,-517,-517,-517,,,,,-517,-517,-517,-517,-517',
'-517,-517,-517,-517,-517,-517,-517,,-517,-517,-517,,,118,76,-517,,-517',
'-517,,-517,-517,-517,-517,-517,-517,-517,-517,-517,-517,-517,,,,,,446',
',148,150,153,157,159,-517,26,32,,,50,55,58,64,71,,124,161,,,100,106',
',149,,24,,36,43,47,116,117,65,72,,,138,,,130,107,6,10,17,21,30,,,,,57',
'63,70,78,85,86,90,93,98,132,4,11,,23,29,34,,,118,76,120,,122,81,,92',
'96,131,134,8,12,18,22,31,35,41,,,,,,446,,148,150,153,157,159,110,26',
'32,,,50,55,58,64,71,,124,161,,,100,106,,149,,24,,36,43,47,116,117,65',
'72,,,138,,,130,107,6,10,17,21,30,,,,,57,63,70,78,85,86,90,93,98,132',
'4,11,,23,29,34,,,118,76,120,,122,81,,92,96,131,134,8,12,18,22,31,35',
'41,,,,,,446,,148,150,153,157,159,110,26,32,,,50,55,58,64,71,,124,161',
',,100,106,,149,,24,,36,43,47,116,117,65,72,,,138,,,130,293,282,10,17',
'21,30,,,,,57,63,70,78,85,86,90,93,98,,4,11,,23,29,34,,,118,76,120,,122',
'81,,92,96,,,8,12,18,22,31,35,41,,,,,,446,,148,150,153,157,159,592,26',
'32,,,50,55,58,64,71,,124,161,,,100,106,,149,,24,,36,43,47,116,117,65',
'72,,,,,,130,107,6,10,17,21,30,,,,,57,63,70,78,85,86,90,93,98,132,4,11',
',23,29,34,,,,,120,,122,81,,92,96,131,134,8,12,18,22,31,35,41,,,118,76',
',,,258,-525,265,268,-228,110,271,248,252,255,256,259,261,263,266,269',
'270,272,249,251,254,257,260,262,264,267,26,32,273,,50,55,58,64,71,,124',
',,,100,106,,,,24,,36,43,47,116,117,65,72,138,,,,,130,107,6,10,17,21',
'30,,,,,57,63,70,78,85,86,90,93,98,132,4,11,,23,29,34,,,,,120,,122,81',
',92,96,131,134,8,12,18,22,31,35,41,118,76,,446,,148,150,153,157,159',
',,404,388,389,390,391,350,,,,,161,387,388,389,390,391,149,,,26,32,,387',
'50,55,58,64,71,,124,,,,100,106,,,,24,,36,43,47,116,117,65,72,,,138,',
',130,107,6,10,17,21,30,,,,,57,63,70,78,85,86,90,93,98,132,4,11,,23,29',
'34,,,-511,-511,120,,122,81,,92,96,131,134,8,12,18,22,31,35,41,,,,,,446',
',148,150,153,157,159,110,-511,-511,,,-511,-511,-511,-511,-511,,-511',
'161,,,-511,-511,,149,,-511,,-511,-511,-511,-511,-511,-511,-511,,,138',
',,-511,-511,-511,-511,-511,-511,-511,,,,,-511,-511,-511,-511,-511,-511',
'-511,-511,-511,-511,-511,-511,,-511,-511,-511,,,118,76,-511,,-511,-511',
',-511,-511,-511,-511,-511,-511,-511,-511,-511,-511,-511,,,,,,446,-511',
'148,150,153,157,159,-511,26,32,,,50,55,58,64,71,,124,161,,,100,106,',
'149,,24,,36,43,47,116,117,65,72,,356,,,,130,107,6,10,17,21,30,,,,,57',
'63,70,78,85,86,90,93,98,132,4,11,,23,29,34,,,118,76,120,,122,81,,92',
'96,131,134,8,12,18,22,31,35,41,,,,,,,357,,,,,,110,26,32,,,50,55,58,64',
'71,,124,,,,100,106,,,,24,,36,43,47,116,117,65,72,,,,,,130,107,6,10,17',
'21,30,,,,,57,63,70,78,85,86,90,93,98,132,4,11,,23,29,34,,,-513,-513',
'120,,122,81,,92,96,131,134,8,12,18,22,31,35,41,258,,265,268,,,-537,-537',
'-537,-537,-537,-537,110,-513,-513,,,-513,-513,-513,-513,-513,,-513,',
',,-513,-513,,,,-513,,-513,-513,-513,-513,-513,-513,-513,-512,,,,,-513',
'-513,-513,-513,-513,-513,-513,,,,,-513,-513,-513,-513,-513,-513,-513',
'-513,-513,-513,-513,-513,,-513,-513,-513,,,-442,,-513,,-513,-513,,-513',
'-513,-513,-513,-513,-513,-513,-513,-513,-513,-513,-514,-514,-96,775',
',-512,-513,-442,-442,,,-512,-513,258,,265,268,,,271,248,252,255,256',
'259,261,263,266,269,270,272,-514,-514,,,-514,-514,-514,-514,-514,,-514',
',,,-514,-514,,,,-514,,-514,-514,-514,-514,-514,-514,-514,-518,,,,,-514',
'-514,-514,-514,-514,-514,-514,,,,,-514,-514,-514,-514,-514,-514,-514',
'-514,-514,-514,-514,-514,,-514,-514,-514,,,-518,,-514,,-514,-514,,-514',
'-514,-514,-514,-514,-514,-514,-514,-514,-514,-514,-515,-515,-98,749',
',-518,,-518,-518,,,-514,-514,258,,265,268,,,271,248,252,255,256,259',
'261,263,266,269,,,-515,-515,,,-515,-515,-515,-515,-515,,-515,,,,-515',
'-515,,,,-515,,-515,-515,-515,-515,-515,-515,-515,,,,,,-515,-515,-515',
'-515,-515,-515,-515,,,,,-515,-515,-515,-515,-515,-515,-515,-515,-515',
'-515,-515,-515,,-515,-515,-515,,,-512,-512,-515,,-515,-515,,-515,-515',
'-515,-515,-515,-515,-515,-515,-515,-515,-515,258,,265,268,,,271,248',
'252,255,256,259,-515,-512,-512,,,-512,-512,-512,-512,-512,,-512,,,,-512',
'-512,,,,-512,,-512,-512,-512,-512,-512,-512,-512,,,,,,-512,-512,-512',
'-512,-512,-512,-512,,,,,-512,-512,-512,-512,-512,-512,-512,-512,-512',
'-512,-512,-512,,-512,-512,-512,118,291,,,-512,,-512,-512,,-512,-512',
'-512,-512,-512,-512,-512,-512,-512,-512,-512,,,,,,,-512,,,,,283,-512',
',,,,58,64,71,,124,,,,100,106,,,,24,,36,43,47,116,117,65,72,,,,,,130',
'293,282,10,17,21,30,,,,,57,63,70,78,85,86,90,93,98,,4,11,,23,29,34,118',
'291,,,374,,122,81,,92,96,,,8,12,18,22,31,35,41,,,,,,,,,,,402,283,,,',
',,58,64,71,,124,,,,100,106,,,,24,,36,43,47,116,117,65,72,,,,,,130,293',
'282,10,17,21,30,,,,,57,63,70,78,85,86,90,93,98,15,4,11,,23,29,34,,,66',
'76,374,,122,81,,92,96,,,8,12,18,22,31,35,41,,,,,,,,,,,609,,,26,32,,45',
'50,55,58,64,71,80,82,,,,100,106,,,,24,,36,43,47,51,62,65,72,,,,,,101',
'107,6,10,17,21,30,38,,,52,57,63,70,78,85,86,90,93,98,322,4,11,,23,29',
'34,,,66,76,68,,79,81,,92,96,104,,8,12,18,22,31,35,41,258,,265,268,,',
'271,248,252,255,256,259,,26,32,,45,50,55,58,64,71,80,124,,,,100,106',
',,,24,,36,43,47,51,62,65,72,,,,,,101,107,6,10,17,21,30,38,,,52,57,63',
'70,78,85,86,90,93,98,322,4,11,,23,29,34,,,66,76,68,,367,81,,92,96,104',
',8,12,18,22,31,35,41,258,,265,268,,,-537,-537,-537,-537,-537,-537,,26',
'32,,45,50,55,58,64,71,80,124,,,,100,106,,,,24,,36,43,47,51,62,65,72',
',,,,,101,107,6,10,17,21,30,38,,,52,57,63,70,78,85,86,90,93,98,322,4',
'11,,23,29,34,,,66,76,68,,79,81,,92,96,104,,8,12,18,22,31,35,41,258,',
'265,268,,,271,248,252,255,256,259,,26,32,,45,50,55,58,64,71,80,124,',
',,100,106,,,,24,,36,43,47,51,62,65,72,,,,,,101,107,6,10,17,21,30,38',
',,52,57,63,70,78,85,86,90,93,98,322,4,11,,23,29,34,,,66,76,68,,79,81',
',92,96,104,,8,12,18,22,31,35,41,258,,265,268,,,-537,-537,-537,-537,-537',
'-537,,26,32,,45,50,55,58,64,71,80,124,,,,100,106,,,,24,,36,43,47,51',
'62,65,72,,,,,,101,107,6,10,17,21,30,38,,,52,57,63,70,78,85,86,90,93',
'98,322,4,11,,23,29,34,,,66,76,68,,79,81,,92,96,104,,8,12,18,22,31,35',
'41,258,,265,268,,,271,248,252,255,256,259,,26,32,,45,50,55,58,64,71',
'80,124,,,,100,106,,,,24,,36,43,47,51,62,65,72,,,,,,101,107,6,10,17,21',
'30,38,,,52,57,63,70,78,85,86,90,93,98,322,4,11,,23,29,34,,,66,76,68',
',79,81,,92,96,104,,8,12,18,22,31,35,41,258,,265,268,,,-537,-537,-537',
'-537,-537,-537,,26,32,,45,50,55,58,64,71,80,124,,,,100,106,,,,24,,36',
'43,47,51,62,65,72,,,,,,101,107,6,10,17,21,30,38,,,52,57,63,70,78,85',
'86,90,93,98,322,4,11,,23,29,34,,,66,76,68,,79,81,,92,96,104,,8,12,18',
'22,31,35,41,258,,265,268,,,-537,-537,-537,-537,-537,-537,,26,32,,45',
'50,55,58,64,71,80,124,,,,100,106,,,,24,,36,43,47,51,62,65,72,,,,,,101',
'107,6,10,17,21,30,38,,,52,57,63,70,78,85,86,90,93,98,322,4,11,,23,29',
'34,,,66,76,68,,79,81,,92,96,104,,8,12,18,22,31,35,41,258,,265,268,,',
'-537,-537,-537,-537,-537,-537,,26,32,,45,50,55,58,64,71,80,124,,,,100',
'106,,,,24,,36,43,47,51,62,65,72,,,,,,101,107,6,10,17,21,30,38,,,52,57',
'63,70,78,85,86,90,93,98,322,4,11,,23,29,34,,,66,76,68,,79,81,,92,96',
'104,,8,12,18,22,31,35,41,,,,,,,,,,,,,,26,32,,45,50,55,58,64,71,80,124',
',,,100,106,,,,24,,36,43,47,51,62,65,72,,,,,,101,107,6,10,17,21,30,38',
',,52,57,63,70,78,85,86,90,93,98,322,4,11,,23,29,34,,,66,76,68,,367,81',
',92,96,104,,8,12,18,22,31,35,41,,,,,,,,,,,,,,26,32,,45,50,55,58,64,71',
'80,124,,,,100,106,,,,24,,36,43,47,51,62,65,72,,,,,,101,107,6,10,17,21',
'30,38,,,52,57,63,70,78,85,86,90,93,98,322,4,11,,23,29,34,,,66,76,68',
',79,81,,92,96,104,,8,12,18,22,31,35,41,,,,,,,,,,,,,,26,32,,45,50,55',
'58,64,71,80,124,,,,100,106,,,,24,,36,43,47,51,62,65,72,,,,,,101,107',
'6,10,17,21,30,38,,,52,57,63,70,78,85,86,90,93,98,322,4,11,,23,29,34',
',,66,76,68,,367,81,,92,96,104,,8,12,18,22,31,35,41,,,,,,,,,,,,,,26,32',
',45,50,55,58,64,71,80,124,,,,100,106,,,,24,,36,43,47,51,62,65,72,,,',
',,101,107,6,10,17,21,30,38,,,52,57,63,70,78,85,86,90,93,98,322,4,11',
',23,29,34,,,66,76,68,,79,81,,92,96,104,,8,12,18,22,31,35,41,,,,,,,,',
',,,,,26,32,,45,50,55,58,64,71,80,124,,,,100,106,,,,24,,36,43,47,51,62',
'65,72,,,,,,101,107,6,10,17,21,30,38,,,52,57,63,70,78,85,86,90,93,98',
'322,4,11,,23,29,34,,,66,76,68,,79,81,,92,96,104,,8,12,18,22,31,35,41',
',,,,,,,,,,,,,26,32,,45,50,55,58,64,71,80,124,,,,100,106,,,,24,,36,43',
'47,51,62,65,72,,,,,,101,107,6,10,17,21,30,38,,,52,57,63,70,78,85,86',
'90,93,98,322,4,11,,23,29,34,,,66,76,68,,79,81,,92,96,104,,8,12,18,22',
'31,35,41,,,,,,,,,,,,,,26,32,,45,50,55,58,64,71,80,124,,,,100,106,,,',
'24,,36,43,47,51,62,65,72,,,,,,101,107,6,10,17,21,30,38,,,52,57,63,70',
'78,85,86,90,93,98,322,4,11,,23,29,34,,,66,76,68,,79,81,,92,96,104,,8',
'12,18,22,31,35,41,,,,,,,,,,,,,,26,32,,45,50,55,58,64,71,80,124,,,,100',
'106,,,,24,,36,43,47,51,62,65,72,,,,,,101,107,6,10,17,21,30,38,,,52,57',
'63,70,78,85,86,90,93,98,322,4,11,,23,29,34,,,66,76,68,,79,81,,92,96',
'104,,8,12,18,22,31,35,41,,,,,,,,,,,,,,26,32,,45,50,55,58,64,71,80,124',
',,,100,106,,,,24,,36,43,47,51,62,65,72,,,,,,101,107,6,10,17,21,30,38',
',,52,57,63,70,78,85,86,90,93,98,322,4,11,,23,29,34,,,66,76,68,,79,81',
',92,96,104,,8,12,18,22,31,35,41,,,,,,,,,,,,,,26,32,,45,50,55,58,64,71',
'80,124,,,,100,106,,,,24,,36,43,47,51,62,65,72,,,,,,101,107,6,10,17,21',
'30,38,,,52,57,63,70,78,85,86,90,93,98,322,4,11,,23,29,34,,,66,76,68',
',79,81,,92,96,104,,8,12,18,22,31,35,41,,,,,,,,,,,,,,26,32,,45,50,55',
'58,64,71,80,124,,,,100,106,,,,24,,36,43,47,51,62,65,72,,,,,,101,107',
'6,10,17,21,30,38,,,52,57,63,70,78,85,86,90,93,98,322,4,11,,23,29,34',
',,66,76,68,,79,81,,92,96,104,,8,12,18,22,31,35,41,,,,,,,,,,,,,,26,32',
',45,50,55,58,64,71,80,124,,,,100,106,,,,24,,36,43,47,51,62,65,72,,,',
',,101,107,6,10,17,21,30,38,,,52,57,63,70,78,85,86,90,93,98,322,4,11',
',23,29,34,,,66,76,68,,79,81,,92,96,104,,8,12,18,22,31,35,41,,,,,,,,',
',,,,,26,32,,45,50,55,58,64,71,80,124,,,,100,106,,,,24,,36,43,47,51,62',
'65,72,,,,,,101,107,6,10,17,21,30,38,,,52,57,63,70,78,85,86,90,93,98',
'322,4,11,,23,29,34,,,66,76,68,,79,81,,92,96,104,,8,12,18,22,31,35,41',
',,,,,,,,,,,,,26,32,,45,50,55,58,64,71,80,124,,,,100,106,,,,24,,36,43',
'47,51,62,65,72,,,,,,101,107,6,10,17,21,30,38,,,52,57,63,70,78,85,86',
'90,93,98,322,4,11,,23,29,34,,,66,76,68,,79,81,,92,96,104,,8,12,18,22',
'31,35,41,,,,,,,,,,,,,,26,32,,45,50,55,58,64,71,80,124,,,,100,106,,,',
'24,,36,43,47,51,62,65,72,,,,,,101,107,6,10,17,21,30,38,,,52,57,63,70',
'78,85,86,90,93,98,322,4,11,,23,29,34,,,66,76,68,,79,81,,92,96,104,,8',
'12,18,22,31,35,41,,,,,,,,,,,,,,26,32,,45,50,55,58,64,71,80,124,,,,100',
'106,,,,24,,36,43,47,51,62,65,72,,,,,,101,107,6,10,17,21,30,38,,,52,57',
'63,70,78,85,86,90,93,98,322,4,11,,23,29,34,,,66,76,68,,79,81,,92,96',
'104,,8,12,18,22,31,35,41,,,,,,,,,,,,,,26,32,,45,50,55,58,64,71,80,124',
',,,100,106,,,,24,,36,43,47,51,62,65,72,,,,,,101,107,6,10,17,21,30,38',
',,52,57,63,70,78,85,86,90,93,98,322,4,11,,23,29,34,,,66,76,68,,79,81',
',92,96,104,,8,12,18,22,31,35,41,,,,,,,,,,,,,,26,32,,45,50,55,58,64,71',
'80,124,,,,100,106,,,,24,,36,43,47,51,62,65,72,,,,,,101,107,6,10,17,21',
'30,38,,,52,57,63,70,78,85,86,90,93,98,322,4,11,,23,29,34,,,66,76,68',
',79,81,,92,96,104,,8,12,18,22,31,35,41,,,,,,,,,,,,,,26,32,,45,50,55',
'58,64,71,80,124,,,,100,106,,,,24,,36,43,47,51,62,65,72,,,,,,101,107',
'6,10,17,21,30,38,,,52,57,63,70,78,85,86,90,93,98,322,4,11,,23,29,34',
',,66,76,68,,79,81,,92,96,104,,8,12,18,22,31,35,41,,,,,,,,,,,,,,26,32',
',45,50,55,58,64,71,80,124,,,,100,106,,,,24,,36,43,47,51,62,65,72,,,',
',,101,107,6,10,17,21,30,38,,,52,57,63,70,78,85,86,90,93,98,322,4,11',
',23,29,34,,,66,76,68,,79,81,,92,96,104,,8,12,18,22,31,35,41,,,,,,,,',
',,,,,26,32,,45,50,55,58,64,71,80,124,,,,100,106,,,,24,,36,43,47,51,62',
'65,72,,,,,,101,107,6,10,17,21,30,38,,,52,57,63,70,78,85,86,90,93,98',
',4,11,,23,29,34,,,,,68,,79,81,,92,96,104,,8,12,18,22,31,35,41,171,178',
'183,187,189,192,198,203,208,212,217,220,226,229,232,236,240,164,166',
'172,,180,185,190,194,200,171,178,183,187,189,192,198,203,208,212,217',
'220,226,229,232,236,240,164,166,172,,180,185,190,194,200,,,,,,,,,,,',
',,,,530,531,,,533,,,,,,,,,,193,199,,,,,,,,,237,,719,580,,,720,,,,,,',
',,,193,199,,,241,110,258,,265,268,237,,271,248,252,255,256,259,261,263',
'266,269,270,272,249,251,254,257,260,,241,110,171,178,183,187,189,192',
'198,203,208,212,217,220,226,229,232,236,240,164,166,172,,180,185,190',
'194,200,171,178,183,187,189,192,198,203,208,212,217,220,226,229,232',
'236,240,164,166,172,,180,185,190,194,200,,,,,,,,,,,,,,,,719,580,,,720',
',,,,,,,,,193,199,,,,,,,,,237,,636,580,,,637,,,,,,,,,,193,199,,,241,110',
'258,,265,268,237,,271,248,252,255,256,259,261,263,266,269,270,272,249',
'251,254,257,260,,241,110,171,178,183,187,189,192,198,203,208,212,217',
'220,226,229,232,236,240,164,166,172,,180,185,190,194,200,171,178,183',
'187,189,192,198,203,208,212,217,220,226,229,232,236,240,164,166,172',
',180,185,190,194,200,,,,,,,,,,,,,,,,587,531,,,589,,,,,,,,,,193,199,',
',,,,,,,237,,530,531,,,533,,,,,,,,,,193,199,,,241,110,258,,265,268,237',
',271,248,252,255,256,259,261,263,266,269,270,272,249,251,254,257,260',
',241,110,171,178,183,187,189,192,198,203,208,212,217,220,226,229,232',
'236,240,164,166,172,,180,185,190,194,200,171,178,183,187,189,192,198',
'203,208,212,217,220,226,229,232,236,240,164,166,172,,180,185,190,194',
'200,,,,,,,,,,,,,,,,579,580,,,582,,,,,,,,,,193,199,,,,,,,,,237,,639,531',
',,640,,,,,,,,,,193,199,,,241,110,258,,265,268,237,,271,248,252,255,256',
'259,261,263,266,269,270,272,249,251,254,,,,241,110,171,178,183,187,189',
'192,198,203,208,212,217,220,226,229,232,236,240,164,166,172,,180,185',
'190,194,200,171,178,183,187,189,192,198,203,208,212,217,220,226,229',
'232,236,240,164,166,172,,180,185,190,194,200,,,,,,,,,,,,,,,,707,580',
',,709,,,,,,,,,,193,199,,,,,,,,,237,,938,531,,,939,,,,,,,,,,193,199,',
',241,110,258,,265,268,237,,271,248,252,255,256,259,261,263,266,269,270',
'272,249,251,254,,,,241,110,171,178,183,187,189,192,198,203,208,212,217',
'220,226,229,232,236,240,164,166,172,,180,185,190,194,200,171,178,183',
'187,189,192,198,203,208,212,217,220,226,229,232,236,240,164,166,172',
',180,185,190,194,200,,,,,,,,,,,,,,,,761,580,,,762,,,,,,,,,,193,199,',
',,,,,,,237,,935,580,,,936,,,,,,,,,,193,199,,,241,110,258,,265,268,237',
',271,248,252,255,256,259,261,263,266,269,270,272,249,,,,,,241,110,171',
'178,183,187,189,192,198,203,208,212,217,220,226,229,232,236,240,164',
'166,172,,180,185,190,194,200,171,178,183,187,189,192,198,203,208,212',
'217,220,226,229,232,236,240,164,166,172,,180,185,190,194,200,,,,,,,',
',,,,,,,,639,531,,,640,,,,,,,,,,193,199,,,,,,,,,237,,636,580,,,637,,',
',,,,,,,193,199,,,241,110,258,,265,268,237,,271,248,252,255,256,259,261',
'263,266,269,270,272,249,,,,,,241,110,171,178,183,187,189,192,198,203',
'208,212,217,220,226,229,232,236,240,164,166,172,,180,185,190,194,200',
'171,178,183,187,189,192,198,203,208,212,217,220,226,229,232,236,240',
'164,166,172,,180,185,190,194,200,,,,,,,,,,,,,,,,698,531,,,700,,,,,,',
',,,193,199,,,,,,,,,237,,694,580,,,696,,,,,,,,,,193,199,,,241,110,258',
',265,268,237,,271,248,252,255,256,259,261,263,266,269,,,,,,,,,241,110',
'171,178,183,187,189,192,198,203,208,212,217,220,226,229,232,236,240',
'164,166,172,,180,185,190,194,200,171,178,183,187,189,192,198,203,208',
'212,217,220,226,229,232,236,240,164,166,172,,180,185,190,194,200,,,',
',,,,,,,,,,,,764,531,,,765,,,,,,,,,,193,199,,,,,,,,,237,,530,531,,,533',
',,,,,,,,,193,199,138,,241,110,,156,,138,237,,,,156,,,,,,,,,,,,,,,,241',
'171,178,183,187,189,192,198,203,208,212,217,220,226,229,232,236,240',
'164,166,172,,180,185,190,194,200,682,,148,150,153,157,159,140,,148,150',
'153,157,159,,,,,,161,,,118,76,145,149,161,,,,,145,149,,,,,,,,,530,531',
',,533,,,655,,,,562,26,32,193,199,50,55,58,64,71,,124,,237,,100,106,',
',,24,,36,43,47,116,117,65,72,,,,,241,130,293,282,10,17,21,30,,,,,57',
'63,70,78,85,86,90,93,98,,4,11,,23,29,34,118,76,,,120,,122,81,,92,96',
',,8,12,18,22,31,35,41,,,,,,,,,,,,26,32,,,50,55,58,64,71,,124,,,,100',
'106,,,,24,,36,43,47,116,117,65,72,,,,,,130,293,282,10,17,21,30,,,,,57',
'63,70,78,85,86,90,93,98,,4,11,,23,29,34,118,76,,,120,,122,81,,92,96',
'643,,8,12,18,22,31,35,41,,,,,,,,,,,,26,32,,,50,55,58,64,71,,124,,,,100',
'106,,,,24,,36,43,47,116,117,65,72,,,,,,130,293,282,10,17,21,30,,,,,57',
'63,70,78,85,86,90,93,98,,4,11,,23,29,34,118,76,,,120,,122,81,,92,96',
',,8,12,18,22,31,35,41,,,,,,,,,,,,26,32,,,50,55,58,64,71,,124,,,,100',
'106,,,,24,,36,43,47,116,117,65,72,,,,,,130,293,282,10,17,21,30,,,,,57',
'63,70,78,85,86,90,93,98,,4,11,,23,29,34,118,76,,,120,,122,81,,92,96',
',,8,12,18,22,31,35,41,,,,,,,,,,,,26,32,,,50,55,58,64,71,,124,,,,100',
'106,,,,24,,36,43,47,116,117,65,72,,,,,,130,293,282,10,17,21,30,,,,,57',
'63,70,78,85,86,90,93,98,,4,11,,23,29,34,118,76,,,120,,122,81,,92,96',
',,8,12,18,22,31,35,41,,,,,,,,,,,,26,32,,,50,55,58,64,71,,124,,,,100',
'106,,,,24,,36,43,47,116,117,65,72,,,,,,130,293,282,10,17,21,30,,,,,57',
'63,70,78,85,86,90,93,98,,4,11,,23,29,34,118,76,,,120,,122,81,,92,96',
',,8,12,18,22,31,35,41,,,,,,,,,,,,26,32,,,50,55,58,64,71,,124,,,,100',
'106,,,,24,,36,43,47,116,117,65,72,,,,,,130,293,282,10,17,21,30,,,,,57',
'63,70,78,85,86,90,93,98,,4,11,,23,29,34,118,76,,,120,,122,81,,92,96',
',,8,12,18,22,31,35,41,,,,,,,,,,,,26,32,,,50,55,58,64,71,,124,,,,100',
'106,,,,24,,36,43,47,116,117,65,72,,,,,,130,293,282,10,17,21,30,,,,,57',
'63,70,78,85,86,90,93,98,,4,11,,23,29,34,118,76,,,120,,122,81,,92,96',
',,8,12,18,22,31,35,41,,,,,,,,,,,,26,32,,,50,55,58,64,71,,124,,,,100',
'106,,,,24,,36,43,47,116,117,65,72,,,,,,130,293,282,10,17,21,30,,,,,57',
'63,70,78,85,86,90,93,98,,4,11,,23,29,34,118,76,,,120,,122,81,,92,96',
',,8,12,18,22,31,35,41,,,,,,,,,,,,26,32,,,50,55,58,64,71,,124,,,,100',
'106,,,,24,,36,43,47,116,117,65,72,,,,,,130,293,282,10,17,21,30,,,,,57',
'63,70,78,85,86,90,93,98,,4,11,,23,29,34,118,76,,,120,,122,81,,92,96',
',,8,12,18,22,31,35,41,,,,,,,,,,,,26,32,,,50,55,58,64,71,,124,,,,100',
'106,,,,24,,36,43,47,116,117,65,72,,,,,,130,293,282,10,17,21,30,,,,,57',
'63,70,78,85,86,90,93,98,,4,11,,23,29,34,118,76,,,120,,122,81,,92,96',
',,8,12,18,22,31,35,41,,,,,,,,,,,,26,32,,,50,55,58,64,71,,124,,,,100',
'106,,,,24,,36,43,47,116,117,65,72,,,,,,130,293,282,10,17,21,30,,,,,57',
'63,70,78,85,86,90,93,98,,4,11,,23,29,34,118,76,,,120,,122,81,,92,96',
',,8,12,18,22,31,35,41,,,,,,,,,,,,26,32,,,50,55,58,64,71,,124,,,,100',
'106,,,,24,,36,43,47,116,117,65,72,,,,,,130,293,282,10,17,21,30,,,,,57',
'63,70,78,85,86,90,93,98,,4,11,,23,29,34,118,76,,,120,,122,81,,92,96',
',,8,12,18,22,31,35,41,,,,,,,,,,,,26,32,,,50,55,58,64,71,,124,,,,100',
'106,,,,24,,36,43,47,116,117,65,72,,,,,,130,293,282,10,17,21,30,,,,,57',
'63,70,78,85,86,90,93,98,,4,11,,23,29,34,118,76,,,120,,122,81,,92,96',
',,8,12,18,22,31,35,41,,,,,,,,,,,,26,32,,,50,55,58,64,71,,124,,,,100',
'106,,,,24,,36,43,47,116,117,65,72,,,,,,130,293,282,10,17,21,30,,,,,57',
'63,70,78,85,86,90,93,98,,4,11,,23,29,34,118,76,,,120,,122,81,,92,96',
',,8,12,18,22,31,35,41,,,,,,,,,,,,26,32,,,50,55,58,64,71,,124,,,,100',
'106,,,,24,,36,43,47,116,117,65,72,,,,,,130,293,282,10,17,21,30,,,,,57',
'63,70,78,85,86,90,93,98,,4,11,,23,29,34,118,76,,,120,,122,81,,92,96',
',,8,12,18,22,31,35,41,,,,,,,,,,,,26,32,,,50,55,58,64,71,,124,,,,100',
'106,,,,24,,36,43,47,116,117,65,72,,,,,,130,293,282,10,17,21,30,,,,,57',
'63,70,78,85,86,90,93,98,,4,11,,23,29,34,118,76,,,120,,122,81,,92,96',
',,8,12,18,22,31,35,41,,,,,,,,,,,,26,32,,,50,55,58,64,71,,124,,,,100',
'106,,,,24,,36,43,47,116,117,65,72,,,,,,130,293,282,10,17,21,30,,,,,57',
'63,70,78,85,86,90,93,98,,4,11,,23,29,34,118,76,,,120,,122,81,,92,96',
',,8,12,18,22,31,35,41,,,,,,,,,,,,26,32,,,50,55,58,64,71,,124,,,,100',
'106,,,,24,,36,43,47,116,117,65,72,,,,,,130,293,282,10,17,21,30,,,,,57',
'63,70,78,85,86,90,93,98,,4,11,,23,29,34,118,76,,,120,,122,81,,92,96',
',,8,12,18,22,31,35,41,,,,,,,,,,,,26,32,,,50,55,58,64,71,,124,,,,100',
'106,,,,24,,36,43,47,116,117,65,72,,,,,,130,293,282,10,17,21,30,,,,,57',
'63,70,78,85,86,90,93,98,,4,11,,23,29,34,118,76,,,120,,122,81,,92,96',
',,8,12,18,22,31,35,41,,,,,,,,,,,,26,32,,,50,55,58,64,71,,124,,,,100',
'106,,,,24,,36,43,47,116,117,65,72,,,,,,130,293,282,10,17,21,30,,,,,57',
'63,70,78,85,86,90,93,98,,4,11,,23,29,34,118,76,,,120,,122,81,,92,96',
',,8,12,18,22,31,35,41,,,,,,,,,,,,26,32,,,50,55,58,64,71,,124,,,,100',
'106,,,,24,,36,43,47,116,117,65,72,,,,,,130,293,282,10,17,21,30,,,,,57',
'63,70,78,85,86,90,93,98,,4,11,,23,29,34,118,76,,,120,,122,81,,92,96',
',,8,12,18,22,31,35,41,,,,,,,,,,,,26,32,,,50,55,58,64,71,,124,,,,100',
'106,,,,24,,36,43,47,116,117,65,72,,,,,,130,293,282,10,17,21,30,,,,,57',
'63,70,78,85,86,90,93,98,,4,11,,23,29,34,118,76,,,120,,122,81,,92,96',
',,8,12,18,22,31,35,41,,,,,,,,,,,,26,32,,,50,55,58,64,71,,124,,,,100',
'106,,,,24,,36,43,47,116,117,65,72,,,,,,130,293,282,10,17,21,30,,,,,57',
'63,70,78,85,86,90,93,98,,4,11,,23,29,34,118,76,,,120,,122,81,,92,96',
',,8,12,18,22,31,35,41,,,,,,,,,,,,26,32,,,50,55,58,64,71,,124,,,,100',
'106,,,,24,,36,43,47,116,117,65,72,,,,,,130,107,6,10,17,21,30,,,,,57',
'63,70,78,85,86,90,93,98,132,4,11,,23,29,34,118,76,,,120,,122,81,,92',
'96,131,134,8,12,18,22,31,35,41,,,,,,,,,,,,26,32,,,50,55,58,64,71,,124',
',,,100,106,,,,24,,36,43,47,116,117,65,72,,,,,,130,293,282,10,17,21,30',
',,,,57,63,70,78,85,86,90,93,98,,4,11,,23,29,34,66,76,,,120,,122,81,',
'92,96,,,8,12,18,22,31,35,41,,,,,,,,,,,,26,32,,45,50,55,58,64,71,,124',
',,,100,106,,,,24,,36,43,47,51,62,65,72,,,,,,101,107,6,10,17,21,30,,',
',,57,63,70,78,85,86,90,93,98,,4,11,,23,29,34,118,76,,,120,,122,81,,92',
'96,,,8,12,18,22,31,35,41,,,,,,,,,,,,26,32,,,50,55,58,64,71,,124,,,,100',
'106,,,,24,,36,43,47,116,117,65,72,,,,,,130,293,282,10,17,21,30,,,,,57',
'63,70,78,85,86,90,93,98,,4,11,,23,29,34,118,76,,,120,,122,81,,92,96',
',,8,12,18,22,31,35,41,,,,,,,,,,,,26,32,,,50,55,58,64,71,,124,,,,100',
'106,,,,24,,36,43,47,116,117,65,72,,,,,,130,293,282,10,17,21,30,,,,,57',
'63,70,78,85,86,90,93,98,,4,11,,23,29,34,118,291,,,120,,122,81,,92,96',
',,8,12,18,22,31,35,41,,,,,,,,,,,,283,,,,,,58,64,71,,124,,,,100,106,',
',,24,,36,43,47,116,117,65,72,,,,,,130,293,282,10,17,21,30,,,,,57,63',
'70,78,85,86,90,93,98,,4,11,,23,29,34,118,76,,,288,,79,81,,92,96,104',
',8,12,18,22,31,35,41,,,,,,,,,,,,26,32,,,50,55,58,64,71,,124,,,,100,106',
',,,24,,36,43,47,116,117,65,72,,,,,,130,293,282,10,17,21,30,,,,,57,63',
'70,78,85,86,90,93,98,,4,11,,23,29,34,118,76,,,120,,122,81,,92,96,,,8',
'12,18,22,31,35,41,,,,,,,,,,,,26,32,,,50,55,58,64,71,,124,,,,100,106',
',,,24,,36,43,47,116,117,65,72,,,,,,130,293,282,10,17,21,30,,,,,57,63',
'70,78,85,86,90,93,98,,4,11,,23,29,34,118,76,,,120,,122,81,,92,96,,,8',
'12,18,22,31,35,41,,,,,,,,,,,,26,32,,,50,55,58,64,71,,124,,,,100,106',
',,,24,,36,43,47,116,117,65,72,,,,,,130,293,282,10,17,21,30,,,,,57,63',
'70,78,85,86,90,93,98,,4,11,,23,29,34,118,291,,,120,,122,81,,92,96,,',
'8,12,18,22,31,35,41,,,,,312,,,,,,,283,,,,,,58,64,71,,124,,,,100,106',
',,,24,,36,43,47,116,117,65,72,,,,,,130,293,282,10,17,21,30,,,,,57,63',
'70,310,85,86,90,313,98,,4,11,,23,29,34,118,76,,,308,,122,81,,92,96,',
',8,12,18,22,31,35,41,,,,,,,,,,,,26,32,,,50,55,58,64,71,,124,,,,100,106',
',,,24,,36,43,47,116,117,65,72,,,,,,130,293,282,10,17,21,30,,,,,57,63',
'70,78,85,86,90,93,98,,4,11,,23,29,34,118,76,,,120,,122,81,,92,96,,,8',
'12,18,22,31,35,41,,,,,,,,,,,,26,32,,,50,55,58,64,71,,124,,,,100,106',
',,,24,,36,43,47,116,117,65,72,,,,,,130,293,282,10,17,21,30,,,,,57,63',
'70,78,85,86,90,93,98,,4,11,,23,29,34,118,291,,,120,,122,81,,92,96,,',
'8,12,18,22,31,35,41,,,,,,,,,,,,283,,,,,,58,64,71,,124,,,,100,106,,,',
'24,,36,43,47,116,117,65,72,,,,,,130,293,282,10,17,21,30,,,,,57,63,70',
'78,85,86,90,93,98,,4,11,,23,29,34,118,291,,,374,,376,81,,92,96,,,8,12',
'18,22,31,35,41,,,,,,,,,,,,283,,,,,,58,64,71,,124,,,,100,106,,,,24,,36',
'43,47,51,62,65,72,,,,,,101,107,6,10,17,21,30,,,,,57,63,70,78,85,86,90',
'93,98,,4,11,,23,29,34,118,291,,,320,,122,81,,92,96,,,8,12,18,22,31,35',
'41,,,,,,,,,,,,283,,,,,,58,64,71,,124,,,,100,106,,,,24,,36,43,47,116',
'117,65,72,,,,,,130,293,282,10,17,21,30,,,,,57,63,70,78,85,86,90,93,98',
',4,11,,23,29,34,118,76,,,374,,376,81,,92,96,,,8,12,18,22,31,35,41,,',
',,,,,,,,,26,32,,,50,55,58,64,71,,124,,,,100,106,,,,24,,36,43,47,116',
'117,65,72,,,,,,130,293,282,10,17,21,30,,,,,57,63,70,78,85,86,90,93,98',
',4,11,,23,29,34,118,76,,,120,,122,81,,92,96,,,8,12,18,22,31,35,41,,',
',,,,,,,,,26,32,,,50,55,58,64,71,,124,,,,100,106,,,,24,,36,43,47,116',
'117,65,72,,,,,,130,293,282,10,17,21,30,,,,,57,63,70,78,85,86,90,93,98',
',4,11,,23,29,34,118,76,,,120,,122,81,,92,96,,,8,12,18,22,31,35,41,,',
',,,,,,,,,26,32,,,50,55,58,64,71,,124,,,,100,106,,,,24,,36,43,47,116',
'117,65,72,,,,,,130,107,6,10,17,21,30,,,,,57,63,70,78,85,86,90,93,98',
'132,4,11,,23,29,34,118,76,,,120,,122,81,,92,96,131,134,8,12,18,22,31',
'35,41,,,,,,,,,,,,26,32,,,50,55,58,64,71,,124,,,,100,106,,,,24,,36,43',
'47,51,62,65,72,,,,,,101,107,6,10,17,21,30,,,,,57,63,70,78,85,86,90,93',
'98,,4,11,,23,29,34,118,291,,,120,,122,81,,92,96,,,8,12,18,22,31,35,41',
',,,,,,,,,,,283,,,,,,58,64,71,,124,,,,100,106,,,,24,,36,43,47,116,117',
'65,72,,,,,,130,293,282,10,17,21,30,,,,,57,63,70,310,85,86,90,313,98',
',4,11,,23,29,34,66,76,,,308,,122,81,,92,96,,,8,12,18,22,31,35,41,,,',
',,,,,,,,26,32,,45,50,55,58,64,71,,124,,,,100,106,,,,24,,36,43,47,51',
'62,65,72,,,,,,101,107,6,10,17,21,30,,,,,57,63,70,78,85,86,90,93,98,',
'4,11,,23,29,34,118,76,,,120,,122,81,,92,96,,,8,12,18,22,31,35,41,,,',
',,,,,,,,26,32,,,50,55,58,64,71,,124,,,,100,106,,,,24,,36,43,47,116,117',
'65,72,,,,,,130,293,282,10,17,21,30,,,,,57,63,70,78,85,86,90,93,98,,4',
'11,,23,29,34,118,76,,,120,,122,81,,92,96,,,8,12,18,22,31,35,41,,,,,',
',,,,,,26,32,,,50,55,58,64,71,,124,,,,100,106,,,,24,,36,43,47,116,117',
'65,72,,,,,,130,293,282,10,17,21,30,,,,,57,63,70,78,85,86,90,93,98,,4',
'11,,23,29,34,118,76,,,120,,122,81,,92,96,,,8,12,18,22,31,35,41,,,,,',
',,,,,,26,32,,,50,55,58,64,71,,124,,,,100,106,,,,24,,36,43,47,116,117',
'65,72,,,,,,130,107,6,10,17,21,30,,,,,57,63,70,78,85,86,90,93,98,132',
'4,11,,23,29,34,66,76,,,120,,122,81,,92,96,131,134,8,12,18,22,31,35,41',
',,,,,,,,,,,26,32,,45,50,55,58,64,71,,124,,,,100,106,,,,24,,36,43,47',
'51,62,65,72,,,,,,101,107,6,10,17,21,30,,,,,57,63,70,78,85,86,90,93,98',
',4,11,,23,29,34,66,76,,,120,,122,81,,92,96,,,8,12,18,22,31,35,41,,,',
',,,,,,,,26,32,,45,50,55,58,64,71,,124,,,,100,106,,,,24,,36,43,47,51',
'62,65,72,,,,,,101,107,6,10,17,21,30,,,,,57,63,70,78,85,86,90,93,98,',
'4,11,,23,29,34,118,76,,,120,,122,81,,92,96,,,8,12,18,22,31,35,41,,,',
',,,,,,,,26,32,,,50,55,58,64,71,,124,,,,100,106,,,,24,,36,43,47,116,117',
'65,72,,,,,,130,293,282,10,17,21,30,,,,,57,63,70,78,85,86,90,93,98,,4',
'11,,23,29,34,118,291,,,120,,122,81,,92,96,,,8,12,18,22,31,35,41,,,,',
',,,,,,,283,,,,,,58,64,71,,124,,,,100,106,,,,24,,36,43,47,116,117,65',
'72,,,,,,130,293,282,10,17,21,30,,,,,57,63,70,78,85,86,90,93,98,,4,11',
',23,29,34,118,76,,,320,,122,81,,92,96,,,8,12,18,22,31,35,41,,,,,,,,',
',,,26,32,,,50,55,58,64,71,,124,,,,100,106,,,,24,,36,43,47,116,117,65',
'72,,,,,,130,107,6,10,17,21,30,,,,,57,63,70,78,85,86,90,93,98,132,4,11',
',23,29,34,66,76,,,120,,122,81,,92,96,131,134,8,12,18,22,31,35,41,,,',
',,,,,,,,26,32,,45,50,55,58,64,71,80,82,,,,100,106,,,,24,,36,43,47,51',
'62,65,72,,,,,,101,107,6,10,17,21,30,38,,,52,57,63,70,78,85,86,90,93',
'98,,4,11,,23,29,34,118,76,,,68,,79,81,,92,96,104,,8,12,18,22,31,35,41',
',,,,,,,,,,,26,32,,,50,55,58,64,71,,124,,,,100,106,,,,24,,36,43,47,116',
'117,65,72,,,,,,130,293,282,10,17,21,30,,,,,57,63,70,78,85,86,90,93,98',
',4,11,,23,29,34,118,76,,,120,,122,81,,92,96,,,8,12,18,22,31,35,41,,',
',,,,,,,,,26,32,,,50,55,58,64,71,,124,,,,100,106,,,,24,,36,43,47,116',
'117,65,72,,,,,,130,293,282,10,17,21,30,,,,,57,63,70,78,85,86,90,93,98',
',4,11,,23,29,34,66,76,,,120,,122,81,,92,96,,,8,12,18,22,31,35,41,,,',
',,,,,,,,26,32,,45,50,55,58,64,71,80,124,,,,100,106,,,,24,,36,43,47,51',
'62,65,72,,,,,,101,107,6,10,17,21,30,38,,,52,57,63,70,78,85,86,90,93',
'98,,4,11,,23,29,34,118,76,,,68,,79,81,,92,96,104,,8,12,18,22,31,35,41',
',,,,,,,,,,,26,32,,,50,55,58,64,71,,124,,,,100,106,,,,24,,36,43,47,51',
'62,65,72,,,,,,101,107,6,10,17,21,30,,,,,57,63,70,78,85,86,90,93,98,',
'4,11,,23,29,34,118,76,,,120,,122,81,,92,96,,,8,12,18,22,31,35,41,,,',
',,,,,,,,26,32,,,50,55,58,64,71,,124,,,,100,106,,,,24,,36,43,47,51,62',
'65,72,,,,,,101,107,6,10,17,21,30,,,,,57,63,70,78,85,86,90,93,98,,4,11',
',23,29,34,66,76,,,120,,122,81,,92,96,,,8,12,18,22,31,35,41,,,,,,,,,',
',,26,32,,45,50,55,58,64,71,,124,,,,100,106,,,,24,,36,43,47,51,62,65',
'72,,,,,,101,107,6,10,17,21,30,,,,,57,63,70,78,85,86,90,93,98,,4,11,',
'23,29,34,118,76,,,120,,122,81,,92,96,,,8,12,18,22,31,35,41,,,,,,,,,',
',,26,32,,,50,55,58,64,71,,124,,,,100,106,,,,24,,36,43,47,116,117,65',
'72,,,,,,130,293,282,10,17,21,30,,,,,57,63,70,78,85,86,90,93,98,,4,11',
',23,29,34,118,76,,,120,,122,81,,92,96,,,8,12,18,22,31,35,41,,,,,,,,',
',,,26,32,,,50,55,58,64,71,,124,,,,100,106,,,,24,,36,43,47,51,62,65,72',
',,,,,101,107,6,10,17,21,30,,,,,57,63,70,78,85,86,90,93,98,,4,11,,23',
'29,34,118,76,,,120,,122,81,,92,96,555,,8,12,18,22,31,35,41,,,,,,,,,',
',,26,32,,,50,55,58,64,71,,124,,,,100,106,,,,24,,36,43,47,116,117,65',
'72,,,,,,130,107,6,10,17,21,30,,,,,57,63,70,78,85,86,90,93,98,132,4,11',
',23,29,34,118,76,,,120,,122,81,,92,96,131,134,8,12,18,22,31,35,41,,',
',,,,,,,,,26,32,,,50,55,58,64,71,,124,,,,100,106,,,,24,,36,43,47,116',
'117,65,72,,,,,,130,293,282,10,17,21,30,,,,,57,63,70,78,85,86,90,93,98',
',4,11,,23,29,34,118,76,,,120,,122,81,,92,96,,,8,12,18,22,31,35,41,,',
',,,,,,,,,26,32,,,50,55,58,64,71,,124,,,,100,106,,,,24,,36,43,47,116',
'117,65,72,,,,,,130,293,282,10,17,21,30,,,,,57,63,70,78,85,86,90,93,98',
',4,11,,23,29,34,118,291,,,120,,122,81,,92,96,,,8,12,18,22,31,35,41,',
',,,,,,,,,,283,,,,,,58,64,71,,124,,,,100,106,,,,24,,36,43,47,116,117',
'65,72,,,,,,130,293,282,10,17,21,30,,,,,57,63,70,78,85,86,90,93,98,,4',
'11,,23,29,34,118,76,,,374,,376,81,,92,96,,,8,12,18,22,31,35,41,,,,,',
',,,,,,26,32,,,50,55,58,64,71,,124,,,,100,106,,,,24,,36,43,47,51,62,65',
'72,,,,,,101,107,6,10,17,21,30,,,,,57,63,70,78,85,86,90,93,98,,4,11,',
'23,29,34,66,76,,,120,,122,81,,92,96,555,,8,12,18,22,31,35,41,,,,,,,',
',,,,26,32,,45,50,55,58,64,71,,124,,,,100,106,,,,24,,36,43,47,51,62,65',
'72,,,,,,101,107,6,10,17,21,30,,,,,57,63,70,78,85,86,90,93,98,,4,11,',
'23,29,34,118,76,,,120,,122,81,,92,96,,,8,12,18,22,31,35,41,,,,,,,,,',
',,26,32,,,50,55,58,64,71,,124,,,,100,106,,,,24,,36,43,47,116,117,65',
'72,,,,,,130,293,282,10,17,21,30,,,,,57,63,70,78,85,86,90,93,98,132,4',
'11,,23,29,34,118,76,,,120,,122,81,,92,96,643,,8,12,18,22,31,35,41,,',
',,,,,,,,,26,32,,,50,55,58,64,71,,124,,,,100,106,,,,24,,36,43,47,116',
'117,65,72,,,,,,130,293,282,10,17,21,30,,,,,57,63,70,78,85,86,90,93,98',
',4,11,,23,29,34,118,76,,,120,,122,81,,92,96,131,,8,12,18,22,31,35,41',
',,,,,,,,,,,26,32,,,50,55,58,64,71,,124,,,,100,106,,,,24,,36,43,47,116',
'117,65,72,,,,,,130,293,282,10,17,21,30,,,,,57,63,70,78,85,86,90,93,98',
'132,4,11,,23,29,34,118,291,,,120,,122,81,,92,96,,,8,12,18,22,31,35,41',
',,,,,,,,,,,283,,,,,,58,64,71,,124,,,,100,106,,,,24,,36,43,47,116,117',
'65,72,,,,,,130,293,282,10,17,21,30,,,,,57,63,70,78,85,86,90,93,98,,4',
'11,,23,29,34,118,76,,,374,,376,81,,92,96,,,8,12,18,22,31,35,41,,,,,',
',,,,,,26,32,,,50,55,58,64,71,,124,,,,100,106,,,,24,,36,43,47,116,117',
'65,72,,,,,,130,293,282,10,17,21,30,,,,,57,63,70,78,85,86,90,93,98,,4',
'11,,23,29,34,66,76,,,120,,122,81,,92,96,,,8,12,18,22,31,35,41,,,,,,',
',,,,,26,32,,45,50,55,58,64,71,,124,,,,100,106,,,,24,,36,43,47,51,62',
'65,72,,,,,,101,107,6,10,17,21,30,,,,,57,63,70,78,85,86,90,93,98,,4,11',
',23,29,34,66,76,,,120,,122,81,,92,96,,,8,12,18,22,31,35,41,,,,,,,,,',
',,26,32,,45,50,55,58,64,71,,124,,,,100,106,,,,24,,36,43,47,51,62,65',
'72,,,,,,101,107,6,10,17,21,30,,,,,57,63,70,78,85,86,90,93,98,,4,11,',
'23,29,34,118,76,,,120,,122,81,,92,96,,,8,12,18,22,31,35,41,,,,,,,,,',
',,26,32,,,50,55,58,64,71,,124,,,,100,106,,,,24,,36,43,47,116,117,65',
'72,,,,,,130,293,282,10,17,21,30,,,,,57,63,70,78,85,86,90,93,98,,4,11',
',23,29,34,118,291,,,120,,122,81,,92,96,,,8,12,18,22,31,35,41,,,,,,,',
',,,,283,,,,,,58,64,71,,124,,,,100,106,,,,24,,36,43,47,116,117,65,72',
',,,,,130,293,282,10,17,21,30,,,,,57,63,70,78,85,86,90,93,98,,4,11,,23',
'29,34,118,76,,,374,,376,81,,92,96,379,,8,12,18,22,31,35,41,,,,,,,,,',
',,26,32,,,50,55,58,64,71,,124,,,,100,106,,,,24,,36,43,47,116,117,65',
'72,,,,,,130,293,282,10,17,21,30,,,,,57,63,70,78,85,86,90,93,98,,4,11',
',23,29,34,118,76,,,120,,122,81,,92,96,,,8,12,18,22,31,35,41,,,,,,,,',
',,,26,32,,,50,55,58,64,71,,124,,,,100,106,,,,24,,36,43,47,116,117,65',
'72,,,,,,130,293,282,10,17,21,30,,,,,57,63,70,78,85,86,90,93,98,,4,11',
',23,29,34,118,76,,,120,,122,81,,92,96,,,8,12,18,22,31,35,41,,,,,,,,',
',,,26,32,,,50,55,58,64,71,,124,,,,100,106,,,,24,,36,43,47,116,117,65',
'72,,,,,,130,293,282,10,17,21,30,,,,,57,63,70,78,85,86,90,93,98,132,4',
'11,,23,29,34,66,76,,,120,,122,81,,92,96,,134,8,12,18,22,31,35,41,,,',
',,,,,,,,26,32,,45,50,55,58,64,71,,124,,,,100,106,,,,24,,36,43,47,51',
'62,65,72,,,,,,101,107,6,10,17,21,30,,,,,57,63,70,78,85,86,90,93,98,',
'4,11,,23,29,34,118,76,,,120,,122,81,,92,96,,,8,12,18,22,31,35,41,,,',
',,,,,,,,26,32,,,50,55,58,64,71,,124,,,,100,106,,,,24,,36,43,47,51,62',
'65,72,,,,,,101,107,6,10,17,21,30,,,,,57,63,70,78,85,86,90,93,98,,4,11',
',23,29,34,118,76,,,120,,122,81,,92,96,,,8,12,18,22,31,35,41,,,,,,,,',
',,,26,32,,,50,55,58,64,71,,124,,,,100,106,,,,24,,36,43,47,116,117,65',
'72,,,,,,130,293,282,10,17,21,30,,,,,57,63,70,78,85,86,90,93,98,132,4',
'11,,23,29,34,118,76,,,120,,122,81,,92,96,643,134,8,12,18,22,31,35,41',
',,,,,,,,,,,26,32,,,50,55,58,64,71,,124,,,,100,106,,,,24,,36,43,47,51',
'62,65,72,,,,,,101,107,6,10,17,21,30,,,,,57,63,70,78,85,86,90,93,98,',
'4,11,,23,29,34,118,76,,,120,,122,81,,92,96,,,8,12,18,22,31,35,41,,,',
',,,,,,,,26,32,,,50,55,58,64,71,,124,,,,100,106,,,,24,,36,43,47,116,117',
'65,72,,,,,,130,107,6,10,17,21,30,,,,,57,63,70,78,85,86,90,93,98,132',
'4,11,,23,29,34,118,76,,,120,,122,81,,92,96,131,134,8,12,18,22,31,35',
'41,,,,,,,,,,,,26,32,,,50,55,58,64,71,,124,,,,100,106,,,,24,,36,43,47',
'116,117,65,72,,,,,,130,293,282,10,17,21,30,,,,,57,63,70,78,85,86,90',
'93,98,,4,11,,23,29,34,118,291,,,120,,122,81,,92,96,,,8,12,18,22,31,35',
'41,,,,,,,,,,,,283,,,,,,58,64,71,,124,,,,100,106,,,,24,,36,43,47,116',
'117,65,72,,,,,,130,293,282,10,17,21,30,,,,,57,63,70,78,85,86,90,93,98',
',4,11,,23,29,34,118,76,,,887,,122,81,,92,96,,,8,12,18,22,31,35,41,,',
',,,,,,,,,26,32,,,50,55,58,64,71,,124,,,,100,106,,,,24,,36,43,47,116',
'117,65,72,,,,,,130,107,6,10,17,21,30,,,,,57,63,70,78,85,86,90,93,98',
'132,4,11,,23,29,34,66,76,,,120,,122,81,,92,96,131,134,8,12,18,22,31',
'35,41,,,,,,,,,,,,26,32,,45,50,55,58,64,71,,124,,,,100,106,,,,24,,36',
'43,47,51,62,65,72,,,,,,101,107,6,10,17,21,30,,,,,57,63,70,78,85,86,90',
'93,98,,4,11,,23,29,34,118,76,,,120,,122,81,,92,96,,,8,12,18,22,31,35',
'41,,,,,,,,,,,,26,32,,,50,55,58,64,71,,124,,,,100,106,,,,24,,36,43,47',
'116,117,65,72,,,,,,130,107,6,10,17,21,30,,,,,57,63,70,78,85,86,90,93',
'98,132,4,11,,23,29,34,118,76,,,120,,122,81,,92,96,131,134,8,12,18,22',
'31,35,41,,,,,,,,,,,,26,32,,,50,55,58,64,71,,124,,,,100,106,,,,24,,36',
'43,47,116,117,65,72,,,,,,130,107,6,10,17,21,30,,,,,57,63,70,78,85,86',
'90,93,98,132,4,11,,23,29,34,118,76,,,120,,122,81,,92,96,131,134,8,12',
'18,22,31,35,41,,,,,,,,,,,,26,32,,,50,55,58,64,71,,124,,,,100,106,,,',
'24,,36,43,47,116,117,65,72,,,,,,130,293,282,10,17,21,30,,,,,57,63,70',
'78,85,86,90,93,98,,4,11,,23,29,34,118,76,,,120,,122,81,,92,96,,,8,12',
'18,22,31,35,41,,,,,,,,,,,,26,32,,,50,55,58,64,71,,124,,,,100,106,,,',
'24,,36,43,47,116,117,65,72,,,,,,130,293,282,10,17,21,30,,,,,57,63,70',
'78,85,86,90,93,98,,4,11,,23,29,34,118,76,,,120,,122,81,,92,96,,,8,12',
'18,22,31,35,41,,,,,,,,,,,,26,32,,,50,55,58,64,71,,124,,,,100,106,,,',
'24,,36,43,47,116,117,65,72,,,,,,130,293,282,10,17,21,30,,,,,57,63,70',
'78,85,86,90,93,98,,4,11,,23,29,34,118,76,,,120,,122,81,,92,96,834,,8',
'12,18,22,31,35,41,,,,,,,,,,,,26,32,,,50,55,58,64,71,,124,,,,100,106',
',,,24,,36,43,47,116,117,65,72,,,,,,130,293,282,10,17,21,30,,,,,57,63',
'70,78,85,86,90,93,98,,4,11,,23,29,34,66,76,,,120,,122,81,,92,96,,,8',
'12,18,22,31,35,41,,,,,,,,,,,,26,32,,45,50,55,58,64,71,,124,,,,100,106',
',,,24,,36,43,47,51,62,65,72,,,,,,101,107,6,10,17,21,30,,,,,57,63,70',
'78,85,86,90,93,98,,4,11,,23,29,34,118,76,,,120,,122,81,,92,96,,,8,12',
'18,22,31,35,41,,,,,,,,,,,,26,32,,,50,55,58,64,71,,124,,,,100,106,,,',
'24,,36,43,47,116,117,65,72,,,,,,130,107,6,10,17,21,30,,,,,57,63,70,78',
'85,86,90,93,98,132,4,11,,23,29,34,118,76,,,120,,122,81,,92,96,131,134',
'8,12,18,22,31,35,41,,,,,,,,,,,,26,32,,,50,55,58,64,71,,124,,,,100,106',
',,,24,,36,43,47,116,117,65,72,,,,,,130,293,282,10,17,21,30,,,,,57,63',
'70,78,85,86,90,93,98,,4,11,,23,29,34,66,76,,,120,,122,81,,92,96,,,8',
'12,18,22,31,35,41,,,,,,,,,,,,26,32,,45,50,55,58,64,71,,124,,,,100,106',
',,,24,,36,43,47,51,62,65,72,,,,,,101,107,6,10,17,21,30,,,,,57,63,70',
'78,85,86,90,93,98,,4,11,,23,29,34,118,291,,,120,,122,81,,92,96,,,8,12',
'18,22,31,35,41,,,,,,,,,,,,283,,,,,,58,64,71,,124,,,,100,106,,,,24,,36',
'43,47,116,117,65,72,,,,,,130,293,282,10,17,21,30,,,,,57,63,70,78,85',
'86,90,93,98,,4,11,,23,29,34,118,76,,,374,,376,81,,92,96,,,8,12,18,22',
'31,35,41,,,,,,,,,,,,26,32,,,50,55,58,64,71,,124,,,,100,106,,,,24,,36',
'43,47,116,117,65,72,,,,,,130,293,282,10,17,21,30,,,,,57,63,70,78,85',
'86,90,93,98,132,4,11,,23,29,34,66,76,,,120,,122,81,,92,96,,,8,12,18',
'22,31,35,41,,,,,,,,,,,,26,32,,45,50,55,58,64,71,,124,,,,100,106,,,,24',
',36,43,47,51,62,65,72,,,,,,101,107,6,10,17,21,30,,,,,57,63,70,78,85',
'86,90,93,98,,4,11,,23,29,34,66,76,,,120,,122,81,,92,96,,,8,12,18,22',
'31,35,41,,,,,,,,,,,,26,32,,45,50,55,58,64,71,,124,,,,100,106,,,,24,',
'36,43,47,51,62,65,72,,,,,,101,107,6,10,17,21,30,,,,,57,63,70,78,85,86',
'90,93,98,,4,11,,23,29,34,66,76,,,120,,122,81,,92,96,,,8,12,18,22,31',
'35,41,,,,,,,,,,,,26,32,,45,50,55,58,64,71,,124,,,,100,106,,,,24,,36',
'43,47,51,62,65,72,,,,,,101,107,6,10,17,21,30,,,,,57,63,70,78,85,86,90',
'93,98,,4,11,,23,29,34,118,76,,,120,,122,81,,92,96,,,8,12,18,22,31,35',
'41,,,,,,,,,,,,26,32,,,50,55,58,64,71,,124,,,,100,106,,,,24,,36,43,47',
'116,117,65,72,,,,,,130,293,282,10,17,21,30,,,,,57,63,70,78,85,86,90',
'93,98,,4,11,,23,29,34,118,76,,,120,,122,81,,92,96,,,8,12,18,22,31,35',
'41,,,,,,,,,,,,26,32,,,50,55,58,64,71,,124,,,,100,106,,,,24,,36,43,47',
'51,62,65,72,,,,,,101,107,6,10,17,21,30,,,,,57,63,70,78,85,86,90,93,98',
',4,11,,23,29,34,118,76,,,120,,122,81,,92,96,,,8,12,18,22,31,35,41,,',
',,,,,,,,,26,32,,,50,55,58,64,71,,124,,,,100,106,,,,24,,36,43,47,116',
'117,65,72,,,,,,130,293,282,10,17,21,30,,,,,57,63,70,78,85,86,90,93,98',
'132,4,11,,23,29,34,66,76,,,120,,122,81,,92,96,131,,8,12,18,22,31,35',
'41,,,,,,,,,,,,26,32,,45,50,55,58,64,71,,124,,,,100,106,,,,24,,36,43',
'47,51,62,65,72,,,,,,101,107,6,10,17,21,30,,,,,57,63,70,78,85,86,90,93',
'98,,4,11,,23,29,34,66,76,,,120,,122,81,,92,96,,,8,12,18,22,31,35,41',
',,,,,,,,,,,26,32,,45,50,55,58,64,71,,124,,,,100,106,,,,24,,36,43,47',
'51,62,65,72,,,,,,101,107,6,10,17,21,30,,,,,57,63,70,78,85,86,90,93,98',
',4,11,,23,29,34,66,76,,,120,,122,81,,92,96,,,8,12,18,22,31,35,41,,,',
',,,,,,,,26,32,,45,50,55,58,64,71,80,124,,,,100,106,,,,24,,36,43,47,51',
'62,65,72,,,,,,101,107,6,10,17,21,30,38,,,52,57,63,70,78,85,86,90,93',
'98,,4,11,,23,29,34,66,76,,,68,,79,81,,92,96,104,,8,12,18,22,31,35,41',
',,,,,,,,,,,26,32,,45,50,55,58,64,71,,124,,,,100,106,,,,24,,36,43,47',
'51,62,65,72,,,,,,101,107,6,10,17,21,30,,,,,57,63,70,78,85,86,90,93,98',
',4,11,,23,29,34,118,76,,,120,,122,81,,92,96,,,8,12,18,22,31,35,41,,',
',,,,,,,,,26,32,,,50,55,58,64,71,,124,,,,100,106,,,,24,,36,43,47,116',
'117,65,72,,,,,,130,293,282,10,17,21,30,,,,,57,63,70,78,85,86,90,93,98',
',4,11,138,23,29,34,,156,,138,120,,122,81,156,92,96,555,,8,12,18,22,31',
'35,41,,,,,,,,,,,138,,,,,156,,,,,138,,,,,156,,,,,,140,,148,150,153,157',
'159,140,,148,150,153,157,159,,138,,,,161,156,,138,,145,149,161,156,',
',,145,149,,682,,148,150,153,157,159,,,,682,143,148,150,153,157,159,138',
'562,161,,,156,,145,149,138,,,161,,156,,,145,149,140,,148,150,153,157',
'159,140,,148,150,153,157,159,,,138,,,161,,156,,138,145,149,161,,156',
',,145,149,,,,140,,148,150,153,157,159,,,682,,148,150,153,157,159,,,',
'161,,,,,145,149,,,161,,,,,145,149,140,,148,150,153,157,159,140,,148',
'150,153,157,159,,,,,,161,,,,,145,149,161,258,,265,268,145,149,271,248',
'252,255,256,259,261,263,266,269,270,272,249,251,254,257,260,262,264',
'267,,258,273,265,268,,,271,248,252,255,256,259,261,263,266,269,270,272',
'249,251,254,257,260,262,264,267,,258,273,265,268,-228,-226,271,248,252',
'255,256,259,261,263,266,269,270,272,249,251,254,257,260,262,264,267',
',258,273,265,268,,,271,248,252,255,256,259,261,263,266,269,270,272,249',
'251,254,257,260,262,264,267,,258,273,265,268,-228,-226,271,248,252,255',
'256,259,261,263,266,269,270,272,249,251,254,257,260,262,264,267,,258',
'273,265,268,,,271,248,252,255,256,259,261,263,266,269,270,272,249,251',
'254,257,260,262,264,267,,258,273,265,268,,,271,248,252,255,256,259,261',
'263,266,269,270,272,249,251,254,257,260,262,264,267,,258,273,265,268',
',,271,248,252,255,256,259,261,263,266,269,270,272,249,251,254,257,260',
'262,264,267' ]
        racc_action_table = arr = Array.new(17832, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'582,82,894,757,582,582,582,582,582,582,372,372,582,582,582,582,307,582',
'582,582,582,582,582,582,582,582,582,582,582,582,582,582,582,582,582',
'582,582,582,582,582,582,529,529,582,307,756,756,561,561,570,570,77,582',
'582,582,89,89,680,582,582,720,582,579,589,589,681,579,579,579,579,579',
'579,159,682,579,579,579,579,434,579,579,579,579,579,579,579,579,579',
'579,579,579,579,579,579,579,579,579,579,579,579,579,579,579,140,582',
'579,948,289,77,563,151,563,587,587,579,579,579,684,820,694,579,579,757',
'579,342,108,108,159,582,582,582,582,579,720,582,938,582,82,582,82,372',
'384,939,292,353,353,750,750,384,395,342,307,159,307,571,571,395,700',
'720,720,720,151,40,685,289,720,579,682,340,529,289,529,404,404,89,756',
'764,561,686,570,820,694,589,694,687,948,765,948,40,579,579,579,579,579',
'340,386,579,140,579,689,579,693,386,404,404,292,373,404,404,404,404',
'404,676,404,938,690,938,404,404,700,935,939,404,939,404,404,404,404',
'404,404,404,587,392,764,430,503,404,404,404,404,404,404,404,765,108',
'696,827,404,404,404,404,404,404,404,404,404,404,404,404,356,404,404',
'404,353,898,750,693,404,693,404,404,356,404,404,404,404,404,404,404',
'404,404,404,404,13,13,373,676,373,675,398,136,676,357,676,408,764,935',
'503,764,935,404,935,764,719,357,765,512,696,765,696,401,392,765,392',
'13,13,769,13,13,13,13,13,13,769,13,827,695,827,13,13,512,512,294,13',
'698,13,13,13,13,13,13,13,719,898,339,898,512,13,13,13,13,13,13,13,398',
'136,398,136,13,13,13,13,13,13,13,13,13,396,13,13,339,13,13,13,343,697',
'719,66,13,290,13,13,66,13,13,349,349,13,13,13,13,13,13,13,294,706,698',
'706,278,719,343,719,719,719,290,290,276,762,719,13,278,13,480,576,480',
'480,349,349,276,349,349,349,349,349,349,576,349,19,669,19,349,349,762',
'762,699,349,762,349,349,349,349,349,349,349,761,393,75,305,75,349,349',
'349,349,349,349,349,305,305,344,705,349,349,349,349,349,349,349,349',
'349,668,349,349,73,349,349,349,345,308,761,665,349,308,349,349,344,349',
'349,544,544,349,349,349,349,349,349,349,663,73,73,759,759,761,345,761',
'761,709,449,761,449,449,449,449,449,349,618,618,618,618,544,544,346',
'544,544,544,544,544,544,544,544,710,709,709,544,544,709,383,244,544',
'244,544,544,544,544,544,544,544,346,378,816,449,374,544,544,544,544',
'544,544,544,544,661,347,544,544,544,544,544,544,544,544,544,544,723',
'544,544,297,544,544,544,338,725,363,363,544,371,544,544,347,544,544',
'544,728,544,544,544,544,544,544,544,936,297,297,137,137,816,338,816',
'816,816,816,816,369,363,363,544,363,363,363,363,363,363,363,363,816',
'936,936,363,363,936,816,873,363,873,363,363,363,363,363,363,363,323',
'368,323,310,731,363,363,363,363,363,363,363,363,735,336,363,363,363',
'363,363,363,363,363,363,363,737,363,363,298,363,363,363,483,318,483',
'483,363,310,363,363,336,363,363,363,366,363,363,363,363,363,363,363',
'298,298,298,61,61,61,61,318,310,659,310,310,26,26,310,363,61,61,61,61',
'61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,658,61,61,61,61,61,61',
'61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61',
'857,279,922,61,61,61,61,61,61,61,61,275,744,56,61,61,61,61,61,61,61',
'61,61,889,745,279,279,922,922,309,279,61,61,354,857,275,275,275,56,56',
'800,61,800,800,800,800,800,747,889,889,567,567,567,567,309,309,519,857',
'519,857,857,61,61,567,567,567,567,567,567,567,567,567,567,567,567,567',
'567,567,567,567,567,567,567,800,567,567,567,567,567,567,567,567,567',
'567,567,567,567,567,567,567,567,567,567,567,567,567,567,567,567,567',
'567,567,567,170,327,890,567,567,567,567,567,567,567,567,525,326,375',
'567,567,567,567,567,602,751,567,377,657,170,170,170,890,890,121,875',
'567,567,888,875,875,525,525,375,375,753,567,103,103,602,602,656,377',
'377,38,38,38,38,320,121,121,135,135,888,888,317,567,38,38,38,38,38,38',
'38,38,38,38,38,38,38,38,38,38,38,38,38,38,652,38,38,38,38,38,38,38,38',
'38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,876,651',
'321,38,38,38,38,38,38,38,38,380,126,126,38,38,38,38,38,38,647,38,941',
'941,763,876,876,321,321,295,299,38,38,295,640,640,380,380,639,639,446',
'38,776,776,38,542,542,542,542,597,597,597,597,295,295,542,412,412,283',
'283,642,38,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597',
'597,597,597,597,597,768,597,597,597,597,597,597,597,597,597,597,597',
'597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597',
'597,593,593,641,597,597,597,597,597,597,597,597,770,771,772,597,597',
'597,597,597,293,291,597,638,161,288,161,161,161,161,161,284,597,597',
'448,667,282,667,667,667,667,667,597,161,787,597,455,455,161,455,515',
'515,515,515,667,455,455,281,280,667,450,799,597,515,515,515,515,515',
'515,515,515,515,515,515,515,515,515,515,515,515,515,515,515,632,515',
'515,515,515,515,515,515,515,515,515,515,515,515,515,515,515,515,515',
'515,515,515,515,515,515,515,515,515,515,515,631,253,250,515,515,515',
'515,515,515,515,515,247,810,246,515,515,515,515,515,451,459,515,160',
'452,155,452,452,452,452,452,824,515,515,154,870,152,870,870,870,870',
'870,515,452,678,515,678,678,452,678,12,12,12,12,870,655,141,655,655',
'655,655,833,515,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12',
'12,12,461,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12',
'12,12,12,12,12,12,12,12,12,608,839,129,12,12,12,12,12,12,12,12,606,855',
'125,12,12,12,12,12,12,12,12,12,872,858,872,872,872,872,872,860,12,12',
'123,666,864,666,666,666,666,666,12,872,601,94,94,94,94,866,80,80,80',
'80,666,94,865,867,865,865,865,865,12,80,80,80,80,80,80,80,80,80,80,80',
'80,80,80,80,80,80,80,80,80,868,80,80,80,80,80,80,80,80,80,80,80,80,80',
'80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,869,595,871,80,80,80',
'80,80,80,80,80,594,586,568,80,80,80,80,80,580,580,80,120,798,878,798',
'798,798,798,798,879,80,80,907,881,907,907,907,907,907,882,80,798,679',
'80,679,679,679,679,883,580,580,907,884,580,580,580,580,580,887,580,80',
'119,118,580,580,114,109,893,580,443,580,580,580,580,580,580,580,105',
'507,945,560,908,580,580,580,580,580,580,580,557,91,76,556,580,580,580',
'580,580,580,580,580,580,580,580,580,68,580,580,580,67,538,583,583,580',
'60,580,580,926,580,580,580,580,580,580,580,580,580,580,580,52,929,930',
'931,932,945,933,945,945,945,945,945,580,583,583,934,49,583,583,583,583',
'583,41,583,945,937,35,583,583,552,945,550,583,549,583,583,583,583,583',
'583,583,2,950,916,,,583,583,583,583,583,583,583,,,,,583,583,583,583',
'583,583,583,583,583,583,583,583,,583,583,583,,,581,581,583,,583,583',
',583,583,583,583,583,583,583,583,583,583,583,,,,,,916,,916,916,916,916',
'916,583,581,581,,,581,581,581,581,581,,581,916,,,581,581,,916,,581,',
'581,581,581,581,581,581,581,,,796,,,581,581,581,581,581,581,581,,,,',
'581,581,581,581,581,581,581,581,581,581,581,581,,581,581,581,,,588,588',
'581,,581,581,,581,581,581,581,581,581,581,581,581,581,581,,,,,,796,',
'796,796,796,796,796,581,588,588,,,588,588,588,588,588,,588,796,,,588',
'588,,796,,588,,588,588,588,588,588,588,588,,,905,,,588,588,588,588,588',
'588,588,,,,,588,588,588,588,588,588,588,588,588,588,588,588,,588,588',
'588,,,364,364,588,,588,588,,588,588,588,588,588,588,588,588,588,588',
'588,,,,,,905,,905,905,905,905,905,588,364,364,,,364,364,364,364,364',
',364,905,,,364,364,,905,,364,,364,364,364,364,364,364,364,,,785,,,364',
'364,364,364,364,364,364,,,,,364,364,364,364,364,364,364,364,364,,364',
'364,,364,364,364,,,535,535,364,,364,364,,364,364,,,364,364,364,364,364',
'364,364,,,,,,785,,785,785,785,785,785,364,535,535,,,535,535,535,535',
'535,,535,785,,,535,535,,785,,535,,535,535,535,535,535,535,535,,,,,,535',
'535,535,535,535,535,535,,,,,535,535,535,535,535,535,535,535,535,535',
'535,535,,535,535,535,,,,,535,,535,535,,535,535,535,535,535,535,535,535',
'535,535,535,,,107,107,,,,473,473,473,473,473,535,473,473,473,473,473',
'473,473,473,473,473,473,473,473,473,473,473,473,473,473,473,107,107',
'473,,107,107,107,107,107,,107,,,,107,107,,,,107,,107,107,107,107,107',
'107,107,919,,,,,107,107,107,107,107,107,107,,,,,107,107,107,107,107',
'107,107,107,107,107,107,107,,107,107,107,,,,,107,,107,107,,107,107,107',
'107,107,107,107,107,107,107,107,532,532,,919,,919,919,919,919,919,,',
'107,721,721,721,721,473,,,,,919,721,325,325,325,325,919,,,532,532,,325',
'532,532,532,532,532,,532,,,,532,532,,,,532,,532,532,532,532,532,532',
'532,,,445,,,532,532,532,532,532,532,532,,,,,532,532,532,532,532,532',
'532,532,532,532,532,532,,532,532,532,,,78,78,532,,532,532,,532,532,532',
'532,532,532,532,532,532,532,532,,,,,,445,,445,445,445,445,445,532,78',
'78,,,78,78,78,78,78,,78,445,,,78,78,,445,,78,,78,78,78,78,78,78,78,',
',783,,,78,78,78,78,78,78,78,,,,,78,78,78,78,78,78,78,78,78,78,78,78',
',78,78,78,,,69,69,78,,78,78,,78,78,78,78,78,78,78,78,78,78,78,,,,,,783',
'78,783,783,783,783,783,78,69,69,,,69,69,69,69,69,,69,783,,,69,69,,783',
',69,,69,69,69,69,69,69,69,,69,,,,69,69,69,69,69,69,69,,,,,69,69,69,69',
'69,69,69,69,69,69,69,69,,69,69,69,,,6,6,69,,69,69,,69,69,69,69,69,69',
'69,69,69,69,69,,,,,,,69,,,,,,69,6,6,,,6,6,6,6,6,,6,,,,6,6,,,,6,,6,6',
'6,6,6,6,6,,,,,,6,6,6,6,6,6,6,,,,,6,6,6,6,6,6,6,6,6,6,6,6,,6,6,6,,,85',
'85,6,,6,6,,6,6,6,6,6,6,6,6,6,6,6,467,,467,467,,,467,467,467,467,467',
'467,6,85,85,,,85,85,85,85,85,,85,,,,85,85,,,,85,,85,85,85,85,85,85,85',
'313,,,,,85,85,85,85,85,85,85,,,,,85,85,85,85,85,85,85,85,85,85,85,85',
',85,85,85,,,313,,85,,85,85,,85,85,85,85,85,85,85,85,85,85,85,636,636',
'636,636,,313,85,313,313,,,313,85,464,,464,464,,,464,464,464,464,464',
'464,464,464,464,464,464,464,636,636,,,636,636,636,636,636,,636,,,,636',
'636,,,,636,,636,636,636,636,636,636,636,707,,,,,636,636,636,636,636',
'636,636,,,,,636,636,636,636,636,636,636,636,636,636,636,636,,636,636',
'636,,,707,,636,,636,636,,636,636,636,636,636,636,636,636,636,636,636',
'637,637,637,637,,707,,707,707,,,707,636,487,,487,487,,,487,487,487,487',
'487,487,487,487,487,487,,,637,637,,,637,637,637,637,637,,637,,,,637',
'637,,,,637,,637,637,637,637,637,637,637,,,,,,637,637,637,637,637,637',
'637,,,,,637,637,637,637,637,637,637,637,637,637,637,637,,637,637,637',
',,93,93,637,,637,637,,637,637,637,637,637,637,637,637,637,637,637,476',
',476,476,,,476,476,476,476,476,476,637,93,93,,,93,93,93,93,93,,93,,',
',93,93,,,,93,,93,93,93,93,93,93,93,,,,,,93,93,93,93,93,93,93,,,,,93',
'93,93,93,93,93,93,93,93,93,93,93,,93,93,93,104,104,,,93,,93,93,,93,93',
'93,93,93,93,93,93,93,93,93,,,,,,,93,,,,,104,93,,,,,104,104,104,,104',
',,,104,104,,,,104,,104,104,104,104,104,104,104,,,,,,104,104,104,104',
'104,104,104,,,,,104,104,104,104,104,104,104,104,104,,104,104,,104,104',
'104,379,379,,,104,,104,104,,104,104,,,104,104,104,104,104,104,104,,',
',,,,,,,,104,379,,,,,,379,379,379,,379,,,,379,379,,,,379,,379,379,379',
'379,379,379,379,,,,,,379,379,379,379,379,379,379,,,,,379,379,379,379',
'379,379,379,379,379,1,379,379,,379,379,379,,,1,1,379,,379,379,,379,379',
',,379,379,379,379,379,379,379,,,,,,,,,,,379,,,1,1,,1,1,1,1,1,1,1,1,',
',,1,1,,,,1,,1,1,1,1,1,1,1,,,,,,1,1,1,1,1,1,1,1,,,1,1,1,1,1,1,1,1,1,1',
'79,1,1,,1,1,1,,,79,79,1,,1,1,,1,1,1,,1,1,1,1,1,1,1,478,,478,478,,,478',
'478,478,478,478,478,,79,79,,79,79,79,79,79,79,79,79,,,,79,79,,,,79,',
'79,79,79,79,79,79,79,,,,,,79,79,79,79,79,79,79,79,,,79,79,79,79,79,79',
'79,79,79,79,435,79,79,,79,79,79,,,435,435,79,,79,79,,79,79,79,,79,79',
'79,79,79,79,79,474,,474,474,,,474,474,474,474,474,474,,435,435,,435',
'435,435,435,435,435,435,435,,,,435,435,,,,435,,435,435,435,435,435,435',
'435,,,,,,435,435,435,435,435,435,435,435,,,435,435,435,435,435,435,435',
'435,435,435,626,435,435,,435,435,435,,,626,626,435,,435,435,,435,435',
'435,,435,435,435,435,435,435,435,481,,481,481,,,481,481,481,481,481',
'481,,626,626,,626,626,626,626,626,626,626,626,,,,626,626,,,,626,,626',
'626,626,626,626,626,626,,,,,,626,626,626,626,626,626,626,626,,,626,626',
'626,626,626,626,626,626,626,626,428,626,626,,626,626,626,,,428,428,626',
',626,626,,626,626,626,,626,626,626,626,626,626,626,463,,463,463,,,463',
'463,463,463,463,463,,428,428,,428,428,428,428,428,428,428,428,,,,428',
'428,,,,428,,428,428,428,428,428,428,428,,,,,,428,428,428,428,428,428',
'428,428,,,428,428,428,428,428,428,428,428,428,428,454,428,428,,428,428',
'428,,,454,454,428,,428,428,,428,428,428,,428,428,428,428,428,428,428',
'484,,484,484,,,484,484,484,484,484,484,,454,454,,454,454,454,454,454',
'454,454,454,,,,454,454,,,,454,,454,454,454,454,454,454,454,,,,,,454',
'454,454,454,454,454,454,454,,,454,454,454,454,454,454,454,454,454,454',
'711,454,454,,454,454,454,,,711,711,454,,454,454,,454,454,454,,454,454',
'454,454,454,454,454,486,,486,486,,,486,486,486,486,486,486,,711,711',
',711,711,711,711,711,711,711,711,,,,711,711,,,,711,,711,711,711,711',
'711,711,711,,,,,,711,711,711,711,711,711,711,711,,,711,711,711,711,711',
'711,711,711,711,711,623,711,711,,711,711,711,,,623,623,711,,711,711',
',711,711,711,,711,711,711,711,711,711,711,471,,471,471,,,471,471,471',
'471,471,471,,623,623,,623,623,623,623,623,623,623,623,,,,623,623,,,',
'623,,623,623,623,623,623,623,623,,,,,,623,623,623,623,623,623,623,623',
',,623,623,623,623,623,623,623,623,623,623,600,623,623,,623,623,623,',
',600,600,623,,623,623,,623,623,623,,623,623,623,623,623,623,623,470',
',470,470,,,470,470,470,470,470,470,,600,600,,600,600,600,600,600,600',
'600,600,,,,600,600,,,,600,,600,600,600,600,600,600,600,,,,,,600,600',
'600,600,600,600,600,600,,,600,600,600,600,600,600,600,600,600,600,376',
'600,600,,600,600,600,,,376,376,600,,600,600,,600,600,600,,600,600,600',
'600,600,600,600,,,,,,,,,,,,,,376,376,,376,376,376,376,376,376,376,376',
',,,376,376,,,,376,,376,376,376,376,376,376,376,,,,,,376,376,376,376',
'376,376,376,376,,,376,376,376,376,376,376,376,376,376,376,727,376,376',
',376,376,376,,,727,727,376,,376,376,,376,376,376,,376,376,376,376,376',
'376,376,,,,,,,,,,,,,,727,727,,727,727,727,727,727,727,727,727,,,,727',
'727,,,,727,,727,727,727,727,727,727,727,,,,,,727,727,727,727,727,727',
'727,727,,,727,727,727,727,727,727,727,727,727,727,367,727,727,,727,727',
'727,,,367,367,727,,727,727,,727,727,727,,727,727,727,727,727,727,727',
',,,,,,,,,,,,,367,367,,367,367,367,367,367,367,367,367,,,,367,367,,,',
'367,,367,367,367,367,367,367,367,,,,,,367,367,367,367,367,367,367,367',
',,367,367,367,367,367,367,367,367,367,367,928,367,367,,367,367,367,',
',928,928,367,,367,367,,367,367,367,,367,367,367,367,367,367,367,,,,',
',,,,,,,,,928,928,,928,928,928,928,928,928,928,928,,,,928,928,,,,928',
',928,928,928,928,928,928,928,,,,,,928,928,928,928,928,928,928,928,,',
'928,928,928,928,928,928,928,928,928,928,437,928,928,,928,928,928,,,437',
'437,928,,928,928,,928,928,928,,928,928,928,928,928,928,928,,,,,,,,,',
',,,,437,437,,437,437,437,437,437,437,437,437,,,,437,437,,,,437,,437',
'437,437,437,437,437,437,,,,,,437,437,437,437,437,437,437,437,,,437,437',
'437,437,437,437,437,437,437,437,48,437,437,,437,437,437,,,48,48,437',
',437,437,,437,437,437,,437,437,437,437,437,437,437,,,,,,,,,,,,,,48,48',
',48,48,48,48,48,48,48,48,,,,48,48,,,,48,,48,48,48,48,48,48,48,,,,,,48',
'48,48,48,48,48,48,48,,,48,48,48,48,48,48,48,48,48,48,891,48,48,,48,48',
'48,,,891,891,48,,48,48,,48,48,48,,48,48,48,48,48,48,48,,,,,,,,,,,,,',
'891,891,,891,891,891,891,891,891,891,891,,,,891,891,,,,891,,891,891',
'891,891,891,891,891,,,,,,891,891,891,891,891,891,891,891,,,891,891,891',
'891,891,891,891,891,891,891,578,891,891,,891,891,891,,,578,578,891,',
'891,891,,891,891,891,,891,891,891,891,891,891,891,,,,,,,,,,,,,,578,578',
',578,578,578,578,578,578,578,578,,,,578,578,,,,578,,578,578,578,578',
'578,578,578,,,,,,578,578,578,578,578,578,578,578,,,578,578,578,578,578',
'578,578,578,578,578,743,578,578,,578,578,578,,,743,743,578,,578,578',
',578,578,578,,578,578,578,578,578,578,578,,,,,,,,,,,,,,743,743,,743',
'743,743,743,743,743,743,743,,,,743,743,,,,743,,743,743,743,743,743,743',
'743,,,,,,743,743,743,743,743,743,743,743,,,743,743,743,743,743,743,743',
'743,743,743,577,743,743,,743,743,743,,,577,577,743,,743,743,,743,743',
'743,,743,743,743,743,743,743,743,,,,,,,,,,,,,,577,577,,577,577,577,577',
'577,577,577,577,,,,577,577,,,,577,,577,577,577,577,577,577,577,,,,,',
'577,577,577,577,577,577,577,577,,,577,577,577,577,577,577,577,577,577',
'577,332,577,577,,577,577,577,,,332,332,577,,577,577,,577,577,577,,577',
'577,577,577,577,577,577,,,,,,,,,,,,,,332,332,,332,332,332,332,332,332',
'332,332,,,,332,332,,,,332,,332,332,332,332,332,332,332,,,,,,332,332',
'332,332,332,332,332,332,,,332,332,332,332,332,332,332,332,332,332,331',
'332,332,,332,332,332,,,331,331,332,,332,332,,332,332,332,,332,332,332',
'332,332,332,332,,,,,,,,,,,,,,331,331,,331,331,331,331,331,331,331,331',
',,,331,331,,,,331,,331,331,331,331,331,331,331,,,,,,331,331,331,331',
'331,331,331,331,,,331,331,331,331,331,331,331,331,331,331,122,331,331',
',331,331,331,,,122,122,331,,331,331,,331,331,331,,331,331,331,331,331',
'331,331,,,,,,,,,,,,,,122,122,,122,122,122,122,122,122,122,122,,,,122',
'122,,,,122,,122,122,122,122,122,122,122,,,,,,122,122,122,122,122,122',
'122,122,,,122,122,122,122,122,122,122,122,122,122,564,122,122,,122,122',
'122,,,564,564,122,,122,122,,122,122,122,,122,122,122,122,122,122,122',
',,,,,,,,,,,,,564,564,,564,564,564,564,564,564,564,564,,,,564,564,,,',
'564,,564,564,564,564,564,564,564,,,,,,564,564,564,564,564,564,564,564',
',,564,564,564,564,564,564,564,564,564,564,492,564,564,,564,564,564,',
',492,492,564,,564,564,,564,564,564,,564,564,564,564,564,564,564,,,,',
',,,,,,,,,492,492,,492,492,492,492,492,492,492,492,,,,492,492,,,,492',
',492,492,492,492,492,492,492,,,,,,492,492,492,492,492,492,492,492,,',
'492,492,492,492,492,492,492,492,492,492,496,492,492,,492,492,492,,,496',
'496,492,,492,492,,492,492,492,,492,492,492,492,492,492,492,,,,,,,,,',
',,,,496,496,,496,496,496,496,496,496,496,496,,,,496,496,,,,496,,496',
'496,496,496,496,496,496,,,,,,496,496,496,496,496,496,496,496,,,496,496',
'496,496,496,496,496,496,496,496,520,496,496,,496,496,496,,,520,520,496',
',496,496,,496,496,496,,496,496,496,496,496,496,496,,,,,,,,,,,,,,520',
'520,,520,520,520,520,520,520,520,520,,,,520,520,,,,520,,520,520,520',
'520,520,520,520,,,,,,520,520,520,520,520,520,520,520,,,520,520,520,520',
'520,520,520,520,520,520,805,520,520,,520,520,520,,,805,805,520,,520',
'520,,520,520,520,,520,520,520,520,520,520,520,,,,,,,,,,,,,,805,805,',
'805,805,805,805,805,805,805,805,,,,805,805,,,,805,,805,805,805,805,805',
'805,805,,,,,,805,805,805,805,805,805,805,805,,,805,805,805,805,805,805',
'805,805,805,805,819,805,805,,805,805,805,,,819,819,805,,805,805,,805',
'805,805,,805,805,805,805,805,805,805,,,,,,,,,,,,,,819,819,,819,819,819',
'819,819,819,819,819,,,,819,819,,,,819,,819,819,819,819,819,819,819,',
',,,,819,819,819,819,819,819,819,819,,,819,819,819,819,819,819,819,819',
'819,819,831,819,819,,819,819,819,,,831,831,819,,819,819,,819,819,819',
',819,819,819,819,819,819,819,,,,,,,,,,,,,,831,831,,831,831,831,831,831',
'831,831,831,,,,831,831,,,,831,,831,831,831,831,831,831,831,,,,,,831',
'831,831,831,831,831,831,831,,,831,831,831,831,831,831,831,831,831,831',
'837,831,831,,831,831,831,,,837,837,831,,831,831,,831,831,831,,831,831',
'831,831,831,831,831,,,,,,,,,,,,,,837,837,,837,837,837,837,837,837,837',
'837,,,,837,837,,,,837,,837,837,837,837,837,837,837,,,,,,837,837,837',
'837,837,837,837,837,,,837,837,837,837,837,837,837,837,837,837,,837,837',
',837,837,837,,,,,837,,837,837,,837,837,837,,837,837,837,837,837,837',
'837,541,541,541,541,541,541,541,541,541,541,541,541,541,541,541,541',
'541,541,541,541,,541,541,541,541,541,912,912,912,912,912,912,912,912',
'912,912,912,912,912,912,912,912,912,912,912,912,,912,912,912,912,912',
',,,,,,,,,,,,,,,541,541,,,541,,,,,,,,,,541,541,,,,,,,,,541,,912,912,',
',912,,,,,,,,,,912,912,,,541,541,477,,477,477,912,,477,477,477,477,477',
'477,477,477,477,477,477,477,477,477,477,477,477,,912,912,540,540,540',
'540,540,540,540,540,540,540,540,540,540,540,540,540,540,540,540,540',
',540,540,540,540,540,413,413,413,413,413,413,413,413,413,413,413,413',
'413,413,413,413,413,413,413,413,,413,413,413,413,413,,,,,,,,,,,,,,,',
'540,540,,,540,,,,,,,,,,540,540,,,,,,,,,540,,413,413,,,413,,,,,,,,,,413',
'413,,,540,540,482,,482,482,413,,482,482,482,482,482,482,482,482,482',
'482,482,482,482,482,482,482,482,,413,413,361,361,361,361,361,361,361',
'361,361,361,361,361,361,361,361,361,361,361,361,361,,361,361,361,361',
'361,528,528,528,528,528,528,528,528,528,528,528,528,528,528,528,528',
'528,528,528,528,,528,528,528,528,528,,,,,,,,,,,,,,,,361,361,,,361,,',
',,,,,,,361,361,,,,,,,,,361,,528,528,,,528,,,,,,,,,,528,528,,,361,361',
'479,,479,479,528,,479,479,479,479,479,479,479,479,479,479,479,479,479',
'479,479,479,479,,528,528,359,359,359,359,359,359,359,359,359,359,359',
'359,359,359,359,359,359,359,359,359,,359,359,359,359,359,415,415,415',
'415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415',
',415,415,415,415,415,,,,,,,,,,,,,,,,359,359,,,359,,,,,,,,,,359,359,',
',,,,,,,359,,415,415,,,415,,,,,,,,,,415,415,,,359,359,472,,472,472,415',
',472,472,472,472,472,472,472,472,472,472,472,472,472,472,472,,,,415',
'415,526,526,526,526,526,526,526,526,526,526,526,526,526,526,526,526',
'526,526,526,526,,526,526,526,526,526,925,925,925,925,925,925,925,925',
'925,925,925,925,925,925,925,925,925,925,925,925,,925,925,925,925,925',
',,,,,,,,,,,,,,,526,526,,,526,,,,,,,,,,526,526,,,,,,,,,526,,925,925,',
',925,,,,,,,,,,925,925,,,526,526,475,,475,475,925,,475,475,475,475,475',
'475,475,475,475,475,475,475,475,475,475,,,,925,925,603,603,603,603,603',
'603,603,603,603,603,603,603,603,603,603,603,603,603,603,603,,603,603',
'603,603,603,923,923,923,923,923,923,923,923,923,923,923,923,923,923',
'923,923,923,923,923,923,,923,923,923,923,923,,,,,,,,,,,,,,,,603,603',
',,603,,,,,,,,,,603,603,,,,,,,,,603,,923,923,,,923,,,,,,,,,,923,923,',
',603,603,466,,466,466,923,,466,466,466,466,466,466,466,466,466,466,466',
'466,466,,,,,,923,923,510,510,510,510,510,510,510,510,510,510,510,510',
'510,510,510,510,510,510,510,510,,510,510,510,510,510,509,509,509,509',
'509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,,509',
'509,509,509,509,,,,,,,,,,,,,,,,510,510,,,510,,,,,,,,,,510,510,,,,,,',
',,510,,509,509,,,509,,,,,,,,,,509,509,,,510,510,469,,469,469,509,,469',
'469,469,469,469,469,469,469,469,469,469,469,469,,,,,,509,509,506,506',
'506,506,506,506,506,506,506,506,506,506,506,506,506,506,506,506,506',
'506,,506,506,506,506,506,504,504,504,504,504,504,504,504,504,504,504',
'504,504,504,504,504,504,504,504,504,,504,504,504,504,504,,,,,,,,,,,',
',,,,506,506,,,506,,,,,,,,,,506,506,,,,,,,,,506,,504,504,,,504,,,,,,',
',,,504,504,,,506,506,485,,485,485,504,,485,485,485,485,485,485,485,485',
'485,485,,,,,,,,,504,504,605,605,605,605,605,605,605,605,605,605,605',
'605,605,605,605,605,605,605,605,605,,605,605,605,605,605,315,315,315',
'315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315',
',315,315,315,315,315,,,,,,,,,,,,,,,,605,605,,,605,,,,,,,,,,605,605,',
',,,,,,,605,,315,315,,,315,,,,,,,,,,315,315,494,,605,605,,494,,337,315',
',,,337,,,,,,,,,,,,,,,,315,316,316,316,316,316,316,316,316,316,316,316',
'316,316,316,316,316,316,316,316,316,,316,316,316,316,316,494,,494,494',
'494,494,494,337,,337,337,337,337,337,,,,,,494,,,421,421,494,494,337',
',,,,337,337,,,,,,,,,316,316,,,316,,,494,,,,337,421,421,316,316,421,421',
'421,421,421,,421,,316,,421,421,,,,421,,421,421,421,421,421,421,421,',
',,,316,421,421,421,421,421,421,421,,,,,421,421,421,421,421,421,421,421',
'421,,421,421,,421,421,421,806,806,,,421,,421,421,,421,421,,,421,421',
'421,421,421,421,421,,,,,,,,,,,,806,806,,,806,806,806,806,806,,806,,',
',806,806,,,,806,,806,806,806,806,806,806,806,,,,,,806,806,806,806,806',
'806,806,,,,,806,806,806,806,806,806,806,806,806,,806,806,,806,806,806',
'254,254,,,806,,806,806,,806,806,806,,806,806,806,806,806,806,806,,,',
',,,,,,,,254,254,,,254,254,254,254,254,,254,,,,254,254,,,,254,,254,254',
'254,254,254,254,254,,,,,,254,254,254,254,254,254,254,,,,,254,254,254',
'254,254,254,254,254,254,,254,254,,254,254,254,255,255,,,254,,254,254',
',254,254,,,254,254,254,254,254,254,254,,,,,,,,,,,,255,255,,,255,255',
'255,255,255,,255,,,,255,255,,,,255,,255,255,255,255,255,255,255,,,,',
',255,255,255,255,255,255,255,,,,,255,255,255,255,255,255,255,255,255',
',255,255,,255,255,255,256,256,,,255,,255,255,,255,255,,,255,255,255',
'255,255,255,255,,,,,,,,,,,,256,256,,,256,256,256,256,256,,256,,,,256',
'256,,,,256,,256,256,256,256,256,256,256,,,,,,256,256,256,256,256,256',
'256,,,,,256,256,256,256,256,256,256,256,256,,256,256,,256,256,256,257',
'257,,,256,,256,256,,256,256,,,256,256,256,256,256,256,256,,,,,,,,,,',
',257,257,,,257,257,257,257,257,,257,,,,257,257,,,,257,,257,257,257,257',
'257,257,257,,,,,,257,257,257,257,257,257,257,,,,,257,257,257,257,257',
'257,257,257,257,,257,257,,257,257,257,258,258,,,257,,257,257,,257,257',
',,257,257,257,257,257,257,257,,,,,,,,,,,,258,258,,,258,258,258,258,258',
',258,,,,258,258,,,,258,,258,258,258,258,258,258,258,,,,,,258,258,258',
'258,258,258,258,,,,,258,258,258,258,258,258,258,258,258,,258,258,,258',
'258,258,259,259,,,258,,258,258,,258,258,,,258,258,258,258,258,258,258',
',,,,,,,,,,,259,259,,,259,259,259,259,259,,259,,,,259,259,,,,259,,259',
'259,259,259,259,259,259,,,,,,259,259,259,259,259,259,259,,,,,259,259',
'259,259,259,259,259,259,259,,259,259,,259,259,259,260,260,,,259,,259',
'259,,259,259,,,259,259,259,259,259,259,259,,,,,,,,,,,,260,260,,,260',
'260,260,260,260,,260,,,,260,260,,,,260,,260,260,260,260,260,260,260',
',,,,,260,260,260,260,260,260,260,,,,,260,260,260,260,260,260,260,260',
'260,,260,260,,260,260,260,261,261,,,260,,260,260,,260,260,,,260,260',
'260,260,260,260,260,,,,,,,,,,,,261,261,,,261,261,261,261,261,,261,,',
',261,261,,,,261,,261,261,261,261,261,261,261,,,,,,261,261,261,261,261',
'261,261,,,,,261,261,261,261,261,261,261,261,261,,261,261,,261,261,261',
'262,262,,,261,,261,261,,261,261,,,261,261,261,261,261,261,261,,,,,,',
',,,,,262,262,,,262,262,262,262,262,,262,,,,262,262,,,,262,,262,262,262',
'262,262,262,262,,,,,,262,262,262,262,262,262,262,,,,,262,262,262,262',
'262,262,262,262,262,,262,262,,262,262,262,263,263,,,262,,262,262,,262',
'262,,,262,262,262,262,262,262,262,,,,,,,,,,,,263,263,,,263,263,263,263',
'263,,263,,,,263,263,,,,263,,263,263,263,263,263,263,263,,,,,,263,263',
'263,263,263,263,263,,,,,263,263,263,263,263,263,263,263,263,,263,263',
',263,263,263,264,264,,,263,,263,263,,263,263,,,263,263,263,263,263,263',
'263,,,,,,,,,,,,264,264,,,264,264,264,264,264,,264,,,,264,264,,,,264',
',264,264,264,264,264,264,264,,,,,,264,264,264,264,264,264,264,,,,,264',
'264,264,264,264,264,264,264,264,,264,264,,264,264,264,265,265,,,264',
',264,264,,264,264,,,264,264,264,264,264,264,264,,,,,,,,,,,,265,265,',
',265,265,265,265,265,,265,,,,265,265,,,,265,,265,265,265,265,265,265',
'265,,,,,,265,265,265,265,265,265,265,,,,,265,265,265,265,265,265,265',
'265,265,,265,265,,265,265,265,266,266,,,265,,265,265,,265,265,,,265',
'265,265,265,265,265,265,,,,,,,,,,,,266,266,,,266,266,266,266,266,,266',
',,,266,266,,,,266,,266,266,266,266,266,266,266,,,,,,266,266,266,266',
'266,266,266,,,,,266,266,266,266,266,266,266,266,266,,266,266,,266,266',
'266,267,267,,,266,,266,266,,266,266,,,266,266,266,266,266,266,266,,',
',,,,,,,,,267,267,,,267,267,267,267,267,,267,,,,267,267,,,,267,,267,267',
'267,267,267,267,267,,,,,,267,267,267,267,267,267,267,,,,,267,267,267',
'267,267,267,267,267,267,,267,267,,267,267,267,268,268,,,267,,267,267',
',267,267,,,267,267,267,267,267,267,267,,,,,,,,,,,,268,268,,,268,268',
'268,268,268,,268,,,,268,268,,,,268,,268,268,268,268,268,268,268,,,,',
',268,268,268,268,268,268,268,,,,,268,268,268,268,268,268,268,268,268',
',268,268,,268,268,268,269,269,,,268,,268,268,,268,268,,,268,268,268',
'268,268,268,268,,,,,,,,,,,,269,269,,,269,269,269,269,269,,269,,,,269',
'269,,,,269,,269,269,269,269,269,269,269,,,,,,269,269,269,269,269,269',
'269,,,,,269,269,269,269,269,269,269,269,269,,269,269,,269,269,269,270',
'270,,,269,,269,269,,269,269,,,269,269,269,269,269,269,269,,,,,,,,,,',
',270,270,,,270,270,270,270,270,,270,,,,270,270,,,,270,,270,270,270,270',
'270,270,270,,,,,,270,270,270,270,270,270,270,,,,,270,270,270,270,270',
'270,270,270,270,,270,270,,270,270,270,271,271,,,270,,270,270,,270,270',
',,270,270,270,270,270,270,270,,,,,,,,,,,,271,271,,,271,271,271,271,271',
',271,,,,271,271,,,,271,,271,271,271,271,271,271,271,,,,,,271,271,271',
'271,271,271,271,,,,,271,271,271,271,271,271,271,271,271,,271,271,,271',
'271,271,272,272,,,271,,271,271,,271,271,,,271,271,271,271,271,271,271',
',,,,,,,,,,,272,272,,,272,272,272,272,272,,272,,,,272,272,,,,272,,272',
'272,272,272,272,272,272,,,,,,272,272,272,272,272,272,272,,,,,272,272',
'272,272,272,272,272,272,272,,272,272,,272,272,272,273,273,,,272,,272',
'272,,272,272,,,272,272,272,272,272,272,272,,,,,,,,,,,,273,273,,,273',
'273,273,273,273,,273,,,,273,273,,,,273,,273,273,273,273,273,273,273',
',,,,,273,273,273,273,273,273,273,,,,,273,273,273,273,273,273,273,273',
'273,,273,273,,273,273,273,251,251,,,273,,273,273,,273,273,,,273,273',
'273,273,273,273,273,,,,,,,,,,,,251,251,,,251,251,251,251,251,,251,,',
',251,251,,,,251,,251,251,251,251,251,251,251,,,,,,251,251,251,251,251',
'251,251,,,,,251,251,251,251,251,251,251,251,251,,251,251,,251,251,251',
'132,132,,,251,,251,251,,251,251,,,251,251,251,251,251,251,251,,,,,,',
',,,,,132,132,,,132,132,132,132,132,,132,,,,132,132,,,,132,,132,132,132',
'132,132,132,132,,,,,,132,132,132,132,132,132,132,,,,,132,132,132,132',
'132,132,132,132,132,,132,132,,132,132,132,505,505,,,132,,132,132,,132',
'132,,,132,132,132,132,132,132,132,,,,,,,,,,,,505,505,,,505,505,505,505',
'505,,505,,,,505,505,,,,505,,505,505,505,505,505,505,505,,,,,,505,505',
'505,505,505,505,505,,,,,505,505,505,505,505,505,505,505,505,505,505',
'505,,505,505,505,807,807,,,505,,505,505,,505,505,505,505,505,505,505',
'505,505,505,505,,,,,,,,,,,,807,807,,,807,807,807,807,807,,807,,,,807',
'807,,,,807,,807,807,807,807,807,807,807,,,,,,807,807,807,807,807,807',
'807,,,,,807,807,807,807,807,807,807,807,807,,807,807,,807,807,807,502',
'502,,,807,,807,807,,807,807,,,807,807,807,807,807,807,807,,,,,,,,,,',
',502,502,,502,502,502,502,502,502,,502,,,,502,502,,,,502,,502,502,502',
'502,502,502,502,,,,,,502,502,502,502,502,502,502,,,,,502,502,502,502',
'502,502,502,502,502,,502,502,,502,502,502,499,499,,,502,,502,502,,502',
'502,,,502,502,502,502,502,502,502,,,,,,,,,,,,499,499,,,499,499,499,499',
'499,,499,,,,499,499,,,,499,,499,499,499,499,499,499,499,,,,,,499,499',
'499,499,499,499,499,,,,,499,499,499,499,499,499,499,499,499,,499,499',
',499,499,499,498,498,,,499,,499,499,,499,499,,,499,499,499,499,499,499',
'499,,,,,,,,,,,,498,498,,,498,498,498,498,498,,498,,,,498,498,,,,498',
',498,498,498,498,498,498,498,,,,,,498,498,498,498,498,498,498,,,,,498',
'498,498,498,498,498,498,498,498,,498,498,,498,498,498,28,28,,,498,,498',
'498,,498,498,,,498,498,498,498,498,498,498,,,,,,,,,,,,28,,,,,,28,28',
'28,,28,,,,28,28,,,,28,,28,28,28,28,28,28,28,,,,,,28,28,28,28,28,28,28',
',,,,28,28,28,28,28,28,28,28,28,,28,28,,28,28,28,778,778,,,28,,28,28',
',28,28,28,,28,28,28,28,28,28,28,,,,,,,,,,,,778,778,,,778,778,778,778',
'778,,778,,,,778,778,,,,778,,778,778,778,778,778,778,778,,,,,,778,778',
'778,778,778,778,778,,,,,778,778,778,778,778,778,778,778,778,,778,778',
',778,778,778,777,777,,,778,,778,778,,778,778,,,778,778,778,778,778,778',
'778,,,,,,,,,,,,777,777,,,777,777,777,777,777,,777,,,,777,777,,,,777',
',777,777,777,777,777,777,777,,,,,,777,777,777,777,777,777,777,,,,,777',
'777,777,777,777,777,777,777,777,,777,777,,777,777,777,32,32,,,777,,777',
'777,,777,777,,,777,777,777,777,777,777,777,,,,,,,,,,,,32,32,,,32,32',
'32,32,32,,32,,,,32,32,,,,32,,32,32,32,32,32,32,32,,,,,,32,32,32,32,32',
'32,32,,,,,32,32,32,32,32,32,32,32,32,,32,32,,32,32,32,39,39,,,32,,32',
'32,,32,32,,,32,32,32,32,32,32,32,,,,,39,,,,,,,39,,,,,,39,39,39,,39,',
',,39,39,,,,39,,39,39,39,39,39,39,39,,,,,,39,39,39,39,39,39,39,,,,,39',
'39,39,39,39,39,39,39,39,,39,39,,39,39,39,775,775,,,39,,39,39,,39,39',
',,39,39,39,39,39,39,39,,,,,,,,,,,,775,775,,,775,775,775,775,775,,775',
',,,775,775,,,,775,,775,775,775,775,775,775,775,,,,,,775,775,775,775',
'775,775,775,,,,,775,775,775,775,775,775,775,775,775,,775,775,,775,775',
'775,574,574,,,775,,775,775,,775,775,,,775,775,775,775,775,775,775,,',
',,,,,,,,,574,574,,,574,574,574,574,574,,574,,,,574,574,,,,574,,574,574',
'574,574,574,574,574,,,,,,574,574,574,574,574,574,574,,,,,574,574,574',
'574,574,574,574,574,574,,574,574,,574,574,574,773,773,,,574,,574,574',
',574,574,,,574,574,574,574,574,574,574,,,,,,,,,,,,773,,,,,,773,773,773',
',773,,,,773,773,,,,773,,773,773,773,773,773,773,773,,,,,,773,773,773',
'773,773,773,773,,,,,773,773,773,773,773,773,773,773,773,,773,773,,773',
'773,773,45,45,,,773,,773,773,,773,773,,,773,773,773,773,773,773,773',
',,,,,,,,,,,45,,,,,,45,45,45,,45,,,,45,45,,,,45,,45,45,45,45,45,45,45',
',,,,,45,45,45,45,45,45,45,,,,,45,45,45,45,45,45,45,45,45,,45,45,,45',
'45,45,767,767,,,45,,45,45,,45,45,,,45,45,45,45,45,45,45,,,,,,,,,,,,767',
',,,,,767,767,767,,767,,,,767,767,,,,767,,767,767,767,767,767,767,767',
',,,,,767,767,767,767,767,767,767,,,,,767,767,767,767,767,767,767,767',
'767,,767,767,,767,767,767,131,131,,,767,,767,767,,767,767,,,767,767',
'767,767,767,767,767,,,,,,,,,,,,131,131,,,131,131,131,131,131,,131,,',
',131,131,,,,131,,131,131,131,131,131,131,131,,,,,,131,131,131,131,131',
'131,131,,,,,131,131,131,131,131,131,131,131,131,,131,131,,131,131,131',
'50,50,,,131,,131,131,,131,131,,,131,131,131,131,131,131,131,,,,,,,,',
',,,50,50,,,50,50,50,50,50,,50,,,,50,50,,,,50,,50,50,50,50,50,50,50,',
',,,,50,50,50,50,50,50,50,,,,,50,50,50,50,50,50,50,50,50,,50,50,,50,50',
'50,51,51,,,50,,50,50,,50,50,,,50,50,50,50,50,50,50,,,,,,,,,,,,51,51',
',,51,51,51,51,51,,51,,,,51,51,,,,51,,51,51,51,51,51,51,51,,,,,,51,51',
'51,51,51,51,51,,,,,51,51,51,51,51,51,51,51,51,51,51,51,,51,51,51,846',
'846,,,51,,51,51,,51,51,51,51,51,51,51,51,51,51,51,,,,,,,,,,,,846,846',
',,846,846,846,846,846,,846,,,,846,846,,,,846,,846,846,846,846,846,846',
'846,,,,,,846,846,846,846,846,846,846,,,,,846,846,846,846,846,846,846',
'846,846,,846,846,,846,846,846,54,54,,,846,,846,846,,846,846,,,846,846',
'846,846,846,846,846,,,,,,,,,,,,54,,,,,,54,54,54,,54,,,,54,54,,,,54,',
'54,54,54,54,54,54,54,,,,,,54,54,54,54,54,54,54,,,,,54,54,54,54,54,54',
'54,54,54,,54,54,,54,54,54,854,854,,,54,,54,54,,54,54,,,54,54,54,54,54',
'54,54,,,,,,,,,,,,854,854,,854,854,854,854,854,854,,854,,,,854,854,,',
',854,,854,854,854,854,854,854,854,,,,,,854,854,854,854,854,854,854,',
',,,854,854,854,854,854,854,854,854,854,,854,854,,854,854,854,55,55,',
',854,,854,854,,854,854,,,854,854,854,854,854,854,854,,,,,,,,,,,,55,55',
',,55,55,55,55,55,,55,,,,55,55,,,,55,,55,55,55,55,55,55,55,,,,,,55,55',
'55,55,55,55,55,,,,,55,55,55,55,55,55,55,55,55,,55,55,,55,55,55,249,249',
',,55,,55,55,,55,55,,,55,55,55,55,55,55,55,,,,,,,,,,,,249,249,,,249,249',
'249,249,249,,249,,,,249,249,,,,249,,249,249,249,249,249,249,249,,,,',
',249,249,249,249,249,249,249,,,,,249,249,249,249,249,249,249,249,249',
',249,249,,249,249,249,62,62,,,249,,249,249,,249,249,,,249,249,249,249',
'249,249,249,,,,,,,,,,,,62,62,,,62,62,62,62,62,,62,,,,62,62,,,,62,,62',
'62,62,62,62,62,62,,,,,,62,62,62,62,62,62,62,,,,,62,62,62,62,62,62,62',
'62,62,62,62,62,,62,62,62,312,312,,,62,,62,62,,62,62,62,62,62,62,62,62',
'62,62,62,,,,,,,,,,,,312,312,,312,312,312,312,312,312,,312,,,,312,312',
',,,312,,312,312,312,312,312,312,312,,,,,,312,312,312,312,312,312,312',
',,,,312,312,312,312,312,312,312,312,312,,312,312,,312,312,312,592,592',
',,312,,312,312,,312,312,,,312,312,312,312,312,312,312,,,,,,,,,,,,592',
'592,,592,592,592,592,592,592,,592,,,,592,592,,,,592,,592,592,592,592',
'592,592,592,,,,,,592,592,592,592,592,592,592,,,,,592,592,592,592,592',
'592,592,592,592,,592,592,,592,592,592,248,248,,,592,,592,592,,592,592',
',,592,592,592,592,592,592,592,,,,,,,,,,,,248,248,,,248,248,248,248,248',
',248,,,,248,248,,,,248,,248,248,248,248,248,248,248,,,,,,248,248,248',
'248,248,248,248,,,,,248,248,248,248,248,248,248,248,248,,248,248,,248',
'248,248,809,809,,,248,,248,248,,248,248,,,248,248,248,248,248,248,248',
',,,,,,,,,,,809,,,,,,809,809,809,,809,,,,809,809,,,,809,,809,809,809',
'809,809,809,809,,,,,,809,809,809,809,809,809,809,,,,,809,809,809,809',
'809,809,809,809,809,,809,809,,809,809,809,924,924,,,809,,809,809,,809',
'809,,,809,809,809,809,809,809,809,,,,,,,,,,,,924,924,,,924,924,924,924',
'924,,924,,,,924,924,,,,924,,924,924,924,924,924,924,924,,,,,,924,924',
'924,924,924,924,924,,,,,924,924,924,924,924,924,924,924,924,924,924',
'924,,924,924,924,15,15,,,924,,924,924,,924,924,924,924,924,924,924,924',
'924,924,924,,,,,,,,,,,,15,15,,15,15,15,15,15,15,15,15,,,,15,15,,,,15',
',15,15,15,15,15,15,15,,,,,,15,15,15,15,15,15,15,15,,,15,15,15,15,15',
'15,15,15,15,15,,15,15,,15,15,15,863,863,,,15,,15,15,,15,15,15,,15,15',
'15,15,15,15,15,,,,,,,,,,,,863,863,,,863,863,863,863,863,,863,,,,863',
'863,,,,863,,863,863,863,863,863,863,863,,,,,,863,863,863,863,863,863',
'863,,,,,863,863,863,863,863,863,863,863,863,,863,863,,863,863,863,468',
'468,,,863,,863,863,,863,863,,,863,863,863,863,863,863,863,,,,,,,,,,',
',468,468,,,468,468,468,468,468,,468,,,,468,468,,,,468,,468,468,468,468',
'468,468,468,,,,,,468,468,468,468,468,468,468,,,,,468,468,468,468,468',
'468,468,468,468,,468,468,,468,468,468,322,322,,,468,,468,468,,468,468',
',,468,468,468,468,468,468,468,,,,,,,,,,,,322,322,,322,322,322,322,322',
'322,322,322,,,,322,322,,,,322,,322,322,322,322,322,322,322,,,,,,322',
'322,322,322,322,322,322,322,,,322,322,322,322,322,322,322,322,322,322',
',322,322,,322,322,322,755,755,,,322,,322,322,,322,322,322,,322,322,322',
'322,322,322,322,,,,,,,,,,,,755,755,,,755,755,755,755,755,,755,,,,755',
'755,,,,755,,755,755,755,755,755,755,755,,,,,,755,755,755,755,755,755',
'755,,,,,755,755,755,755,755,755,755,755,755,,755,755,,755,755,755,752',
'752,,,755,,755,755,,755,755,,,755,755,755,755,755,755,755,,,,,,,,,,',
',752,752,,,752,752,752,752,752,,752,,,,752,752,,,,752,,752,752,752,752',
'752,752,752,,,,,,752,752,752,752,752,752,752,,,,,752,752,752,752,752',
'752,752,752,752,,752,752,,752,752,752,522,522,,,752,,752,752,,752,752',
',,752,752,752,752,752,752,752,,,,,,,,,,,,522,522,,522,522,522,522,522',
'522,,522,,,,522,522,,,,522,,522,522,522,522,522,522,522,,,,,,522,522',
'522,522,522,522,522,,,,,522,522,522,522,522,522,522,522,522,,522,522',
',522,522,522,749,749,,,522,,522,522,,522,522,,,522,522,522,522,522,522',
'522,,,,,,,,,,,,749,749,,,749,749,749,749,749,,749,,,,749,749,,,,749',
',749,749,749,749,749,749,749,,,,,,749,749,749,749,749,749,749,,,,,749',
'749,749,749,749,749,749,749,749,,749,749,,749,749,749,328,328,,,749',
',749,749,,749,749,,,749,749,749,749,749,749,749,,,,,,,,,,,,328,328,',
',328,328,328,328,328,,328,,,,328,328,,,,328,,328,328,328,328,328,328',
'328,,,,,,328,328,328,328,328,328,328,,,,,328,328,328,328,328,328,328',
'328,328,,328,328,,328,328,328,604,604,,,328,,328,328,,328,328,328,,328',
'328,328,328,328,328,328,,,,,,,,,,,,604,604,,,604,604,604,604,604,,604',
',,,604,604,,,,604,,604,604,604,604,604,604,604,,,,,,604,604,604,604',
'604,604,604,,,,,604,604,604,604,604,604,604,604,604,604,604,604,,604',
'604,604,465,465,,,604,,604,604,,604,604,604,604,604,604,604,604,604',
'604,604,,,,,,,,,,,,465,465,,,465,465,465,465,465,,465,,,,465,465,,,',
'465,,465,465,465,465,465,465,465,,,,,,465,465,465,465,465,465,465,,',
',,465,465,465,465,465,465,465,465,465,,465,465,,465,465,465,134,134',
',,465,,465,465,,465,465,,,465,465,465,465,465,465,465,,,,,,,,,,,,134',
'134,,,134,134,134,134,134,,134,,,,134,134,,,,134,,134,134,134,134,134',
'134,134,,,,,,134,134,134,134,134,134,134,,,,,134,134,134,134,134,134',
'134,134,134,,134,134,,134,134,134,609,609,,,134,,134,134,,134,134,,',
'134,134,134,134,134,134,134,,,,,,,,,,,,609,,,,,,609,609,609,,609,,,',
'609,609,,,,609,,609,609,609,609,609,609,609,,,,,,609,609,609,609,609',
'609,609,,,,,609,609,609,609,609,609,609,609,609,,609,609,,609,609,609',
'334,334,,,609,,609,609,,609,609,,,609,609,609,609,609,609,609,,,,,,',
',,,,,334,334,,,334,334,334,334,334,,334,,,,334,334,,,,334,,334,334,334',
'334,334,334,334,,,,,,334,334,334,334,334,334,334,,,,,334,334,334,334',
'334,334,334,334,334,,334,334,,334,334,334,335,335,,,334,,334,334,,334',
'334,334,,334,334,334,334,334,334,334,,,,,,,,,,,,335,335,,335,335,335',
'335,335,335,,335,,,,335,335,,,,335,,335,335,335,335,335,335,335,,,,',
',335,335,335,335,335,335,335,,,,,335,335,335,335,335,335,335,335,335',
',335,335,,335,335,335,615,615,,,335,,335,335,,335,335,,,335,335,335',
'335,335,335,335,,,,,,,,,,,,615,615,,,615,615,615,615,615,,615,,,,615',
'615,,,,615,,615,615,615,615,615,615,615,,,,,,615,615,615,615,615,615',
'615,,,,,615,615,615,615,615,615,615,615,615,615,615,615,,615,615,615',
'460,460,,,615,,615,615,,615,615,615,,615,615,615,615,615,615,615,,,',
',,,,,,,,460,460,,,460,460,460,460,460,,460,,,,460,460,,,,460,,460,460',
'460,460,460,460,460,,,,,,460,460,460,460,460,460,460,,,,,460,460,460',
'460,460,460,460,460,460,,460,460,,460,460,460,617,617,,,460,,460,460',
',460,460,460,,460,460,460,460,460,460,460,,,,,,,,,,,,617,617,,,617,617',
'617,617,617,,617,,,,617,617,,,,617,,617,617,617,617,617,617,617,,,,',
',617,617,617,617,617,617,617,,,,,617,617,617,617,617,617,617,617,617',
'617,617,617,,617,617,617,629,629,,,617,,617,617,,617,617,,,617,617,617',
'617,617,617,617,,,,,,,,,,,,629,,,,,,629,629,629,,629,,,,629,629,,,,629',
',629,629,629,629,629,629,629,,,,,,629,629,629,629,629,629,629,,,,,629',
'629,629,629,629,629,629,629,629,,629,629,,629,629,629,643,643,,,629',
',629,629,,629,629,,,629,629,629,629,629,629,629,,,,,,,,,,,,643,643,',
',643,643,643,643,643,,643,,,,643,643,,,,643,,643,643,643,643,643,643',
'643,,,,,,643,643,643,643,643,643,643,,,,,643,643,643,643,643,643,643',
'643,643,,643,643,,643,643,643,81,81,,,643,,643,643,,643,643,,,643,643',
'643,643,643,643,643,,,,,,,,,,,,81,81,,81,81,81,81,81,81,,81,,,,81,81',
',,,81,,81,81,81,81,81,81,81,,,,,,81,81,81,81,81,81,81,,,,,81,81,81,81',
'81,81,81,81,81,,81,81,,81,81,81,84,84,,,81,,81,81,,81,81,,,81,81,81',
'81,81,81,81,,,,,,,,,,,,84,84,,84,84,84,84,84,84,,84,,,,84,84,,,,84,',
'84,84,84,84,84,84,84,,,,,,84,84,84,84,84,84,84,,,,,84,84,84,84,84,84',
'84,84,84,,84,84,,84,84,84,429,429,,,84,,84,84,,84,84,,,84,84,84,84,84',
'84,84,,,,,,,,,,,,429,429,,,429,429,429,429,429,,429,,,,429,429,,,,429',
',429,429,429,429,429,429,429,,,,,,429,429,429,429,429,429,429,,,,,429',
'429,429,429,429,429,429,429,429,,429,429,,429,429,429,87,87,,,429,,429',
'429,,429,429,,,429,429,429,429,429,429,429,,,,,,,,,,,,87,,,,,,87,87',
'87,,87,,,,87,87,,,,87,,87,87,87,87,87,87,87,,,,,,87,87,87,87,87,87,87',
',,,,87,87,87,87,87,87,87,87,87,,87,87,,87,87,87,422,422,,,87,,87,87',
',87,87,87,,87,87,87,87,87,87,87,,,,,,,,,,,,422,422,,,422,422,422,422',
'422,,422,,,,422,422,,,,422,,422,422,422,422,422,422,422,,,,,,422,422',
'422,422,422,422,422,,,,,422,422,422,422,422,422,422,422,422,,422,422',
',422,422,422,252,252,,,422,,422,422,,422,422,,,422,422,422,422,422,422',
'422,,,,,,,,,,,,252,252,,,252,252,252,252,252,,252,,,,252,252,,,,252',
',252,252,252,252,252,252,252,,,,,,252,252,252,252,252,252,252,,,,,252',
'252,252,252,252,252,252,252,252,,252,252,,252,252,252,420,420,,,252',
',252,252,,252,252,,,252,252,252,252,252,252,252,,,,,,,,,,,,420,420,',
',420,420,420,420,420,,420,,,,420,420,,,,420,,420,420,420,420,420,420',
'420,,,,,,420,420,420,420,420,420,420,,,,,420,420,420,420,420,420,420',
'420,420,420,420,420,,420,420,420,351,351,,,420,,420,420,,420,420,,420',
'420,420,420,420,420,420,420,,,,,,,,,,,,351,351,,351,351,351,351,351',
'351,,351,,,,351,351,,,,351,,351,351,351,351,351,351,351,,,,,,351,351',
'351,351,351,351,351,,,,,351,351,351,351,351,351,351,351,351,,351,351',
',351,351,351,352,352,,,351,,351,351,,351,351,,,351,351,351,351,351,351',
'351,,,,,,,,,,,,352,352,,,352,352,352,352,352,,352,,,,352,352,,,,352',
',352,352,352,352,352,352,352,,,,,,352,352,352,352,352,352,352,,,,,352',
'352,352,352,352,352,352,352,352,,352,352,,352,352,352,418,418,,,352',
',352,352,,352,352,,,352,352,352,352,352,352,352,,,,,,,,,,,,418,418,',
',418,418,418,418,418,,418,,,,418,418,,,,418,,418,418,418,418,418,418',
'418,,,,,,418,418,418,418,418,418,418,,,,,418,418,418,418,418,418,418',
'418,418,418,418,418,,418,418,418,746,746,,,418,,418,418,,418,418,418',
'418,418,418,418,418,418,418,418,,,,,,,,,,,,746,746,,,746,746,746,746',
'746,,746,,,,746,746,,,,746,,746,746,746,746,746,746,746,,,,,,746,746',
'746,746,746,746,746,,,,,746,746,746,746,746,746,746,746,746,,746,746',
',746,746,746,527,527,,,746,,746,746,,746,746,,,746,746,746,746,746,746',
'746,,,,,,,,,,,,527,527,,,527,527,527,527,527,,527,,,,527,527,,,,527',
',527,527,527,527,527,527,527,,,,,,527,527,527,527,527,527,527,,,,,527',
'527,527,527,527,527,527,527,527,527,527,527,,527,527,527,741,741,,,527',
',527,527,,527,527,527,527,527,527,527,527,527,527,527,,,,,,,,,,,,741',
'741,,,741,741,741,741,741,,741,,,,741,741,,,,741,,741,741,741,741,741',
'741,741,,,,,,741,741,741,741,741,741,741,,,,,741,741,741,741,741,741',
'741,741,741,,741,741,,741,741,741,826,826,,,741,,741,741,,741,741,,',
'741,741,741,741,741,741,741,,,,,,,,,,,,826,,,,,,826,826,826,,826,,,',
'826,826,,,,826,,826,826,826,826,826,826,826,,,,,,826,826,826,826,826',
'826,826,,,,,826,826,826,826,826,826,826,826,826,,826,826,,826,826,826',
'360,360,,,826,,826,826,,826,826,,,826,826,826,826,826,826,826,,,,,,',
',,,,,360,360,,,360,360,360,360,360,,360,,,,360,360,,,,360,,360,360,360',
'360,360,360,360,,,,,,360,360,360,360,360,360,360,,,,,360,360,360,360',
'360,360,360,360,360,360,360,360,,360,360,360,7,7,,,360,,360,360,,360',
'360,360,360,360,360,360,360,360,360,360,,,,,,,,,,,,7,7,,7,7,7,7,7,7',
',7,,,,7,7,,,,7,,7,7,7,7,7,7,7,,,,,,7,7,7,7,7,7,7,,,,,7,7,7,7,7,7,7,7',
'7,,7,7,,7,7,7,110,110,,,7,,7,7,,7,7,,,7,7,7,7,7,7,7,,,,,,,,,,,,110,110',
',,110,110,110,110,110,,110,,,,110,110,,,,110,,110,110,110,110,110,110',
'110,,,,,,110,110,110,110,110,110,110,,,,,110,110,110,110,110,110,110',
'110,110,110,110,110,,110,110,110,414,414,,,110,,110,110,,110,110,110',
'110,110,110,110,110,110,110,110,,,,,,,,,,,,414,414,,,414,414,414,414',
'414,,414,,,,414,414,,,,414,,414,414,414,414,414,414,414,,,,,,414,414',
'414,414,414,414,414,,,,,414,414,414,414,414,414,414,414,414,414,414',
'414,,414,414,414,555,555,,,414,,414,414,,414,414,414,414,414,414,414',
'414,414,414,414,,,,,,,,,,,,555,555,,,555,555,555,555,555,,555,,,,555',
'555,,,,555,,555,555,555,555,555,555,555,,,,,,555,555,555,555,555,555',
'555,,,,,555,555,555,555,555,555,555,555,555,,555,555,,555,555,555,411',
'411,,,555,,555,555,,555,555,,,555,555,555,555,555,555,555,,,,,,,,,,',
',411,411,,,411,411,411,411,411,,411,,,,411,411,,,,411,,411,411,411,411',
'411,411,411,,,,,,411,411,411,411,411,411,411,,,,,411,411,411,411,411',
'411,411,411,411,,411,411,,411,411,411,730,730,,,411,,411,411,,411,411',
',,411,411,411,411,411,411,411,,,,,,,,,,,,730,730,,,730,730,730,730,730',
',730,,,,730,730,,,,730,,730,730,730,730,730,730,730,,,,,,730,730,730',
'730,730,730,730,,,,,730,730,730,730,730,730,730,730,730,,730,730,,730',
'730,730,729,729,,,730,,730,730,,730,730,730,,730,730,730,730,730,730',
'730,,,,,,,,,,,,729,729,,,729,729,729,729,729,,729,,,,729,729,,,,729',
',729,729,729,729,729,729,729,,,,,,729,729,729,729,729,729,729,,,,,729',
'729,729,729,729,729,729,729,729,,729,729,,729,729,729,102,102,,,729',
',729,729,,729,729,,,729,729,729,729,729,729,729,,,,,,,,,,,,102,102,',
'102,102,102,102,102,102,,102,,,,102,102,,,,102,,102,102,102,102,102',
'102,102,,,,,,102,102,102,102,102,102,102,,,,,102,102,102,102,102,102',
'102,102,102,,102,102,,102,102,102,101,101,,,102,,102,102,,102,102,,',
'102,102,102,102,102,102,102,,,,,,,,,,,,101,101,,,101,101,101,101,101',
',101,,,,101,101,,,,101,,101,101,101,101,101,101,101,,,,,,101,101,101',
'101,101,101,101,,,,,101,101,101,101,101,101,101,101,101,101,101,101',
',101,101,101,410,410,,,101,,101,101,,101,101,101,101,101,101,101,101',
'101,101,101,,,,,,,,,,,,410,410,,,410,410,410,410,410,,410,,,,410,410',
',,,410,,410,410,410,410,410,410,410,,,,,,410,410,410,410,410,410,410',
',,,,410,410,410,410,410,410,410,410,410,,410,410,,410,410,410,389,389',
',,410,,410,410,,410,410,,,410,410,410,410,410,410,410,,,,,,,,,,,,389',
'389,,389,389,389,389,389,389,,389,,,,389,389,,,,389,,389,389,389,389',
'389,389,389,,,,,,389,389,389,389,389,389,389,,,,,389,389,389,389,389',
'389,389,389,389,,389,389,,389,389,389,402,402,,,389,,389,389,,389,389',
',,389,389,389,389,389,389,389,,,,,,,,,,,,402,,,,,,402,402,402,,402,',
',,402,402,,,,402,,402,402,402,402,402,402,402,,,,,,402,402,402,402,402',
'402,402,,,,,402,402,402,402,402,402,402,402,402,,402,402,,402,402,402',
'96,96,,,402,,402,402,,402,402,,,402,402,402,402,402,402,402,,,,,,,,',
',,,96,96,,,96,96,96,96,96,,96,,,,96,96,,,,96,,96,96,96,96,96,96,96,',
',,,,96,96,96,96,96,96,96,,,,,96,96,96,96,96,96,96,96,96,96,96,96,,96',
'96,96,400,400,,,96,,96,96,,96,96,,,96,96,96,96,96,96,96,,,,,,,,,,,,400',
'400,,400,400,400,400,400,400,,400,,,,400,400,,,,400,,400,400,400,400',
'400,400,400,,,,,,400,400,400,400,400,400,400,,,,,400,400,400,400,400',
'400,400,400,400,,400,400,,400,400,400,399,399,,,400,,400,400,,400,400',
',,400,400,400,400,400,400,400,,,,,,,,,,,,399,399,,399,399,399,399,399',
'399,,399,,,,399,399,,,,399,,399,399,399,399,399,399,399,,,,,,399,399',
'399,399,399,399,399,,,,,399,399,399,399,399,399,399,399,399,,399,399',
',399,399,399,95,95,,,399,,399,399,,399,399,,,399,399,399,399,399,399',
'399,,,,,,,,,,,,95,95,,95,95,95,95,95,95,,95,,,,95,95,,,,95,,95,95,95',
'95,95,95,95,,,,,,95,95,95,95,95,95,95,,,,,95,95,95,95,95,95,95,95,95',
',95,95,,95,95,95,834,834,,,95,,95,95,,95,95,,,95,95,95,95,95,95,95,',
',,,,,,,,,,834,834,,,834,834,834,834,834,,834,,,,834,834,,,,834,,834',
'834,834,834,834,834,834,,,,,,834,834,834,834,834,834,834,,,,,834,834',
'834,834,834,834,834,834,834,,834,834,,834,834,834,381,381,,,834,,834',
'834,,834,834,,,834,834,834,834,834,834,834,,,,,,,,,,,,381,381,,,381',
'381,381,381,381,,381,,,,381,381,,,,381,,381,381,381,381,381,381,381',
',,,,,381,381,381,381,381,381,381,,,,,381,381,381,381,381,381,381,381',
'381,,381,381,,381,381,381,92,92,,,381,,381,381,,381,381,,,381,381,381',
'381,381,381,381,,,,,,,,,,,,92,92,,,92,92,92,92,92,,92,,,,92,92,,,,92',
',92,92,92,92,92,92,92,,,,,,92,92,92,92,92,92,92,,,,,92,92,92,92,92,92',
'92,92,92,92,92,92,,92,92,92,391,391,,,92,,92,92,,92,92,92,,92,92,92',
'92,92,92,92,,,,,,,,,,,,391,391,,391,391,391,391,391,391,,391,,,,391',
'391,,,,391,,391,391,391,391,391,391,391,,,,,,391,391,391,391,391,391',
'391,,,,,391,391,391,391,391,391,391,391,391,,391,391,,391,391,391,390',
'390,,,391,,391,391,,391,391,,,391,391,391,391,391,391,391,,,,,,,,,,',
',390,390,,390,390,390,390,390,390,,390,,,,390,390,,,,390,,390,390,390',
'390,390,390,390,,,,,,390,390,390,390,390,390,390,,,,,390,390,390,390',
'390,390,390,390,390,,390,390,,390,390,390,387,387,,,390,,390,390,,390',
'390,,,390,390,390,390,390,390,390,,,,,,,,,,,,387,387,,387,387,387,387',
'387,387,387,387,,,,387,387,,,,387,,387,387,387,387,387,387,387,,,,,',
'387,387,387,387,387,387,387,387,,,387,387,387,387,387,387,387,387,387',
'387,,387,387,,387,387,387,388,388,,,387,,387,387,,387,387,387,,387,387',
'387,387,387,387,387,,,,,,,,,,,,388,388,,388,388,388,388,388,388,,388',
',,,388,388,,,,388,,388,388,388,388,388,388,388,,,,,,388,388,388,388',
'388,388,388,,,,,388,388,388,388,388,388,388,388,388,,388,388,,388,388',
'388,548,548,,,388,,388,388,,388,388,,,388,388,388,388,388,388,388,,',
',,,,,,,,,548,548,,,548,548,548,548,548,,548,,,,548,548,,,,548,,548,548',
'548,548,548,548,548,,,,,,548,548,548,548,548,548,548,,,,,548,548,548',
'548,548,548,548,548,548,,548,548,8,548,548,548,,8,,738,548,,548,548',
'738,548,548,548,,548,548,548,548,548,548,548,,,,,,,,,,,812,,,,,812,',
',,,814,,,,,814,,,,,,8,,8,8,8,8,8,738,,738,738,738,738,738,,562,,,,8',
'562,,794,,8,8,738,794,,,,738,738,,812,,812,812,812,812,812,,,,814,8',
'814,814,814,814,814,433,738,812,,,433,,812,812,914,,,814,,914,,,814',
'814,562,,562,562,562,562,562,794,,794,794,794,794,794,,,440,,,562,,440',
',143,562,562,794,,143,,,794,794,,,,433,,433,433,433,433,433,,,914,,914',
'914,914,914,914,,,,433,,,,,433,433,,,914,,,,,914,914,440,,440,440,440',
'440,440,143,,143,143,143,143,143,,,,,,440,,,,,440,440,143,692,,692,692',
'143,143,692,692,692,692,692,692,692,692,692,692,692,692,692,692,692',
'692,692,692,692,692,,691,692,691,691,,,691,691,691,691,691,691,691,691',
'691,691,691,691,691,691,691,691,691,691,691,691,,111,691,111,111,111',
'111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111',
'111,111,111,111,,333,111,333,333,,,333,333,333,333,333,333,333,333,333',
'333,333,333,333,333,333,333,333,333,333,333,,14,333,14,14,14,14,14,14',
'14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,,488,14,488,488',
',,488,488,488,488,488,488,488,488,488,488,488,488,488,488,488,488,488',
'488,488,488,,329,488,329,329,,,329,329,329,329,329,329,329,329,329,329',
'329,329,329,329,329,329,329,329,329,329,,296,329,296,296,,,296,296,296',
'296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296' ]
        racc_action_check = arr = Array.new(17832, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
   nil,  3090,  1601,   nil,   nil,   nil,  2407, 15204, 17361,   nil,
   nil,   nil,  1247,   273, 17710, 12019,   nil,   nil,   nil,   357,
   nil,   nil,   nil,   nil,   nil,   nil,   608,   nil,  9835,   nil,
   nil,   nil, 10108,   nil,   nil,  1449,   nil,   nil,   911, 10199,
    58,  1445,   nil,   nil,   nil, 10563,   nil,   nil,  4392,  1564,
 10836, 10927,  1433,   nil, 11109, 11291,   666,   nil,   nil,   nil,
  1533,   686, 11473,   nil,   nil,   nil,   244,  1527,  1444,  2314,
   nil,   nil,   nil,   368,   nil,   310,  1384,   -19,  2221,  3183,
  1359, 13839,     1,   nil, 13930,  2500,   nil, 14112,   nil,    43,
   nil,  1390, 16842,  2815,  1358, 16569, 16296,   nil,   nil,   nil,
   nil, 15932, 15841,   904,  2906,  1392,   nil,  2017,   113,  1497,
 15295, 17656,   nil,   nil,  1484,   nil,   nil,   nil,  1360,  1479,
  1360,   795,  5043,  1220,   nil,  1200,   982,   nil,   nil,  1214,
   nil, 10745,  9289,   nil, 13020,   914,   219,   593,   nil,   nil,
    91,  1130,   nil, 17509,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    37,  1153,   nil,  1108,  1142,   nil,   nil,   nil,    39,
  1097,  1029,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   773,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   400,   nil,  1158,  1081, 11746, 11382,
  1188,  9198, 14294,  1188,  7378,  7469,  7560,  7651,  7742,  7833,
  7924,  8015,  8106,  8197,  8288,  8379,  8470,  8561,  8652,  8743,
  8834,  8925,  9016,  9107,   nil,   671,   387,   nil,   379,   661,
  1108,  1107,   996,   945,  1055,   nil,   nil,   nil,  1026,    37,
   275,   976,    74,   980,   263,   914, 17791,   470,   570,   889,
   nil,   nil,   nil,   nil,   nil,   357,   nil,    15,   389,   682,
   572,   nil, 11564,  2499,   nil,  7025,  7137,   807,   575,   nil,
   831,   880, 12292,   503,   nil,  2158,   828,   819, 12747, 17764,
   nil,  4950,  4857, 17683, 13202, 13293,   549,  7103,   474,   240,
    64,   nil,    20,   270,   354,   372,   416,   456,   nil,   375,
   nil, 14476, 14567,   132,   787,   nil,   240,   273,   nil,  6304,
 15113,  6165,   nil,   570,  1811,   nil,   671,  4113,   502,   476,
   nil,   452,     2,   149,   458,   779,  3927,   788,   416,  2997,
   889, 16751,   nil,   400,    10,   nil,    64, 17115, 17206, 16114,
 17024, 16933,   175,   317,   nil,    18,   261,   nil,   218, 16478,
 16387,   179, 16205,   nil,   162,   nil,   nil,   nil,   156,   nil,
 16023, 15568,  1026,  6052, 15386,  6330,   nil,   nil, 14658,   nil,
 14385,  7196, 14203,   nil,   nil,   nil,   nil,   nil,  3462, 14021,
   146,   nil,   nil, 17467,   -58,  3276,   nil,  4299,   nil,   nil,
 17502,   nil,   nil,  1412,   nil,  2166,   916,   nil,   989,   418,
  1022,  1137,  1141,   nil,  3555,  1049,   nil,   nil,   nil,  1165,
 13475,  1234,   nil,  3475,  2619, 12929,  6701,  2513, 12201,  6840,
  3847,  3754,  6423,  2017,  3289,  6562,  2828,  6006,  3196,  6284,
   397,  3382,  6145,   656,  3568,  6979,  3661,  2730, 17737,   nil,
   nil,   nil,  5229,   nil,  7096,   nil,  5322,   nil,  9744,  9653,
   nil,   nil,  9562,   166,  6886,  9380,  6860,  1376,   nil,  6747,
  6721,   nil,   209,   nil,   nil,  1135,   nil,   nil,   nil,   677,
  5415,   nil, 12565,   nil,   nil,   777,  6443, 14840,  6191,    33,
   nil,   nil,  2128,   nil,   nil,  1904,   nil,   nil,  1404,   nil,
  6026,  5887,  1023,   nil,   477,   nil,   nil,   nil, 17297,  1534,
  1460,   nil,  1458,   nil,   nil, 15477,  1395,  1466,   nil,   nil,
  1380,    39, 17431,   -27,  5136,   nil,   nil,   799,  1309,   nil,
    41,   146,   nil,   nil, 10381,   nil,   394,  4764,  4578,    62,
  1439,  1625,     0,  1532,   nil,   nil,  1304,   100,  1718,    51,
   nil,   nil, 11655,  1075,  1303,  1300,   nil,  1023,   nil,   nil,
  3834,  1304,   785,  6582, 12838,  6999,  1191,   nil,  1187, 13111,
   nil,   nil,   nil,   nil,   nil, 13384,   nil, 13566,   510,   nil,
   nil,   nil,   nil,  3741,   nil,   nil,  3369,   nil,   nil, 13657,
   nil,  1075,  1038,   nil,   nil,   nil,  2611,  2722,   978,  1008,
  1004,   965,   936, 13748,   nil,   nil,   nil,   948,   nil,   nil,
   nil,   852,   821,   nil,   nil,  1172,   778,   765,   673,   569,
   nil,   428,   nil,   365,   nil,   348,  1264,  1040,   331,   300,
   nil,   nil,   nil,   nil,   nil,   234,   155,   nil,  1234,  1458,
    41,    11,    61,   nil,   -19,    32,    47,    53,   nil,   168,
   161, 17629, 17602,   130,    50,   193,   176,   237,   265,   301,
    88,   nil,   nil,   nil,   nil,   405,   259,  2610,   nil,   401,
   391,  3648,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   272,
    29,  2147,   nil,   465,   nil,   448,   nil,  4020,   537, 15750,
 15659,   512,   nil,   nil,   nil,   514,   nil,   610, 17368,   nil,
   nil, 14931,   nil,  4671,   715,   653, 14749,   801,   nil, 12656,
   134,   755, 12474,   907,   nil, 12383,    37,    -9,   nil,   441,
   nil,   374,   303,   868,   164,   174,   nil, 10654,   933,   185,
  1046,  1052,   976, 10472,   nil, 10290,  1012, 10017,  9926,   nil,
   nil,   nil,   nil,  2259,   nil,  1849,   nil,  1006,   nil,   nil,
   nil,   nil,   nil,   nil, 17438,   nil,  1663,   nil,  1365,  1023,
   709,   nil,   nil,   nil,   nil,  5508,  7287,  9471,   nil, 11837,
  1187,   nil, 17395,   nil, 17405,   nil,   515,   nil,   nil,  5601,
    49,   nil,   nil,   nil,  1182,   nil, 15022,   189,   nil,   nil,
   nil,  5694,   nil,  1135, 16660,   nil,   nil,  5787,   nil,  1191,
   nil,   nil,   nil,   nil,   nil,   nil, 11018,   nil,   nil,   nil,
   nil,   nil,   nil,   nil, 11200,  1276,   nil,   687,  1211,   nil,
  1294,   nil,   nil, 12110,  1222,  1285,  1235,  1243,  1269,  1299,
  1152,  1301,  1253,   570,   nil,   885,   878,   nil,  1323,  1329,
   nil,  1333,  1339,  1348,  1429,   nil,   nil,  1397,   799,   676,
   768,  4485,   nil,  1367,   -52,   nil,   nil,   nil,   207,   nil,
   nil,   nil,   nil,   nil,   nil,  1756,   nil,  1375,  1381,   nil,
   nil,   nil,  5913,   nil, 17476,   nil,  1570,   nil,   nil,  2053,
   nil,   nil,   655,  6608, 11928,  6469,  1496,   nil,  4206,  1430,
  1431,  1432,  1433,  1435,  1444,   163,   494,  1447,    78,    85,
   nil,   946,   nil,   nil,   nil,  1477,   nil,   nil,    49,   nil,
  1471,   nil ]

racc_action_default = [
    -2,  -536,  -537,    -1,  -435,  -403,  -382,  -537,  -474,  -260,
  -445,  -436,  -420,  -523,   -46,  -537,  -261,  -444,  -418,   -48,
  -262,  -446,  -420,  -402,  -309,   -49,  -537,  -263,  -537,  -453,
  -447,  -420,  -537,  -264,  -454,  -410,  -307,  -265,  -537,  -537,
   -53,  -416,  -399,  -308,  -266,  -537,  -400,  -310,  -536,  -537,
  -537,  -299,  -537,   -41,  -537,  -537,  -232,  -449,  -311,    -3,
  -537,  -537,  -300,  -448,  -312,  -301,  -525,  -537,  -537,  -537,
  -450,  -313,  -302,  -537,   -65,  -523,  -525,  -284,  -439,  -536,
  -537,  -537,  -304,    -5,  -537,  -268,  -441,   -69,    -6,  -267,
  -440,  -537,  -536,  -442,    -9,  -537,  -536,   -79,  -443,  -398,
  -305,  -276,  -537,   -40,   -77,  -401,  -306,  -279,  -451,  -537,
  -536,  -233,  -243,  -248,  -537,   -63,  -299,  -300,  -537,  -537,
  -537,  -537,  -536,  -536,  -304,  -536,  -267,  -507,  -381,  -253,
  -276,  -537,  -537,  -247,  -537,  -451,  -537,   -47,  -497,  -483,
  -480,  -536,  -485,  -474,  -286,  -494,  -491,  -479,  -477,  -498,
  -476,  -537,  -496,  -475,  -536,  -537,  -493,  -478,  -367,  -537,
  -536,  -537,  -473,  -177,  -134,  -178,  -136,  -161,  -176,  -430,
  -537,  -120,  -137,  -160,  -169,  -109,  -155,  -179,  -121,  -181,
  -142,  -110,  -164,  -122,  -185,  -138,  -151,  -129,  -186,  -123,
  -139,  -165,  -124,  -143,  -140,  -429,  -154,  -171,  -125,  -144,
  -141,  -152,  -146,  -126,  -156,  -168,  -170,  -147,  -127,  -167,
  -172,  -148,  -128,  -157,  -174,  -158,  -180,  -117,  -166,  -106,
  -118,  -149,  -159,  -108,  -432,  -173,  -119,  -431,  -163,  -130,
  -150,  -107,  -131,  -433,  -183,  -175,  -132,  -135,  -184,  -182,
  -133,  -145,  -532,  -533,  -523,  -534,  -537,  -524,  -537,  -537,
  -537,  -537,  -537,  -537,  -537,  -537,  -537,  -537,  -537,  -537,
  -537,  -537,  -537,  -537,  -537,  -537,  -537,  -537,  -537,  -537,
  -537,  -537,  -537,  -537,    -8,  -537,  -536,  -372,  -536,  -537,
  -437,  -438,  -382,  -537,  -537,  -324,  -303,  -325,  -537,  -537,
  -537,  -525,  -267,  -279,  -451,  -537,  -209,  -537,  -537,  -537,
  -111,   -17,  -113,  -112,  -114,  -537,  -104,  -537,  -537,  -537,
  -101,  -267,  -537,  -102,  -451,  -537,  -537,  -537,  -537,   -45,
  -537,  -537,  -537,  -523,   -13,   -14,  -537,  -536,  -537,  -223,
   -51,  -536,  -536,  -208,  -537,  -537,  -176,  -474,  -169,  -179,
  -164,  -503,  -146,  -147,  -537,  -148,  -106,  -107,   -52,  -525,
  -526,  -537,  -537,  -273,   -57,  -283,  -536,  -536,  -375,  -537,
  -536,  -537,    -4,  -524,  -537,  -285,   -67,  -536,  -525,  -537,
  -115,   -22,  -525,  -537,  -537,  -537,  -536,   -92,   -70,   -73,
   -85,  -537,   -81,  -537,  -529,  -234,  -529,  -537,  -537,  -537,
  -537,  -537,  -537,  -537,  -505,  -529,  -537,   -50,  -537,  -537,
  -537,   -75,  -537,  -404,  -525,   -64,   952,  -242,  -525,  -241,
  -537,  -537,  -273,  -537,  -536,  -537,  -252,  -244,  -251,  -245,
  -251,  -537,  -537,  -254,  -510,  -249,  -318,  -319,  -536,  -537,
  -537,  -502,  -469,  -537,  -536,  -536,  -365,  -536,  -495,  -466,
  -537,  -499,  -482,  -537,  -471,  -537,  -480,  -326,  -525,  -337,
  -330,  -537,  -537,  -328,  -536,  -537,  -434,  -421,  -422,  -537,
  -537,  -537,  -535,  -218,  -212,  -537,  -224,  -219,  -537,  -225,
  -220,  -221,  -200,  -226,  -222,  -201,  -214,  -202,  -215,  -203,
  -198,  -216,  -204,  -199,  -217,  -210,  -213,  -211,  -205,  -405,
  -419,  -354,  -536,  -357,  -536,  -355,  -536,  -406,  -537,  -537,
  -437,  -438,  -537,  -273,  -537,  -536,  -537,  -537,  -407,  -537,
  -537,  -409,  -537,  -412,  -408,  -537,   -21,   -20,   -19,  -537,
  -536,  -455,  -537,  -101,  -103,  -102,  -537,  -536,  -537,  -537,
  -514,  -516,  -536,  -515,  -517,  -536,  -414,  -415,  -537,  -273,
  -537,  -537,   -16,   -12,  -524,  -269,  -314,  -390,  -536,  -536,
  -187,   -29,  -537,   -37,  -253,  -537,  -537,  -537,   -30,   -39,
   -38,  -525,  -474,  -537,  -536,  -522,  -521,  -537,  -537,  -282,
  -525,   -44,  -189,   -31,  -537,   -58,  -536,  -536,  -536,  -514,
  -519,  -537,  -515,  -520,  -380,  -378,  -525,  -514,  -536,  -515,
  -379,    -7,  -537,  -230,  -525,   -66,  -271,  -537,  -270,  -316,
  -536,  -315,   -91,  -537,  -536,  -537,  -525,   -82,   -71,  -537,
  -197,   -36,  -274,  -235,  -530,  -531,  -237,  -531,   -27,   -23,
   -24,   -25,   -26,  -536,  -275,  -506,  -536,   -43,   -42,  -537,
   -83,   -78,  -525,  -278,  -238,  -187,  -518,  -272,  -525,  -514,
  -515,  -536,  -255,  -537,  -250,  -508,  -509,  -537,  -487,  -481,
  -492,  -536,  -536,  -501,  -359,  -537,  -525,  -537,  -537,  -536,
  -486,  -536,  -500,  -536,  -484,  -335,  -537,  -537,  -525,  -537,
  -428,  -425,  -426,  -427,  -423,  -537,  -537,  -292,  -227,  -229,
  -537,  -537,  -480,  -489,  -536,  -536,  -536,  -536,  -353,  -537,
  -537,  -206,  -207,  -537,  -518,  -537,  -272,  -525,  -514,  -536,
  -515,  -411,  -413,   -18,  -457,  -537,  -537,  -101,  -105,  -102,
  -525,  -536,   -55,  -239,  -240,  -374,   -54,  -373,  -417,  -514,
  -515,   -15,  -393,  -536,  -392,  -391,  -322,  -536,  -536,  -537,
  -537,  -259,   -28,  -296,  -504,  -525,  -459,  -537,  -474,  -527,
  -281,  -537,  -196,  -536,  -537,  -537,  -537,   -61,  -377,  -537,
  -383,  -537,  -537,   -59,  -376,  -537,  -525,   -68,  -116,  -536,
  -317,   -88,   -90,  -525,  -514,  -515,   -80,  -537,   -74,  -529,
  -536,  -537,   -76,  -537,  -277,  -537,  -383,  -537,  -537,  -246,
  -256,  -290,  -470,  -537,  -467,  -537,  -363,  -360,  -361,  -364,
  -366,  -368,  -369,  -462,  -537,  -464,  -537,  -472,  -537,  -338,
  -333,  -329,  -327,  -424,  -291,  -536,  -537,  -537,  -371,  -537,
  -537,  -346,  -344,  -349,  -537,  -351,  -537,  -356,  -370,  -536,
  -383,  -294,  -456,  -383,  -537,  -395,  -537,  -537,  -323,   -11,
  -397,  -536,  -188,  -257,  -537,  -458,  -297,  -536,  -190,  -537,
  -385,  -384,  -194,   -35,   -62,  -195,  -537,  -528,  -192,   -33,
   -60,  -193,   -34,  -280,  -537,  -537,  -320,   -86,   -72,  -236,
  -537,  -289,   -84,  -537,  -536,  -537,  -536,  -536,  -536,  -336,
  -537,  -331,  -537,  -536,  -255,  -231,  -488,  -358,  -536,  -536,
  -490,  -536,  -536,  -536,  -537,  -295,  -394,  -537,  -537,  -100,
   -93,  -536,  -396,  -258,  -537,   -56,  -191,   -32,  -537,  -287,
  -288,  -468,  -362,  -463,  -460,  -537,  -465,  -537,  -334,  -386,
  -388,  -387,  -537,  -341,  -537,  -343,  -537,  -350,  -347,  -537,
  -352,  -293,   -99,  -537,  -536,  -537,  -536,  -298,  -536,  -536,
  -332,  -536,  -536,  -536,  -536,  -518,   -98,  -525,  -514,  -515,
  -389,  -536,  -461,  -342,  -339,  -537,  -345,  -348,  -383,  -321,
  -536,  -340 ]

clist = [
'83,319,408,549,428,175,303,461,67,169,94,304,326,564,384,330,386,532',
'535,158,395,378,67,49,94,650,348,417,575,419,301,175,447,112,162,401',
'660,49,631,686,728,613,88,616,652,363,368,656,303,351,285,661,625,304',
'175,67,274,600,337,364,750,581,799,588,524,397,286,492,788,496,49,246',
'370,175,407,448,623,286,112,490,801,789,645,286,553,855,67,366,115,112',
'559,385,286,307,436,394,112,128,136,880,170,49,513,715,244,687,717,689',
'332,409,279,644,776,644,393,581,341,588,684,295,144,567,416,383,416',
'286,344,515,112,67,287,787,371,362,112,829,151,112,365,75,431,277,286',
'909,49,723,827,577,578,403,275,354,520,431,434,298,512,1,318,431,358',
'674,195,659,59,3,369,284,443,162,2,820,,,,373,,,,,,,,,823,,392,,,405',
',,,398,869,,,,,880,,,,,,,,,699,369,,,699,,,,,,,,675,,,,,,,,,,699,,,',
',,,857,,,,,581,588,,768,,,,,552,,586,,,,552,,,,,860,,,,772,626,949,908',
',,,,,507,491,,491,902,645,,,708,801,551,,,,,,558,789,,544,,,557,810',
',,,,459,930,724,,638,699,573,,608,,,,,,702,,,,665,,,447,407,,547,,,67',
',542,,,594,,630,611,67,67,,,641,606,49,,,,,,,,583,49,49,491,491,878',
',409,805,,,162,911,,668,743,632,,67,,94,128,67,366,,,407,660,358,543',
'676,67,366,49,650,112,,49,,,,,67,,618,697,49,,,,,858,591,867,583,,660',
'49,,948,,409,837,,,286,556,710,,844,,879,,882,859,850,,,,112,,654,,67',
',,,,286,112,67,,67,,545,,,,49,,590,,369,,680,49,,49,,67,,369,,,,,,407',
'552,,,,,,49,,,619,620,621,622,303,705,,,,304,,,407,,654,,,763,583,,67',
',,583,67,409,245,590,703,175,,,891,,,49,647,,,49,583,688,,657,,658,932',
'409,67,737,,,713,112,583,713,,,447,447,769,,669,49,630,,779,,722,726',
',,67,,721,112,,,,,112,175,819,112,630,738,303,49,245,407,751,304,67',
',735,,491,,,,681,,677,928,690,67,67,49,713,162,758,175,,,693,,,583,590',
',49,49,590,940,409,,,,67,112,,,,,706,712,112,,716,,590,,751,49,714,',
',714,699,426,,67,112,590,67,910,,,,,,416,,,,,49,,286,49,,431,431,,,',
',,,431,,431,,431,747,744,745,,286,,447,753,871,748,,,824,73,733,,714',
'751,121,121,654,431,431,431,759,121,,73,,,751,,,590,,713,,,630,843,290',
',,,862,849,,770,852,,771,309,,,,67,,321,,825,73,,,121,830,,309,,,,49',
'67,,245,121,,651,,447,,447,121,,751,,,49,67,663,,,73,137,121,,726,121',
',137,375,,162,49,,781,,726,121,,,,,,121,121,447,375,,,121,,,121,748',
'569,,,714,,,,,804,,73,,521,685,894,897,,,286,595,,,,598,286,67,,828',
'245,937,,,,,,,,,821,67,49,,372,839,,137,,,396,,,67,,,49,633,137,67,',
'634,286,886,432,137,,,49,,,,836,,49,,,439,431,286,431,431,431,444,,423',
'424,726,425,,,,431,431,,431,431,431,,,,664,,407,,426,861,873,,,,,,67',
',,,,,,583,884,,,,89,,,49,,,583,,892,,751,,,409,89,547,,,431,,431,431',
'431,431,,67,,292,,,726,,,,885,898,,,311,431,49,112,,,311,,,89,,,,,,311',
',,,,,,,,,,,899,,,926,,900,,,,,,,121,89,,,,,,,,377,73,,734,,,,121,921',
',73,73,740,121,121,704,,377,927,941,590,,,,,711,,,121,,121,121,,,,89',
'757,,,121,,,73,,,,73,,766,,,,,,,73,,,375,736,121,,,,529,,73,121,121',
'121,121,554,,,774,,,560,121,121,,375,,121,,,,561,,,,,,121,,864,,,790',
',,570,,571,866,,868,73,,,802,,,,73,,73,,,,,,,,881,,883,,,,,,,73,,,,',
',,137,137,137,137,,,,,,,,627,628,,,,,,,,,642,,396,,646,,,,,,73,648,',
',73,,835,,,,121,,,121,,,,,426,,,,,,,,,853,73,,121,822,554,,,121,,,,',
'121,,,121,929,,,,,,,,73,931,,933,,,934,,,,,108,89,,,,,,,,73,89,89,,',
'108,,,,,,137,950,73,73,,,121,294,,,,,,121,,,,121,314,,137,,89,,314,73',
'89,108,,121,,,,314,375,89,,725,377,,314,,,,731,,89,,73,,,73,,,375,,',
',108,,,377,,,,,380,,,,,,,,,,,,,,,,,380,,,,89,,,756,,,,89,,89,,,,,108',
',,642,,396,,,782,784,,,89,670,,,793,,795,,797,,,,,,,,,,,780,,,,73,,',
',,,,811,813,815,,,,,,89,73,,,89,,,,,,,,,,,,,73,,,121,,,,,,121,,89,121',
',,,,,,,,,,,375,,,,,,375,,,,,89,,,,,,,,,,,,,,,,833,,,,89,,,,,,,73,,,',
'876,,89,89,,,,,,,73,,,,,,,888,,,,,73,,,89,,,73,,,,,,377,,,121,,,,,,',
',121,,,89,,,89,,,377,,,,,,,874,,,,,,108,,,,,,,,,108,108,,,,,73,,,,,',
'901,893,903,904,906,,,,,,,,,,913,915,,917,918,920,108,,,,108,,,121,',
',137,73,,108,,,380,,,,,,,,108,,,,89,,,,,,,,,,,380,,,,,89,942,,943,944',
'946,947,,,,,,,,,,89,111,,,,108,951,,,,,,108,,108,,,,,,,,,,377,,,296',
',,377,108,,,,,,,,,,,,,,329,111,,,,333,,,,,,,111,,,,,89,,111,,311,,,108',
',,,108,,,89,,,,,,,889,,,,111,89,,,111,,,89,,111,108,,,,,111,,,111,,',
',,,,,,,,,,,,,108,,,,,111,111,,111,,,,,,,,,,,,108,,,,,,,89,,,,,,108,108',
',,,,,,,,,,,,,,,,,,,,,108,,,,,,,,89,380,,,,,,,,,,,,,,108,,,108,,,380',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,463,464,,466,467,,469,470,471,472',
'473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,,,,',
',,,,,,,,,,,,,,,108,,,,,,,,,,,,,,,,108,,,,,,,,,,,,,,,,108,,,550,,,,,',
'111,,,,,,,,,,,,,,,380,,,572,,,380,,,,,111,,,,593,,,,,,,,,,,,,,,,,610',
',,,,,108,,,,314,,,,,,,,,,108,,,111,,,,890,,635,572,,108,111,,,,111,108',
'111,610,111,,,,,,,111,,,,,,,289,,,,289,,,,,,,289,,,,,,,,,,,289,,111',
',289,289,,678,,,679,,,,,108,,,,,,,,,,,,,,,,,,,,,,289,,,691,692,289,',
',,289,111,,,,,108,,289,,,,,,,,,,,,,,,111,,,,,111,,,111,,,,289,289,,289',
',,,,,111,,,,,,,111,,,,,,,,,,,,,,,,,,,742,,,,,,,111,,,,,,,111,,,,,,,',
',,,,,,,,111,,,,,,,,,,,111,,111,,,,,,,,,,,,,,,,,,,,,,,,,,111,,,,,,,,',
',,,,289,289,,289,289,,289,289,289,289,289,289,289,289,289,289,289,289',
'289,289,289,289,289,289,289,289,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,832,111,,,,,,,,,,,838,,,,,842,,,845,,,848,,,851,,,,,,,,,',
',,,,,,,289,,,842,,848,851,,,,,,,,,289,,,,,,,,,,,,,,,,,,,111,875,,,289',
',,,,,,,289,289,,,,,,,289,,289,289,289,,,,111,,,289,,,,,,,,,896,,,,,',
',,,,,,,,,,,896,,,,,289,,,,,289,,,289,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,289',
'289,,,,,,,,,,,,,,,,,111,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,289,,,,,,,289',
',,,,,,,,,,,,,,,,,,289,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,289,,,,,,289',
',289,,,,,,,,,,,,289,,,,,,,,,,,,,,289,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,289,289,,,,,,',
',,,,289,,,,,,,,289,,,,,,,,,,,,,,,,,,289,,,,,,289,,289,,289,289,,,,,',
',,,,,,,,,,,,,,,,,,,,,,289,289,,289,,,,,,,,,,,,,,,,,289,,,,,,,,289,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,289' ]
        racc_goto_table = arr = Array.new(2919, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'7,21,25,13,88,54,57,91,23,53,10,58,11,99,63,36,65,38,38,119,65,47,23',
'20,10,138,36,68,40,68,17,54,103,34,111,48,137,20,49,108,14,64,8,64,109',
'9,44,113,57,32,20,109,64,58,54,23,8,84,53,32,26,38,105,38,51,36,59,41',
'115,41,20,6,17,54,36,104,84,59,34,132,102,116,142,59,28,85,23,43,39',
'34,28,7,59,52,118,7,34,66,19,139,129,20,132,67,19,109,67,113,52,7,129',
'69,26,69,79,38,76,38,106,129,82,101,7,62,7,59,100,31,34,23,22,114,18',
'6,34,15,117,34,80,5,7,120,59,122,20,123,124,41,41,127,128,39,95,7,119',
'130,131,4,133,7,66,134,135,136,3,2,12,93,141,111,1,26,,,,19,,,,,,,,',
'26,,19,,,39,,,,19,105,,,,,139,,,,,,,,,38,12,,,38,,,,,,,,91,,,,,,,,,',
'38,,,,,,,26,,,,,38,38,,49,,,,,63,,25,,,,63,,,,,14,,,,49,88,85,105,,',
',,,32,7,,7,115,142,,,51,102,21,,,,,,21,116,,9,,,11,113,,,,,6,105,28',
',25,38,21,,48,,,,,,132,,,,103,,,103,36,,7,,,23,,10,,,44,,47,21,23,23',
',,65,44,20,,,,,,,,54,20,20,7,7,108,,7,84,,,111,14,,104,41,36,,23,,10',
'66,23,43,,,36,137,66,6,63,23,43,20,138,34,,20,,,,,23,,10,25,20,,,,,49',
'8,109,54,,137,20,,26,,7,99,,,59,12,25,,40,,109,,109,64,40,,,,34,,7,',
'23,,,,,59,34,23,,23,,78,,,,20,,66,,12,,32,20,,20,,23,,12,,,,,,36,63',
',,,,,20,,,19,19,19,19,57,11,,,,58,,,36,,7,,,25,54,,23,,,54,23,7,96,66',
'17,54,,,84,,,20,12,,,20,54,111,,12,,12,109,7,23,11,,,7,34,54,7,,,103',
'103,65,,12,20,47,,68,,7,7,,,23,,10,34,,,,,34,54,88,34,47,53,57,20,96',
'36,32,58,23,,119,,7,,,,12,,78,84,12,23,23,20,7,111,17,54,,,19,,,54,66',
',20,20,66,13,7,,,,23,34,,,,,19,39,34,,39,,66,,32,20,66,,,66,38,96,,23',
'34,66,23,91,,,,,,7,,,,,20,,59,20,,7,7,,,,,,,7,,7,,7,39,12,12,,59,,103',
'39,103,66,,,11,24,78,,66,32,24,24,7,7,7,7,12,24,,24,,,32,,,66,,7,,,47',
'21,24,,,,47,21,,12,21,,12,24,,,,23,,24,,7,24,,,24,7,,24,,,,20,23,,96',
'24,,107,,103,,103,24,,32,,,20,23,107,,,24,30,24,,7,24,,30,24,,111,20',
',78,,7,24,,,,,,24,24,103,24,,,24,,,24,66,45,,,66,,,,,78,,24,,96,107',
'11,21,,,59,45,,,,45,59,23,,12,96,25,,,,,,,,,78,23,20,,30,12,,30,,,29',
',,23,,,20,45,30,23,,45,59,20,110,30,,,20,,,,78,,20,,,110,7,59,7,7,7',
'110,,29,29,7,29,,,,7,7,,7,7,7,,,,45,,36,,96,78,12,,,,,,23,,,,,,,54,12',
',,,27,,,20,,,54,,12,,32,,,7,27,7,,,7,,7,7,7,7,,23,,27,,,7,,,,78,19,',
',27,7,20,34,,,27,,,27,,,,,,27,,,,,,,,,,,,78,,,12,,78,,,,,,,24,27,,,',
',,,,27,24,,45,,,,24,78,,24,24,45,24,24,96,,27,78,12,66,,,,,96,,,24,',
'24,24,,,,27,45,,,24,,,24,,,,24,,45,,,,,,,24,,,24,96,24,,,,30,,24,24',
'24,24,24,29,,,45,,,29,24,24,,24,,24,,,,30,,,,,,24,,107,,,45,,,30,,30',
'107,,107,24,,,45,,,,24,,24,,,,,,,,107,,107,,,,,,,24,,,,,,,30,30,30,30',
',,,,,,,30,30,,,,,,,,,29,,29,,29,,,,,,24,29,,,24,,45,,,,24,,,24,,,,,96',
',,,,,,,,45,24,,24,96,29,,,24,,,,,24,,,24,107,,,,,,,,24,107,,107,,,107',
',,,,50,27,,,,,,,,24,27,27,,,50,,,,,,30,107,24,24,,,24,50,,,,,,24,,,',
'24,50,,30,,27,,50,24,27,50,,24,,,,50,24,27,,29,27,,50,,,,29,,27,,24',
',,24,,,24,,,,50,,,27,,,,,50,,,,,,,,,,,,,,,,,50,,,,27,,,30,,,,27,,27',
',,,,50,,,29,,29,,,110,110,,,27,27,,,110,,110,,110,,,,,,,,,,,29,,,,24',
',,,,,,110,110,110,,,,,,27,24,,,27,,,,,,,,,,,,,24,,,24,,,,,,24,,27,24',
',,,,,,,,,,,24,,,,,,24,,,,,27,,,,,,,,,,,,,,,,29,,,,27,,,,,,,24,,,,24',
',27,27,,,,,,,24,,,,,,,24,,,,,24,,,27,,,24,,,,,,27,,,24,,,,,,,,24,,,27',
',,27,,,27,,,,,,,29,,,,,,50,,,,,,,,,50,50,,,,,24,,,,,,110,29,110,110',
'110,,,,,,,,,,110,110,,110,110,110,50,,,,50,,,24,,,30,24,,50,,,50,,,',
',,,,50,,,,27,,,,,,,,,,,50,,,,,27,110,,110,110,110,110,,,,,,,,,,27,33',
',,,50,110,,,,,,50,,50,,,,,,,,,,27,,,33,,,27,50,,,,,,,,,,,,,,33,33,,',
',33,,,,,,,33,,,,,27,,33,,27,,,50,,,,50,,,27,,,,,,,27,,,,33,27,,,33,',
',27,,33,50,,,,,33,,,33,,,,,,,,,,,,,,,,50,,,,,33,33,,33,,,,,,,,,,,,50',
',,,,,,27,,,,,,50,50,,,,,,,,,,,,,,,,,,,,,,50,,,,,,,,27,50,,,,,,,,,,,',
',,50,,,50,,,50,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,33,33,,33,33,,33',
'33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,,,,,,,,,,,',
',,,,,,,,50,,,,,,,,,,,,,,,,50,,,,,,,,,,,,,,,,50,,,33,,,,,,33,,,,,,,,',
',,,,,,50,,,33,,,50,,,,,33,,,,33,,,,,,,,,,,,,,,,,33,,,,,,50,,,,50,,,',
',,,,,,50,,,33,,,,50,,33,33,,50,33,,,,33,50,33,33,33,,,,,,,33,,,,,,,42',
',,,42,,,,,,,42,,,,,,,,,,,42,,33,,42,42,,33,,,33,,,,,50,,,,,,,,,,,,,',
',,,,,,,,42,,,33,33,42,,,,42,33,,,,,50,,42,,,,,,,,,,,,,,,33,,,,,33,,',
'33,,,,42,42,,42,,,,,,33,,,,,,,33,,,,,,,,,,,,,,,,,,,33,,,,,,,33,,,,,',
',33,,,,,,,,,,,,,,,,33,,,,,,,,,,,33,,33,,,,,,,,,,,,,,,,,,,,,,,,,,33,',
',,,,,,,,,,,42,42,,42,42,,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42',
'42,42,42,42,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,33,33',
',,,,,,,,,,33,,,,,33,,,33,,,33,,,33,,,,,,,,,,,,,,,,,42,,,33,,33,33,,',
',,,,,,42,,,,,,,,,,,,,,,,,,,33,33,,,42,,,,,,,,42,42,,,,,,,42,,42,42,42',
',,,33,,,42,,,,,,,,,33,,,,,,,,,,,,,,,,,33,,,,,42,,,,,42,,,42,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,42,42,,,,,,,,,,,,,,,,,33,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,42,,,,,,,42,,,,,,,,,,,,,,,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,42,,,,,,42,,42,,,,,,,,,,,,42,,,,,,,,,,,,,,42,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,42,42,,,,,,,,,,,42,,,,,,,,42,,,,,,,,,,,,,,,,,,42,,,,,,42,,42,,42,42',
',,,,,,,,,,,,,,,,,,,,,,,,,,,42,42,,42,,,,,,,,,,,,,,,,,42,,,,,,,,42,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,42' ]
        racc_goto_check = arr = Array.new(2919, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_goto_pointer = [
   nil,   170,   165,   163,   157,   138,    58,    -1,    41,   -30,
     9,   -36,    87,  -324,  -509,  -593,   nil,    -8,    52,    91,
    22,   -44,   102,     7,   675,  -108,  -526,   909,  -244,   739,
   748,  -174,   -17,  1647,    27,   nil,   -36,   nil,  -298,    82,
  -326,  -209,  2055,     8,   -33,   438,   nil,   -66,   -69,  -364,
  1229,  -244,    54,    -3,    -7,   nil,   nil,   -32,   -27,    38,
   nil,   nil,    31,   -78,  -343,   -76,    91,  -429,   -96,  -307,
   nil,   nil,   nil,   nil,   nil,   nil,    55,   nil,   120,    18,
    61,   nil,   112,   nil,  -316,  -674,   nil,   nil,  -132,   nil,
   nil,  -239,   nil,   139,   nil,  -155,   492,   nil,   nil,  -324,
    65,  -223,  -587,  -129,   -86,  -604,  -376,   306,  -455,  -389,
   708,    26,   nil,  -387,  -524,  -587,  -574,   128,   -57,    11,
   122,   nil,  -730,  -403,  -577,   nil,   nil,    44,   132,    88,
   120,  -142,  -196,   117,  -294,   150,  -277,  -404,  -408,  -715,
   nil,     9,  -338 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   324,   nil,   247,
   325,   nil,   327,   nil,   856,   nil,   323,   nil,   nil,   nil,
   114,    53,    60,   119,   297,   nil,   nil,   126,   nil,   129,
   103,   nil,   568,    14,    19,    25,   113,    40,   695,   nil,
   nil,   nil,    69,    74,   nil,   nil,    87,    91,    97,   nil,
   135,   306,   nil,   300,   534,   181,   302,    42,    46,    56,
   250,   253,   nil,   123,   nil,   125,   584,   754,   nil,   133,
     9,    16,    20,    27,    33,    37,    44,    48,   nil,   nil,
   355,    77,   nil,    84,   nil,   nil,    95,   102,   nil,     7,
    13,   nil,    28,   nil,    39,   nil,   601,    54,    61,   nil,
   nil,   nil,   453,   139,   nil,   450,   nil,   154,   nil,   160,
   nil,   653,   495,   nil,   nil,   nil,   147,   nil,   nil,   563,
   nil,   585,   nil,   nil,   nil,    99,   105,     5,   nil,   nil,
   nil,   nil,   457,   nil,   nil,   nil,   141,   142,   146,   683,
   152,   155,   127 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 140, :_reduce_1,
  0, 143, :_reduce_2,
  2, 141, :_reduce_3,
  2, 142, :_reduce_4,
  1, 144, :_reduce_5,
  1, 144, :_reduce_6,
  3, 144, :_reduce_7,
  2, 144, :_reduce_8,
  1, 147, :_reduce_9,
  1, 147, :_reduce_none,
  4, 150, :_reduce_11,
  2, 151, :_reduce_12,
  1, 155, :_reduce_13,
  1, 155, :_reduce_14,
  3, 155, :_reduce_15,
  2, 155, :_reduce_none,
  0, 170, :_reduce_17,
  4, 149, :_reduce_18,
  3, 149, :_reduce_none,
  3, 149, :_reduce_none,
  3, 149, :_reduce_none,
  2, 149, :_reduce_none,
  3, 149, :_reduce_23,
  3, 149, :_reduce_24,
  3, 149, :_reduce_none,
  3, 149, :_reduce_none,
  3, 149, :_reduce_none,
  4, 149, :_reduce_none,
  3, 149, :_reduce_29,
  3, 149, :_reduce_none,
  3, 149, :_reduce_none,
  6, 149, :_reduce_none,
  5, 149, :_reduce_none,
  5, 149, :_reduce_none,
  5, 149, :_reduce_none,
  3, 149, :_reduce_none,
  3, 149, :_reduce_none,
  3, 149, :_reduce_none,
  3, 149, :_reduce_none,
  1, 149, :_reduce_none,
  1, 169, :_reduce_none,
  3, 169, :_reduce_none,
  3, 169, :_reduce_none,
  3, 169, :_reduce_none,
  2, 169, :_reduce_none,
  1, 169, :_reduce_none,
  1, 158, :_reduce_none,
  1, 160, :_reduce_none,
  1, 160, :_reduce_none,
  2, 160, :_reduce_50,
  2, 160, :_reduce_none,
  2, 160, :_reduce_none,
  1, 174, :_reduce_none,
  4, 174, :_reduce_none,
  4, 174, :_reduce_none,
  4, 179, :_reduce_none,
  2, 173, :_reduce_57,
  3, 173, :_reduce_none,
  4, 173, :_reduce_59,
  5, 173, :_reduce_none,
  4, 173, :_reduce_none,
  5, 173, :_reduce_none,
  2, 173, :_reduce_63,
  2, 173, :_reduce_64,
  1, 161, :_reduce_none,
  3, 161, :_reduce_none,
  1, 183, :_reduce_none,
  3, 183, :_reduce_none,
  1, 182, :_reduce_none,
  2, 182, :_reduce_none,
  3, 182, :_reduce_none,
  5, 182, :_reduce_none,
  2, 182, :_reduce_none,
  4, 182, :_reduce_none,
  2, 182, :_reduce_none,
  4, 182, :_reduce_none,
  1, 182, :_reduce_none,
  3, 182, :_reduce_none,
  1, 186, :_reduce_none,
  3, 186, :_reduce_none,
  2, 185, :_reduce_none,
  3, 185, :_reduce_none,
  1, 188, :_reduce_none,
  3, 188, :_reduce_none,
  1, 187, :_reduce_none,
  4, 187, :_reduce_none,
  3, 187, :_reduce_none,
  3, 187, :_reduce_none,
  3, 187, :_reduce_none,
  3, 187, :_reduce_none,
  2, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 159, :_reduce_none,
  4, 159, :_reduce_94,
  3, 159, :_reduce_95,
  3, 159, :_reduce_none,
  3, 159, :_reduce_none,
  3, 159, :_reduce_none,
  2, 159, :_reduce_none,
  1, 159, :_reduce_none,
  1, 190, :_reduce_101,
  1, 190, :_reduce_102,
  2, 191, :_reduce_103,
  1, 191, :_reduce_104,
  3, 191, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_109,
  1, 192, :_reduce_110,
  1, 195, :_reduce_none,
  1, 195, :_reduce_none,
  1, 156, :_reduce_none,
  1, 156, :_reduce_none,
  1, 157, :_reduce_none,
  3, 157, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  3, 172, :_reduce_187,
  5, 172, :_reduce_none,
  3, 172, :_reduce_189,
  5, 172, :_reduce_none,
  6, 172, :_reduce_none,
  5, 172, :_reduce_none,
  5, 172, :_reduce_none,
  5, 172, :_reduce_none,
  5, 172, :_reduce_none,
  4, 172, :_reduce_none,
  3, 172, :_reduce_none,
  3, 172, :_reduce_none,
  3, 172, :_reduce_none,
  3, 172, :_reduce_200,
  3, 172, :_reduce_201,
  3, 172, :_reduce_202,
  3, 172, :_reduce_203,
  3, 172, :_reduce_204,
  3, 172, :_reduce_205,
  4, 172, :_reduce_none,
  4, 172, :_reduce_none,
  2, 172, :_reduce_none,
  2, 172, :_reduce_209,
  3, 172, :_reduce_210,
  3, 172, :_reduce_211,
  3, 172, :_reduce_212,
  3, 172, :_reduce_213,
  3, 172, :_reduce_214,
  3, 172, :_reduce_215,
  3, 172, :_reduce_216,
  3, 172, :_reduce_217,
  3, 172, :_reduce_218,
  3, 172, :_reduce_219,
  3, 172, :_reduce_220,
  3, 172, :_reduce_221,
  3, 172, :_reduce_222,
  2, 172, :_reduce_223,
  3, 172, :_reduce_224,
  3, 172, :_reduce_225,
  0, 199, :_reduce_226,
  4, 172, :_reduce_227,
  0, 200, :_reduce_228,
  4, 172, :_reduce_229,
  3, 172, :_reduce_none,
  6, 172, :_reduce_none,
  1, 172, :_reduce_none,
  1, 168, :_reduce_none,
  1, 201, :_reduce_none,
  2, 201, :_reduce_none,
  4, 201, :_reduce_none,
  2, 201, :_reduce_none,
  3, 205, :_reduce_238,
  1, 206, :_reduce_239,
  1, 206, :_reduce_none,
  1, 164, :_reduce_241,
  1, 164, :_reduce_none,
  1, 175, :_reduce_243,
  2, 175, :_reduce_244,
  2, 175, :_reduce_245,
  4, 175, :_reduce_246,
  1, 175, :_reduce_247,
  1, 178, :_reduce_none,
  2, 208, :_reduce_249,
  2, 207, :_reduce_250,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 202, :_reduce_253,
  2, 202, :_reduce_254,
  3, 202, :_reduce_255,
  4, 202, :_reduce_256,
  3, 167, :_reduce_none,
  4, 167, :_reduce_none,
  2, 167, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  3, 198, :_reduce_none,
  3, 198, :_reduce_none,
  3, 198, :_reduce_271,
  3, 198, :_reduce_272,
  2, 198, :_reduce_273,
  3, 198, :_reduce_274,
  3, 198, :_reduce_275,
  1, 198, :_reduce_276,
  4, 198, :_reduce_277,
  3, 198, :_reduce_278,
  1, 198, :_reduce_279,
  5, 198, :_reduce_none,
  4, 198, :_reduce_none,
  3, 198, :_reduce_none,
  2, 198, :_reduce_283,
  1, 198, :_reduce_284,
  2, 198, :_reduce_285,
  2, 198, :_reduce_none,
  6, 198, :_reduce_287,
  6, 198, :_reduce_288,
  5, 198, :_reduce_none,
  5, 198, :_reduce_none,
  5, 198, :_reduce_291,
  4, 198, :_reduce_292,
  7, 198, :_reduce_none,
  5, 198, :_reduce_294,
  6, 198, :_reduce_none,
  4, 198, :_reduce_296,
  5, 198, :_reduce_297,
  7, 198, :_reduce_298,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 163, :_reduce_none,
  1, 216, :_reduce_none,
  1, 222, :_reduce_none,
  1, 225, :_reduce_none,
  1, 226, :_reduce_none,
  1, 228, :_reduce_none,
  1, 229, :_reduce_none,
  1, 231, :_reduce_none,
  1, 233, :_reduce_none,
  1, 236, :_reduce_none,
  1, 237, :_reduce_none,
  1, 217, :_reduce_none,
  1, 223, :_reduce_none,
  1, 223, :_reduce_none,
  2, 223, :_reduce_none,
  1, 227, :_reduce_none,
  1, 227, :_reduce_none,
  1, 224, :_reduce_320,
  5, 224, :_reduce_321,
  1, 153, :_reduce_322,
  2, 153, :_reduce_323,
  1, 232, :_reduce_none,
  1, 232, :_reduce_none,
  1, 241, :_reduce_none,
  3, 241, :_reduce_none,
  1, 244, :_reduce_none,
  3, 244, :_reduce_none,
  1, 243, :_reduce_none,
  4, 243, :_reduce_none,
  6, 243, :_reduce_none,
  3, 243, :_reduce_none,
  5, 243, :_reduce_none,
  2, 243, :_reduce_none,
  4, 243, :_reduce_none,
  1, 243, :_reduce_none,
  3, 243, :_reduce_none,
  6, 245, :_reduce_none,
  8, 245, :_reduce_none,
  4, 245, :_reduce_none,
  6, 245, :_reduce_none,
  4, 245, :_reduce_none,
  2, 245, :_reduce_none,
  6, 245, :_reduce_none,
  2, 245, :_reduce_none,
  4, 245, :_reduce_none,
  6, 245, :_reduce_none,
  2, 245, :_reduce_none,
  4, 245, :_reduce_none,
  2, 245, :_reduce_none,
  4, 245, :_reduce_none,
  1, 245, :_reduce_none,
  1, 180, :_reduce_354,
  1, 180, :_reduce_none,
  3, 251, :_reduce_none,
  1, 251, :_reduce_none,
  4, 251, :_reduce_358,
  1, 252, :_reduce_none,
  2, 252, :_reduce_none,
  1, 253, :_reduce_none,
  3, 253, :_reduce_none,
  1, 254, :_reduce_none,
  1, 254, :_reduce_none,
  2, 221, :_reduce_none,
  4, 256, :_reduce_none,
  1, 256, :_reduce_none,
  3, 257, :_reduce_none,
  3, 257, :_reduce_none,
  4, 259, :_reduce_none,
  4, 259, :_reduce_371,
  2, 176, :_reduce_372,
  4, 176, :_reduce_none,
  4, 176, :_reduce_none,
  2, 220, :_reduce_375,
  4, 220, :_reduce_376,
  4, 220, :_reduce_377,
  3, 220, :_reduce_378,
  3, 220, :_reduce_none,
  3, 220, :_reduce_none,
  2, 220, :_reduce_381,
  1, 220, :_reduce_382,
  4, 220, :_reduce_383,
  4, 219, :_reduce_384,
  4, 219, :_reduce_385,
  5, 230, :_reduce_386,
  1, 261, :_reduce_387,
  1, 261, :_reduce_none,
  6, 152, :_reduce_none,
  1, 152, :_reduce_none,
  1, 262, :_reduce_none,
  1, 262, :_reduce_none,
  1, 262, :_reduce_none,
  2, 263, :_reduce_none,
  1, 263, :_reduce_none,
  2, 154, :_reduce_none,
  1, 154, :_reduce_none,
  1, 209, :_reduce_none,
  1, 209, :_reduce_none,
  1, 209, :_reduce_none,
  1, 210, :_reduce_none,
  1, 265, :_reduce_none,
  1, 265, :_reduce_none,
  2, 265, :_reduce_none,
  3, 266, :_reduce_405,
  3, 211, :_reduce_406,
  3, 212, :_reduce_none,
  3, 213, :_reduce_none,
  3, 213, :_reduce_none,
  0, 269, :_reduce_none,
  3, 269, :_reduce_none,
  1, 270, :_reduce_none,
  2, 270, :_reduce_none,
  3, 214, :_reduce_none,
  3, 214, :_reduce_none,
  0, 272, :_reduce_416,
  3, 272, :_reduce_none,
  0, 267, :_reduce_418,
  2, 267, :_reduce_419,
  0, 268, :_reduce_420,
  2, 268, :_reduce_421,
  1, 271, :_reduce_422,
  2, 271, :_reduce_423,
  3, 271, :_reduce_424,
  1, 273, :_reduce_none,
  1, 273, :_reduce_none,
  1, 273, :_reduce_none,
  1, 273, :_reduce_none,
  2, 196, :_reduce_429,
  1, 274, :_reduce_none,
  1, 274, :_reduce_none,
  1, 274, :_reduce_none,
  1, 274, :_reduce_none,
  3, 197, :_reduce_none,
  1, 264, :_reduce_435,
  1, 264, :_reduce_436,
  2, 264, :_reduce_none,
  2, 264, :_reduce_none,
  1, 189, :_reduce_439,
  1, 189, :_reduce_440,
  1, 189, :_reduce_441,
  1, 189, :_reduce_442,
  1, 189, :_reduce_443,
  1, 189, :_reduce_444,
  1, 189, :_reduce_445,
  1, 189, :_reduce_446,
  1, 189, :_reduce_447,
  1, 189, :_reduce_448,
  1, 189, :_reduce_449,
  1, 189, :_reduce_450,
  1, 215, :_reduce_none,
  1, 162, :_reduce_none,
  1, 166, :_reduce_none,
  1, 166, :_reduce_none,
  1, 234, :_reduce_455,
  3, 234, :_reduce_456,
  2, 234, :_reduce_457,
  3, 238, :_reduce_458,
  2, 238, :_reduce_459,
  6, 258, :_reduce_460,
  8, 258, :_reduce_461,
  4, 258, :_reduce_462,
  6, 258, :_reduce_463,
  4, 258, :_reduce_464,
  6, 258, :_reduce_465,
  2, 258, :_reduce_466,
  4, 258, :_reduce_467,
  6, 258, :_reduce_468,
  2, 258, :_reduce_469,
  4, 258, :_reduce_470,
  2, 258, :_reduce_471,
  4, 258, :_reduce_472,
  1, 258, :_reduce_473,
  0, 258, :_reduce_474,
  1, 255, :_reduce_none,
  1, 255, :_reduce_none,
  1, 255, :_reduce_none,
  1, 255, :_reduce_none,
  1, 242, :_reduce_none,
  1, 242, :_reduce_480,
  3, 242, :_reduce_481,
  2, 242, :_reduce_482,
  1, 276, :_reduce_483,
  3, 276, :_reduce_none,
  1, 246, :_reduce_485,
  3, 246, :_reduce_486,
  3, 277, :_reduce_none,
  3, 278, :_reduce_none,
  1, 247, :_reduce_none,
  3, 247, :_reduce_none,
  1, 275, :_reduce_none,
  3, 275, :_reduce_none,
  1, 279, :_reduce_none,
  1, 279, :_reduce_none,
  2, 248, :_reduce_none,
  1, 248, :_reduce_none,
  1, 280, :_reduce_none,
  1, 280, :_reduce_none,
  2, 250, :_reduce_499,
  3, 250, :_reduce_500,
  2, 249, :_reduce_501,
  1, 249, :_reduce_none,
  1, 239, :_reduce_none,
  3, 239, :_reduce_none,
  1, 218, :_reduce_505,
  2, 218, :_reduce_506,
  1, 204, :_reduce_507,
  3, 204, :_reduce_508,
  3, 281, :_reduce_509,
  2, 281, :_reduce_510,
  1, 181, :_reduce_none,
  1, 181, :_reduce_none,
  1, 181, :_reduce_none,
  1, 177, :_reduce_none,
  1, 177, :_reduce_none,
  1, 177, :_reduce_none,
  1, 177, :_reduce_none,
  1, 260, :_reduce_none,
  1, 260, :_reduce_none,
  1, 260, :_reduce_none,
  1, 240, :_reduce_none,
  1, 240, :_reduce_none,
  0, 145, :_reduce_none,
  1, 145, :_reduce_none,
  0, 171, :_reduce_none,
  1, 171, :_reduce_none,
  2, 184, :_reduce_none,
  2, 165, :_reduce_none,
  0, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 235, :_reduce_none,
  1, 235, :_reduce_none,
  1, 148, :_reduce_none,
  2, 148, :_reduce_none,
  0, 146, :_reduce_none ]

racc_reduce_n = 537

racc_shift_n = 952

racc_token_table = {
  false => 0,
  :error => 1,
  :tLOWEST => 2,
  :tLBRACE_ARG => 3,
  :kIF_MOD => 4,
  :kUNLESS_MOD => 5,
  :kWHILE_MOD => 6,
  :kUNTIL_MOD => 7,
  :kOR => 8,
  :kAND => 9,
  :kNOT => 10,
  :kDEFined => 11,
  "=" => 12,
  :tOP_ASGN => 13,
  :kRESCUE_MOD => 14,
  "?" => 15,
  ":" => 16,
  :tDOT2 => 17,
  :tDOT3 => 18,
  :tOROP => 19,
  :tANDOP => 20,
  :tCMP => 21,
  :tEQ => 22,
  :tEQQ => 23,
  :tNEQ => 24,
  :tMATCH => 25,
  :tNMATCH => 26,
  ">" => 27,
  :tGEQ => 28,
  "<" => 29,
  :tLEQ => 30,
  "|" => 31,
  "^" => 32,
  "&" => 33,
  :tLSHFT => 34,
  :tRSHFT => 35,
  "+" => 36,
  "-" => 37,
  "*" => 38,
  "/" => 39,
  "%" => 40,
  :tUMINUS_NUM => 41,
  :tUMINUS => 42,
  :tPOW => 43,
  "!" => 44,
  "~" => 45,
  :tUPLUS => 46,
  :kCLASS => 47,
  :kMODULE => 48,
  :kDEF => 49,
  :kUNDEF => 50,
  :kBEGIN => 51,
  :kRESCUE => 52,
  :kENSURE => 53,
  :kEND => 54,
  :kIF => 55,
  :kUNLESS => 56,
  :kTHEN => 57,
  :kELSIF => 58,
  :kELSE => 59,
  :kCASE => 60,
  :kWHEN => 61,
  :kWHILE => 62,
  :kUNTIL => 63,
  :kFOR => 64,
  :kBREAK => 65,
  :kNEXT => 66,
  :kREDO => 67,
  :kRETRY => 68,
  :kIN => 69,
  :kDO => 70,
  :kDO_COND => 71,
  :kDO_BLOCK => 72,
  :kDO_LAMBDA => 73,
  :kRETURN => 74,
  :kYIELD => 75,
  :kSUPER => 76,
  :kSELF => 77,
  :kNIL => 78,
  :kTRUE => 79,
  :kFALSE => 80,
  :kALIAS => 81,
  :kDEFINED => 82,
  :klBEGIN => 83,
  :klEND => 84,
  :k__LINE__ => 85,
  :k__FILE__ => 86,
  :k__ENCODING__ => 87,
  :tIDENTIFIER => 88,
  :tFID => 89,
  :tGVAR => 90,
  :tIVAR => 91,
  :tCONSTANT => 92,
  :tCVAR => 93,
  :tLABEL => 94,
  :tINTEGER => 95,
  :tFLOAT => 96,
  :tSTRING_CONTENT => 97,
  :tCHAR => 98,
  :tNTH_REF => 99,
  :tBACK_REF => 100,
  :tREGEXP_END => 101,
  :tAREF => 102,
  :tASET => 103,
  :tCOLON2 => 104,
  :tCOLON3 => 105,
  :tASSOC => 106,
  :tLPAREN => 107,
  :tLPAREN_ARG => 108,
  :tRPAREN => 109,
  :tLBRACK => 110,
  :tLBRACE => 111,
  :tSTAR => 112,
  :tAMPER => 113,
  :tLAMBDA => 114,
  :tSYMBEG => 115,
  :tSTRING_BEG => 116,
  :tXSTRING_BEG => 117,
  :tREGEXP_BEG => 118,
  :tWORDS_BEG => 119,
  :tQWORDS_BEG => 120,
  :tSTRING_DBEG => 121,
  :tSTRING_DVAR => 122,
  :tSTRING_END => 123,
  :tLAMBEG => 124,
  :tSTRING => 125,
  :tXSTRING_END => 126,
  "{" => 127,
  "}" => 128,
  "[" => 129,
  "." => 130,
  "," => 131,
  "`" => 132,
  "(" => 133,
  ")" => 134,
  "]" => 135,
  ";" => 136,
  " " => 137,
  "\\n" => 138 }

racc_nt_base = 139

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "tLOWEST",
  "tLBRACE_ARG",
  "kIF_MOD",
  "kUNLESS_MOD",
  "kWHILE_MOD",
  "kUNTIL_MOD",
  "kOR",
  "kAND",
  "kNOT",
  "kDEFined",
  "\"=\"",
  "tOP_ASGN",
  "kRESCUE_MOD",
  "\"?\"",
  "\":\"",
  "tDOT2",
  "tDOT3",
  "tOROP",
  "tANDOP",
  "tCMP",
  "tEQ",
  "tEQQ",
  "tNEQ",
  "tMATCH",
  "tNMATCH",
  "\">\"",
  "tGEQ",
  "\"<\"",
  "tLEQ",
  "\"|\"",
  "\"^\"",
  "\"&\"",
  "tLSHFT",
  "tRSHFT",
  "\"+\"",
  "\"-\"",
  "\"*\"",
  "\"/\"",
  "\"%\"",
  "tUMINUS_NUM",
  "tUMINUS",
  "tPOW",
  "\"!\"",
  "\"~\"",
  "tUPLUS",
  "kCLASS",
  "kMODULE",
  "kDEF",
  "kUNDEF",
  "kBEGIN",
  "kRESCUE",
  "kENSURE",
  "kEND",
  "kIF",
  "kUNLESS",
  "kTHEN",
  "kELSIF",
  "kELSE",
  "kCASE",
  "kWHEN",
  "kWHILE",
  "kUNTIL",
  "kFOR",
  "kBREAK",
  "kNEXT",
  "kREDO",
  "kRETRY",
  "kIN",
  "kDO",
  "kDO_COND",
  "kDO_BLOCK",
  "kDO_LAMBDA",
  "kRETURN",
  "kYIELD",
  "kSUPER",
  "kSELF",
  "kNIL",
  "kTRUE",
  "kFALSE",
  "kALIAS",
  "kDEFINED",
  "klBEGIN",
  "klEND",
  "k__LINE__",
  "k__FILE__",
  "k__ENCODING__",
  "tIDENTIFIER",
  "tFID",
  "tGVAR",
  "tIVAR",
  "tCONSTANT",
  "tCVAR",
  "tLABEL",
  "tINTEGER",
  "tFLOAT",
  "tSTRING_CONTENT",
  "tCHAR",
  "tNTH_REF",
  "tBACK_REF",
  "tREGEXP_END",
  "tAREF",
  "tASET",
  "tCOLON2",
  "tCOLON3",
  "tASSOC",
  "tLPAREN",
  "tLPAREN_ARG",
  "tRPAREN",
  "tLBRACK",
  "tLBRACE",
  "tSTAR",
  "tAMPER",
  "tLAMBDA",
  "tSYMBEG",
  "tSTRING_BEG",
  "tXSTRING_BEG",
  "tREGEXP_BEG",
  "tWORDS_BEG",
  "tQWORDS_BEG",
  "tSTRING_DBEG",
  "tSTRING_DVAR",
  "tSTRING_END",
  "tLAMBEG",
  "tSTRING",
  "tXSTRING_END",
  "\"{\"",
  "\"}\"",
  "\"[\"",
  "\".\"",
  "\",\"",
  "\"`\"",
  "\"(\"",
  "\")\"",
  "\"]\"",
  "\";\"",
  "\" \"",
  "\"\\\\n\"",
  "$start",
  "target",
  "program",
  "top_compstmt",
  "@1",
  "top_stmts",
  "opt_terms",
  "none",
  "top_stmt",
  "terms",
  "stmt",
  "bodystmt",
  "compstmt",
  "opt_rescue",
  "opt_else",
  "opt_ensure",
  "stmts",
  "fitem",
  "undef_list",
  "expr_value",
  "lhs",
  "command_call",
  "mlhs",
  "var_lhs",
  "primary_value",
  "opt_call_args",
  "rbracket",
  "backref",
  "mrhs",
  "arg_value",
  "expr",
  "@2",
  "opt_nl",
  "arg",
  "command",
  "block_command",
  "call_args",
  "block_call",
  "operation2",
  "command_args",
  "cmd_brace_block",
  "opt_block_param",
  "operation",
  "mlhs_basic",
  "mlhs_inner",
  "rparen",
  "mlhs_head",
  "mlhs_item",
  "mlhs_node",
  "mlhs_post",
  "variable",
  "cname",
  "cpath",
  "fname",
  "op",
  "reswords",
  "fsym",
  "symbol",
  "dsym",
  "primary",
  "@3",
  "@4",
  "aref_args",
  "args",
  "trailer",
  "assocs",
  "paren_args",
  "opt_paren_args",
  "opt_block_arg",
  "block_arg",
  "literal",
  "strings",
  "xstring",
  "regexp",
  "words",
  "qwords",
  "var_ref",
  "k_begin",
  "k_end",
  "assoc_list",
  "brace_block",
  "method_call",
  "lambda",
  "k_if",
  "then",
  "if_tail",
  "k_unless",
  "k_while",
  "do",
  "k_until",
  "k_case",
  "case_body",
  "k_for",
  "for_var",
  "k_class",
  "superclass",
  "term",
  "k_module",
  "k_def",
  "f_arglist",
  "singleton",
  "dot_or_colon",
  "f_marg",
  "f_norm_arg",
  "f_margs",
  "f_marg_list",
  "block_param",
  "f_arg",
  "f_block_optarg",
  "f_rest_arg",
  "opt_f_block_arg",
  "f_block_arg",
  "block_param_def",
  "opt_bv_decl",
  "bv_decls",
  "bvar",
  "f_bad_arg",
  "f_larglist",
  "lambda_body",
  "f_args",
  "do_block",
  "operation3",
  "cases",
  "exc_list",
  "exc_var",
  "numeric",
  "string",
  "string1",
  "string_contents",
  "xstring_contents",
  "word_list",
  "word",
  "string_content",
  "qword_list",
  "string_dvar",
  "sym",
  "f_optarg",
  "f_arg_item",
  "f_opt",
  "f_block_opt",
  "restarg_mark",
  "blkarg_mark",
  "assoc" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 75)
  def _reduce_1(val, _values, result)
                        # puts 'well, we got here..'
                    # puts val[0]
                    @parser_result = val[0]
                    result = val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 83)
  def _reduce_2(val, _values, result)
                        self.lex_state = :EXPR_BEG
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 87)
  def _reduce_3(val, _values, result)
                        # puts 'program'
                    # puts val[1]
                    result = val[1]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 94)
  def _reduce_4(val, _values, result)
                        # puts 'top_compstmt'
                    # puts val[0]
                    # puts val[1]
                    result = val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 102)
  def _reduce_5(val, _values, result)
                        result = []
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 106)
  def _reduce_6(val, _values, result)
                        result = [val[0]]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 110)
  def _reduce_7(val, _values, result)
                        result = val[0] + [val[2]]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 114)
  def _reduce_8(val, _values, result)
                        result = val[1]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 119)
  def _reduce_9(val, _values, result)
                        result = val[0]
                  
    result
  end
.,.,

# reduce 10 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 125)
  def _reduce_11(val, _values, result)
                        result = val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 130)
  def _reduce_12(val, _values, result)
                        result = val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 135)
  def _reduce_13(val, _values, result)
                        result = []
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 139)
  def _reduce_14(val, _values, result)
                        result = [val[0]]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 143)
  def _reduce_15(val, _values, result)
                        result = val[0] + [val[2]]
		              
    result
  end
.,.,

# reduce 16 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 149)
  def _reduce_17(val, _values, result)
                        self.lex_state = :EXPR_FNAME
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 154)
  def _reduce_18(val, _values, result)
                      
    result
  end
.,.,

# reduce 19 omitted

# reduce 20 omitted

# reduce 21 omitted

# reduce 22 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 161)
  def _reduce_23(val, _values, result)
                		    result = node :if_mod, :stmt => val[0], :expr => val[2]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 165)
  def _reduce_24(val, _values, result)
                		    result = node :unless_mod, :stmt => val[0], :expr => val[2]
            		  
    result
  end
.,.,

# reduce 25 omitted

# reduce 26 omitted

# reduce 27 omitted

# reduce 28 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 173)
  def _reduce_29(val, _values, result)
                		    result = node :assign, :lhs => val[0], :rhs => val[2]
            		  
    result
  end
.,.,

# reduce 30 omitted

# reduce 31 omitted

# reduce 32 omitted

# reduce 33 omitted

# reduce 34 omitted

# reduce 35 omitted

# reduce 36 omitted

# reduce 37 omitted

# reduce 38 omitted

# reduce 39 omitted

# reduce 40 omitted

# reduce 41 omitted

# reduce 42 omitted

# reduce 43 omitted

# reduce 44 omitted

# reduce 45 omitted

# reduce 46 omitted

# reduce 47 omitted

# reduce 48 omitted

# reduce 49 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 200)
  def _reduce_50(val, _values, result)
                  	    result = node :return, :call_args => val[1]
              	  
    result
  end
.,.,

# reduce 51 omitted

# reduce 52 omitted

# reduce 53 omitted

# reduce 54 omitted

# reduce 55 omitted

# reduce 56 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 213)
  def _reduce_57(val, _values, result)
                        # command call - no brackets/recv
          		      result = node :call, :recv => nil, :meth => val[0], :call_args => val[1]
                  
    result
  end
.,.,

# reduce 58 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 219)
  def _reduce_59(val, _values, result)
              		      result = node :call, :recv => val[0], :meth => val[2], :call_args => val[3]
                  
    result
  end
.,.,

# reduce 60 omitted

# reduce 61 omitted

# reduce 62 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 226)
  def _reduce_63(val, _values, result)
          		          result = node :super, :call_args => val[1]
      		        
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 230)
  def _reduce_64(val, _values, result)
            	          result = node :yield, :call_args => val[1]
        	        
    result
  end
.,.,

# reduce 65 omitted

# reduce 66 omitted

# reduce 67 omitted

# reduce 68 omitted

# reduce 69 omitted

# reduce 70 omitted

# reduce 71 omitted

# reduce 72 omitted

# reduce 73 omitted

# reduce 74 omitted

# reduce 75 omitted

# reduce 76 omitted

# reduce 77 omitted

# reduce 78 omitted

# reduce 79 omitted

# reduce 80 omitted

# reduce 81 omitted

# reduce 82 omitted

# reduce 83 omitted

# reduce 84 omitted

# reduce 85 omitted

# reduce 86 omitted

# reduce 87 omitted

# reduce 88 omitted

# reduce 89 omitted

# reduce 90 omitted

# reduce 91 omitted

# reduce 92 omitted

# reduce 93 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 271)
  def _reduce_94(val, _values, result)
    		                result = node :call, :recv => val[0], :meth => '[]', :args => val[2]
		              
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 275)
  def _reduce_95(val, _values, result)
              		      result = node :call, :recv => val[0], :meth => val[2]
                  
    result
  end
.,.,

# reduce 96 omitted

# reduce 97 omitted

# reduce 98 omitted

# reduce 99 omitted

# reduce 100 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 285)
  def _reduce_101(val, _values, result)
                        puts 'ERROR: cant use identifier for class/mod name'
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 289)
  def _reduce_102(val, _values, result)
                		    result = val[0]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 295)
  def _reduce_103(val, _values, result)
                      
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 298)
  def _reduce_104(val, _values, result)
      	                result = node :path, :cname => val[0]
  	              
    result
  end
.,.,

# reduce 105 omitted

# reduce 106 omitted

# reduce 107 omitted

# reduce 108 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 307)
  def _reduce_109(val, _values, result)
    		                self.lex_state = :EXPR_END
		                result = val[0]
		              
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 312)
  def _reduce_110(val, _values, result)
    		                self.lex_state = :EXPR_END
		                result = val[0]
		              
    result
  end
.,.,

# reduce 111 omitted

# reduce 112 omitted

# reduce 113 omitted

# reduce 114 omitted

# reduce 115 omitted

# reduce 116 omitted

# reduce 117 omitted

# reduce 118 omitted

# reduce 119 omitted

# reduce 120 omitted

# reduce 121 omitted

# reduce 122 omitted

# reduce 123 omitted

# reduce 124 omitted

# reduce 125 omitted

# reduce 126 omitted

# reduce 127 omitted

# reduce 128 omitted

# reduce 129 omitted

# reduce 130 omitted

# reduce 131 omitted

# reduce 132 omitted

# reduce 133 omitted

# reduce 134 omitted

# reduce 135 omitted

# reduce 136 omitted

# reduce 137 omitted

# reduce 138 omitted

# reduce 139 omitted

# reduce 140 omitted

# reduce 141 omitted

# reduce 142 omitted

# reduce 143 omitted

# reduce 144 omitted

# reduce 145 omitted

# reduce 146 omitted

# reduce 147 omitted

# reduce 148 omitted

# reduce 149 omitted

# reduce 150 omitted

# reduce 151 omitted

# reduce 152 omitted

# reduce 153 omitted

# reduce 154 omitted

# reduce 155 omitted

# reduce 156 omitted

# reduce 157 omitted

# reduce 158 omitted

# reduce 159 omitted

# reduce 160 omitted

# reduce 161 omitted

# reduce 162 omitted

# reduce 163 omitted

# reduce 164 omitted

# reduce 165 omitted

# reduce 166 omitted

# reduce 167 omitted

# reduce 168 omitted

# reduce 169 omitted

# reduce 170 omitted

# reduce 171 omitted

# reduce 172 omitted

# reduce 173 omitted

# reduce 174 omitted

# reduce 175 omitted

# reduce 176 omitted

# reduce 177 omitted

# reduce 178 omitted

# reduce 179 omitted

# reduce 180 omitted

# reduce 181 omitted

# reduce 182 omitted

# reduce 183 omitted

# reduce 184 omitted

# reduce 185 omitted

# reduce 186 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 348)
  def _reduce_187(val, _values, result)
                        result = node :assign, :lhs => val[0], :rhs => val[2]
                  
    result
  end
.,.,

# reduce 188 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 353)
  def _reduce_189(val, _values, result)
                		    result = node :op_asgn, :lhs => val[0], :op => val[1], :rhs => val[2]
            		  
    result
  end
.,.,

# reduce 190 omitted

# reduce 191 omitted

# reduce 192 omitted

# reduce 193 omitted

# reduce 194 omitted

# reduce 195 omitted

# reduce 196 omitted

# reduce 197 omitted

# reduce 198 omitted

# reduce 199 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 367)
  def _reduce_200(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '+', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 371)
  def _reduce_201(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '-', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 375)
  def _reduce_202(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '*', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 379)
  def _reduce_203(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '/', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 383)
  def _reduce_204(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '%', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 387)
  def _reduce_205(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '**', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

# reduce 206 omitted

# reduce 207 omitted

# reduce 208 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 394)
  def _reduce_209(val, _values, result)
                		    result = node :call, :recv => val[1], :meth => '-@', :call_args => []
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 398)
  def _reduce_210(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '|', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 402)
  def _reduce_211(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '^', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 406)
  def _reduce_212(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '&', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 410)
  def _reduce_213(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '<=>', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 414)
  def _reduce_214(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '>', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 418)
  def _reduce_215(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '>=', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 422)
  def _reduce_216(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '<', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 426)
  def _reduce_217(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '<=', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 430)
  def _reduce_218(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '==', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 434)
  def _reduce_219(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '===', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 438)
  def _reduce_220(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '!=', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 442)
  def _reduce_221(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '=~', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 446)
  def _reduce_222(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '!~', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 450)
  def _reduce_223(val, _values, result)
                		    result = node :call, :recv => val[1], :meth => '~', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 454)
  def _reduce_224(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '<<', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 458)
  def _reduce_225(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '>>', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 462)
  def _reduce_226(val, _values, result)
                          # weird? unless break here, it throws an error? hmm...
                      # we must use val[3] then as this counts as one match....
              		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 468)
  def _reduce_227(val, _values, result)
                		    result = node :andop, :lhs => val[0], :rhs => val[3]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 472)
  def _reduce_228(val, _values, result)
                        # weird? unless break here, it throws an error? hmm...
                    # we must use val[3] then as this counts as one match....
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 478)
  def _reduce_229(val, _values, result)
                		    result = node :orop, :lhs => val[0], :rhs => val[3]
            		  
    result
  end
.,.,

# reduce 230 omitted

# reduce 231 omitted

# reduce 232 omitted

# reduce 233 omitted

# reduce 234 omitted

# reduce 235 omitted

# reduce 236 omitted

# reduce 237 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 493)
  def _reduce_238(val, _values, result)
                        result = val[1]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 498)
  def _reduce_239(val, _values, result)
                        result = node :call_args, :args => nil
                  
    result
  end
.,.,

# reduce 240 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 504)
  def _reduce_241(val, _values, result)
                        result = node :call_args, :args => nil
                  
    result
  end
.,.,

# reduce 242 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 510)
  def _reduce_243(val, _values, result)
                		    result = node :call_args, :args => [val[0]]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 514)
  def _reduce_244(val, _values, result)
                		    result = node :call_args, :args => val[0], :block_arg => val[1]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 518)
  def _reduce_245(val, _values, result)
                		    result = node :call_args, :assocs => val[0], :block_arg => val[1]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 522)
  def _reduce_246(val, _values, result)
                		    result = node :call_args, :args => val[0], :assocs => val[2], :block_arg => val[3]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 526)
  def _reduce_247(val, _values, result)
                		    result = node :call_args, :block_arg => val[0]
            		  
    result
  end
.,.,

# reduce 248 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 533)
  def _reduce_249(val, _values, result)
                        result = self.node :block_arg, :arg => val[1]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 538)
  def _reduce_250(val, _values, result)
                        resul = val[1]
                  
    result
  end
.,.,

# reduce 251 omitted

# reduce 252 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 545)
  def _reduce_253(val, _values, result)
                        result = [val[0]]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 549)
  def _reduce_254(val, _values, result)
    		                result = [val[1]]
		              
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 553)
  def _reduce_255(val, _values, result)
    		                result = val[0] + [val[2]]
		              
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 557)
  def _reduce_256(val, _values, result)
    		                result = val[0] + [val[3]]
		              
    result
  end
.,.,

# reduce 257 omitted

# reduce 258 omitted

# reduce 259 omitted

# reduce 260 omitted

# reduce 261 omitted

# reduce 262 omitted

# reduce 263 omitted

# reduce 264 omitted

# reduce 265 omitted

# reduce 266 omitted

# reduce 267 omitted

# reduce 268 omitted

# reduce 269 omitted

# reduce 270 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 577)
  def _reduce_271(val, _values, result)
                		    result = node :lparen, :stmt => val[1]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 581)
  def _reduce_272(val, _values, result)
                		    result = node :colon2, :lhs => val[0], :rhs => val[2]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 585)
  def _reduce_273(val, _values, result)
                		    result = node :colon3, :rhs => val[1]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 589)
  def _reduce_274(val, _values, result)
                		    result = node :array, :args => val[1]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 593)
  def _reduce_275(val, _values, result)
                		    result = node :assoc_list, :list => val[1]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 597)
  def _reduce_276(val, _values, result)
                		    result = node :return
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 601)
  def _reduce_277(val, _values, result)
            	          result = node :yield, :call_args => val[2]
        	        
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 605)
  def _reduce_278(val, _values, result)
            	          result = node :yield
        	        
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 609)
  def _reduce_279(val, _values, result)
            	          result = node :yield
        	        
    result
  end
.,.,

# reduce 280 omitted

# reduce 281 omitted

# reduce 282 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 616)
  def _reduce_283(val, _values, result)
                        # puts 1
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 620)
  def _reduce_284(val, _values, result)
                		    # puts 2
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 624)
  def _reduce_285(val, _values, result)
                		    val[0][:brace_block] = val[1]
            		    result = val[0]
            		  
    result
  end
.,.,

# reduce 286 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 630)
  def _reduce_287(val, _values, result)
                		    result = self.node :if, :expr => val[1], :stmt => val[3], :tail => val[4]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 634)
  def _reduce_288(val, _values, result)
                		    result = self.node :unless, :expr => val[1], :stmt => val[3], :tail => val[4]
            		  
    result
  end
.,.,

# reduce 289 omitted

# reduce 290 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 640)
  def _reduce_291(val, _values, result)
                		    result = node :case, :expr => val[1], :body => val[3]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 644)
  def _reduce_292(val, _values, result)
                		    result = node :case, :expr => nil, :body => val[2]
            		  
    result
  end
.,.,

# reduce 293 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 649)
  def _reduce_294(val, _values, result)
                		    result = self.node_class(:cpath => val[1], :superclass => val[2], :bodystmt => val[3])
            		  
    result
  end
.,.,

# reduce 295 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 654)
  def _reduce_296(val, _values, result)
                		    result = self.node_module(:cpath => val[1], :body => val[2])
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 658)
  def _reduce_297(val, _values, result)
                		    result = self.node :def, :fname => val[1], :arglist => val[2], :bodystmt => val[3]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 662)
  def _reduce_298(val, _values, result)
                		    result = self.node :def, :singleton => val[1], :fname => val[3], :arglist => val[4], :bodystmt => val[5]
            		  
    result
  end
.,.,

# reduce 299 omitted

# reduce 300 omitted

# reduce 301 omitted

# reduce 302 omitted

# reduce 303 omitted

# reduce 304 omitted

# reduce 305 omitted

# reduce 306 omitted

# reduce 307 omitted

# reduce 308 omitted

# reduce 309 omitted

# reduce 310 omitted

# reduce 311 omitted

# reduce 312 omitted

# reduce 313 omitted

# reduce 314 omitted

# reduce 315 omitted

# reduce 316 omitted

# reduce 317 omitted

# reduce 318 omitted

# reduce 319 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 702)
  def _reduce_320(val, _values, result)
                        result = val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 706)
  def _reduce_321(val, _values, result)
                  	    result = [self.node(:elsif, :expr => val[1], :stmt => val[3])] + val[4]
              	  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 711)
  def _reduce_322(val, _values, result)
                        result = []
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 715)
  def _reduce_323(val, _values, result)
                  	    result = [self.node(:else, :stmt => val[1])]
              	  
    result
  end
.,.,

# reduce 324 omitted

# reduce 325 omitted

# reduce 326 omitted

# reduce 327 omitted

# reduce 328 omitted

# reduce 329 omitted

# reduce 330 omitted

# reduce 331 omitted

# reduce 332 omitted

# reduce 333 omitted

# reduce 334 omitted

# reduce 335 omitted

# reduce 336 omitted

# reduce 337 omitted

# reduce 338 omitted

# reduce 339 omitted

# reduce 340 omitted

# reduce 341 omitted

# reduce 342 omitted

# reduce 343 omitted

# reduce 344 omitted

# reduce 345 omitted

# reduce 346 omitted

# reduce 347 omitted

# reduce 348 omitted

# reduce 349 omitted

# reduce 350 omitted

# reduce 351 omitted

# reduce 352 omitted

# reduce 353 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 755)
  def _reduce_354(val, _values, result)
                        result = nil
                  
    result
  end
.,.,

# reduce 355 omitted

# reduce 356 omitted

# reduce 357 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 763)
  def _reduce_358(val, _values, result)
                		    result = val[1]
            		  
    result
  end
.,.,

# reduce 359 omitted

# reduce 360 omitted

# reduce 361 omitted

# reduce 362 omitted

# reduce 363 omitted

# reduce 364 omitted

# reduce 365 omitted

# reduce 366 omitted

# reduce 367 omitted

# reduce 368 omitted

# reduce 369 omitted

# reduce 370 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 786)
  def _reduce_371(val, _values, result)
                        result = node :brace_block, :params => val[1], :stmt => val[2]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 791)
  def _reduce_372(val, _values, result)
                        val[0][:brace_block] = val[1]
                    result = val[0]
                  
    result
  end
.,.,

# reduce 373 omitted

# reduce 374 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 799)
  def _reduce_375(val, _values, result)
                        result = node :call, :recv => nil, :meth => val[0], :call_args => val[1]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 803)
  def _reduce_376(val, _values, result)
                        result = node :call, :recv => val[0], :meth => val[2], :call_args => val[3]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 807)
  def _reduce_377(val, _values, result)
                  	    puts 'SCOOOBY DOOOOOOOOOOOOOOOOOOOOOOOOOOOOO 2'
              	  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 811)
  def _reduce_378(val, _values, result)
                  	    puts 'SCOOOBY DOOOOOOOOOOOOOOOOOOOOOOOOOOOOO 3'
              	  
    result
  end
.,.,

# reduce 379 omitted

# reduce 380 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 817)
  def _reduce_381(val, _values, result)
                		    result = node :super, :call_args => val[1]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 821)
  def _reduce_382(val, _values, result)
                		    result = node :super, :call_args => nil
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 825)
  def _reduce_383(val, _values, result)
                        result = node :call, :recv => val[0], :meth => '[]', :call_args => val[2]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 832)
  def _reduce_384(val, _values, result)
                      
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 835)
  def _reduce_385(val, _values, result)
                		    result = node :brace_block, :params => val[1], :stmt => val[2]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 840)
  def _reduce_386(val, _values, result)
                        result = [node(:when, :args => val[1], :stmt => val[3])] + val[4]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 845)
  def _reduce_387(val, _values, result)
                        result = val[0]
                  
    result
  end
.,.,

# reduce 388 omitted

# reduce 389 omitted

# reduce 390 omitted

# reduce 391 omitted

# reduce 392 omitted

# reduce 393 omitted

# reduce 394 omitted

# reduce 395 omitted

# reduce 396 omitted

# reduce 397 omitted

# reduce 398 omitted

# reduce 399 omitted

# reduce 400 omitted

# reduce 401 omitted

# reduce 402 omitted

# reduce 403 omitted

# reduce 404 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 874)
  def _reduce_405(val, _values, result)
                        result = node :string, :value => val[1], :beg => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 879)
  def _reduce_406(val, _values, result)
                        result = node :xstring, :value => val[1]
                  
    result
  end
.,.,

# reduce 407 omitted

# reduce 408 omitted

# reduce 409 omitted

# reduce 410 omitted

# reduce 411 omitted

# reduce 412 omitted

# reduce 413 omitted

# reduce 414 omitted

# reduce 415 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 898)
  def _reduce_416(val, _values, result)
                        # none..
                    result = []
                  
    result
  end
.,.,

# reduce 417 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 905)
  def _reduce_418(val, _values, result)
                        # none..
                    result = []
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 910)
  def _reduce_419(val, _values, result)
                		    result = val[0] + [val[1]]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 915)
  def _reduce_420(val, _values, result)
                        # none..
                    result = []
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 920)
  def _reduce_421(val, _values, result)
                		    result = val[0] + [val[1]]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 925)
  def _reduce_422(val, _values, result)
                        result = node :string_content, :value => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 929)
  def _reduce_423(val, _values, result)
                        result = node :string_dvar, :value => val[1]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 933)
  def _reduce_424(val, _values, result)
                        result = node :string_dbeg, :value => val[1]
                  
    result
  end
.,.,

# reduce 425 omitted

# reduce 426 omitted

# reduce 427 omitted

# reduce 428 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 943)
  def _reduce_429(val, _values, result)
                        result = node :symbol, :name => val[1]
                  
    result
  end
.,.,

# reduce 430 omitted

# reduce 431 omitted

# reduce 432 omitted

# reduce 433 omitted

# reduce 434 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 955)
  def _reduce_435(val, _values, result)
                        result = node :numeric, :value => val[0], :float => false
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 959)
  def _reduce_436(val, _values, result)
                        result = node :numeric, :value => val[0], :float => true
                  
    result
  end
.,.,

# reduce 437 omitted

# reduce 438 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 966)
  def _reduce_439(val, _values, result)
                        result = node :identifier, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 970)
  def _reduce_440(val, _values, result)
                        result = node :ivar, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 974)
  def _reduce_441(val, _values, result)
                        result = node :gvar, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 978)
  def _reduce_442(val, _values, result)
                        result = node :constant, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 982)
  def _reduce_443(val, _values, result)
                        result = node :cvar, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 986)
  def _reduce_444(val, _values, result)
                        result = node :nil, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 990)
  def _reduce_445(val, _values, result)
                        result = node :self, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 994)
  def _reduce_446(val, _values, result)
                        result = node :true, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 998)
  def _reduce_447(val, _values, result)
                        result = node :false, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1002)
  def _reduce_448(val, _values, result)
                        result = node :__FILE__, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1006)
  def _reduce_449(val, _values, result)
                        result = node :__LINE__, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1010)
  def _reduce_450(val, _values, result)
                        result = node :__ENCODING__, :name => val[0]
                  
    result
  end
.,.,

# reduce 451 omitted

# reduce 452 omitted

# reduce 453 omitted

# reduce 454 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1022)
  def _reduce_455(val, _values, result)
                        result = nil
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1026)
  def _reduce_456(val, _values, result)
                		    result = node :superclass, :expr => val[1]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1028)
  def _reduce_457(val, _values, result)
     puts 'OMFG' 
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1032)
  def _reduce_458(val, _values, result)
                        result = val[1]
                    self.lex_state = :EXPR_BEG
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1037)
  def _reduce_459(val, _values, result)
                        result = val[0]
                    self.lex_state = :EXPR_BEG
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1043)
  def _reduce_460(val, _values, result)
                 		    result = node :arg, :arg => val[0], :optarg => val[2], :rest_arg => val[4], :opt_block_arg => val[5]
             		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1047)
  def _reduce_461(val, _values, result)
                 		    result = node :arg, :arg => val[0], :optarg => val[2], :rest_arg => val[4], :arg2 => val[6], :opt_block_arg => val[7]
             		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1051)
  def _reduce_462(val, _values, result)
                  	    result = node :arg, :arg => val[0], :optarg => val[2], :opt_block_arg => val[3]
              	  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1055)
  def _reduce_463(val, _values, result)
                  	    result = node :arg, :arg => val[0], :optarg => val[2], :arg2 => val[4], :opt_block_arg => val[5]
              	  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1059)
  def _reduce_464(val, _values, result)
                		    result = node :arg, :arg => val[0], :rest_arg => val[2], :opt_block_arg => val[3]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1063)
  def _reduce_465(val, _values, result)
                		    result = node :arg, :arg => val[0], :rest_arg => val[2], :arg2 => val[4], :opt_block_arg => val[5]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1067)
  def _reduce_466(val, _values, result)
                 		    result = node :arg, :arg => val[0], :opt_block_arg => val[1]
             		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1071)
  def _reduce_467(val, _values, result)
                		    result = node :optarg, :optarg => val[0], :rest_arg => val[2], :opt_block_arg => val[3]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1075)
  def _reduce_468(val, _values, result)
                		    result = node :optarg, :optarg => val[0], :rest_arg => val[2], :arg => val[4], :opt_block_arg => val[5]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1079)
  def _reduce_469(val, _values, result)
                 		    result = node :optarg, :optarg => val[0], :opt_block_arg => val[1]
             		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1083)
  def _reduce_470(val, _values, result)
                 		    result = node :optarg, :optarg => val[0], :arg => val[2], :opt_block_arg => val[3]
             		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1087)
  def _reduce_471(val, _values, result)
                 		    result = node :rest_arg, :rest_arg => val[0], :opt_block_arg => val[1]
             		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1091)
  def _reduce_472(val, _values, result)
                 		    result = node :rest_arg, :rest_arg => val[0], :arg => val[2], :opt_block_arg => val[3]
             		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1095)
  def _reduce_473(val, _values, result)
                 		    result = node :arg, :opt_block_arg => val[0]
             		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1099)
  def _reduce_474(val, _values, result)
                  	    # none...
              	    result = nil
              	  
    result
  end
.,.,

# reduce 475 omitted

# reduce 476 omitted

# reduce 477 omitted

# reduce 478 omitted

# reduce 479 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1111)
  def _reduce_480(val, _values, result)
                        # result = val[0]
              	    result = node :norm_arg, :value => val[0]
              	  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1117)
  def _reduce_481(val, _values, result)
                      
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1120)
  def _reduce_482(val, _values, result)
                        result = node :label_arg, :name => val[0], :value => val[1]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1125)
  def _reduce_483(val, _values, result)
                        result = val[0]
                  
    result
  end
.,.,

# reduce 484 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1131)
  def _reduce_485(val, _values, result)
                        result = [val[0]]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1135)
  def _reduce_486(val, _values, result)
                        # val[0] + val[2]
                    result = val[0] + [val[2]]
            		  
    result
  end
.,.,

# reduce 487 omitted

# reduce 488 omitted

# reduce 489 omitted

# reduce 490 omitted

# reduce 491 omitted

# reduce 492 omitted

# reduce 493 omitted

# reduce 494 omitted

# reduce 495 omitted

# reduce 496 omitted

# reduce 497 omitted

# reduce 498 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1160)
  def _reduce_499(val, _values, result)
                        result = val[1]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1164)
  def _reduce_500(val, _values, result)
                        result = node :label_arg, :name => val[0], :value => val[1]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1169)
  def _reduce_501(val, _values, result)
                        result = val[1]
                  
    result
  end
.,.,

# reduce 502 omitted

# reduce 503 omitted

# reduce 504 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1178)
  def _reduce_505(val, _values, result)
                        result = []
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1182)
  def _reduce_506(val, _values, result)
                  	    result = val[0]
              	  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1187)
  def _reduce_507(val, _values, result)
                        result = [val[0]]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1191)
  def _reduce_508(val, _values, result)
                		    result = val[0] + [val[2]]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1196)
  def _reduce_509(val, _values, result)
                        result = node :assoc, :key => val[0], :value => val[2]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1200)
  def _reduce_510(val, _values, result)
                        result = node :label_assoc, :key => val[0], :value => val[1]
                  
    result
  end
.,.,

# reduce 511 omitted

# reduce 512 omitted

# reduce 513 omitted

# reduce 514 omitted

# reduce 515 omitted

# reduce 516 omitted

# reduce 517 omitted

# reduce 518 omitted

# reduce 519 omitted

# reduce 520 omitted

# reduce 521 omitted

# reduce 522 omitted

# reduce 523 omitted

# reduce 524 omitted

# reduce 525 omitted

# reduce 526 omitted

# reduce 527 omitted

# reduce 528 omitted

# reduce 529 omitted

# reduce 530 omitted

# reduce 531 omitted

# reduce 532 omitted

# reduce 533 omitted

# reduce 534 omitted

# reduce 535 omitted

# reduce 536 omitted

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class RubyParser
  end   # module Vienna


