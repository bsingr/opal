#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.6
# from Racc grammer file "".
#

require 'racc/parser.rb'


# require 'ctokenizer'
require 'strscan'

module Vienna
  class RubyParser < Racc::Parser

module_eval(<<'...end ruby_parser.rb.y/module_eval...', 'ruby_parser.rb.y', 1313)


...end ruby_parser.rb.y/module_eval...
##### State transition tables begin ###

clist = [
'-274,-10,460,316,317,-274,316,317,233,422,316,317,-66,-274,-274,-89',
'316,317,-274,-274,-274,-274,-274,-274,-274,-274,-274,-274,-274,-274',
'-274,-274,-274,4,-274,-98,690,460,-274,-274,-274,-274,-274,-274,812',
'596,-97,696,-89,-520,802,-274,-274,-274,-520,316,317,-274,-274,-93,-274',
'420,-520,-520,599,811,236,-520,-520,-520,-520,-520,-520,-520,-520,-520',
'-520,-520,-520,-520,-520,-520,593,-520,-96,689,595,-520,-520,-520,-520',
'-520,-520,464,460,460,460,-95,695,819,-520,-520,-520,810,-274,457,-520',
'-520,-80,-520,809,-89,349,-97,799,349,513,261,-520,264,807,418,-85,-89',
'337,349,429,-89,-274,-274,-274,-90,-274,-274,-274,-274,-274,-274,-274',
'-274,457,337,-89,-274,464,-274,-10,-274,-10,328,331,200,805,-520,340',
'342,344,348,324,326,329,332,334,336,349,-229,343,345,346,-527,-99,538',
'194,417,337,-96,-520,-520,-520,-520,-88,-520,-520,-520,-520,-520,-520',
'-520,-520,261,-270,264,-520,-87,-520,-270,-520,457,457,457,-94,513,-95',
'-270,-270,261,657,264,-270,-270,-270,-270,-270,-270,-270,-270,-270,-270',
'-270,-270,-270,-270,-270,-270,-270,261,513,264,-270,-270,-270,-270,-270',
'-270,-270,-94,820,-450,-88,229,233,-270,-270,-270,418,349,-270,-270',
'-270,-516,-270,325,327,330,333,335,338,339,341,-270,-270,-270,-270,-450',
'452,-87,-91,535,325,327,330,333,335,338,339,341,837,-100,275,-93,-454',
'-95,798,349,-448,-95,-94,473,535,-94,261,-94,264,337,-270,22,-270,32',
'236,43,48,325,327,330,333,335,338,339,341,451,-448,469,470,229,-270',
'261,492,264,-270,-270,-270,-270,-270,-270,-270,-270,-270,-270,-270,-270',
'108,-86,-98,-270,-270,-270,-100,-270,410,54,60,64,261,235,264,513,-96',
'94,99,-86,513,229,20,535,29,38,41,46,55,61,65,-97,-93,261,412,264,95',
'101,105,5,11,18,23,-92,-95,-85,-95,52,58,63,70,75,83,84,87,92,98,349',
'6,12,768,25,27,36,349,-90,-520,790,230,-92,234,81,-97,91,97,-99,-517',
'9,13,19,24,28,37,40,218,337,32,-446,43,48,325,327,330,333,335,338,339',
'341,261,-447,264,-520,-516,47,261,-96,264,-96,261,261,264,264,337,-446',
'-449,606,-441,606,606,243,-97,-93,-97,-93,-520,-447,-520,-520,54,60',
'64,603,235,603,603,-89,94,99,-91,-516,-449,20,-441,29,38,41,225,226',
'61,65,-453,814,-453,375,512,238,101,105,5,11,18,23,-444,510,511,522',
'52,58,63,70,75,83,84,87,92,98,242,6,12,376,25,27,36,-451,354,-453,356',
'230,-444,234,81,521,91,97,241,244,9,13,19,24,28,37,40,22,337,32,765',
'43,48,-451,-453,-453,325,327,330,333,335,338,339,341,604,406,47,-385',
'-452,618,349,907,432,349,197,201,203,206,435,261,603,264,108,325,327',
'330,333,335,338,339,341,54,60,64,-452,235,591,592,618,94,99,354,-385',
'356,20,782,29,38,41,46,55,61,65,349,765,863,567,834,95,101,105,5,11',
'18,23,-385,786,-385,-385,52,58,63,70,75,83,84,87,92,98,782,6,12,780',
'25,27,36,-94,869,-520,473,230,618,234,81,839,91,97,-100,449,9,13,19',
'24,28,37,40,22,261,32,264,43,48,840,469,470,325,327,330,333,335,338',
'339,341,-520,778,47,684,685,776,686,580,261,349,264,337,27,36,261,714',
'264,-87,108,328,331,775,261,-520,264,-520,-520,54,60,64,73,235,581,582',
'349,94,99,-274,-516,349,20,618,29,38,41,46,55,61,65,618,-87,-99,538',
'-254,95,101,105,5,11,18,23,33,-274,-274,49,52,58,63,70,75,83,84,87,92',
'98,-517,6,12,768,25,27,36,828,765,-274,765,68,349,76,81,-269,91,97,104',
'618,9,13,19,24,28,37,40,22,337,32,349,43,48,496,-274,-274,328,331,-87',
'756,-269,-269,500,501,337,349,47,-517,316,317,-87,475,328,331,-87,-80',
'-274,734,497,498,-93,-454,108,325,327,330,333,335,338,339,341,54,60',
'64,73,78,828,765,-255,94,99,-274,-274,852,20,-254,29,38,41,46,55,61',
'65,567,-517,316,317,856,95,101,105,5,11,18,23,33,304,305,49,52,58,63',
'70,75,83,84,87,92,98,768,6,12,618,25,27,36,719,716,473,713,68,709,76',
'81,349,91,97,104,-305,9,13,19,24,28,37,40,218,565,32,865,43,48,469,470',
'516,325,327,330,333,335,338,339,341,-305,-305,47,349,349,868,657,475',
'325,327,330,333,335,338,339,341,337,791,243,197,201,203,206,429,328',
'331,507,54,60,64,649,235,418,349,872,94,99,265,647,639,20,622,29,38',
'41,225,226,61,65,879,620,444,508,618,238,286,288,5,11,18,23,452,266',
'267,613,52,58,63,70,75,83,84,87,92,98,601,6,12,584,25,27,36,768,583',
'618,618,230,576,234,81,473,91,97,349,-65,9,13,19,24,28,37,40,-441,572',
'-441,475,618,-444,126,-444,134,139,-256,146,469,470,490,567,563,173',
'176,47,539,565,186,113,117,123,131,136,140,143,147,153,524,523,791,-441',
'197,201,203,206,-444,325,327,330,333,335,338,339,341,618,782,671,782',
'197,201,203,206,208,-513,902,-441,-441,-275,-514,-275,-444,-444,520',
'904,443,210,519,865,-513,782,196,200,-275,-514,432,229,197,201,203,206',
'208,590,-275,-275,-275,-275,396,936,477,444,445,937,194,210,349,205',
'908,-275,-275,200,910,148,154,657,912,782,591,592,337,915,-516,184,-516',
'782,-516,-516,328,331,502,499,194,340,342,344,348,-539,-539,-539,-539',
'-539,-539,189,116,120,125,129,133,138,142,145,151,229,406,-96,796,-516',
'432,464,197,201,203,206,435,473,-516,-516,-516,618,-516,-257,463,456',
'-516,-516,452,-269,925,-516,451,-516,-516,-516,-516,-516,-516,-516,448',
'469,470,471,865,-516,-516,-516,-516,-516,-516,-516,442,650,-269,-269',
'-516,-516,-516,-516,-516,-516,-516,-516,-516,-516,-516,-516,-516,440',
'-516,-516,-516,428,426,423,419,-516,404,-516,-516,391,-516,-516,-516',
'-516,-516,-516,-516,-516,-516,-516,-516,218,349,32,322,43,48,325,327',
'330,333,335,338,339,341,922,620,782,865,-516,-516,-517,-516,432,782',
'197,201,203,206,208,945,473,782,782,19,493,243,314,302,349,923,924,210',
'301,300,54,60,64,200,235,111,110,782,94,99,469,470,,20,,29,38,41,225',
'226,61,65,,,194,,,238,101,105,5,11,18,23,,,,,52,58,63,70,75,83,84,87',
'92,98,242,6,12,,25,27,36,,,,,230,,234,81,,91,97,241,244,9,13,19,24,28',
'37,40,218,,32,,43,48,,,,191,,197,201,203,206,208,,,,47,432,229,197,201',
'203,206,435,,210,,,,,196,200,243,,,,436,,,,,54,60,64,,235,,,,94,99,',
'194,,20,205,29,38,41,225,226,61,65,,,,,,238,101,105,5,11,18,23,,,,,52',
'58,63,70,75,83,84,87,92,98,242,6,12,,25,27,36,,,,,230,,234,81,,91,97',
'241,244,9,13,19,24,28,37,40,218,,32,,43,48,,,,671,,197,201,203,206,208',
',,,47,432,229,197,201,203,206,435,,210,,,,,196,200,243,,,,436,,,,,54',
'60,64,,235,,,,94,99,,194,,20,205,29,38,41,225,226,61,65,,,,,,238,101',
'105,5,11,18,23,,,,,52,58,63,70,75,83,84,87,92,98,242,6,12,,25,27,36',
',,,,230,,234,81,,91,97,241,244,9,13,19,24,28,37,40,,,,,,,126,306,134',
'139,,146,,307,308,309,310,173,176,47,,229,186,113,117,123,131,136,140',
'143,147,153,191,,197,201,203,206,208,,,191,,197,201,203,206,208,,,,210',
',,,306,196,200,,,210,307,308,309,310,196,200,,,,432,,197,201,203,206',
'435,,194,,,205,,,,,214,194,,436,205,306,701,477,783,416,702,307,308',
'309,310,,306,,,,148,154,307,308,309,310,,218,,32,184,43,48,325,327,330',
'333,335,338,339,341,,432,,197,201,203,206,435,,189,116,120,125,129,133',
'138,142,145,151,229,436,243,,,,434,,,,,54,60,64,,235,,,,94,99,,,,20',
',29,38,41,225,226,61,65,,,,,,238,101,105,5,11,18,23,,,,,52,58,63,70',
'75,83,84,87,92,98,242,6,12,,25,27,36,,,,,230,,234,81,,91,97,241,244',
'9,13,19,24,28,37,40,,,,,,,126,,134,139,,146,,,,,,173,176,47,,396,186',
'113,117,123,131,136,140,143,147,153,191,,197,201,203,206,208,671,,197',
'201,203,206,208,,,,,,210,,,,,196,200,210,,,,,196,200,191,,197,201,203',
'206,208,,,,,,,194,,,205,,,210,194,416,,205,196,200,,705,485,,,706,,',
'432,,197,201,203,206,435,148,154,,,,194,,337,205,-517,184,-517,436,-517',
'-517,328,331,434,,,340,342,344,348,-539,-539,-539,-539,-539,-539,189',
'116,120,125,129,133,138,142,145,151,229,,-98,690,-517,432,,197,201,203',
'206,435,,-517,-517,-517,,-517,,,,-517,-517,,436,,-517,,-517,-517,-517',
'-517,-517,-517,-517,,,,,,-517,-517,-517,-517,-517,-517,-517,,,,,-517',
'-517,-517,-517,-517,-517,-517,-517,-517,-517,-517,-517,-517,,-517,-517',
'-517,,,,,-517,,-517,-517,,-517,-517,-517,-517,-517,-517,-517,-517,-517',
'-517,-517,-519,,-519,,-519,-519,325,327,330,333,335,338,339,341,,,,',
',-517,,-517,432,,197,201,203,206,208,,,,,,,-519,,,,,,210,,,-519,-519',
'-519,200,-519,,,,-519,-519,,,,-519,,-519,-519,-519,-519,-519,-519,-519',
',,194,,,-519,-519,-519,-519,-519,-519,-519,,,,,-519,-519,-519,-519,-519',
'-519,-519,-519,-519,-519,-519,-519,-519,,-519,-519,-519,,,,,-519,,-519',
'-519,,-519,-519,-519,-519,-519,-519,-519,-519,-519,-519,-519,-518,,-518',
',-518,-518,,,,191,,197,201,203,206,208,,,,-519,432,-519,197,201,203',
'206,435,,210,,,,,196,200,-518,,,,436,,,,,-518,-518,-518,,-518,,,,-518',
'-518,,194,,-518,205,-518,-518,-518,-518,-518,-518,-518,,,,,,-518,-518',
'-518,-518,-518,-518,-518,,,,,-518,-518,-518,-518,-518,-518,-518,-518',
'-518,-518,-518,-518,-518,,-518,-518,-518,,,,,-518,,-518,-518,,-518,-518',
'-518,-518,-518,-518,-518,-518,-518,-518,-518,-514,,-514,,-514,-514,',
',,671,,197,201,203,206,208,,,,-518,432,-518,197,201,203,206,435,,210',
',,,,196,200,-514,,,,436,,,,,-514,-514,-514,,-514,,,,-514,-514,,194,',
'-514,205,-514,-514,-514,-514,-514,-514,-514,,,,,,-514,-514,-514,-514',
'-514,-514,-514,,,,,-514,-514,-514,-514,-514,-514,-514,-514,-514,-514',
'-514,-514,-514,,-514,-514,-514,,,,,-514,,-514,-514,,-514,-514,-514,-514',
'-514,-514,-514,-514,-514,-514,-514,,,,,,,-514,,,,,126,,134,139,,146',
',,-514,,-514,173,176,,,,186,113,117,123,131,136,140,143,147,153,325',
'327,330,333,335,338,339,341,,,,432,,197,201,203,206,208,,191,,197,201',
'203,206,208,,,,126,210,134,139,,146,,200,,210,,173,176,,196,200,186',
'113,117,123,131,136,140,143,147,153,,,194,,,737,477,,,738,194,,,205',
',,,,,148,154,191,,197,201,203,206,208,,184,,,,,,,,,,,210,,,,,196,200',
',,189,116,120,125,129,133,138,142,145,151,229,659,477,,,660,,,194,,',
'205,,,,148,154,126,,134,139,,146,,,184,,,173,176,,,,186,113,117,123',
'131,136,140,143,147,153,,,189,116,120,125,129,133,138,142,145,151,229',
',,,,432,,197,201,203,206,208,,,,,,126,,134,139,,146,,210,,,,173,176',
'200,,,186,113,117,123,131,136,140,143,147,153,,,,,,662,485,,194,663',
',,,,,,,,,148,154,432,,197,201,203,206,208,,184,,,,,,,,,,,210,,,,,,200',
',,189,116,120,125,129,133,138,142,145,151,229,484,485,,,487,,,194,,',
',,,,148,154,,,,,,218,,32,184,43,48,,,,,,,,,,,,,,,,,,189,116,120,125',
'129,133,138,142,145,151,229,,243,,,,,,,,,54,60,64,,235,,,,94,99,,,,20',
',29,38,41,225,226,61,65,,233,,,,238,101,105,5,11,18,23,,,,,52,58,63',
'70,75,83,84,87,92,98,242,6,12,,25,27,36,,,,,230,,234,81,,91,97,241,244',
'9,13,19,24,28,37,40,,,,,,,236,,,,,126,,134,139,,146,,,47,,229,173,176',
',,,186,113,117,123,131,136,140,143,147,153,,,,,,,,,,,,432,,197,201,203',
'206,208,,432,,197,201,203,206,208,,,,126,210,134,139,,146,,200,,210',
',173,176,,,200,186,113,117,123,131,136,140,143,147,153,,,194,,,586,485',
',,587,194,,,,,,,,,148,154,432,,197,201,203,206,208,,184,,,,,,,,,,,210',
',,,,,200,,,189,116,120,125,129,133,138,142,145,151,229,476,477,,,479',
',,194,,,,,,,148,154,126,,134,139,,146,,,184,,,173,176,,,,186,113,117',
'123,131,136,140,143,147,153,,,189,116,120,125,129,133,138,142,145,151',
'229,,,,,,,,,,,,,,,,,126,,134,139,,146,,,,,,173,176,,,,186,113,117,123',
'131,136,140,143,147,153,,,,,,659,477,,,660,,,,,,,,,,148,154,,,,,,,,',
'184,,,,,,,,,,,,,,,,,,,,189,116,120,125,129,133,138,142,145,151,229,740',
'485,,,741,,,,,,,,,,148,154,,,,,337,,,,184,,,,328,331,,,,340,342,344',
'348,324,326,329,332,334,336,-227,189,116,120,125,129,133,138,142,145',
'151,229,126,,134,139,,146,,,,,,173,176,,,,186,113,117,123,131,136,140',
'143,147,153,,,,,,,,,,187,114,118,,,,,,,155,158,161,164,167,171,175,178',
'179,182,188,115,119,124,128,132,137,141,144,150,159,162,166,169,,,,180',
'183,185,112,121,127,130,135,,,,152,157,160,165,170,174,84,87,181,98',
'325,327,330,333,335,338,339,341,148,154,126,,134,139,,146,,,184,,,173',
'176,,,,186,113,117,123,131,136,140,143,147,153,,,189,116,120,125,129',
'133,138,142,145,151,156,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,747,477,,,749,,,,,,,,,,148,154,,,,,,218,,32,184,43,48,,,,,,,,,,,',
',,,,,,189,116,120,125,129,133,138,142,145,151,229,,243,,,,,,,,,54,60',
'64,,235,,,,94,99,,,,20,,29,38,41,225,226,61,65,,,,,,238,101,105,5,11',
'18,23,,,,,52,58,63,70,75,83,84,87,92,98,242,6,12,,25,27,36,,,,,230,',
'234,81,,91,97,241,244,9,13,19,24,28,37,40,,,,,,,126,,134,139,,146,,',
',,,173,176,47,,229,186,113,117,123,131,136,140,143,147,153,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,126,,134,139,,146,,,,,,173,176,,,,186,113,117,123',
'131,136,140,143,147,153,,,,,,939,485,,,940,,,,,,,,,,148,154,,,,,,,,',
'184,,,,,,,,,,,,,,,,,,,,189,116,120,125,129,133,138,142,145,151,229,929',
'477,,,930,,,,,,,,,,148,154,,,,,,218,,32,184,43,48,,,,,,,,,,,,,,,,,,189',
'116,120,125,129,133,138,142,145,151,229,,243,,,,,,,,,54,60,64,,235,',
',,94,99,,,,20,,29,38,41,225,226,61,65,,,,,,238,101,105,5,11,18,23,,',
',,52,58,63,70,75,83,84,87,92,98,242,6,12,,25,27,36,,,,,230,,234,81,',
'91,97,241,244,9,13,19,24,28,37,40,,,,,,,126,,134,139,,146,,,,,,173,176',
'47,,229,186,113,117,123,131,136,140,143,147,153,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,662,485,,,663,,,,,,,,,,148,154',
',,,,,-513,,-513,184,-513,-513,,,,,,,,,,,,,,,,,,189,116,120,125,129,133',
'138,142,145,151,229,,-513,,,,,,,,,-513,-513,-513,,-513,,,,-513,-513',
',,,-513,,-513,-513,-513,-513,-513,-513,-513,,,,,,-513,-513,-513,-513',
'-513,-513,-513,,,,,-513,-513,-513,-513,-513,-513,-513,-513,-513,-513',
'-513,-513,-513,,-513,-513,-513,,,,,-513,,-513,-513,,-513,-513,-513,-513',
'-513,-513,-513,-513,-513,-513,-513,,,,,,,-513,,,,,126,,134,139,,146',
',,-513,,-513,173,176,,,,186,113,117,123,131,136,140,143,147,153,,,,',
',,,,,187,114,118,,,,,,,155,158,161,164,167,171,175,178,179,182,188,115',
'119,124,128,132,137,141,144,150,159,162,166,169,,,,180,183,185,245,246',
'247,248,135,,,,249,250,251,165,254,174,,,257,,,,,,,,,,148,154,,,,,360',
'22,,32,184,43,48,13,,,,,,,,,,,,,,,,,189,116,120,125,129,133,138,142',
'145,151,,,108,,,,,,,,,54,60,64,73,235,,,,94,99,,,,20,,29,38,41,46,55',
'61,65,,,,,,95,101,105,5,11,18,23,33,,,49,52,58,63,70,75,83,84,87,92',
'98,,6,12,,25,27,36,,,,,68,,366,81,,91,97,104,,9,13,19,24,28,37,40,360',
'22,,32,,43,48,,,,,,,337,,,,,,47,,328,331,,,,340,342,344,348,324,326',
'329,332,334,336,108,,343,345,346,,757,,,54,60,64,73,235,,,,94,99,,,',
'20,,29,38,41,46,55,61,65,,,,,,95,101,105,5,11,18,23,33,,,49,52,58,63',
'70,75,83,84,87,92,98,,6,12,,25,27,36,,,,,68,,76,81,,91,97,104,,9,13',
'19,24,28,37,40,360,22,,32,,43,48,,,,,,,,,,,,,47,325,327,330,333,335',
'338,339,341,,,,,,,,,108,,,,,,,,,54,60,64,73,235,,,,94,99,,,,20,,29,38',
'41,46,55,61,65,,,,,,95,101,105,5,11,18,23,33,,,49,52,58,63,70,75,83',
'84,87,92,98,,6,12,,25,27,36,,,,,68,,76,81,,91,97,104,,9,13,19,24,28',
'37,40,360,22,,32,,43,48,,,,,,,337,,,,,,47,,328,331,,,,340,342,344,348',
'324,326,329,332,334,336,108,,343,345,346,,,,,54,60,64,73,235,,,,94,99',
',,,20,,29,38,41,46,55,61,65,,,,,,95,101,105,5,11,18,23,33,,,49,52,58',
'63,70,75,83,84,87,92,98,,6,12,,25,27,36,,,,,68,,76,81,,91,97,104,,9',
'13,19,24,28,37,40,360,22,,32,,43,48,,,,,,,,,,,,,47,325,327,330,333,335',
'338,339,341,,,,,,,,,108,,,,,,,,,54,60,64,73,235,,,,94,99,,,,20,,29,38',
'41,46,55,61,65,,,,,,95,101,105,5,11,18,23,33,,,49,52,58,63,70,75,83',
'84,87,92,98,,6,12,,25,27,36,,,,,68,,76,81,,91,97,104,,9,13,19,24,28',
'37,40,360,22,,32,,43,48,,,,,,,337,,,,,,47,,328,331,,,,340,342,344,348',
'324,326,329,332,334,336,108,,343,345,346,,,,,54,60,64,73,235,,,,94,99',
',,,20,,29,38,41,46,55,61,65,,,,,,95,101,105,5,11,18,23,33,,,49,52,58',
'63,70,75,83,84,87,92,98,,6,12,,25,27,36,,,,,68,,76,81,,91,97,104,,9',
'13,19,24,28,37,40,360,22,,32,,43,48,,,,,,,,,,,,,47,325,327,330,333,335',
'338,339,341,,,,,,,,,108,,,,,,,,,54,60,64,73,235,,,,94,99,,,,20,,29,38',
'41,46,55,61,65,,,,,,95,101,105,5,11,18,23,33,,,49,52,58,63,70,75,83',
'84,87,92,98,,6,12,,25,27,36,,,,,68,,76,81,,91,97,104,,9,13,19,24,28',
'37,40,360,22,,32,,43,48,,,,,,,337,,,,,,47,,328,331,,,,340,342,344,348',
'324,326,329,332,334,336,108,,343,345,346,,,,,54,60,64,73,235,,,,94,99',
',,,20,,29,38,41,46,55,61,65,,,,,,95,101,105,5,11,18,23,33,,,49,52,58',
'63,70,75,83,84,87,92,98,,6,12,,25,27,36,,,,,68,,76,81,,91,97,104,,9',
'13,19,24,28,37,40,360,22,,32,,43,48,,,,,,,,,,,,,47,325,327,330,333,335',
'338,339,341,,,,,,,,,108,,,,,,,,,54,60,64,73,235,,,,94,99,,,,20,,29,38',
'41,46,55,61,65,,,,,,95,101,105,5,11,18,23,33,,,49,52,58,63,70,75,83',
'84,87,92,98,,6,12,,25,27,36,,,,,68,,76,81,,91,97,104,,9,13,19,24,28',
'37,40,360,22,,32,,43,48,,,,,,,337,,,,,,47,,328,331,,,,340,342,344,348',
'324,326,329,332,334,336,108,,343,345,346,,,,,54,60,64,73,235,,,,94,99',
',,,20,,29,38,41,46,55,61,65,,,,,,95,101,105,5,11,18,23,33,,,49,52,58',
'63,70,75,83,84,87,92,98,,6,12,,25,27,36,,,,,68,,366,81,,91,97,104,,9',
'13,19,24,28,37,40,360,22,,32,,43,48,,,,,,,,,,,,,47,325,327,330,333,335',
'338,339,341,,,,,,,,,108,,,,,,,,,54,60,64,73,235,,,,94,99,,,,20,,29,38',
'41,46,55,61,65,,,,,,95,101,105,5,11,18,23,33,,,49,52,58,63,70,75,83',
'84,87,92,98,,6,12,,25,27,36,,,,,68,,76,81,,91,97,104,,9,13,19,24,28',
'37,40,360,22,,32,,43,48,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,,108,,,,,,,,,54',
'60,64,73,235,,,,94,99,,,,20,,29,38,41,46,55,61,65,,,,,,95,101,105,5',
'11,18,23,33,,,49,52,58,63,70,75,83,84,87,92,98,,6,12,,25,27,36,,,,,68',
',76,81,,91,97,104,,9,13,19,24,28,37,40,,,,,126,,134,139,,146,,,,,,173',
'176,,,47,186,113,117,123,131,136,140,143,147,153,,,,,,,,,,187,114,118',
',,,,,,155,158,161,164,167,171,175,178,179,182,188,115,119,124,128,132',
'137,141,144,150,159,162,166,169,,,,180,183,185,245,246,247,248,135,',
',,249,250,251,165,254,174,,,257,,,,,,,,,,148,154,,,,,360,22,,32,184',
'43,48,,,,,,,,,,,,,,,,,,189,116,120,125,129,133,138,142,145,151,,,108',
',,,,,,,,54,60,64,73,235,,,,94,99,,,,20,,29,38,41,46,55,61,65,,,,,,95',
'101,105,5,11,18,23,33,,,49,52,58,63,70,75,83,84,87,92,98,,6,12,,25,27',
'36,,,,,68,,76,81,,91,97,104,,9,13,19,24,28,37,40,360,22,,32,,43,48,',
',,,,,,,,,,,47,,,,,,,,,,,,,,,,,108,,,,,,,,,54,60,64,73,235,,,,94,99,',
',,20,,29,38,41,46,55,61,65,,,,,,95,101,105,5,11,18,23,33,,,49,52,58',
'63,70,75,83,84,87,92,98,,6,12,,25,27,36,,,,,68,,76,81,,91,97,104,,9',
'13,19,24,28,37,40,,,,,126,,134,139,,146,,,,,,173,176,,,47,186,113,117',
'123,131,136,140,143,147,153,,,,,,,,,,187,114,118,,,,,,,155,158,161,164',
'167,171,175,178,179,182,188,115,119,124,128,132,137,141,144,150,159',
'162,166,169,,,,180,183,185,245,246,247,248,135,,,,249,250,251,165,254',
'174,294,,257,,,,,,,,,,148,154,,,,,360,22,,32,184,43,48,13,,,,,,,,,,',
',,,,,,189,116,120,125,129,133,138,142,145,151,,,108,,,,,,,,,54,60,64',
'73,235,,,,94,99,,,,20,,29,38,41,46,55,61,65,,,,,,95,101,105,5,11,18',
'23,33,,,49,52,58,63,70,75,83,84,87,92,98,,6,12,,25,27,36,,,,,68,,76',
'81,,91,97,104,,9,13,19,24,28,37,40,,,,,126,,134,139,,146,,,,,,173,176',
',,47,186,113,117,123,131,136,140,143,147,153,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,586,485,,,587,,,,,,,,,,148,154',
',,,,360,22,,32,184,43,48,,,,,,,,,,,,,,,,,,189,116,120,125,129,133,138',
'142,145,151,,,108,,,,,,,,,54,60,64,73,235,,,,94,99,,,,20,,29,38,41,46',
'55,61,65,,,,,,95,101,105,5,11,18,23,33,,,49,52,58,63,70,75,83,84,87',
'92,98,,6,12,,25,27,36,,,,,68,,76,81,,91,97,104,,9,13,19,24,28,37,40',
',,,,126,,134,139,,146,,,,,,173,176,,,47,186,113,117,123,131,136,140',
'143,147,153,,,,,,,,,,187,114,118,,,,,,,155,158,161,164,167,171,175,178',
'179,182,188,115,119,124,128,132,137,141,144,150,159,162,166,169,,,,180',
'183,185,245,246,247,248,135,,,,249,250,251,165,254,174,,,257,,,,,,,',
',,148,154,,126,,134,139,,146,,184,,,13,173,176,,,,186,113,117,123,131',
'136,140,143,147,153,,189,116,120,125,129,133,138,142,145,151,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,586,485,,,587,,,,,,,,,,148',
'154,,,,,360,22,,32,184,43,48,,,,,,,,,,,,,,,,,,189,116,120,125,129,133',
'138,142,145,151,,,108,,,,,,,,,54,60,64,73,235,,,,94,99,,,,20,,29,38',
'41,46,55,61,65,,,,,,95,101,105,5,11,18,23,33,,,49,52,58,63,70,75,83',
'84,87,92,98,,6,12,,25,27,36,,,,,68,,76,81,,91,97,104,,9,13,19,24,28',
'37,40,360,22,,32,,43,48,,,,,,,337,,,,,,47,,328,331,,,,340,342,344,348',
'324,326,329,332,334,336,108,,343,345,346,,,,,54,60,64,73,235,,,,94,99',
',,,20,,29,38,41,46,55,61,65,,,,,,95,101,105,5,11,18,23,33,,,49,52,58',
'63,70,75,83,84,87,92,98,,6,12,,25,27,36,,,,,68,,76,81,,91,97,104,,9',
'13,19,24,28,37,40,360,22,,32,,43,48,,,,,,,,,,,,,47,325,327,330,333,335',
'338,339,341,,,,,,,,,108,,,,,,,,,54,60,64,73,235,,,,94,99,,,,20,,29,38',
'41,46,55,61,65,,,,,,95,101,105,5,11,18,23,33,,,49,52,58,63,70,75,83',
'84,87,92,98,,6,12,,25,27,36,,,,,68,,76,81,,91,97,104,,9,13,19,24,28',
'37,40,360,22,,32,,43,48,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,,108,,,,,,,,,54',
'60,64,73,235,,,,94,99,,,,20,,29,38,41,46,55,61,65,,,,,,95,101,105,5',
'11,18,23,33,,,49,52,58,63,70,75,83,84,87,92,98,,6,12,,25,27,36,,,,,68',
',76,81,,91,97,104,,9,13,19,24,28,37,40,,,,,126,,134,139,,146,,,,,,173',
'176,,,47,186,113,117,123,131,136,140,143,147,153,,,,,,,,,,187,114,118',
',,,,,,155,158,161,164,167,171,175,178,179,182,188,115,119,124,128,132',
'137,141,144,150,159,162,166,169,,,,180,183,185,245,246,247,248,135,',
',,249,250,251,165,254,174,255,256,257,258,,,,,,,,,148,154,,,,,360,22',
',32,184,43,48,,,,,,,,,,,,,,,,,,189,116,120,125,129,133,138,142,145,151',
',,108,,,,,,,,,54,60,64,73,235,,,,94,99,,,,20,,29,38,41,46,55,61,65,',
',,,,95,101,105,5,11,18,23,33,,,49,52,58,63,70,75,83,84,87,92,98,,6,12',
',25,27,36,,,,,68,,366,81,,91,97,104,,9,13,19,24,28,37,40,360,22,,32',
',43,48,,,,,,,337,,,,,,47,,328,331,,,,340,342,344,348,324,326,329,332',
'334,336,108,,343,345,346,,,,,54,60,64,73,235,,,,94,99,,,,20,,29,38,41',
'46,55,61,65,,,,,,95,101,105,5,11,18,23,33,,,49,52,58,63,70,75,83,84',
'87,92,98,,6,12,,25,27,36,,,,,68,,76,81,,91,97,104,,9,13,19,24,28,37',
'40,360,22,,32,,43,48,,,,,,,,,,,,,47,325,327,330,333,335,338,339,341',
',,,,,,,,108,,,,,,,,,54,60,64,73,235,,,,94,99,,,,20,,29,38,41,46,55,61',
'65,,,,,,95,101,105,5,11,18,23,33,,,49,52,58,63,70,75,83,84,87,92,98',
',6,12,,25,27,36,,,,,68,,76,81,,91,97,104,,9,13,19,24,28,37,40,17,22',
',32,,43,48,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,,108,,,,,,,,,54,60,64,73,78',
',,,94,99,,,,20,,29,38,41,46,55,61,65,,,,,,95,101,105,5,11,18,23,33,',
',49,52,58,63,70,75,83,84,87,92,98,,6,12,,25,27,36,,,,,68,,76,81,,91',
'97,104,,9,13,19,24,28,37,40,,,,,126,,134,139,,146,,,,,,173,176,,,47',
'186,113,117,123,131,136,140,143,147,153,,,,,,,,,,187,114,118,,,,,,,155',
'158,161,164,167,171,175,178,179,182,188,115,119,124,128,132,137,141',
'144,150,159,162,166,169,,,,180,183,185,245,246,247,248,135,,,,249,250',
'251,165,254,174,,,257,,,,,,,,,,148,154,,,,,360,22,,32,184,43,48,13,',
',,,,,,,,,,,,,,,189,116,120,125,129,133,138,142,145,151,,,108,,,,,,,',
',54,60,64,73,235,,,,94,99,,,,20,,29,38,41,46,55,61,65,,,,,,95,101,105',
'5,11,18,23,33,,,49,52,58,63,70,75,83,84,87,92,98,,6,12,,25,27,36,,,',
',68,,76,81,,91,97,104,,9,13,19,24,28,37,40,360,22,,32,,43,48,,,,,,,337',
',,,,,47,,328,331,,,,340,342,344,348,-539,-539,-539,-539,-539,-539,108',
',,,,,,,,54,60,64,73,235,,,,94,99,,,,20,,29,38,41,46,55,61,65,,,,,,95',
'101,105,5,11,18,23,33,,,49,52,58,63,70,75,83,84,87,92,98,,6,12,,25,27',
'36,,,,,68,,76,81,,91,97,104,,9,13,19,24,28,37,40,360,22,,32,,43,48,',
',,,,,,,,,,,47,325,327,330,333,335,338,339,341,,,,,,,,,108,,,,,,,,,54',
'60,64,73,235,,,,94,99,,,,20,,29,38,41,46,55,61,65,,,,,,95,101,105,5',
'11,18,23,33,,,49,52,58,63,70,75,83,84,87,92,98,,6,12,,25,27,36,,,,,68',
',76,81,,91,97,104,,9,13,19,24,28,37,40,360,22,,32,,43,48,,,,,,,337,',
',,,,47,,328,331,,,,340,342,344,348,324,326,329,332,334,336,108,,343',
'345,346,,,,,54,60,64,73,235,,,,94,99,,,,20,,29,38,41,46,55,61,65,,,',
',,95,101,105,5,11,18,23,33,,,49,52,58,63,70,75,83,84,87,92,98,,6,12',
',25,27,36,,,,,68,,76,81,,91,97,104,,9,13,19,24,28,37,40,360,22,,32,',
'43,48,,,,,,,,,,,,,47,325,327,330,333,335,338,339,341,,,,,,,,,108,,,',
',,,,,54,60,64,73,235,,,,94,99,,,,20,,29,38,41,46,55,61,65,,,,,,95,101',
'105,5,11,18,23,33,,,49,52,58,63,70,75,83,84,87,92,98,,6,12,,25,27,36',
',,,,68,,76,81,,91,97,104,,9,13,19,24,28,37,40,360,22,,32,,43,48,,,,',
',,337,,,,,,47,,328,331,,,,340,342,344,348,324,326,329,332,334,336,108',
',343,345,346,,,,,54,60,64,73,235,,,,94,99,,,,20,,29,38,41,46,55,61,65',
',,,,,95,101,105,5,11,18,23,33,,,49,52,58,63,70,75,83,84,87,92,98,,6',
'12,,25,27,36,,,,,68,,76,81,,91,97,104,,9,13,19,24,28,37,40,218,,32,',
'43,48,,,,,,,,,,,,,,47,325,327,330,333,335,338,339,341,,,,,,,,243,,,',
',,,,,54,60,64,,235,,,,94,99,,,,20,,29,38,41,225,226,61,65,,,,,,238,286',
'288,5,11,18,23,,,,,52,58,63,70,75,83,84,87,92,98,,6,12,,25,27,36,,,',
',230,,234,81,,91,97,,,9,13,19,24,28,37,40,218,,32,,43,48,,,,,,,337,',
',,,,,47,328,331,,,,340,342,344,348,-539,-539,-539,-539,-539,-539,243',
',,,,,,,,54,60,64,,235,,,,94,99,,,,20,,29,38,41,225,226,61,65,,,,,,238',
'286,288,5,11,18,23,,,,,52,58,63,70,75,83,84,87,92,98,,6,12,,25,27,36',
',,,,230,,234,81,,91,97,,,9,13,19,24,28,37,40,218,,32,,43,48,,,,,,,,',
',,,,,47,325,327,330,333,335,338,339,341,,,,,,,,243,,,,,,,,,54,60,64',
',235,,,,94,99,,,,20,,29,38,41,225,226,61,65,,,,,,238,286,288,5,11,18',
'23,,,,,52,58,63,70,75,83,84,87,92,98,,6,12,,25,27,36,,,,,230,,234,81',
',91,97,,,9,13,19,24,28,37,40,218,,32,,43,48,,,,,,,337,,,,,,,47,328,331',
',,,340,342,344,348,324,326,329,332,334,336,243,,-539,-539,,,,,,54,60',
'64,,235,,,,94,99,,,,20,,29,38,41,225,226,61,65,,,,,,238,286,288,5,11',
'18,23,,,,,52,58,63,70,75,83,84,87,92,98,,6,12,,25,27,36,,,,,230,,234',
'81,,91,97,,,9,13,19,24,28,37,40,22,,32,,43,48,,,,,,,,,,,,,,47,325,327',
'330,333,335,338,339,341,,,,,,,,108,,,,,,,,,54,60,64,,235,,,,94,99,,',
',20,,29,38,41,46,55,61,65,,,,,,95,101,105,5,11,18,23,,,,,52,58,63,70',
'75,83,84,87,92,98,,6,12,,25,27,36,,,,,230,,234,81,,91,97,,,9,13,19,24',
'28,37,40,218,,32,,43,48,,,,,,,337,,,,,,,47,328,331,,,,340,342,344,348',
'-539,-539,-539,-539,-539,-539,243,,,,,,,,,54,60,64,,235,,,,94,99,,,',
'20,,29,38,41,225,226,61,65,,,,,,238,286,288,5,11,18,23,,,,,52,58,63',
'70,75,83,84,87,92,98,,6,12,,25,27,36,,,,,230,,234,81,,91,97,,,9,13,19',
'24,28,37,40,22,,32,,43,48,,,,,,,,,,,,,,47,325,327,330,333,335,338,339',
'341,,,,,,,,108,,,,,,,,,54,60,64,,235,,,,94,99,,,,20,,29,38,41,46,55',
'61,65,,,,,,95,101,105,5,11,18,23,,,,,52,58,63,70,75,83,84,87,92,98,',
'6,12,,25,27,36,,,,,230,,234,81,,91,97,,,9,13,19,24,28,37,40,218,,32',
',43,48,,,,,,,337,,,,,,,47,328,331,,,,340,342,344,348,324,326,329,332',
'334,336,243,,343,345,346,,,,,54,60,64,,235,,,,94,99,,,,20,,29,38,41',
'225,226,61,65,,,,,,238,101,105,5,11,18,23,,,,,52,58,63,70,75,83,84,87',
'92,98,242,6,12,,25,27,36,,,,,230,,234,81,,91,97,241,244,9,13,19,24,28',
'37,40,218,,32,,43,48,,,,,,,,,,,,,,47,325,327,330,333,335,338,339,341',
',,,,,,,243,,,,,,,,,54,60,64,,235,,,,94,99,,,,20,,29,38,41,225,226,61',
'65,,,,,,238,286,288,5,11,18,23,,,,,52,58,63,70,75,83,84,87,92,98,,6',
'12,,25,27,36,,,,,230,,234,81,,91,97,,,9,13,19,24,28,37,40,218,,32,,43',
'48,,,,,,,337,,,,,,,47,328,331,,,,340,342,344,348,324,326,329,332,334',
'336,243,,343,345,346,,,,,54,60,64,,235,,,,94,99,,,,20,,29,38,41,225',
'226,61,65,,,,,,238,286,288,5,11,18,23,,,,,52,58,63,70,75,83,84,87,92',
'98,,6,12,,25,27,36,,,,,230,,234,81,,91,97,241,,9,13,19,24,28,37,40,218',
',32,,43,48,,,,,,,,,,,,,,47,325,327,330,333,335,338,339,341,,,,,,,,243',
',,,,,,,,54,60,64,,235,,,,94,99,,,,20,,29,38,41,46,55,61,65,,,,,,95,101',
'105,5,11,18,23,,,,,52,58,63,70,75,83,84,87,92,98,,6,12,,25,27,36,,,',
',230,,234,81,,91,97,,,9,13,19,24,28,37,40,218,,32,,43,48,,,,,,,337,',
',,,,,47,328,331,,,,340,342,344,348,-539,-539,-539,-539,-539,-539,243',
',,,,,,,,54,60,64,,235,,,,94,99,,,,20,,29,38,41,225,226,61,65,,,,,,238',
'286,288,5,11,18,23,,,,,52,58,63,70,75,83,84,87,92,98,,6,12,,25,27,36',
',,,,230,,234,81,,91,97,,,9,13,19,24,28,37,40,218,,32,,43,48,,,,,,,,',
',,,,,47,325,327,330,333,335,338,339,341,,,,,,,,243,,,,,,,,,54,60,64',
',235,,,,94,99,,,,20,,29,38,41,225,226,61,65,,,,,,238,286,288,5,11,18',
'23,,,,,52,58,63,70,75,83,84,87,92,98,,6,12,,25,27,36,,,,,230,,234,81',
',91,97,849,,9,13,19,24,28,37,40,218,,32,,43,48,,,,,,,337,,,,,,,47,328',
'331,,,,340,342,344,348,324,326,329,332,334,336,243,,343,345,346,,,,',
'54,60,64,,235,,,,94,99,,,,20,,29,38,41,225,226,61,65,,,,,,238,286,288',
'5,11,18,23,,,,,52,58,63,70,75,83,84,87,92,98,242,6,12,,25,27,36,,,,',
'230,,234,81,,91,97,,,9,13,19,24,28,37,40,218,,32,,43,48,,,,,,,,,,,,',
',47,325,327,330,333,335,338,339,341,,,,,,,,243,,,,,,,,,54,60,64,,235',
',,,94,99,,,,20,,29,38,41,225,226,61,65,,,,,,238,101,105,5,11,18,23,',
',,,52,58,63,70,75,83,84,87,92,98,242,6,12,,25,27,36,,,,,230,,234,81',
',91,97,241,244,9,13,19,24,28,37,40,218,,32,,43,48,,,,,,,337,,,,,,,47',
'328,331,,,,340,342,344,348,324,326,329,332,334,336,243,,343,345,346',
',,,,54,60,64,,235,,,,94,99,,,,20,,29,38,41,225,226,61,65,,,,,,238,101',
'105,5,11,18,23,,,,,52,58,63,70,75,83,84,87,92,98,242,6,12,,25,27,36',
',,,,230,,234,81,,91,97,241,244,9,13,19,24,28,37,40,218,,32,,43,48,,',
',,,,,,,,,,,47,325,327,330,333,335,338,339,341,,,,,,,,243,,,,,,,,,54',
'60,64,,235,,,,94,99,,,,20,,29,38,41,225,226,61,65,,,,,,238,101,105,5',
'11,18,23,,,,,52,58,63,70,75,83,84,87,92,98,242,6,12,,25,27,36,,,,,230',
',234,81,,91,97,241,244,9,13,19,24,28,37,40,218,,32,,43,48,,,,,,,337',
',,,,,,47,328,331,,,,340,342,344,348,324,326,329,332,334,336,243,,343',
'345,346,,,,,54,60,64,,235,,,,94,99,,,,20,,29,38,41,225,226,61,65,,,',
',,238,101,105,5,11,18,23,,,,,52,58,63,70,75,83,84,87,92,98,242,6,12',
',25,27,36,,,,,230,,234,81,,91,97,241,244,9,13,19,24,28,37,40,22,,32',
',43,48,,,,,,,,,,,,,,47,325,327,330,333,335,338,339,341,,,,,,,,108,,',
',,,,,,54,60,64,,235,,,,94,99,,,,20,,29,38,41,46,55,61,65,,,,,,95,101',
'105,5,11,18,23,,,,,52,58,63,70,75,83,84,87,92,98,,6,12,,25,27,36,,,',
',230,,234,81,,91,97,,,9,13,19,24,28,37,40,22,,32,,43,48,,,,,,,337,,',
',,,,47,328,331,,,,340,342,344,348,324,326,329,332,334,336,108,,343,345',
'346,,,,,54,60,64,,235,,,,94,99,,,,20,,29,38,41,46,55,61,65,,,,,,95,101',
'105,5,11,18,23,,,,,52,58,63,70,75,83,84,87,92,98,,6,12,,25,27,36,,,',
',230,,234,81,,91,97,,,9,13,19,24,28,37,40,218,,32,,43,48,,,,,,,,,,,',
',,47,325,327,330,333,335,338,339,341,,,,,,,,243,,,,,,,,,54,60,64,,235',
',,,94,99,,,,20,,29,38,41,225,226,61,65,,,,,,238,286,288,5,11,18,23,',
',,,52,58,63,70,75,83,84,87,92,98,,6,12,,25,27,36,,,,,230,,234,81,,91',
'97,,,9,13,19,24,28,37,40,22,,32,,43,48,,,,,,,337,,,,,,,47,328,331,,',
',340,342,344,348,324,326,329,332,334,336,108,,343,345,346,,,,,54,60',
'64,,235,,,,94,99,,,,20,,29,38,41,46,55,61,65,,,,,,95,101,105,5,11,18',
'23,,,,,52,58,63,70,75,83,84,87,92,98,,6,12,,25,27,36,,,,,230,,234,81',
',91,97,,,9,13,19,24,28,37,40,218,,32,,43,48,,,,,,,,,,,,,,47,325,327',
'330,333,335,338,339,341,,,,,,,,243,,,,,,,,,54,60,64,,235,,,,94,99,,',
',20,,29,38,41,225,226,61,65,,,,,,238,286,288,5,11,18,23,,,,,52,58,63',
'70,75,83,84,87,92,98,,6,12,,25,27,36,,,,,230,,234,81,,91,97,,,9,13,19',
'24,28,37,40,218,,32,,43,48,,,,,,,337,,,,,,,47,328,331,,,,340,342,344',
'348,324,326,329,332,334,336,243,,343,345,346,,,,,54,60,64,,235,,,,94',
'99,,,,20,,29,38,41,225,226,61,65,,,,,,238,286,288,5,11,18,23,,,,,52',
'58,63,70,75,83,84,87,92,98,,6,12,,25,27,36,,,,,230,,234,81,,91,97,,',
'9,13,19,24,28,37,40,218,,32,,43,48,,,,,,,,,,,,,,47,325,327,330,333,335',
'338,339,341,,,,,,,,243,,,,,,,,,54,60,64,,235,,,,94,99,,,,20,,29,38,41',
'225,226,61,65,,,,,,238,101,105,5,11,18,23,,,,,52,58,63,70,75,83,84,87',
'92,98,242,6,12,,25,27,36,,,,,230,,234,81,,91,97,241,244,9,13,19,24,28',
'37,40,218,,32,,43,48,,,,,,,337,,,,,,,47,328,331,,,,340,342,344,348,324',
'326,329,332,334,336,243,,343,345,346,,,,,54,60,64,,235,,,,94,99,,,,20',
',29,38,41,225,226,61,65,,,,,,238,286,288,5,11,18,23,,,,,52,58,63,70',
'75,83,84,87,92,98,,6,12,,25,27,36,,,,,230,,234,81,,91,97,,,9,13,19,24',
'28,37,40,218,,32,,43,48,,,,,,,,,,,,,,47,325,327,330,333,335,338,339',
'341,,,,,,,,243,,,,,,,,,54,60,64,,235,,,,94,99,,,,20,,29,38,41,225,226',
'61,65,,,,,,238,286,288,5,11,18,23,,,,,52,58,63,70,75,83,84,87,92,98',
',6,12,,25,27,36,,,,,230,,234,81,,91,97,,,9,13,19,24,28,37,40,22,,32',
',43,48,,,,,,,337,,,,,,,47,328,331,,,,340,342,344,348,324,326,329,332',
'334,336,108,,-539,-539,,,,,,54,60,64,,235,,,,94,99,,,,20,,29,38,41,46',
'55,61,65,,,,,,95,101,105,5,11,18,23,,,,,52,58,63,70,75,83,84,87,92,98',
',6,12,,25,27,36,,,,,230,,234,81,,91,97,,,9,13,19,24,28,37,40,218,,32',
',43,48,,,,,,,,,,,,,,47,325,327,330,333,335,338,339,341,,,,,,,,243,,',
',,,,,,54,60,64,,235,,,,94,99,,,,20,,29,38,41,225,226,61,65,,,,,,238',
'101,105,5,11,18,23,,,,,52,58,63,70,75,83,84,87,92,98,242,6,12,,25,27',
'36,,,,,230,,234,81,,91,97,241,244,9,13,19,24,28,37,40,218,,32,,43,48',
',,,,,,337,,,,,,,47,328,331,,,,340,342,344,348,324,326,329,332,334,336',
'243,,343,345,346,,632,,,54,60,64,,235,,,,94,99,,,,20,,29,38,41,225,226',
'61,65,,,,,,238,101,105,5,11,18,23,,,,,52,58,63,70,75,83,84,87,92,98',
'242,6,12,,25,27,36,,,,,230,,234,81,,91,97,241,244,9,13,19,24,28,37,40',
'22,,32,,43,48,,,,,,,,,,,,,,47,325,327,330,333,335,338,339,341,,,,,,',
',108,,,,,,,,,54,60,64,,235,,,,94,99,,,,20,,29,38,41,46,55,61,65,,,,',
',95,101,105,5,11,18,23,,,,,52,58,63,70,75,83,84,87,92,98,,6,12,,25,27',
'36,,,,,230,,234,81,,91,97,,,9,13,19,24,28,37,40,218,,32,,43,48,,,,,',
',337,,,,,,,47,328,331,,,,340,342,344,348,324,326,329,332,334,336,243',
',343,345,346,,,,,54,60,64,,235,,,,94,99,,,,20,,29,38,41,225,226,61,65',
',,,,,238,286,288,5,11,18,23,,,,,52,58,63,70,75,83,84,87,92,98,242,6',
'12,,25,27,36,,,,,230,,234,81,,91,97,,244,9,13,19,24,28,37,40,218,,32',
',43,48,,,,,,,,,,,,,,47,325,327,330,333,335,338,339,341,,,,,,,,243,,',
',,,,,,54,60,64,,235,,,,94,99,,,,20,,29,38,41,225,226,61,65,,,,,,238',
'286,288,5,11,18,23,,,,,52,58,63,70,75,83,84,87,92,98,,6,12,,25,27,36',
',,,,230,,234,81,,91,97,,,9,13,19,24,28,37,40,218,,32,,43,48,,,,,,,,',
',,,,,47,,,,,,,,,,,,,,,,243,,,,,,,,,54,60,64,,235,,,,94,99,,,,20,,29',
'38,41,225,226,61,65,,,,,,238,286,288,5,11,18,23,,,,,52,58,63,70,75,83',
'84,87,92,98,242,6,12,,25,27,36,,,,,230,,234,81,,91,97,667,244,9,13,19',
'24,28,37,40,22,,32,,43,48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,108,,,,,,,',
',54,60,64,,235,,,,94,99,,,,20,,29,38,41,46,55,61,65,,,,,,95,101,105',
'5,11,18,23,,,,,52,58,63,70,75,83,84,87,92,98,,6,12,,25,27,36,,,,,230',
',234,81,,91,97,,,9,13,19,24,28,37,40,218,,32,,43,48,,,,,,,,,,,,,,47',
',,,,,,,,,,,,,,,243,,,,,,,,,54,60,64,,235,,,,94,99,,,,20,,29,38,41,46',
'55,61,65,,,,,,95,101,105,5,11,18,23,,,,,52,58,63,70,75,83,84,87,92,98',
',6,12,,25,27,36,,,,,230,,234,81,,91,97,,,9,13,19,24,28,37,40,218,,32',
',43,48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,243,,,,,,,,,54,60,64,,235,,,,94',
'99,,,,20,,29,38,41,225,226,61,65,,,,,,238,101,105,5,11,18,23,,,,,52',
'58,63,70,75,83,84,87,92,98,242,6,12,,25,27,36,,,,,230,,234,81,,91,97',
'241,244,9,13,19,24,28,37,40,218,,32,,43,48,,,,,,,,,,,,,,47,,,,,,,,,',
',,,,,,243,,,,,,,,,54,60,64,,235,,,,94,99,,,,20,,29,38,41,225,226,61',
'65,,,,,,238,286,288,5,11,18,23,,,,,52,58,63,70,75,83,84,87,92,98,,6',
'12,,25,27,36,,,,,230,,234,81,,91,97,,,9,13,19,24,28,37,40,218,,32,,43',
'48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,243,,,,,,,,,54,60,64,,235,,,,94,99',
',,,20,,29,38,41,225,226,61,65,,,,,,238,286,288,5,11,18,23,,,,,52,58',
'63,70,75,83,84,87,92,98,,6,12,,25,27,36,,,,,230,,234,81,,91,97,,,9,13',
'19,24,28,37,40,218,,32,,43,48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,243,,,',
',,,,,54,60,64,,235,,,,94,99,,,,20,,29,38,41,225,226,61,65,,,,,,238,286',
'288,5,11,18,23,,,,,52,58,63,70,75,83,84,87,92,98,,6,12,,25,27,36,,,',
',230,,234,81,,91,97,,,9,13,19,24,28,37,40,218,,32,,43,48,,,,,,,,,,,',
',,47,,,,,,,,,,,,,,,,243,,,,,,,,,54,60,64,,235,,,,94,99,,,,20,,29,38',
'41,225,226,61,65,,,,,,238,286,288,5,11,18,23,,,,,52,58,63,70,75,83,84',
'87,92,98,,6,12,,25,27,36,,,,,230,,234,81,,91,97,,,9,13,19,24,28,37,40',
'218,,32,,43,48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,243,,,,,,,,,54,60,64,',
'235,,,,94,99,,,,20,,29,38,41,225,226,61,65,,,,,,238,286,288,5,11,18',
'23,,,,,52,58,63,70,75,83,84,87,92,98,,6,12,,25,27,36,,,,,230,,234,81',
',91,97,,,9,13,19,24,28,37,40,218,,32,,43,48,,,,,,,,,,,,,,47,,,,,,,,',
',,,,,,,243,,,,,,,,,54,60,64,,235,,,,94,99,,,,20,,29,38,41,225,226,61',
'65,,,,,,238,286,288,5,11,18,23,,,,,52,58,63,70,75,83,84,87,92,98,,6',
'12,,25,27,36,,,,,230,,234,81,,91,97,,,9,13,19,24,28,37,40,218,,32,,43',
'48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,243,,,,,,,,,54,60,64,,235,,,,94,99',
',,,20,,29,38,41,225,226,61,65,,,,,,238,101,105,5,11,18,23,,,,,52,58',
'63,70,75,83,84,87,92,98,242,6,12,,25,27,36,,,,,230,,234,81,,91,97,241',
'244,9,13,19,24,28,37,40,218,,32,,43,48,,,,,,,,,,,,,,47,,,,,,,,,,,,,',
',,243,,,,,,,,,54,60,64,,235,,,,94,99,,,,20,,29,38,41,225,226,61,65,',
',,,,238,286,288,5,11,18,23,,,,,52,58,63,70,75,83,84,87,92,98,242,6,12',
',25,27,36,,,,,230,,234,81,,91,97,667,,9,13,19,24,28,37,40,218,,32,,43',
'48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,243,,,,,,,,,54,60,64,,235,,,,94,99',
',,,20,,29,38,41,225,226,61,65,,,,,,238,286,288,5,11,18,23,,,,,52,58',
'63,70,75,83,84,87,92,98,,6,12,,25,27,36,,,,,230,,234,81,,91,97,,,9,13',
'19,24,28,37,40,218,,32,,43,48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,243,,,',
',,,,,54,60,64,,235,,,,94,99,,,,20,,29,38,41,225,226,61,65,,,,,,238,286',
'288,5,11,18,23,,,,,52,58,63,70,75,83,84,87,92,98,,6,12,,25,27,36,,,',
',230,,234,81,,91,97,,,9,13,19,24,28,37,40,218,,32,,43,48,,,,,,,,,,,',
',,47,,,,,,,,,,,,,,,,243,,,,,,,,,54,60,64,,235,,,,94,99,,,,20,,29,38',
'41,225,226,61,65,,,,,,238,286,288,5,11,18,23,,,,,52,58,63,70,75,83,84',
'87,92,98,242,6,12,,25,27,36,,,,,230,,234,81,,91,97,,,9,13,19,24,28,37',
'40,218,,32,,43,48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,243,,,,,,,,,54,60,64',
',235,,,,94,99,,,,20,,29,38,41,225,226,61,65,,,,,,238,286,288,5,11,18',
'23,,,,,52,58,63,70,75,83,84,87,92,98,,6,12,,25,27,36,,,,,230,,234,81',
',91,97,,,9,13,19,24,28,37,40,218,,32,,43,48,,,,,,,,,,,,,,47,,,,,,,,',
',,,,,,,243,,,,,,,,,54,60,64,,235,,,,94,99,,,,20,,29,38,41,225,226,61',
'65,,,,,,238,286,288,5,11,18,23,,,,,52,58,63,70,75,83,84,87,92,98,,6',
'12,,25,27,36,,,,,230,,234,81,,91,97,612,,9,13,19,24,28,37,40,22,,32',
',43,48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,108,,,,,,,,,54,60,64,,235,,,,94',
'99,,,,20,,29,38,41,46,55,61,65,,,,,,95,101,105,5,11,18,23,,,,,52,58',
'63,70,75,83,84,87,92,98,,6,12,,25,27,36,,,,,230,,234,81,,91,97,,,9,13',
'19,24,28,37,40,22,,32,,43,48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,108,,,,',
',,,,54,60,64,,235,,,,94,99,,,,20,,29,38,41,46,55,61,65,,,,,,95,101,105',
'5,11,18,23,,,,,52,58,63,70,75,83,84,87,92,98,,6,12,,25,27,36,,,,,230',
',234,81,,91,97,,,9,13,19,24,28,37,40,218,,32,,43,48,,,,,,,,,,,,,,47',
',,,,,,,,,,,,,,,243,,,,,,,,,54,60,64,,235,,,,94,99,,,,20,,29,38,41,46',
'55,61,65,,,,,,95,101,105,5,11,18,23,,,,,52,58,63,70,75,83,84,87,92,98',
',6,12,,25,27,36,,,,,230,,234,81,,91,97,612,,9,13,19,24,28,37,40,218',
',32,,43,48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,243,,,,,,,,,54,60,64,,235',
',,,94,99,,,,20,,29,38,41,225,226,61,65,,,,,,238,286,288,5,11,18,23,',
',,,52,58,63,70,75,83,84,87,92,98,,6,12,,25,27,36,,,,,230,,234,81,,91',
'97,,,9,13,19,24,28,37,40,218,,32,,43,48,,,,,,,,,,,,,,47,,,,,,,,,,,,',
',,,243,,,,,,,,,54,60,64,,235,,,,94,99,,,,20,,29,38,41,46,55,61,65,,',
',,,95,101,105,5,11,18,23,,,,,52,58,63,70,75,83,84,87,92,98,,6,12,,25',
'27,36,,,,,230,,234,81,,91,97,,,9,13,19,24,28,37,40,218,,32,,43,48,,',
',,,,,,,,,,,47,,,,,,,,,,,,,,,,243,,,,,,,,,54,60,64,,235,,,,94,99,,,,20',
',29,38,41,46,55,61,65,,,,,,95,101,105,5,11,18,23,,,,,52,58,63,70,75',
'83,84,87,92,98,,6,12,,25,27,36,,,,,230,,234,81,,91,97,612,,9,13,19,24',
'28,37,40,22,,32,,43,48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,108,,,,,,,,,54',
'60,64,,235,,,,94,99,,,,20,,29,38,41,46,55,61,65,,,,,,95,101,105,5,11',
'18,23,,,,,52,58,63,70,75,83,84,87,92,98,,6,12,,25,27,36,,,,,230,,234',
'81,,91,97,,,9,13,19,24,28,37,40,218,,32,,43,48,,,,,,,,,,,,,,47,,,,,',
',,,,,,,,,,243,,,,,,,,,54,60,64,,235,,,,94,99,,,,20,,29,38,41,225,226',
'61,65,,,,,,238,286,288,5,11,18,23,,,,,52,58,63,70,75,83,84,87,92,98',
',6,12,,25,27,36,,,,,230,,234,81,,91,97,,,9,13,19,24,28,37,40,218,,32',
',43,48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,243,,,,,,,,,54,60,64,,235,,,,94',
'99,,,,20,,29,38,41,46,55,61,65,,,,,,95,101,105,5,11,18,23,,,,,52,58',
'63,70,75,83,84,87,92,98,,6,12,,25,27,36,,,,,230,,234,81,,91,97,,,9,13',
'19,24,28,37,40,22,,32,,43,48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,108,,,,',
',,,,54,60,64,73,235,,,,94,99,,,,20,,29,38,41,46,55,61,65,,,,,,95,101',
'105,5,11,18,23,33,,,49,52,58,63,70,75,83,84,87,92,98,,6,12,,25,27,36',
',,,,68,,76,81,,91,97,104,,9,13,19,24,28,37,40,22,,32,,43,48,,,,,,,,',
',,,,,47,,,,,,,,,,,,,,,,108,,,,,,,,,54,60,64,,235,,,,94,99,,,,20,,29',
'38,41,46,55,61,65,,,,,,95,101,105,5,11,18,23,,,,,52,58,63,70,75,83,84',
'87,92,98,,6,12,,25,27,36,,,,,230,,234,81,,91,97,,,9,13,19,24,28,37,40',
'22,,32,,43,48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,108,,,,,,,,,54,60,64,,235',
',,,94,99,,,,20,,29,38,41,46,55,61,65,,,,,,95,101,105,5,11,18,23,,,,',
'52,58,63,70,75,83,84,87,92,98,,6,12,,25,27,36,,,,,230,,234,81,,91,97',
',,9,13,19,24,28,37,40,22,,32,,43,48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,108',
',,,,,,,,54,60,64,,235,,,,94,99,,,,20,,29,38,41,46,55,61,65,,,,,,95,101',
'105,5,11,18,23,,,,,52,58,63,70,75,83,84,87,92,98,,6,12,,25,27,36,,,',
',230,,234,81,,91,97,,,9,13,19,24,28,37,40,22,,32,,43,48,,,,,,,,,,,,',
',47,,,,,,,,,,,,,,,,108,,,,,,,,,54,60,64,,235,,,,94,99,,,,20,,29,38,41',
'46,55,61,65,,,,,,95,101,105,5,11,18,23,,,,,52,58,63,70,75,83,84,87,92',
'98,,6,12,,25,27,36,,,,,230,,234,81,,91,97,,,9,13,19,24,28,37,40,22,',
'32,,43,48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,108,,,,,,,,,54,60,64,73,78',
',,,94,99,,,,20,,29,38,41,46,55,61,65,,,,,,95,101,105,5,11,18,23,33,',
',49,52,58,63,70,75,83,84,87,92,98,,6,12,,25,27,36,,,,,68,,76,81,,91',
'97,104,,9,13,19,24,28,37,40,218,,32,,43,48,,,,,,,,,,,,,,47,,,,,,,,,',
',,,,,,243,,,,,,,,,54,60,64,,235,,,,94,99,,,,20,,29,38,41,225,226,61',
'65,,,,,,238,286,288,5,11,18,23,,,,,52,58,63,70,75,83,84,87,92,98,,6',
'12,,25,27,36,,,,,230,,234,81,,91,97,,,9,13,19,24,28,37,40,218,,32,,43',
'48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,243,,,,,,,,,54,60,64,,235,,,,94,99',
',,,20,,29,38,41,46,55,61,65,,,,,,95,101,105,5,11,18,23,,,,,52,58,63',
'70,75,83,84,87,92,98,,6,12,,25,27,36,,,,,230,,234,81,,91,97,,,9,13,19',
'24,28,37,40,22,,32,,43,48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,108,,,,,,,',
',54,60,64,,235,,,,94,99,,,,20,,29,38,41,46,55,61,65,,,,,,95,101,105',
'5,11,18,23,,,,,52,58,63,70,75,83,84,87,92,98,,6,12,,25,27,36,,,,,230',
',234,81,,91,97,,,9,13,19,24,28,37,40,22,,32,,43,48,,,,,,,,,,,,,,47,',
',,,,,,,,,,,,,,108,,,,,,,,,54,60,64,,235,,,,94,99,,,,20,,29,38,41,46',
'55,61,65,,,,,,95,101,105,5,11,18,23,,,,,52,58,63,70,75,83,84,87,92,98',
',6,12,,25,27,36,,,,,230,,234,81,,91,97,,,9,13,19,24,28,37,40,22,,32',
',43,48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,108,,,,,,,,,54,60,64,,235,,,,94',
'99,,,,20,,29,38,41,46,55,61,65,,,,,,95,101,105,5,11,18,23,,,,,52,58',
'63,70,75,83,84,87,92,98,,6,12,,25,27,36,,,,,230,,234,81,,91,97,,,9,13',
'19,24,28,37,40,218,,32,,43,48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,243,,,',
',,,,,54,60,64,,235,,,,94,99,,,,20,,29,38,41,46,55,61,65,,,,,,95,101',
'105,5,11,18,23,,,,,52,58,63,70,75,83,84,87,92,98,,6,12,,25,27,36,,,',
',230,,234,81,,91,97,,,9,13,19,24,28,37,40,218,,32,,43,48,,,,,,,,,,,',
',,47,,,,,,,,,,,,,,,,243,,,,,,,,,54,60,64,,235,,,,94,99,,,,20,,29,38',
'41,225,226,61,65,,,,,,238,286,288,5,11,18,23,,,,,52,58,63,70,75,83,84',
'87,92,98,,6,12,,25,27,36,,,,,230,,234,81,,91,97,,,9,13,19,24,28,37,40',
'218,,32,,43,48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,243,,,,,,,,,54,60,64,',
'235,,,,94,99,,,,20,,29,38,41,225,226,61,65,,,,,,238,286,288,5,11,18',
'23,,,,,52,58,63,70,75,83,84,87,92,98,,6,12,,25,27,36,,,,,230,,234,81',
',91,97,,,9,13,19,24,28,37,40,22,,32,,43,48,,,,,,,,,,,,,,47,,,,,,,,,',
',,,,,,108,,,,,,,,,54,60,64,73,235,,,,94,99,,,,20,,29,38,41,46,55,61',
'65,,,,,,95,101,105,5,11,18,23,33,,,49,52,58,63,70,75,83,84,87,92,98',
',6,12,,25,27,36,,,,,68,,76,81,,91,97,104,,9,13,19,24,28,37,40,218,,32',
',43,48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,243,,,,,,,,,54,60,64,,235,,,,94',
'99,,,,20,,29,38,41,225,226,61,65,,,,,,238,286,288,5,11,18,23,,,,,52',
'58,63,70,75,83,84,87,92,98,,6,12,,25,27,36,,,,,230,,234,81,,91,97,,',
'9,13,19,24,28,37,40,218,,32,,43,48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,243',
',,,,,,,,54,60,64,,235,,,,94,99,,,,20,,29,38,41,225,226,61,65,,,,,,238',
'286,288,5,11,18,23,,,,,52,58,63,70,75,83,84,87,92,98,,6,12,,25,27,36',
',,,,230,,234,81,,91,97,,,9,13,19,24,28,37,40,218,,32,,43,48,,,,,,,,',
',,,,,47,,,,,,,,,,,,,,,,243,,,,,,,,,54,60,64,,235,,,,94,99,,,,20,,29',
'38,41,225,226,61,65,,,,,,238,286,288,5,11,18,23,,,,,52,58,63,70,75,83',
'84,87,92,98,,6,12,,25,27,36,,,,,230,,234,81,,91,97,,,9,13,19,24,28,37',
'40,218,,32,,43,48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,243,,,,,,,,,54,60,64',
',235,,,,94,99,,,,20,,29,38,41,225,226,61,65,,,,,,238,286,288,5,11,18',
'23,,,,,52,58,63,70,75,83,84,87,92,98,,6,12,,25,27,36,,,,,230,,234,81',
',91,97,,,9,13,19,24,28,37,40,218,,32,,43,48,,,,,,,,,,,,,,47,,,,,,,,',
',,,,,,,243,,,,,,,,,54,60,64,,235,,,,94,99,,,,20,,29,38,41,225,226,61',
'65,,,,,,238,286,288,5,11,18,23,,,,,52,58,63,70,75,83,84,87,92,98,,6',
'12,,25,27,36,,,,,230,,234,81,,91,97,,,9,13,19,24,28,37,40,218,,32,,43',
'48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,243,,,,,,,,,54,60,64,,235,,,,94,99',
',,,20,,29,38,41,225,226,61,65,,,,,,238,286,288,5,11,18,23,,,,,52,58',
'63,70,75,83,84,87,92,98,,6,12,,25,27,36,,,,,230,,234,81,,91,97,,,9,13',
'19,24,28,37,40,218,,32,,43,48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,243,,,',
',,,,,54,60,64,,235,,,,94,99,,,,20,,29,38,41,225,226,61,65,,,,,,238,286',
'288,5,11,18,23,,,,,52,58,63,70,75,83,84,87,92,98,,6,12,,25,27,36,,,',
',230,,234,81,,91,97,,,9,13,19,24,28,37,40,218,,32,,43,48,,,,,,,,,,,',
',,47,,,,,,,,,,,,,,,,243,,,,,,,,,54,60,64,,235,,,,94,99,,,,20,,29,38',
'41,225,226,61,65,,,,,,238,286,288,5,11,18,23,,,,,52,58,63,70,75,83,84',
'87,92,98,,6,12,,25,27,36,,,,,230,,234,81,,91,97,,,9,13,19,24,28,37,40',
'218,,32,,43,48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,243,,,,,,,,,54,60,64,',
'235,,,,94,99,,,,20,,29,38,41,225,226,61,65,,,,,,238,286,288,5,11,18',
'23,,,,,52,58,63,70,75,83,84,87,92,98,,6,12,,25,27,36,,,,,230,,234,81',
',91,97,,,9,13,19,24,28,37,40,218,,32,,43,48,,,,,,,,,,,,,,47,,,,,,,,',
',,,,,,,243,,,,,,,,,54,60,64,,235,,,,94,99,,,,20,,29,38,41,225,226,61',
'65,,,,,,238,286,288,5,11,18,23,,,,,52,58,63,70,75,83,84,87,92,98,,6',
'12,,25,27,36,,,,,230,,234,81,,91,97,,,9,13,19,24,28,37,40,218,,32,,43',
'48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,243,,,,,,,,,54,60,64,,235,,,,94,99',
',,,20,,29,38,41,225,226,61,65,,,,,,238,286,288,5,11,18,23,,,,,52,58',
'63,70,75,83,84,87,92,98,,6,12,,25,27,36,,,,,230,,234,81,,91,97,,,9,13',
'19,24,28,37,40,218,,32,,43,48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,243,,,',
',,,,,54,60,64,,235,,,,94,99,,,,20,,29,38,41,225,226,61,65,,,,,,238,286',
'288,5,11,18,23,,,,,52,58,63,70,75,83,84,87,92,98,,6,12,,25,27,36,,,',
',230,,234,81,,91,97,,,9,13,19,24,28,37,40,218,,32,,43,48,,,,,,,,,,,',
',,47,,,,,,,,,,,,,,,,243,,,,,,,,,54,60,64,,235,,,,94,99,,,,20,,29,38',
'41,225,226,61,65,,,,,,238,286,288,5,11,18,23,,,,,52,58,63,70,75,83,84',
'87,92,98,,6,12,,25,27,36,,,,,230,,234,81,,91,97,,,9,13,19,24,28,37,40',
'218,,32,,43,48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,243,,,,,,,,,54,60,64,',
'235,,,,94,99,,,,20,,29,38,41,225,226,61,65,,,,,,238,286,288,5,11,18',
'23,,,,,52,58,63,70,75,83,84,87,92,98,,6,12,,25,27,36,,,,,230,,234,81',
',91,97,,,9,13,19,24,28,37,40,218,,32,,43,48,,,,,,,,,,,,,,47,,,,,,,,',
',,,,,,,243,,,,,,,,,54,60,64,,235,,,,94,99,,,,20,,29,38,41,225,226,61',
'65,,,,,,238,286,288,5,11,18,23,,,,,52,58,63,70,75,83,84,87,92,98,,6',
'12,,25,27,36,,,,,230,,234,81,,91,97,,,9,13,19,24,28,37,40,218,,32,,43',
'48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,243,,,,,,,,,54,60,64,,235,,,,94,99',
',,,20,,29,38,41,225,226,61,65,,,,,,238,286,288,5,11,18,23,,,,,52,58',
'63,70,75,83,84,87,92,98,,6,12,,25,27,36,,,,,230,,234,81,,91,97,,,9,13',
'19,24,28,37,40,218,,32,,43,48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,243,,,',
',,,,,54,60,64,,235,,,,94,99,,,,20,,29,38,41,225,226,61,65,,,,,,238,286',
'288,5,11,18,23,,,,,52,58,63,70,75,83,84,87,92,98,,6,12,,25,27,36,,,',
',230,,234,81,,91,97,,,9,13,19,24,28,37,40,218,,32,,43,48,,,,,,,,,,,',
',,47,,,,,,,,,,,,,,,,243,,,,,,,,,54,60,64,,235,,,,94,99,,,,20,,29,38',
'41,225,226,61,65,,,,,,238,286,288,5,11,18,23,,,,,52,58,63,70,75,83,84',
'87,92,98,,6,12,,25,27,36,,,,,230,,234,81,,91,97,,,9,13,19,24,28,37,40',
'218,,32,,43,48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,243,,,,,,,,,54,60,64,',
'235,,,,94,99,,,,20,,29,38,41,225,226,61,65,,,,,,238,286,288,5,11,18',
'23,,,,,52,58,63,70,75,83,84,87,92,98,,6,12,,25,27,36,,,,,230,,234,81',
',91,97,,,9,13,19,24,28,37,40,218,,32,,43,48,,,,,,,,,,,,,,47,,,,,,,,',
',,,,,,,243,,,,,,,,,54,60,64,,235,,,,94,99,,,,20,,29,38,41,225,226,61',
'65,,,,,,238,286,288,5,11,18,23,,,,,52,58,63,70,75,83,84,87,92,98,,6',
'12,,25,27,36,,,,,230,,234,81,,91,97,,,9,13,19,24,28,37,40,218,,32,,43',
'48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,243,,,,,,,,,54,60,64,,235,,,,94,99',
',,,20,,29,38,41,225,226,61,65,,,,,,238,286,288,5,11,18,23,,,,,52,58',
'63,70,75,83,84,87,92,98,,6,12,,25,27,36,,,,,230,,234,81,,91,97,,,9,13',
'19,24,28,37,40,218,,32,,43,48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,243,,,',
',,,,,54,60,64,,235,,,,94,99,,,,20,,29,38,41,225,226,61,65,,,,,,238,286',
'288,5,11,18,23,,,,,52,58,63,70,75,83,84,87,92,98,,6,12,,25,27,36,,,',
',230,,234,81,,91,97,,,9,13,19,24,28,37,40,218,,32,,43,48,,,,,,,,,,,',
',,47,,,,,,,,,,,,,,,,243,,,,,,,,,54,60,64,,235,,,,94,99,,,,20,,29,38',
'41,225,226,61,65,,,,,,238,286,288,5,11,18,23,,,,,52,58,63,70,75,83,84',
'87,92,98,,6,12,,25,27,36,,,,,230,,234,81,,91,97,,,9,13,19,24,28,37,40',
'218,,32,,43,48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,243,,,,,,,,,54,60,64,',
'235,,,,94,99,,,,20,,29,38,41,225,226,61,65,,,,,,238,286,288,5,11,18',
'23,,,,,52,58,63,70,75,83,84,87,92,98,,6,12,,25,27,36,,,,,230,,234,81',
',91,97,667,,9,13,19,24,28,37,40,218,,32,,43,48,,,,,,,,,,,,,,47,,,,,',
',,,,,,,,,,243,,,,,,,,,54,60,64,,235,,,,94,99,,,,20,,29,38,41,225,226',
'61,65,,,,,,238,286,288,5,11,18,23,,,,,52,58,63,70,75,83,84,87,92,98',
',6,12,,25,27,36,,,,,230,,234,81,,91,97,,,9,13,19,24,28,37,40,218,,32',
',43,48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,243,,,,,,,,,54,60,64,,235,,,,94',
'99,,,,20,,29,38,41,46,55,61,65,,,,,,95,101,105,5,11,18,23,,,,,52,58',
'63,70,75,83,84,87,92,98,,6,12,,25,27,36,,,,,230,,234,81,,91,97,,,9,13',
'19,24,28,37,40,218,,32,,43,48,,,,,,,,,,,,,,47,,,,,,,,,,,,,,,,243,,,',
',,,,,54,60,64,,235,,,,94,99,,,,20,,29,38,41,225,226,61,65,,,,,,238,286',
'288,5,11,18,23,,,,,52,58,63,70,75,83,84,87,92,98,,6,12,,25,27,36,,,',
',230,,234,81,,91,97,,,9,13,19,24,28,37,40,218,,32,,43,48,,,,,,,,,,,',
',,47,,,,,,,,,,,,,,,,243,,,,,,,,,54,60,64,,235,,,,94,99,,,,20,,29,38',
'41,225,226,61,65,,,,,,238,286,288,5,11,18,23,,,,,52,58,63,70,75,83,84',
'87,92,98,242,6,12,,25,27,36,,,,,230,,234,81,,91,97,241,,9,13,19,24,28',
'37,40,,,,,,,,337,,,,,,,,328,331,,,47,340,342,344,348,324,326,329,332',
'334,336,-227,-229,343,345,346,337,,,,,,,,328,331,,,,340,342,344,348',
'324,326,329,332,334,336,-227,-229,343,345,346,337,,,,,,,,328,331,,,',
'340,342,344,348,324,326,329,332,334,336,-227,-229,337,,,,,,,,328,331',
',,,340,342,344,348,324,326,329,332,334,336,,,343,345,346,,757,,,,,,',
',,,,,,,,,,325,327,330,333,335,338,339,341,,,,,,,,,,,,,,,,,,,,,325,327',
'330,333,335,338,339,341,,,,,,,,,,,,,,,,,,,,,325,327,330,333,335,338',
'339,341,,,,,,,,,,,,,,,,,-234,325,327,330,333,335,338,339,341,337,,,',
',,,,328,331,,,,340,342,344,348,324,326,329,332,334,336,-227,-229,343',
'345,346,337,,,,,,,,328,331,,,,340,342,344,348,324,326,329,332,334,336',
'-227,-229,343,345,346,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,280,,,,325,327,330,333,335,338,339,341,,,,,,,,',
',,,,,,,,,,,243,325,327,330,333,335,338,339,341,54,60,64,,235,,,,94,99',
',,,20,,29,38,41,225,226,61,65,,,,,,238,286,288,5,11,18,23,,280,,,52',
'58,63,283,75,83,84,87,92,98,,6,12,,25,27,36,,,,,282,,234,81,,91,97,243',
',9,13,19,24,28,37,40,54,60,64,,235,,,,94,99,506,,,20,,29,38,41,225,226',
'61,65,,,,,,238,286,288,5,11,18,23,,,,,52,58,63,283,75,83,84,87,92,98',
'280,6,12,,25,27,36,384,,,,282,,234,81,,91,97,,,9,13,19,24,28,37,40,',
',,,243,,,,,,401,,,54,60,64,,235,,,,94,99,,,,20,,29,38,41,225,226,61',
'65,,,,,,238,286,288,5,11,18,23,,280,,,52,58,63,283,383,83,84,87,385',
'98,,6,12,,25,27,36,,,,,381,,234,81,,91,97,243,,9,13,19,24,28,37,40,54',
'60,64,,235,,,,94,99,,,,20,,29,38,41,225,226,61,65,,,,,,238,286,288,5',
'11,18,23,,280,,,52,58,63,283,75,83,84,87,92,98,,6,12,,25,27,36,,,,,282',
',284,81,,91,97,243,,9,13,19,24,28,37,40,54,60,64,,235,,,,94,99,,,,20',
',29,38,41,225,226,61,65,,,,,,238,286,288,5,11,18,23,,280,,,52,58,63',
'283,383,83,84,87,385,98,,6,12,,25,27,36,,,,,381,,234,81,,91,97,243,',
'9,13,19,24,28,37,40,54,60,64,,235,,,,94,99,,,,20,,29,38,41,225,226,61',
'65,,,,,,238,286,288,5,11,18,23,,280,,,52,58,63,283,75,83,84,87,92,98',
',6,12,,25,27,36,,,,,282,,284,81,,91,97,243,,9,13,19,24,28,37,40,54,60',
'64,,235,,,,94,99,,,,20,,29,38,41,225,226,61,65,,,,,,238,286,288,5,11',
'18,23,,280,,,52,58,63,283,75,83,84,87,92,98,,6,12,,25,27,36,,,,,282',
',284,81,,91,97,243,,9,13,19,24,28,37,40,54,60,64,,235,,,,94,99,,,,20',
',29,38,41,225,226,61,65,,,,,,238,286,288,5,11,18,23,,,280,,52,58,63',
'283,75,83,84,87,92,98,,6,12,,25,27,36,,,,,370,,76,81,,91,97,104,243',
'9,13,19,24,28,37,40,,54,60,64,,235,,,,94,99,,,,20,,29,38,41,225,226',
'61,65,,,,,,238,286,288,5,11,18,23,,280,,,52,58,63,283,75,83,84,87,92',
'98,,6,12,,25,27,36,,,,,894,,234,81,,91,97,243,,9,13,19,24,28,37,40,54',
'60,64,,235,,,,94,99,,,,20,,29,38,41,225,226,61,65,,,,,,238,286,288,5',
'11,18,23,,,280,,52,58,63,283,75,83,84,87,92,98,,6,12,,25,27,36,,,,,282',
',284,81,,91,97,287,243,9,13,19,24,28,37,40,,54,60,64,,235,,,,94,99,',
',,20,,29,38,41,225,226,61,65,,,,,,238,286,288,5,11,18,23,,280,,,52,58',
'63,283,75,83,84,87,92,98,,6,12,,25,27,36,,,,,282,,284,81,,91,97,243',
',9,13,19,24,28,37,40,54,60,64,,235,,,,94,99,,,,20,,29,38,41,225,226',
'61,65,,,,,,238,286,288,5,11,18,23,,280,,,52,58,63,283,75,83,84,87,92',
'98,,6,12,,25,27,36,,,,,282,,284,81,,91,97,243,,9,13,19,24,28,37,40,54',
'60,64,,235,,,,94,99,,,,20,,29,38,41,225,226,61,65,,,,,,238,286,288,5',
'11,18,23,,,,,52,58,63,283,75,83,84,87,92,98,,6,12,,25,27,36,,,,,871',
',234,81,,91,97,,,9,13,19,24,28,37,40' ]
        racc_action_table = arr = Array.new(22077, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'479,78,236,374,374,479,630,630,21,198,600,600,736,479,479,706,413,413',
'479,479,479,479,479,479,479,479,479,479,479,479,479,479,479,1,479,479',
'479,233,479,479,479,479,479,479,680,382,487,487,706,476,671,479,479',
'479,476,727,727,479,479,369,479,198,476,476,382,679,21,476,476,476,476',
'476,476,476,476,476,476,476,476,476,476,476,381,476,476,476,381,476',
'476,476,476,476,476,692,354,356,464,484,484,693,476,476,476,678,479',
'236,476,476,736,476,676,706,374,663,663,630,315,600,476,600,675,671',
'369,706,718,413,208,706,479,479,479,479,479,479,479,479,479,479,479',
'479,233,562,487,479,700,479,78,479,78,562,562,208,674,476,562,562,562',
'562,562,562,562,562,562,562,727,562,562,562,562,562,322,322,208,191',
'544,737,476,476,476,476,476,476,476,476,476,476,476,476,476,382,83,382',
'476,484,476,83,476,354,356,464,949,728,740,83,83,315,673,315,83,83,83',
'83,83,83,83,83,83,83,83,83,83,83,83,83,83,365,298,365,83,83,83,83,83',
'83,83,694,694,157,737,703,276,83,83,83,191,704,83,83,83,737,83,718,718',
'718,718,718,718,718,718,83,83,83,83,157,665,740,322,320,562,562,562',
'562,562,562,562,562,728,30,30,57,57,662,662,562,127,939,841,273,321',
'949,728,949,728,717,83,71,83,71,276,71,71,544,544,544,544,544,544,544',
'544,664,127,273,273,276,83,298,273,298,83,83,83,83,83,83,83,83,83,83',
'83,83,71,694,738,83,83,83,368,83,122,71,71,71,320,71,320,882,936,71',
'71,841,853,707,71,742,71,71,71,71,71,71,71,940,893,321,122,321,71,71',
'71,71,71,71,71,30,939,57,939,71,71,71,71,71,71,71,71,71,71,661,71,71',
'710,71,71,71,658,738,747,655,71,368,71,71,741,71,71,583,738,71,71,71',
'71,71,71,71,396,313,396,121,396,396,717,717,717,717,717,717,717,717',
'742,112,742,747,936,71,882,936,882,936,71,853,71,853,547,121,130,389',
'170,394,755,396,940,893,940,893,747,112,747,747,396,396,396,389,396',
'394,755,741,396,396,583,747,130,396,170,396,396,396,396,396,396,396',
'281,683,281,85,294,396,396,396,396,396,396,396,181,294,294,303,396,396',
'396,396,396,396,396,396,396,396,396,396,396,85,396,396,396,152,89,281',
'89,396,181,396,396,303,396,396,396,396,396,396,396,396,396,396,396,406',
'553,406,720,406,406,152,281,281,313,313,313,313,313,313,313,313,387',
'108,396,826,160,721,108,870,783,396,783,783,783,783,783,14,387,14,406',
'547,547,547,547,547,547,547,547,406,406,406,160,406,870,870,722,406',
'406,72,826,72,406,654,406,406,406,406,406,406,406,652,886,783,886,725',
'406,406,406,406,406,406,406,826,651,826,826,406,406,406,406,406,406',
'406,406,406,406,646,406,406,644,406,406,406,797,797,701,517,406,730',
'406,406,731,406,406,220,220,406,406,406,406,406,406,406,578,596,578',
'596,578,578,732,517,517,553,553,553,553,553,553,553,553,701,642,406',
'470,470,641,470,367,753,406,753,556,470,470,353,517,353,705,578,556',
'556,640,414,701,414,701,701,578,578,578,578,578,367,367,637,578,578',
'937,701,739,578,636,578,578,578,578,578,578,578,631,705,456,456,626',
'578,578,578,578,578,578,578,578,937,937,578,578,578,578,578,578,578',
'578,578,578,578,937,578,578,624,578,578,578,712,712,702,621,578,750',
'578,578,278,578,578,578,752,578,578,578,578,578,578,578,263,564,263',
'616,263,263,277,702,702,564,564,705,607,278,278,280,280,560,579,578',
'702,297,297,705,578,560,560,705,575,749,574,277,277,228,228,263,556',
'556,556,556,556,556,556,556,263,263,263,263,263,935,935,758,263,263',
'749,749,761,263,763,263,263,263,263,263,263,263,569,749,51,51,766,263',
'263,263,263,263,263,263,263,43,43,263,263,263,263,263,263,263,263,263',
'263,263,767,263,263,568,263,263,263,530,522,299,515,263,505,263,263',
'504,263,263,263,100,263,263,263,263,263,263,263,350,503,350,785,350',
'350,299,299,299,564,564,564,564,564,564,564,564,100,100,263,483,453',
'794,441,263,560,560,560,560,560,560,560,560,558,657,350,657,657,657',
'657,435,558,558,289,350,350,350,433,350,432,431,803,350,350,15,430,418',
'350,400,350,350,350,350,350,350,350,813,399,289,289,398,350,350,350',
'350,350,350,350,395,15,15,392,350,350,350,350,350,350,350,350,350,350',
'386,350,350,371,350,350,350,827,370,829,831,350,364,350,350,269,350',
'350,361,359,350,350,350,350,350,350,350,383,358,383,352,846,385,922',
'385,922,922,848,922,269,269,269,351,347,922,922,350,323,350,922,922',
'922,922,922,922,922,922,922,922,305,304,868,383,868,868,868,868,385',
'558,558,558,558,558,558,558,558,859,860,457,861,457,457,457,457,457',
'383,862,383,383,502,385,925,385,385,302,864,217,457,300,866,383,867',
'457,457,595,385,809,288,809,809,809,809,809,378,502,502,925,925,286',
'922,922,217,217,922,457,809,283,457,871,595,595,809,873,922,922,457',
'874,876,378,378,540,877,659,922,659,878,659,659,540,540,282,279,809',
'540,540,540,540,540,540,540,540,540,540,922,922,922,922,922,922,922',
'922,922,922,922,243,659,659,659,434,240,434,434,434,434,434,253,659',
'659,659,888,659,890,239,230,659,659,224,892,894,659,221,659,659,659',
'659,659,659,659,219,253,253,253,903,659,659,659,659,659,659,659,215',
'434,892,892,659,659,659,659,659,659,659,659,659,659,659,659,659,211',
'659,659,659,207,202,199,195,659,107,659,659,96,659,659,659,659,659,659',
'659,659,659,659,659,105,70,105,68,105,105,540,540,540,540,540,540,540',
'540,891,926,927,928,929,659,930,659,945,931,945,945,945,945,945,932',
'274,933,934,53,274,105,49,40,938,891,891,945,39,37,105,105,105,945,105',
'7,4,950,105,105,274,274,,105,,105,105,105,105,105,105,105,,,945,,,105',
'105,105,105,105,105,105,,,,,105,105,105,105,105,105,105,105,105,105',
'105,105,105,,105,105,105,,,,,105,,105,105,,105,105,105,105,105,105,105',
'105,105,105,105,489,,489,,489,489,,,,780,,780,780,780,780,780,,,,105',
'863,105,863,863,863,863,863,,780,,,,,780,780,489,,,,863,,,,,489,489',
'489,,489,,,,489,489,,780,,489,780,489,489,489,489,489,489,489,,,,,,489',
'489,489,489,489,489,489,,,,,489,489,489,489,489,489,489,489,489,489',
'489,489,489,,489,489,489,,,,,489,,489,489,,489,489,489,489,489,489,489',
'489,489,489,489,482,,482,,482,482,,,,805,,805,805,805,805,805,,,,489',
'786,489,786,786,786,786,786,,805,,,,,805,805,482,,,,786,,,,,482,482',
'482,,482,,,,482,482,,805,,482,805,482,482,482,482,482,482,482,,,,,,482',
'482,482,482,482,482,482,,,,,482,482,482,482,482,482,482,482,482,482',
'482,482,482,,482,482,482,,,,,482,,482,482,,482,482,482,482,482,482,482',
'482,482,482,482,,,,,,,496,573,496,496,,496,,573,573,573,573,496,496',
'482,,482,496,496,496,496,496,496,496,496,496,496,9,,9,9,9,9,9,,,163',
',163,163,163,163,163,,,,9,,,,44,9,9,,,163,44,44,44,44,163,163,,,,649',
',649,649,649,649,649,,9,,,9,,,,,9,163,,649,163,363,496,496,649,163,496',
'363,363,363,363,,735,,,,496,496,735,735,735,735,,101,,101,496,101,101',
'290,290,290,290,290,290,290,290,,436,,436,436,436,436,436,,496,496,496',
'496,496,496,496,496,496,496,496,436,101,,,,436,,,,,101,101,101,,101',
',,,101,101,,,,101,,101,101,101,101,101,101,101,,,,,,101,101,101,101',
'101,101,101,,,,,101,101,101,101,101,101,101,101,101,101,101,101,101',
',101,101,101,,,,,101,,101,101,,101,101,101,101,101,101,101,101,101,101',
'101,,,,,,,498,,498,498,,498,,,,,,498,498,101,,101,498,498,498,498,498',
'498,498,498,498,498,633,,633,633,633,633,633,807,,807,807,807,807,807',
',,,,,633,,,,,633,633,807,,,,,807,807,416,,416,416,416,416,416,,,,,,',
'633,,,633,,,416,807,633,,807,416,416,,498,498,,,498,,,210,,210,210,210',
'210,210,498,498,,,,416,,542,416,660,498,660,210,660,660,542,542,210',
',,542,542,542,542,542,542,542,542,542,542,498,498,498,498,498,498,498',
'498,498,498,498,,660,660,660,650,,650,650,650,650,650,,660,660,660,',
'660,,,,660,660,,650,,660,,660,660,660,660,660,660,660,,,,,,660,660,660',
'660,660,660,660,,,,,660,660,660,660,660,660,660,660,660,660,660,660',
'660,,660,660,660,,,,,660,,660,660,,660,660,660,660,660,660,660,660,660',
'660,660,478,,478,,478,478,542,542,542,542,542,542,542,542,,,,,,660,',
'660,902,,902,902,902,902,902,,,,,,,478,,,,,,902,,,478,478,478,902,478',
',,,478,478,,,,478,,478,478,478,478,478,478,478,,,902,,,478,478,478,478',
'478,478,478,,,,,478,478,478,478,478,478,478,478,478,478,478,478,478',
',478,478,478,,,,,478,,478,478,,478,478,478,478,478,478,478,478,478,478',
'478,477,,477,,477,477,,,,440,,440,440,440,440,440,,,,478,904,478,904',
'904,904,904,904,,440,,,,,440,440,477,,,,904,,,,,477,477,477,,477,,,',
'477,477,,440,,477,440,477,477,477,477,477,477,477,,,,,,477,477,477,477',
'477,477,477,,,,,477,477,477,477,477,477,477,477,477,477,477,477,477',
',477,477,477,,,,,477,,477,477,,477,477,477,477,477,477,477,477,477,477',
'477,92,,92,,92,92,,,,910,,910,910,910,910,910,,,,477,865,477,865,865',
'865,865,865,,910,,,,,910,910,92,,,,865,,,,,92,92,92,,92,,,,92,92,,910',
',92,910,92,92,92,92,92,92,92,,,,,,92,92,92,92,92,92,92,,,,,92,92,92',
'92,92,92,92,92,92,92,92,92,92,,92,92,92,,,,,92,,92,92,,92,92,92,92,92',
'92,92,92,92,92,92,,,,,,,92,,,,,580,,580,580,,580,,,92,,92,580,580,,',
',580,580,580,580,580,580,580,580,580,580,271,271,271,271,271,271,271',
'271,,,,428,,428,428,428,428,428,,426,,426,426,426,426,426,,,,443,428',
'443,443,,443,,428,,426,,443,443,,426,426,443,443,443,443,443,443,443',
'443,443,443,,,428,,,580,580,,,580,426,,,426,,,,,,580,580,214,,214,214',
'214,214,214,,580,,,,,,,,,,,214,,,,,214,214,,,580,580,580,580,580,580',
'580,580,580,580,580,443,443,,,443,,,214,,,214,,,,443,443,445,,445,445',
',445,,,443,,,445,445,,,,445,445,445,445,445,445,445,445,445,445,,,443',
'443,443,443,443,443,443,443,443,443,443,,,,,790,,790,790,790,790,790',
',,,,,267,,267,267,,267,,790,,,,267,267,790,,,267,267,267,267,267,267',
'267,267,267,267,,,,,,445,445,,790,445,,,,,,,,,,445,445,915,,915,915',
'915,915,915,,445,,,,,,,,,,,915,,,,,,915,,,445,445,445,445,445,445,445',
'445,445,445,445,267,267,,,267,,,915,,,,,,,267,267,,,,,,10,,10,267,10',
'10,,,,,,,,,,,,,,,,,,267,267,267,267,267,267,267,267,267,267,267,,10',
',,,,,,,,10,10,10,,10,,,,10,10,,,,10,,10,10,10,10,10,10,10,,10,,,,10',
'10,10,10,10,10,10,,,,,10,10,10,10,10,10,10,10,10,10,10,10,10,,10,10',
'10,,,,,10,,10,10,,10,10,10,10,10,10,10,10,10,10,10,,,,,,,10,,,,,592',
',592,592,,592,,,10,,10,592,592,,,,592,592,592,592,592,592,592,592,592',
'592,,,,,,,,,,,,912,,912,912,912,912,912,,778,,778,778,778,778,778,,',
',265,912,265,265,,265,,912,,778,,265,265,,,778,265,265,265,265,265,265',
'265,265,265,265,,,912,,,592,592,,,592,778,,,,,,,,,592,592,782,,782,782',
'782,782,782,,592,,,,,,,,,,,782,,,,,,782,,,592,592,592,592,592,592,592',
'592,592,592,592,265,265,,,265,,,782,,,,,,,265,265,507,,507,507,,507',
',,265,,,507,507,,,,507,507,507,507,507,507,507,507,507,507,,,265,265',
'265,265,265,265,265,265,265,265,265,,,,,,,,,,,,,,,,,582,,582,582,,582',
',,,,,582,582,,,,582,582,582,582,582,582,582,582,582,582,,,,,,507,507',
',,507,,,,,,,,,,507,507,,,,,,,,,507,,,,,,,,,,,,,,,,,,,,507,507,507,507',
'507,507,507,507,507,507,507,582,582,,,582,,,,,,,,,,582,582,,,,,726,',
',,582,,,,726,726,,,,726,726,726,726,726,726,726,726,726,726,726,582',
'582,582,582,582,582,582,582,582,582,582,8,,8,8,,8,,,,,,8,8,,,,8,8,8',
'8,8,8,8,8,8,8,,,,,,,,,,8,8,8,,,,,,,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8',
'8,8,8,8,8,8,8,,,,8,8,8,8,8,8,8,8,,,,8,8,8,8,8,8,8,8,8,8,726,726,726',
'726,726,726,726,726,8,8,590,,590,590,,590,,,8,,,590,590,,,,590,590,590',
'590,590,590,590,590,590,590,,,8,8,8,8,8,8,8,8,8,8,8,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,590,590,,,590,,,,,,,,,,590,590,,,,,,589',
',589,590,589,589,,,,,,,,,,,,,,,,,,590,590,590,590,590,590,590,590,590',
'590,590,,589,,,,,,,,,589,589,589,,589,,,,589,589,,,,589,,589,589,589',
'589,589,589,589,,,,,,589,589,589,589,589,589,589,,,,,589,589,589,589',
'589,589,589,589,589,589,589,589,589,,589,589,589,,,,,589,,589,589,,589',
'589,589,589,589,589,589,589,589,589,589,,,,,,,924,,924,924,,924,,,,',
',924,924,589,,589,924,924,924,924,924,924,924,924,924,924,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,907,,907,907,,907,,,,,,907,907,,,,907,907,907,907',
'907,907,907,907,907,907,,,,,,924,924,,,924,,,,,,,,,,924,924,,,,,,,,',
'924,,,,,,,,,,,,,,,,,,,,924,924,924,924,924,924,924,924,924,924,924,907',
'907,,,907,,,,,,,,,,907,907,,,,,,588,,588,907,588,588,,,,,,,,,,,,,,,',
',,907,907,907,907,907,907,907,907,907,907,907,,588,,,,,,,,,588,588,588',
',588,,,,588,588,,,,588,,588,588,588,588,588,588,588,,,,,,588,588,588',
'588,588,588,588,,,,,588,588,588,588,588,588,588,588,588,588,588,588',
'588,,588,588,588,,,,,588,,588,588,,588,588,588,588,588,588,588,588,588',
'588,588,,,,,,,508,,508,508,,508,,,,,,508,508,588,,588,508,508,508,508',
'508,508,508,508,508,508,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,508,508,,,508,,,,,,,,,,508,508,,,,,,75,,75,508,75,75',
',,,,,,,,,,,,,,,,,508,508,508,508,508,508,508,508,508,508,508,,75,,,',
',,,,,75,75,75,,75,,,,75,75,,,,75,,75,75,75,75,75,75,75,,,,,,75,75,75',
'75,75,75,75,,,,,75,75,75,75,75,75,75,75,75,75,75,75,75,,75,75,75,,,',
',75,,75,75,,75,75,75,75,75,75,75,75,75,75,75,,,,,,,75,,,,,73,,73,73',
',73,,,75,,75,73,73,,,,73,73,73,73,73,73,73,73,73,73,,,,,,,,,,73,73,73',
',,,,,,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73',
'73,73,73,,,,73,73,73,73,73,73,73,73,,,,73,73,73,73,73,73,,,73,,,,,,',
',,,73,73,,,,,76,76,,76,73,76,76,73,,,,,,,,,,,,,,,,,73,73,73,73,73,73',
'73,73,73,73,,,76,,,,,,,,,76,76,76,76,76,,,,76,76,,,,76,,76,76,76,76',
'76,76,76,,,,,,76,76,76,76,76,76,76,76,,,76,76,76,76,76,76,76,76,76,76',
'76,,76,76,,76,76,76,,,,,76,,76,76,,76,76,76,,76,76,76,76,76,76,76,469',
'469,,469,,469,469,,,,,,,681,,,,,,76,,681,681,,,,681,681,681,681,681',
'681,681,681,681,681,469,,681,681,681,,681,,,469,469,469,469,469,,,,469',
'469,,,,469,,469,469,469,469,469,469,469,,,,,,469,469,469,469,469,469',
'469,469,,,469,469,469,469,469,469,469,469,469,469,469,,469,469,,469',
'469,469,,,,,469,,469,469,,469,469,469,,469,469,469,469,469,469,469,234',
'234,,234,,234,234,,,,,,,,,,,,,469,681,681,681,681,681,681,681,681,,',
',,,,,,234,,,,,,,,,234,234,234,234,234,,,,234,234,,,,234,,234,234,234',
'234,234,234,234,,,,,,234,234,234,234,234,234,234,234,,,234,234,234,234',
'234,234,234,234,234,234,234,,234,234,,234,234,234,,,,,234,,234,234,',
'234,234,234,,234,234,234,234,234,234,234,462,462,,462,,462,462,,,,,',
',850,,,,,,234,,850,850,,,,850,850,850,850,850,850,850,850,850,850,462',
',850,850,850,,,,,462,462,462,462,462,,,,462,462,,,,462,,462,462,462',
'462,462,462,462,,,,,,462,462,462,462,462,462,462,462,,,462,462,462,462',
'462,462,462,462,462,462,462,,462,462,,462,462,462,,,,,462,,462,462,',
'462,462,462,,462,462,462,462,462,462,462,459,459,,459,,459,459,,,,,',
',,,,,,,462,850,850,850,850,850,850,850,850,,,,,,,,,459,,,,,,,,,459,459',
'459,459,459,,,,459,459,,,,459,,459,459,459,459,459,459,459,,,,,,459',
'459,459,459,459,459,459,459,,,459,459,459,459,459,459,459,459,459,459',
'459,,459,459,,459,459,459,,,,,459,,459,459,,459,459,459,,459,459,459',
'459,459,459,459,597,597,,597,,597,597,,,,,,,494,,,,,,459,,494,494,,',
',494,494,494,494,494,494,494,494,494,494,597,,494,494,494,,,,,597,597',
'597,597,597,,,,597,597,,,,597,,597,597,597,597,597,597,597,,,,,,597',
'597,597,597,597,597,597,597,,,597,597,597,597,597,597,597,597,597,597',
'597,,597,597,,597,597,597,,,,,597,,597,597,,597,597,597,,597,597,597',
'597,597,597,597,422,422,,422,,422,422,,,,,,,,,,,,,597,494,494,494,494',
'494,494,494,494,,,,,,,,,422,,,,,,,,,422,422,422,422,422,,,,422,422,',
',,422,,422,422,422,422,422,422,422,,,,,,422,422,422,422,422,422,422',
'422,,,422,422,422,422,422,422,422,422,422,422,422,,422,422,,422,422',
'422,,,,,422,,422,422,,422,422,422,,422,422,422,422,422,422,422,842,842',
',842,,842,842,,,,,,,771,,,,,,422,,771,771,,,,771,771,771,771,771,771',
'771,771,771,771,842,,771,771,771,,,,,842,842,842,842,842,,,,842,842',
',,,842,,842,842,842,842,842,842,842,,,,,,842,842,842,842,842,842,842',
'842,,,842,842,842,842,842,842,842,842,842,842,842,,842,842,,842,842',
'842,,,,,842,,842,842,,842,842,842,,842,842,842,842,842,842,842,420,420',
',420,,420,420,,,,,,,,,,,,,842,771,771,771,771,771,771,771,771,,,,,,',
',,420,,,,,,,,,420,420,420,420,420,,,,420,420,,,,420,,420,420,420,420',
'420,420,420,,,,,,420,420,420,420,420,420,420,420,,,420,420,420,420,420',
'420,420,420,420,420,420,,420,420,,420,420,420,,,,,420,,420,420,,420',
'420,420,,420,420,420,420,420,420,420,284,284,,284,,284,284,,,,,,,541',
',,,,,420,,541,541,,,,541,541,541,541,541,541,541,541,541,541,284,,541',
'541,541,,,,,284,284,284,284,284,,,,284,284,,,,284,,284,284,284,284,284',
'284,284,,,,,,284,284,284,284,284,284,284,284,,,284,284,284,284,284,284',
'284,284,284,284,284,,284,284,,284,284,284,,,,,284,,284,284,,284,284',
'284,,284,284,284,284,284,284,284,415,415,,415,,415,415,,,,,,,,,,,,,284',
'541,541,541,541,541,541,541,541,,,,,,,,,415,,,,,,,,,415,415,415,415',
'415,,,,415,415,,,,415,,415,415,415,415,415,415,415,,,,,,415,415,415',
'415,415,415,415,415,,,415,415,415,415,415,415,415,415,415,415,415,,415',
'415,,415,415,415,,,,,415,,415,415,,415,415,415,,415,415,415,415,415',
'415,415,754,754,,754,,754,754,,,,,,,,,,,,,415,,,,,,,,,,,,,,,,,754,,',
',,,,,,754,754,754,754,754,,,,754,754,,,,754,,754,754,754,754,754,754',
'754,,,,,,754,754,754,754,754,754,754,754,,,754,754,754,754,754,754,754',
'754,754,754,754,,754,754,,754,754,754,,,,,754,,754,754,,754,754,754',
',754,754,754,754,754,754,754,,,,,411,,411,411,,411,,,,,,411,411,,,754',
'411,411,411,411,411,411,411,411,411,411,,,,,,,,,,411,411,411,,,,,,,411',
'411,411,411,411,411,411,411,411,411,411,411,411,411,411,411,411,411',
'411,411,411,411,411,411,,,,411,411,411,411,411,411,411,411,,,,411,411',
'411,411,411,411,,,411,,,,,,,,,,411,411,,,,,407,407,,407,411,407,407',
',,,,,,,,,,,,,,,,,411,411,411,411,411,411,411,411,411,411,,,407,,,,,',
',,,407,407,407,407,407,,,,407,407,,,,407,,407,407,407,407,407,407,407',
',,,,,407,407,407,407,407,407,407,407,,,407,407,407,407,407,407,407,407',
'407,407,407,,407,407,,407,407,407,,,,,407,,407,407,,407,407,407,,407',
'407,407,407,407,407,407,102,102,,102,,102,102,,,,,,,,,,,,,407,,,,,,',
',,,,,,,,,,102,,,,,,,,,102,102,102,102,102,,,,102,102,,,,102,,102,102',
'102,102,102,102,102,,,,,,102,102,102,102,102,102,102,102,,,102,102,102',
'102,102,102,102,102,102,102,102,,102,102,,102,102,102,,,,,102,,102,102',
',102,102,102,,102,102,102,102,102,102,102,,,,,33,,33,33,,33,,,,,,33',
'33,,,102,33,33,33,33,33,33,33,33,33,33,,,,,,,,,,33,33,33,,,,,,,33,33',
'33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,,',
',33,33,33,33,33,33,33,33,,,,33,33,33,33,33,33,33,,33,,,,,,,,,,33,33',
',,,,856,856,,856,33,856,856,33,,,,,,,,,,,,,,,,,33,33,33,33,33,33,33',
'33,33,33,,,856,,,,,,,,,856,856,856,856,856,,,,856,856,,,,856,,856,856',
'856,856,856,856,856,,,,,,856,856,856,856,856,856,856,856,,,856,856,856',
'856,856,856,856,856,856,856,856,,856,856,,856,856,856,,,,,856,,856,856',
',856,856,856,,856,856,856,856,856,856,856,,,,,376,,376,376,,376,,,,',
',376,376,,,856,376,376,376,376,376,376,376,376,376,376,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,376,376,,,376,,,,,,,',
',,376,376,,,,,772,772,,772,376,772,772,,,,,,,,,,,,,,,,,,376,376,376',
'376,376,376,376,376,376,376,,,772,,,,,,,,,772,772,772,772,772,,,,772',
'772,,,,772,,772,772,772,772,772,772,772,,,,,,772,772,772,772,772,772',
'772,772,,,772,772,772,772,772,772,772,772,772,772,772,,772,772,,772',
'772,772,,,,,772,,772,772,,772,772,772,,772,772,772,772,772,772,772,',
',,,572,,572,572,,572,,,,,,572,572,,,772,572,572,572,572,572,572,572',
'572,572,572,,,,,,,,,,572,572,572,,,,,,,572,572,572,572,572,572,572,572',
'572,572,572,572,572,572,572,572,572,572,572,572,572,572,572,572,,,,572',
'572,572,572,572,572,572,572,,,,572,572,572,572,572,572,,,572,,,,,,,',
',,572,572,,375,,375,375,,375,,572,,,572,375,375,,,,375,375,375,375,375',
'375,375,375,375,375,,572,572,572,572,572,572,572,572,572,572,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,375,375,,,375,,,,,,,,,,375',
'375,,,,,571,571,,571,375,571,571,,,,,,,,,,,,,,,,,,375,375,375,375,375',
'375,375,375,375,375,,,571,,,,,,,,,571,571,571,571,571,,,,571,571,,,',
'571,,571,571,571,571,571,571,571,,,,,,571,571,571,571,571,571,571,571',
',,571,571,571,571,571,571,571,571,571,571,571,,571,571,,571,571,571',
',,,,571,,571,571,,571,571,571,,571,571,571,571,571,571,571,570,570,',
'570,,570,570,,,,,,,543,,,,,,571,,543,543,,,,543,543,543,543,543,543',
'543,543,543,543,570,,543,543,543,,,,,570,570,570,570,570,,,,570,570',
',,,570,,570,570,570,570,570,570,570,,,,,,570,570,570,570,570,570,570',
'570,,,570,570,570,570,570,570,570,570,570,570,570,,570,570,,570,570',
'570,,,,,570,,570,570,,570,570,570,,570,570,570,570,570,570,570,765,765',
',765,,765,765,,,,,,,,,,,,,570,543,543,543,543,543,543,543,543,,,,,,',
',,765,,,,,,,,,765,765,765,765,765,,,,765,765,,,,765,,765,765,765,765',
'765,765,765,,,,,,765,765,765,765,765,765,765,765,,,765,765,765,765,765',
'765,765,765,765,765,765,,765,765,,765,765,765,,,,,765,,765,765,,765',
'765,765,,765,765,765,765,765,765,765,314,314,,314,,314,314,,,,,,,,,',
',,,765,,,,,,,,,,,,,,,,,314,,,,,,,,,314,314,314,314,314,,,,314,314,,',
',314,,314,314,314,314,314,314,314,,,,,,314,314,314,314,314,314,314,314',
',,314,314,314,314,314,314,314,314,314,314,314,,314,314,,314,314,314',
',,,,314,,314,314,,314,314,314,,314,314,314,314,314,314,314,,,,,13,,13',
'13,,13,,,,,,13,13,,,314,13,13,13,13,13,13,13,13,13,13,,,,,,,,,,13,13',
'13,,,,,,,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13',
'13,13,13,13,,,,13,13,13,13,13,13,13,13,,,,13,13,13,13,13,13,13,13,13',
'13,,,,,,,,,13,13,,,,,366,366,,366,13,366,366,,,,,,,,,,,,,,,,,,13,13',
'13,13,13,13,13,13,13,13,,,366,,,,,,,,,366,366,366,366,366,,,,366,366',
',,,366,,366,366,366,366,366,366,366,,,,,,366,366,366,366,366,366,366',
'366,,,366,366,366,366,366,366,366,366,366,366,366,,366,366,,366,366',
'366,,,,,366,,366,366,,366,366,366,,366,366,366,366,366,366,366,836,836',
',836,,836,836,,,,,,,723,,,,,,366,,723,723,,,,723,723,723,723,723,723',
'723,723,723,723,836,,723,723,723,,,,,836,836,836,836,836,,,,836,836',
',,,836,,836,836,836,836,836,836,836,,,,,,836,836,836,836,836,836,836',
'836,,,836,836,836,836,836,836,836,836,836,836,836,,836,836,,836,836',
'836,,,,,836,,836,836,,836,836,836,,836,836,836,836,836,836,836,682,682',
',682,,682,682,,,,,,,,,,,,,836,723,723,723,723,723,723,723,723,,,,,,',
',,682,,,,,,,,,682,682,682,682,682,,,,682,682,,,,682,,682,682,682,682',
'682,682,682,,,,,,682,682,682,682,682,682,682,682,,,682,682,682,682,682',
'682,682,682,682,682,682,,682,682,,682,682,682,,,,,682,,682,682,,682',
'682,682,,682,682,682,682,682,682,682,3,3,,3,,3,3,,,,,,,,,,,,,682,,,',
',,,,,,,,,,,,,3,,,,,,,,,3,3,3,3,3,,,,3,3,,,,3,,3,3,3,3,3,3,3,,,,,,3,3',
'3,3,3,3,3,3,,,3,3,3,3,3,3,3,3,3,3,3,,3,3,,3,3,3,,,,,3,,3,3,,3,3,3,,3',
'3,3,3,3,3,3,,,,,509,,509,509,,509,,,,,,509,509,,,3,509,509,509,509,509',
'509,509,509,509,509,,,,,,,,,,509,509,509,,,,,,,509,509,509,509,509,509',
'509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509',
'509,,,,509,509,509,509,509,509,509,509,,,,509,509,509,509,509,509,,',
'509,,,,,,,,,,509,509,,,,,537,537,,537,509,537,537,509,,,,,,,,,,,,,,',
',,509,509,509,509,509,509,509,509,509,509,,,537,,,,,,,,,537,537,537',
'537,537,,,,537,537,,,,537,,537,537,537,537,537,537,537,,,,,,537,537',
'537,537,537,537,537,537,,,537,537,537,537,537,537,537,537,537,537,537',
',537,537,,537,537,537,,,,,537,,537,537,,537,537,537,,537,537,537,537',
'537,537,537,536,536,,536,,536,536,,,,,,,545,,,,,,537,,545,545,,,,545',
'545,545,545,545,545,545,545,545,545,536,,,,,,,,,536,536,536,536,536',
',,,536,536,,,,536,,536,536,536,536,536,536,536,,,,,,536,536,536,536',
'536,536,536,536,,,536,536,536,536,536,536,536,536,536,536,536,,536,536',
',536,536,536,,,,,536,,536,536,,536,536,536,,536,536,536,536,536,536',
'536,531,531,,531,,531,531,,,,,,,,,,,,,536,545,545,545,545,545,545,545',
'545,,,,,,,,,531,,,,,,,,,531,531,531,531,531,,,,531,531,,,,531,,531,531',
'531,531,531,531,531,,,,,,531,531,531,531,531,531,531,531,,,531,531,531',
'531,531,531,531,531,531,531,531,,531,531,,531,531,531,,,,,531,,531,531',
',531,531,531,,531,531,531,531,531,531,531,917,917,,917,,917,917,,,,',
',,312,,,,,,531,,312,312,,,,312,312,312,312,312,312,312,312,312,312,917',
',312,312,312,,,,,917,917,917,917,917,,,,917,917,,,,917,,917,917,917',
'917,917,917,917,,,,,,917,917,917,917,917,917,917,917,,,917,917,917,917',
'917,917,917,917,917,917,917,,917,917,,917,917,917,,,,,917,,917,917,',
'917,917,917,,917,917,917,917,917,917,917,514,514,,514,,514,514,,,,,',
',,,,,,,917,312,312,312,312,312,312,312,312,,,,,,,,,514,,,,,,,,,514,514',
'514,514,514,,,,514,514,,,,514,,514,514,514,514,514,514,514,,,,,,514',
'514,514,514,514,514,514,514,,,514,514,514,514,514,514,514,514,514,514',
'514,,514,514,,514,514,514,,,,,514,,514,514,,514,514,514,,514,514,514',
'514,514,514,514,896,896,,896,,896,896,,,,,,,546,,,,,,514,,546,546,,',
',546,546,546,546,546,546,546,546,546,546,896,,546,546,546,,,,,896,896',
'896,896,896,,,,896,896,,,,896,,896,896,896,896,896,896,896,,,,,,896',
'896,896,896,896,896,896,896,,,896,896,896,896,896,896,896,896,896,896',
'896,,896,896,,896,896,896,,,,,896,,896,896,,896,896,896,,896,896,896',
'896,896,896,896,523,,523,,523,523,,,,,,,,,,,,,,896,546,546,546,546,546',
'546,546,546,,,,,,,,523,,,,,,,,,523,523,523,,523,,,,523,523,,,,523,,523',
'523,523,523,523,523,523,,,,,,523,523,523,523,523,523,523,,,,,523,523',
'523,523,523,523,523,523,523,523,,523,523,,523,523,523,,,,,523,,523,523',
',523,523,,,523,523,523,523,523,523,523,524,,524,,524,524,,,,,,,548,',
',,,,,523,548,548,,,,548,548,548,548,548,548,548,548,548,548,524,,,,',
',,,,524,524,524,,524,,,,524,524,,,,524,,524,524,524,524,524,524,524',
',,,,,524,524,524,524,524,524,524,,,,,524,524,524,524,524,524,524,524',
'524,524,,524,524,,524,524,524,,,,,524,,524,524,,524,524,,,524,524,524',
'524,524,524,524,538,,538,,538,538,,,,,,,,,,,,,,524,548,548,548,548,548',
'548,548,548,,,,,,,,538,,,,,,,,,538,538,538,,538,,,,538,538,,,,538,,538',
'538,538,538,538,538,538,,,,,,538,538,538,538,538,538,538,,,,,538,538',
'538,538,538,538,538,538,538,538,,538,538,,538,538,538,,,,,538,,538,538',
',538,538,,,538,538,538,538,538,538,538,539,,539,,539,539,,,,,,,559,',
',,,,,538,559,559,,,,559,559,559,559,559,559,559,559,559,559,539,,559',
'559,,,,,,539,539,539,,539,,,,539,539,,,,539,,539,539,539,539,539,539',
'539,,,,,,539,539,539,539,539,539,539,,,,,539,539,539,539,539,539,539',
'539,539,539,,539,539,,539,539,539,,,,,539,,539,539,,539,539,,,539,539',
'539,539,539,539,539,156,,156,,156,156,,,,,,,,,,,,,,539,559,559,559,559',
'559,559,559,559,,,,,,,,156,,,,,,,,,156,156,156,,156,,,,156,156,,,,156',
',156,156,156,156,156,156,156,,,,,,156,156,156,156,156,156,156,,,,,156',
'156,156,156,156,156,156,156,156,156,,156,156,,156,156,156,,,,,156,,156',
'156,,156,156,,,156,156,156,156,156,156,156,563,,563,,563,563,,,,,,,550',
',,,,,,156,550,550,,,,550,550,550,550,550,550,550,550,550,550,563,,,',
',,,,,563,563,563,,563,,,,563,563,,,,563,,563,563,563,563,563,563,563',
',,,,,563,563,563,563,563,563,563,,,,,563,563,563,563,563,563,563,563',
'563,563,,563,563,,563,563,563,,,,,563,,563,563,,563,563,,,563,563,563',
'563,563,563,563,565,,565,,565,565,,,,,,,,,,,,,,563,550,550,550,550,550',
'550,550,550,,,,,,,,565,,,,,,,,,565,565,565,,565,,,,565,565,,,,565,,565',
'565,565,565,565,565,565,,,,,,565,565,565,565,565,565,565,,,,,565,565',
'565,565,565,565,565,565,565,565,,565,565,,565,565,565,,,,,565,,565,565',
',565,565,,,565,565,565,565,565,565,565,497,,497,,497,497,,,,,,,823,',
',,,,,565,823,823,,,,823,823,823,823,823,823,823,823,823,823,497,,823',
'823,823,,,,,497,497,497,,497,,,,497,497,,,,497,,497,497,497,497,497',
'497,497,,,,,,497,497,497,497,497,497,497,,,,,497,497,497,497,497,497',
'497,497,497,497,497,497,497,,497,497,497,,,,,497,,497,497,,497,497,497',
'497,497,497,497,497,497,497,497,218,,218,,218,218,,,,,,,,,,,,,,497,823',
'823,823,823,823,823,823,823,,,,,,,,218,,,,,,,,,218,218,218,,218,,,,218',
'218,,,,218,,218,218,218,218,218,218,218,,,,,,218,218,218,218,218,218',
'218,,,,,218,218,218,218,218,218,218,218,218,218,,218,218,,218,218,218',
',,,,218,,218,218,,218,218,,,218,218,218,218,218,218,218,567,,567,,567',
'567,,,,,,,551,,,,,,,218,551,551,,,,551,551,551,551,551,551,551,551,551',
'551,567,,551,551,551,,,,,567,567,567,,567,,,,567,567,,,,567,,567,567',
'567,567,567,567,567,,,,,,567,567,567,567,567,567,567,,,,,567,567,567',
'567,567,567,567,567,567,567,,567,567,,567,567,567,,,,,567,,567,567,',
'567,567,567,,567,567,567,567,567,567,567,111,,111,,111,111,,,,,,,,,',
',,,,567,551,551,551,551,551,551,551,551,,,,,,,,111,,,,,,,,,111,111,111',
',111,,,,111,111,,,,111,,111,111,111,111,111,111,111,,,,,,111,111,111',
'111,111,111,111,,,,,111,111,111,111,111,111,111,111,111,111,,111,111',
',111,111,111,,,,,111,,111,111,,111,111,,,111,111,111,111,111,111,111',
'757,,757,,757,757,,,,,,,552,,,,,,,111,552,552,,,,552,552,552,552,552',
'552,552,552,552,552,757,,,,,,,,,757,757,757,,757,,,,757,757,,,,757,',
'757,757,757,757,757,757,757,,,,,,757,757,757,757,757,757,757,,,,,757',
'757,757,757,757,757,757,757,757,757,,757,757,,757,757,757,,,,,757,,757',
'757,,757,757,,,757,757,757,757,757,757,757,756,,756,,756,756,,,,,,,',
',,,,,,757,552,552,552,552,552,552,552,552,,,,,,,,756,,,,,,,,,756,756',
'756,,756,,,,756,756,,,,756,,756,756,756,756,756,756,756,,,,,,756,756',
'756,756,756,756,756,,,,,756,756,756,756,756,756,756,756,756,756,,756',
'756,,756,756,756,,,,,756,,756,756,,756,756,756,,756,756,756,756,756',
'756,756,97,,97,,97,97,,,,,,,821,,,,,,,756,821,821,,,,821,821,821,821',
'821,821,821,821,821,821,97,,821,821,821,,,,,97,97,97,,97,,,,97,97,,',
',97,,97,97,97,97,97,97,97,,,,,,97,97,97,97,97,97,97,,,,,97,97,97,97',
'97,97,97,97,97,97,97,97,97,,97,97,97,,,,,97,,97,97,,97,97,,,97,97,97',
'97,97,97,97,229,,229,,229,229,,,,,,,,,,,,,,97,821,821,821,821,821,821',
'821,821,,,,,,,,229,,,,,,,,,229,229,229,,229,,,,229,229,,,,229,,229,229',
'229,229,229,229,229,,,,,,229,229,229,229,229,229,229,,,,,229,229,229',
'229,229,229,229,229,229,229,229,229,229,,229,229,229,,,,,229,,229,229',
',229,229,229,229,229,229,229,229,229,229,229,923,,923,,923,923,,,,,',
',554,,,,,,,229,554,554,,,,554,554,554,554,554,554,554,554,554,554,923',
',554,554,554,,,,,923,923,923,,923,,,,923,923,,,,923,,923,923,923,923',
'923,923,923,,,,,,923,923,923,923,923,923,923,,,,,923,923,923,923,923',
'923,923,923,923,923,923,923,923,,923,923,923,,,,,923,,923,923,,923,923',
'923,923,923,923,923,923,923,923,923,95,,95,,95,95,,,,,,,,,,,,,,923,554',
'554,554,554,554,554,554,554,,,,,,,,95,,,,,,,,,95,95,95,,95,,,,95,95',
',,,95,,95,95,95,95,95,95,95,,,,,,95,95,95,95,95,95,95,,,,,95,95,95,95',
'95,95,95,95,95,95,95,95,95,,95,95,95,,,,,95,,95,95,,95,95,95,95,95,95',
'95,95,95,95,95,581,,581,,581,581,,,,,,,880,,,,,,,95,880,880,,,,880,880',
'880,880,880,880,880,880,880,880,581,,880,880,880,,,,,581,581,581,,581',
',,,581,581,,,,581,,581,581,581,581,581,581,581,,,,,,581,581,581,581',
'581,581,581,,,,,581,581,581,581,581,581,581,581,581,581,581,581,581',
',581,581,581,,,,,581,,581,581,,581,581,581,581,581,581,581,581,581,581',
'581,81,,81,,81,81,,,,,,,,,,,,,,581,880,880,880,880,880,880,880,880,',
',,,,,,81,,,,,,,,,81,81,81,,81,,,,81,81,,,,81,,81,81,81,81,81,81,81,',
',,,,81,81,81,81,81,81,81,,,,,81,81,81,81,81,81,81,81,81,81,,81,81,,81',
'81,81,,,,,81,,81,81,,81,81,,,81,81,81,81,81,81,81,584,,584,,584,584',
',,,,,,817,,,,,,,81,817,817,,,,817,817,817,817,817,817,817,817,817,817',
'584,,817,817,817,,,,,584,584,584,,584,,,,584,584,,,,584,,584,584,584',
'584,584,584,584,,,,,,584,584,584,584,584,584,584,,,,,584,584,584,584',
'584,584,584,584,584,584,,584,584,,584,584,584,,,,,584,,584,584,,584',
'584,,,584,584,584,584,584,584,584,463,,463,,463,463,,,,,,,,,,,,,,584',
'817,817,817,817,817,817,817,817,,,,,,,,463,,,,,,,,,463,463,463,,463',
',,,463,463,,,,463,,463,463,463,463,463,463,463,,,,,,463,463,463,463',
'463,463,463,,,,,463,463,463,463,463,463,463,463,463,463,,463,463,,463',
'463,463,,,,,463,,463,463,,463,463,,,463,463,463,463,463,463,463,67,',
'67,,67,67,,,,,,,815,,,,,,,463,815,815,,,,815,815,815,815,815,815,815',
'815,815,815,67,,815,815,815,,,,,67,67,67,,67,,,,67,67,,,,67,,67,67,67',
'67,67,67,67,,,,,,67,67,67,67,67,67,67,,,,,67,67,67,67,67,67,67,67,67',
'67,,67,67,,67,67,67,,,,,67,,67,67,,67,67,,,67,67,67,67,67,67,67,241',
',241,,241,241,,,,,,,,,,,,,,67,815,815,815,815,815,815,815,815,,,,,,',
',241,,,,,,,,,241,241,241,,241,,,,241,241,,,,241,,241,241,241,241,241',
'241,241,,,,,,241,241,241,241,241,241,241,,,,,241,241,241,241,241,241',
'241,241,241,241,,241,241,,241,241,241,,,,,241,,241,241,,241,241,,,241',
'241,241,241,241,241,241,242,,242,,242,242,,,,,,,555,,,,,,,241,555,555',
',,,555,555,555,555,555,555,555,555,555,555,242,,555,555,555,,,,,242',
'242,242,,242,,,,242,242,,,,242,,242,242,242,242,242,242,242,,,,,,242',
'242,242,242,242,242,242,,,,,242,242,242,242,242,242,242,242,242,242',
',242,242,,242,242,242,,,,,242,,242,242,,242,242,,,242,242,242,242,242',
'242,242,591,,591,,591,591,,,,,,,,,,,,,,242,555,555,555,555,555,555,555',
'555,,,,,,,,591,,,,,,,,,591,591,591,,591,,,,591,591,,,,591,,591,591,591',
'591,591,591,591,,,,,,591,591,591,591,591,591,591,,,,,591,591,591,591',
'591,591,591,591,591,591,591,591,591,,591,591,591,,,,,591,,591,591,,591',
'591,591,591,591,591,591,591,591,591,591,244,,244,,244,244,,,,,,,557',
',,,,,,591,557,557,,,,557,557,557,557,557,557,557,557,557,557,244,,557',
'557,557,,,,,244,244,244,,244,,,,244,244,,,,244,,244,244,244,244,244',
'244,244,,,,,,244,244,244,244,244,244,244,,,,,244,244,244,244,244,244',
'244,244,244,244,,244,244,,244,244,244,,,,,244,,244,244,,244,244,,,244',
'244,244,244,244,244,244,452,,452,,452,452,,,,,,,,,,,,,,244,557,557,557',
'557,557,557,557,557,,,,,,,,452,,,,,,,,,452,452,452,,452,,,,452,452,',
',,452,,452,452,452,452,452,452,452,,,,,,452,452,452,452,452,452,452',
',,,,452,452,452,452,452,452,452,452,452,452,,452,452,,452,452,452,,',
',,452,,452,452,,452,452,,,452,452,452,452,452,452,452,56,,56,,56,56',
',,,,,,561,,,,,,,452,561,561,,,,561,561,561,561,561,561,561,561,561,561',
'56,,561,561,,,,,,56,56,56,,56,,,,56,56,,,,56,,56,56,56,56,56,56,56,',
',,,,56,56,56,56,56,56,56,,,,,56,56,56,56,56,56,56,56,56,56,,56,56,,56',
'56,56,,,,,56,,56,56,,56,56,,,56,56,56,56,56,56,56,55,,55,,55,55,,,,',
',,,,,,,,,56,561,561,561,561,561,561,561,561,,,,,,,,55,,,,,,,,,55,55',
'55,,55,,,,55,55,,,,55,,55,55,55,55,55,55,55,,,,,,55,55,55,55,55,55,55',
',,,,55,55,55,55,55,55,55,55,55,55,55,55,55,,55,55,55,,,,,55,,55,55,',
'55,55,55,55,55,55,55,55,55,55,55,266,,266,,266,266,,,,,,,408,,,,,,,55',
'408,408,,,,408,408,408,408,408,408,408,408,408,408,266,,408,408,408',
',408,,,266,266,266,,266,,,,266,266,,,,266,,266,266,266,266,266,266,266',
',,,,,266,266,266,266,266,266,266,,,,,266,266,266,266,266,266,266,266',
'266,266,266,266,266,,266,266,266,,,,,266,,266,266,,266,266,266,266,266',
'266,266,266,266,266,266,50,,50,,50,50,,,,,,,,,,,,,,266,408,408,408,408',
'408,408,408,408,,,,,,,,50,,,,,,,,,50,50,50,,50,,,,50,50,,,,50,,50,50',
'50,50,50,50,50,,,,,,50,50,50,50,50,50,50,,,,,50,50,50,50,50,50,50,50',
'50,50,,50,50,,50,50,50,,,,,50,,50,50,,50,50,,,50,50,50,50,50,50,50,451',
',451,,451,451,,,,,,,549,,,,,,,50,549,549,,,,549,549,549,549,549,549',
'549,549,549,549,451,,549,549,549,,,,,451,451,451,,451,,,,451,451,,,',
'451,,451,451,451,451,451,451,451,,,,,,451,451,451,451,451,451,451,,',
',,451,451,451,451,451,451,451,451,451,451,451,451,451,,451,451,451,',
',,,451,,451,451,,451,451,,451,451,451,451,451,451,451,451,449,,449,',
'449,449,,,,,,,,,,,,,,451,549,549,549,549,549,549,549,549,,,,,,,,449',
',,,,,,,,449,449,449,,449,,,,449,449,,,,449,,449,449,449,449,449,449',
'449,,,,,,449,449,449,449,449,449,449,,,,,449,449,449,449,449,449,449',
'449,449,449,,449,449,,449,449,449,,,,,449,,449,449,,449,449,,,449,449',
'449,449,449,449,449,448,,448,,448,448,,,,,,,,,,,,,,449,,,,,,,,,,,,,',
',,448,,,,,,,,,448,448,448,,448,,,,448,448,,,,448,,448,448,448,448,448',
'448,448,,,,,,448,448,448,448,448,448,448,,,,,448,448,448,448,448,448',
'448,448,448,448,448,448,448,,448,448,448,,,,,448,,448,448,,448,448,448',
'448,448,448,448,448,448,448,448,599,,599,,599,599,,,,,,,,,,,,,,448,',
',,,,,,,,,,,,,,599,,,,,,,,,599,599,599,,599,,,,599,599,,,,599,,599,599',
'599,599,599,599,599,,,,,,599,599,599,599,599,599,599,,,,,599,599,599',
'599,599,599,599,599,599,599,,599,599,,599,599,599,,,,,599,,599,599,',
'599,599,,,599,599,599,599,599,599,599,275,,275,,275,275,,,,,,,,,,,,',
',599,,,,,,,,,,,,,,,,275,,,,,,,,,275,275,275,,275,,,,275,275,,,,275,',
'275,275,275,275,275,275,275,,,,,,275,275,275,275,275,275,275,,,,,275',
'275,275,275,275,275,275,275,275,275,,275,275,,275,275,275,,,,,275,,275',
'275,,275,275,,,275,275,275,275,275,275,275,444,,444,,444,444,,,,,,,',
',,,,,,275,,,,,,,,,,,,,,,,444,,,,,,,,,444,444,444,,444,,,,444,444,,,',
'444,,444,444,444,444,444,444,444,,,,,,444,444,444,444,444,444,444,,',
',,444,444,444,444,444,444,444,444,444,444,444,444,444,,444,444,444,',
',,,444,,444,444,,444,444,444,444,444,444,444,444,444,444,444,48,,48',
',48,48,,,,,,,,,,,,,,444,,,,,,,,,,,,,,,,48,,,,,,,,,48,48,48,,48,,,,48',
'48,,,,48,,48,48,48,48,48,48,48,,,,,,48,48,48,48,48,48,48,,,,,48,48,48',
'48,48,48,48,48,48,48,,48,48,,48,48,48,,,,,48,,48,48,,48,48,,,48,48,48',
'48,48,48,48,442,,442,,442,442,,,,,,,,,,,,,,48,,,,,,,,,,,,,,,,442,,,',
',,,,,442,442,442,,442,,,,442,442,,,,442,,442,442,442,442,442,442,442',
',,,,,442,442,442,442,442,442,442,,,,,442,442,442,442,442,442,442,442',
'442,442,,442,442,,442,442,442,,,,,442,,442,442,,442,442,,,442,442,442',
'442,442,442,442,796,,796,,796,796,,,,,,,,,,,,,,442,,,,,,,,,,,,,,,,796',
',,,,,,,,796,796,796,,796,,,,796,796,,,,796,,796,796,796,796,796,796',
'796,,,,,,796,796,796,796,796,796,796,,,,,796,796,796,796,796,796,796',
'796,796,796,,796,796,,796,796,796,,,,,796,,796,796,,796,796,,,796,796',
'796,796,796,796,796,798,,798,,798,798,,,,,,,,,,,,,,796,,,,,,,,,,,,,',
',,798,,,,,,,,,798,798,798,,798,,,,798,798,,,,798,,798,798,798,798,798',
'798,798,,,,,,798,798,798,798,798,798,798,,,,,798,798,798,798,798,798',
'798,798,798,798,,798,798,,798,798,798,,,,,798,,798,798,,798,798,,,798',
'798,798,798,798,798,798,799,,799,,799,799,,,,,,,,,,,,,,798,,,,,,,,,',
',,,,,,799,,,,,,,,,799,799,799,,799,,,,799,799,,,,799,,799,799,799,799',
'799,799,799,,,,,,799,799,799,799,799,799,799,,,,,799,799,799,799,799',
'799,799,799,799,799,,799,799,,799,799,799,,,,,799,,799,799,,799,799',
',,799,799,799,799,799,799,799,47,,47,,47,47,,,,,,,,,,,,,,799,,,,,,,',
',,,,,,,,47,,,,,,,,,47,47,47,,47,,,,47,47,,,,47,,47,47,47,47,47,47,47',
',,,,,47,47,47,47,47,47,47,,,,,47,47,47,47,47,47,47,47,47,47,,47,47,',
'47,47,47,,,,,47,,47,47,,47,47,,,47,47,47,47,47,47,47,46,,46,,46,46,',
',,,,,,,,,,,,47,,,,,,,,,,,,,,,,46,,,,,,,,,46,46,46,,46,,,,46,46,,,,46',
',46,46,46,46,46,46,46,,,,,,46,46,46,46,46,46,46,,,,,46,46,46,46,46,46',
'46,46,46,46,46,46,46,,46,46,46,,,,,46,,46,46,,46,46,46,46,46,46,46,46',
'46,46,46,604,,604,,604,604,,,,,,,,,,,,,,46,,,,,,,,,,,,,,,,604,,,,,,',
',,604,604,604,,604,,,,604,604,,,,604,,604,604,604,604,604,604,604,,',
',,,604,604,604,604,604,604,604,,,,,604,604,604,604,604,604,604,604,604',
'604,604,604,604,,604,604,604,,,,,604,,604,604,,604,604,604,,604,604',
'604,604,604,604,604,869,,869,,869,869,,,,,,,,,,,,,,604,,,,,,,,,,,,,',
',,869,,,,,,,,,869,869,869,,869,,,,869,869,,,,869,,869,869,869,869,869',
'869,869,,,,,,869,869,869,869,869,869,869,,,,,869,869,869,869,869,869',
'869,869,869,869,,869,869,,869,869,869,,,,,869,,869,869,,869,869,,,869',
'869,869,869,869,869,869,417,,417,,417,417,,,,,,,,,,,,,,869,,,,,,,,,',
',,,,,,417,,,,,,,,,417,417,417,,417,,,,417,417,,,,417,,417,417,417,417',
'417,417,417,,,,,,417,417,417,417,417,417,417,,,,,417,417,417,417,417',
'417,417,417,417,417,,417,417,,417,417,417,,,,,417,,417,417,,417,417',
',,417,417,417,417,417,417,417,606,,606,,606,606,,,,,,,,,,,,,,417,,,',
',,,,,,,,,,,,606,,,,,,,,,606,606,606,,606,,,,606,606,,,,606,,606,606',
'606,606,606,606,606,,,,,,606,606,606,606,606,606,606,,,,,606,606,606',
'606,606,606,606,606,606,606,606,606,606,,606,606,606,,,,,606,,606,606',
',606,606,,,606,606,606,606,606,606,606,612,,612,,612,612,,,,,,,,,,,',
',,606,,,,,,,,,,,,,,,,612,,,,,,,,,612,612,612,,612,,,,612,612,,,,612',
',612,612,612,612,612,612,612,,,,,,612,612,612,612,612,612,612,,,,,612',
'612,612,612,612,612,612,612,612,612,,612,612,,612,612,612,,,,,612,,612',
'612,,612,612,,,612,612,612,612,612,612,612,620,,620,,620,620,,,,,,,',
',,,,,,612,,,,,,,,,,,,,,,,620,,,,,,,,,620,620,620,,620,,,,620,620,,,',
'620,,620,620,620,620,620,620,620,,,,,,620,620,620,620,620,620,620,,',
',,620,620,620,620,620,620,620,620,620,620,,620,620,,620,620,620,,,,',
'620,,620,620,,620,620,620,,620,620,620,620,620,620,620,35,,35,,35,35',
',,,,,,,,,,,,,620,,,,,,,,,,,,,,,,35,,,,,,,,,35,35,35,,35,,,,35,35,,,',
'35,,35,35,35,35,35,35,35,,,,,,35,35,35,35,35,35,35,,,,,35,35,35,35,35',
'35,35,35,35,35,,35,35,,35,35,35,,,,,35,,35,35,,35,35,,,35,35,35,35,35',
'35,35,405,,405,,405,405,,,,,,,,,,,,,,35,,,,,,,,,,,,,,,,405,,,,,,,,,405',
'405,405,,405,,,,405,405,,,,405,,405,405,405,405,405,405,405,,,,,,405',
'405,405,405,405,405,405,,,,,405,405,405,405,405,405,405,405,405,405',
',405,405,,405,405,405,,,,,405,,405,405,,405,405,,,405,405,405,405,405',
'405,405,404,,404,,404,404,,,,,,,,,,,,,,405,,,,,,,,,,,,,,,,404,,,,,,',
',,404,404,404,,404,,,,404,404,,,,404,,404,404,404,404,404,404,404,,',
',,,404,404,404,404,404,404,404,,,,,404,404,404,404,404,404,404,404,404',
'404,,404,404,,404,404,404,,,,,404,,404,404,,404,404,404,,404,404,404',
'404,404,404,404,32,,32,,32,32,,,,,,,,,,,,,,404,,,,,,,,,,,,,,,,32,,,',
',,,,,32,32,32,,32,,,,32,32,,,,32,,32,32,32,32,32,32,32,,,,,,32,32,32',
'32,32,32,32,,,,,32,32,32,32,32,32,32,32,32,32,,32,32,,32,32,32,,,,,32',
',32,32,,32,32,,,32,32,32,32,32,32,32,820,,820,,820,820,,,,,,,,,,,,,',
'32,,,,,,,,,,,,,,,,820,,,,,,,,,820,820,820,,820,,,,820,820,,,,820,,820',
'820,820,820,820,820,820,,,,,,820,820,820,820,820,820,820,,,,,820,820',
'820,820,820,820,820,820,820,820,,820,820,,820,820,820,,,,,820,,820,820',
',820,820,,,820,820,820,820,820,820,820,391,,391,,391,391,,,,,,,,,,,',
',,820,,,,,,,,,,,,,,,,391,,,,,,,,,391,391,391,,391,,,,391,391,,,,391',
',391,391,391,391,391,391,391,,,,,,391,391,391,391,391,391,391,,,,,391',
'391,391,391,391,391,391,391,391,391,,391,391,,391,391,391,,,,,391,,391',
'391,,391,391,391,,391,391,391,391,391,391,391,384,,384,,384,384,,,,',
',,,,,,,,,391,,,,,,,,,,,,,,,,384,,,,,,,,,384,384,384,,384,,,,384,384',
',,,384,,384,384,384,384,384,384,384,,,,,,384,384,384,384,384,384,384',
',,,,384,384,384,384,384,384,384,384,384,384,,384,384,,384,384,384,,',
',,384,,384,384,,384,384,,,384,384,384,384,384,384,384,632,,632,,632',
'632,,,,,,,,,,,,,,384,,,,,,,,,,,,,,,,632,,,,,,,,,632,632,632,,632,,,',
'632,632,,,,632,,632,632,632,632,632,632,632,,,,,,632,632,632,632,632',
'632,632,,,,,632,632,632,632,632,632,632,632,632,632,,632,632,,632,632',
'632,,,,,632,,632,632,,632,632,,,632,632,632,632,632,632,632,22,,22,',
'22,22,,,,,,,,,,,,,,632,,,,,,,,,,,,,,,,22,,,,,,,,,22,22,22,,22,,,,22',
'22,,,,22,,22,22,22,22,22,22,22,,,,,,22,22,22,22,22,22,22,,,,,22,22,22',
'22,22,22,22,22,22,22,,22,22,,22,22,22,,,,,22,,22,22,,22,22,,,22,22,22',
'22,22,22,22,306,,306,,306,306,,,,,,,,,,,,,,22,,,,,,,,,,,,,,,,306,,,',
',,,,,306,306,306,306,306,,,,306,306,,,,306,,306,306,306,306,306,306',
'306,,,,,,306,306,306,306,306,306,306,306,,,306,306,306,306,306,306,306',
'306,306,306,306,,306,306,,306,306,306,,,,,306,,306,306,,306,306,306',
',306,306,306,306,306,306,306,307,,307,,307,307,,,,,,,,,,,,,,306,,,,',
',,,,,,,,,,,307,,,,,,,,,307,307,307,,307,,,,307,307,,,,307,,307,307,307',
'307,307,307,307,,,,,,307,307,307,307,307,307,307,,,,,307,307,307,307',
'307,307,307,307,307,307,,307,307,,307,307,307,,,,,307,,307,307,,307',
'307,,,307,307,307,307,307,307,307,308,,308,,308,308,,,,,,,,,,,,,,307',
',,,,,,,,,,,,,,,308,,,,,,,,,308,308,308,,308,,,,308,308,,,,308,,308,308',
'308,308,308,308,308,,,,,,308,308,308,308,308,308,308,,,,,308,308,308',
'308,308,308,308,308,308,308,,308,308,,308,308,308,,,,,308,,308,308,',
'308,308,,,308,308,308,308,308,308,308,309,,309,,309,309,,,,,,,,,,,,',
',308,,,,,,,,,,,,,,,,309,,,,,,,,,309,309,309,,309,,,,309,309,,,,309,',
'309,309,309,309,309,309,309,,,,,,309,309,309,309,309,309,309,,,,,309',
'309,309,309,309,309,309,309,309,309,,309,309,,309,309,309,,,,,309,,309',
'309,,309,309,,,309,309,309,309,309,309,309,310,,310,,310,310,,,,,,,',
',,,,,,309,,,,,,,,,,,,,,,,310,,,,,,,,,310,310,310,,310,,,,310,310,,,',
'310,,310,310,310,310,310,310,310,,,,,,310,310,310,310,310,310,310,,',
',,310,310,310,310,310,310,310,310,310,310,,310,310,,310,310,310,,,,',
'310,,310,310,,310,310,,,310,310,310,310,310,310,310,17,,17,,17,17,,',
',,,,,,,,,,,310,,,,,,,,,,,,,,,,17,,,,,,,,,17,17,17,17,17,,,,17,17,,,',
'17,,17,17,17,17,17,17,17,,,,,,17,17,17,17,17,17,17,17,,,17,17,17,17',
'17,17,17,17,17,17,17,,17,17,,17,17,17,,,,,17,,17,17,,17,17,17,,17,17',
'17,17,17,17,17,667,,667,,667,667,,,,,,,,,,,,,,17,,,,,,,,,,,,,,,,667',
',,,,,,,,667,667,667,,667,,,,667,667,,,,667,,667,667,667,667,667,667',
'667,,,,,,667,667,667,667,667,667,667,,,,,667,667,667,667,667,667,667',
'667,667,667,,667,667,,667,667,667,,,,,667,,667,667,,667,667,,,667,667',
'667,667,667,667,667,696,,696,,696,696,,,,,,,,,,,,,,667,,,,,,,,,,,,,',
',,696,,,,,,,,,696,696,696,,696,,,,696,696,,,,696,,696,696,696,696,696',
'696,696,,,,,,696,696,696,696,696,696,696,,,,,696,696,696,696,696,696',
'696,696,696,696,,696,696,,696,696,696,,,,,696,,696,696,,696,696,,,696',
'696,696,696,696,696,696,828,,828,,828,828,,,,,,,,,,,,,,696,,,,,,,,,',
',,,,,,828,,,,,,,,,828,828,828,,828,,,,828,828,,,,828,,828,828,828,828',
'828,828,828,,,,,,828,828,828,828,828,828,828,,,,,828,828,828,828,828',
'828,828,828,828,828,,828,828,,828,828,828,,,,,828,,828,828,,828,828',
',,828,828,828,828,828,828,828,316,,316,,316,316,,,,,,,,,,,,,,828,,,',
',,,,,,,,,,,,316,,,,,,,,,316,316,316,,316,,,,316,316,,,,316,,316,316',
'316,316,316,316,316,,,,,,316,316,316,316,316,316,316,,,,,316,316,316',
'316,316,316,316,316,316,316,,316,316,,316,316,316,,,,,316,,316,316,',
'316,316,,,316,316,316,316,316,316,316,317,,317,,317,317,,,,,,,,,,,,',
',316,,,,,,,,,,,,,,,,317,,,,,,,,,317,317,317,,317,,,,317,317,,,,317,',
'317,317,317,317,317,317,317,,,,,,317,317,317,317,317,317,317,,,,,317',
'317,317,317,317,317,317,317,317,317,,317,317,,317,317,317,,,,,317,,317',
'317,,317,317,,,317,317,317,317,317,317,317,695,,695,,695,695,,,,,,,',
',,,,,,317,,,,,,,,,,,,,,,,695,,,,,,,,,695,695,695,,695,,,,695,695,,,',
'695,,695,695,695,695,695,695,695,,,,,,695,695,695,695,695,695,695,,',
',,695,695,695,695,695,695,695,695,695,695,,695,695,,695,695,695,,,,',
'695,,695,695,,695,695,,,695,695,695,695,695,695,695,834,,834,,834,834',
',,,,,,,,,,,,,695,,,,,,,,,,,,,,,,834,,,,,,,,,834,834,834,,834,,,,834',
'834,,,,834,,834,834,834,834,834,834,834,,,,,,834,834,834,834,834,834',
'834,,,,,834,834,834,834,834,834,834,834,834,834,,834,834,,834,834,834',
',,,,834,,834,834,,834,834,,,834,834,834,834,834,834,834,690,,690,,690',
'690,,,,,,,,,,,,,,834,,,,,,,,,,,,,,,,690,,,,,,,,,690,690,690,,690,,,',
'690,690,,,,690,,690,690,690,690,690,690,690,,,,,,690,690,690,690,690',
'690,690,,,,,690,690,690,690,690,690,690,690,690,690,,690,690,,690,690',
'690,,,,,690,,690,690,,690,690,,,690,690,690,690,690,690,690,360,,360',
',360,360,,,,,,,,,,,,,,690,,,,,,,,,,,,,,,,360,,,,,,,,,360,360,360,360',
'360,,,,360,360,,,,360,,360,360,360,360,360,360,360,,,,,,360,360,360',
'360,360,360,360,360,,,360,360,360,360,360,360,360,360,360,360,360,,360',
'360,,360,360,360,,,,,360,,360,360,,360,360,360,,360,360,360,360,360',
'360,360,324,,324,,324,324,,,,,,,,,,,,,,360,,,,,,,,,,,,,,,,324,,,,,,',
',,324,324,324,,324,,,,324,324,,,,324,,324,324,324,324,324,324,324,,',
',,,324,324,324,324,324,324,324,,,,,324,324,324,324,324,324,324,324,324',
'324,,324,324,,324,324,324,,,,,324,,324,324,,324,324,,,324,324,324,324',
'324,324,324,325,,325,,325,325,,,,,,,,,,,,,,324,,,,,,,,,,,,,,,,325,,',
',,,,,,325,325,325,,325,,,,325,325,,,,325,,325,325,325,325,325,325,325',
',,,,,325,325,325,325,325,325,325,,,,,325,325,325,325,325,325,325,325',
'325,325,,325,325,,325,325,325,,,,,325,,325,325,,325,325,,,325,325,325',
'325,325,325,325,326,,326,,326,326,,,,,,,,,,,,,,325,,,,,,,,,,,,,,,,326',
',,,,,,,,326,326,326,,326,,,,326,326,,,,326,,326,326,326,326,326,326',
'326,,,,,,326,326,326,326,326,326,326,,,,,326,326,326,326,326,326,326',
'326,326,326,,326,326,,326,326,326,,,,,326,,326,326,,326,326,,,326,326',
'326,326,326,326,326,327,,327,,327,327,,,,,,,,,,,,,,326,,,,,,,,,,,,,',
',,327,,,,,,,,,327,327,327,,327,,,,327,327,,,,327,,327,327,327,327,327',
'327,327,,,,,,327,327,327,327,327,327,327,,,,,327,327,327,327,327,327',
'327,327,327,327,,327,327,,327,327,327,,,,,327,,327,327,,327,327,,,327',
'327,327,327,327,327,327,328,,328,,328,328,,,,,,,,,,,,,,327,,,,,,,,,',
',,,,,,328,,,,,,,,,328,328,328,,328,,,,328,328,,,,328,,328,328,328,328',
'328,328,328,,,,,,328,328,328,328,328,328,328,,,,,328,328,328,328,328',
'328,328,328,328,328,,328,328,,328,328,328,,,,,328,,328,328,,328,328',
',,328,328,328,328,328,328,328,329,,329,,329,329,,,,,,,,,,,,,,328,,,',
',,,,,,,,,,,,329,,,,,,,,,329,329,329,,329,,,,329,329,,,,329,,329,329',
'329,329,329,329,329,,,,,,329,329,329,329,329,329,329,,,,,329,329,329',
'329,329,329,329,329,329,329,,329,329,,329,329,329,,,,,329,,329,329,',
'329,329,,,329,329,329,329,329,329,329,330,,330,,330,330,,,,,,,,,,,,',
',329,,,,,,,,,,,,,,,,330,,,,,,,,,330,330,330,,330,,,,330,330,,,,330,',
'330,330,330,330,330,330,330,,,,,,330,330,330,330,330,330,330,,,,,330',
'330,330,330,330,330,330,330,330,330,,330,330,,330,330,330,,,,,330,,330',
'330,,330,330,,,330,330,330,330,330,330,330,331,,331,,331,331,,,,,,,',
',,,,,,330,,,,,,,,,,,,,,,,331,,,,,,,,,331,331,331,,331,,,,331,331,,,',
'331,,331,331,331,331,331,331,331,,,,,,331,331,331,331,331,331,331,,',
',,331,331,331,331,331,331,331,331,331,331,,331,331,,331,331,331,,,,',
'331,,331,331,,331,331,,,331,331,331,331,331,331,331,332,,332,,332,332',
',,,,,,,,,,,,,331,,,,,,,,,,,,,,,,332,,,,,,,,,332,332,332,,332,,,,332',
'332,,,,332,,332,332,332,332,332,332,332,,,,,,332,332,332,332,332,332',
'332,,,,,332,332,332,332,332,332,332,332,332,332,,332,332,,332,332,332',
',,,,332,,332,332,,332,332,,,332,332,332,332,332,332,332,333,,333,,333',
'333,,,,,,,,,,,,,,332,,,,,,,,,,,,,,,,333,,,,,,,,,333,333,333,,333,,,',
'333,333,,,,333,,333,333,333,333,333,333,333,,,,,,333,333,333,333,333',
'333,333,,,,,333,333,333,333,333,333,333,333,333,333,,333,333,,333,333',
'333,,,,,333,,333,333,,333,333,,,333,333,333,333,333,333,333,334,,334',
',334,334,,,,,,,,,,,,,,333,,,,,,,,,,,,,,,,334,,,,,,,,,334,334,334,,334',
',,,334,334,,,,334,,334,334,334,334,334,334,334,,,,,,334,334,334,334',
'334,334,334,,,,,334,334,334,334,334,334,334,334,334,334,,334,334,,334',
'334,334,,,,,334,,334,334,,334,334,,,334,334,334,334,334,334,334,335',
',335,,335,335,,,,,,,,,,,,,,334,,,,,,,,,,,,,,,,335,,,,,,,,,335,335,335',
',335,,,,335,335,,,,335,,335,335,335,335,335,335,335,,,,,,335,335,335',
'335,335,335,335,,,,,335,335,335,335,335,335,335,335,335,335,,335,335',
',335,335,335,,,,,335,,335,335,,335,335,,,335,335,335,335,335,335,335',
'336,,336,,336,336,,,,,,,,,,,,,,335,,,,,,,,,,,,,,,,336,,,,,,,,,336,336',
'336,,336,,,,336,336,,,,336,,336,336,336,336,336,336,336,,,,,,336,336',
'336,336,336,336,336,,,,,336,336,336,336,336,336,336,336,336,336,,336',
'336,,336,336,336,,,,,336,,336,336,,336,336,,,336,336,336,336,336,336',
'336,337,,337,,337,337,,,,,,,,,,,,,,336,,,,,,,,,,,,,,,,337,,,,,,,,,337',
'337,337,,337,,,,337,337,,,,337,,337,337,337,337,337,337,337,,,,,,337',
'337,337,337,337,337,337,,,,,337,337,337,337,337,337,337,337,337,337',
',337,337,,337,337,337,,,,,337,,337,337,,337,337,,,337,337,337,337,337',
'337,337,338,,338,,338,338,,,,,,,,,,,,,,337,,,,,,,,,,,,,,,,338,,,,,,',
',,338,338,338,,338,,,,338,338,,,,338,,338,338,338,338,338,338,338,,',
',,,338,338,338,338,338,338,338,,,,,338,338,338,338,338,338,338,338,338',
'338,,338,338,,338,338,338,,,,,338,,338,338,,338,338,,,338,338,338,338',
'338,338,338,339,,339,,339,339,,,,,,,,,,,,,,338,,,,,,,,,,,,,,,,339,,',
',,,,,,339,339,339,,339,,,,339,339,,,,339,,339,339,339,339,339,339,339',
',,,,,339,339,339,339,339,339,339,,,,,339,339,339,339,339,339,339,339',
'339,339,,339,339,,339,339,339,,,,,339,,339,339,,339,339,,,339,339,339',
'339,339,339,339,340,,340,,340,340,,,,,,,,,,,,,,339,,,,,,,,,,,,,,,,340',
',,,,,,,,340,340,340,,340,,,,340,340,,,,340,,340,340,340,340,340,340',
'340,,,,,,340,340,340,340,340,340,340,,,,,340,340,340,340,340,340,340',
'340,340,340,,340,340,,340,340,340,,,,,340,,340,340,,340,340,,,340,340',
'340,340,340,340,340,341,,341,,341,341,,,,,,,,,,,,,,340,,,,,,,,,,,,,',
',,341,,,,,,,,,341,341,341,,341,,,,341,341,,,,341,,341,341,341,341,341',
'341,341,,,,,,341,341,341,341,341,341,341,,,,,341,341,341,341,341,341',
'341,341,341,341,,341,341,,341,341,341,,,,,341,,341,341,,341,341,,,341',
'341,341,341,341,341,341,342,,342,,342,342,,,,,,,,,,,,,,341,,,,,,,,,',
',,,,,,342,,,,,,,,,342,342,342,,342,,,,342,342,,,,342,,342,342,342,342',
'342,342,342,,,,,,342,342,342,342,342,342,342,,,,,342,342,342,342,342',
'342,342,342,342,342,,342,342,,342,342,342,,,,,342,,342,342,,342,342',
',,342,342,342,342,342,342,342,343,,343,,343,343,,,,,,,,,,,,,,342,,,',
',,,,,,,,,,,,343,,,,,,,,,343,343,343,,343,,,,343,343,,,,343,,343,343',
'343,343,343,343,343,,,,,,343,343,343,343,343,343,343,,,,,343,343,343',
'343,343,343,343,343,343,343,,343,343,,343,343,343,,,,,343,,343,343,',
'343,343,,,343,343,343,343,343,343,343,344,,344,,344,344,,,,,,,,,,,,',
',343,,,,,,,,,,,,,,,,344,,,,,,,,,344,344,344,,344,,,,344,344,,,,344,',
'344,344,344,344,344,344,344,,,,,,344,344,344,344,344,344,344,,,,,344',
'344,344,344,344,344,344,344,344,344,,344,344,,344,344,344,,,,,344,,344',
'344,,344,344,,,344,344,344,344,344,344,344,345,,345,,345,345,,,,,,,',
',,,,,,344,,,,,,,,,,,,,,,,345,,,,,,,,,345,345,345,,345,,,,345,345,,,',
'345,,345,345,345,345,345,345,345,,,,,,345,345,345,345,345,345,345,,',
',,345,345,345,345,345,345,345,345,345,345,,345,345,,345,345,345,,,,',
'345,,345,345,,345,345,,,345,345,345,345,345,345,345,346,,346,,346,346',
',,,,,,,,,,,,,345,,,,,,,,,,,,,,,,346,,,,,,,,,346,346,346,,346,,,,346',
'346,,,,346,,346,346,346,346,346,346,346,,,,,,346,346,346,346,346,346',
'346,,,,,346,346,346,346,346,346,346,346,346,346,,346,346,,346,346,346',
',,,,346,,346,346,,346,346,,,346,346,346,346,346,346,346,837,,837,,837',
'837,,,,,,,,,,,,,,346,,,,,,,,,,,,,,,,837,,,,,,,,,837,837,837,,837,,,',
'837,837,,,,837,,837,837,837,837,837,837,837,,,,,,837,837,837,837,837',
'837,837,,,,,837,837,837,837,837,837,837,837,837,837,,837,837,,837,837',
'837,,,,,837,,837,837,,837,837,837,,837,837,837,837,837,837,837,348,',
'348,,348,348,,,,,,,,,,,,,,837,,,,,,,,,,,,,,,,348,,,,,,,,,348,348,348',
',348,,,,348,348,,,,348,,348,348,348,348,348,348,348,,,,,,348,348,348',
'348,348,348,348,,,,,348,348,348,348,348,348,348,348,348,348,,348,348',
',348,348,348,,,,,348,,348,348,,348,348,,,348,348,348,348,348,348,348',
'689,,689,,689,689,,,,,,,,,,,,,,348,,,,,,,,,,,,,,,,689,,,,,,,,,689,689',
'689,,689,,,,689,689,,,,689,,689,689,689,689,689,689,689,,,,,,689,689',
'689,689,689,689,689,,,,,689,689,689,689,689,689,689,689,689,689,,689',
'689,,689,689,689,,,,,689,,689,689,,689,689,,,689,689,689,689,689,689',
'689,849,,849,,849,849,,,,,,,,,,,,,,689,,,,,,,,,,,,,,,,849,,,,,,,,,849',
'849,849,,849,,,,849,849,,,,849,,849,849,849,849,849,849,849,,,,,,849',
'849,849,849,849,849,849,,,,,849,849,849,849,849,849,849,849,849,849',
',849,849,,849,849,849,,,,,849,,849,849,,849,849,,,849,849,849,849,849',
'849,849,91,,91,,91,91,,,,,,,,,,,,,,849,,,,,,,,,,,,,,,,91,,,,,,,,,91',
'91,91,,91,,,,91,91,,,,91,,91,91,91,91,91,91,91,,,,,,91,91,91,91,91,91',
'91,,,,,91,91,91,91,91,91,91,91,91,91,91,91,91,,91,91,91,,,,,91,,91,91',
',91,91,91,,91,91,91,91,91,91,91,,,,,,,,885,,,,,,,,885,885,,,91,885,885',
'885,885,885,885,885,885,885,885,885,885,885,885,885,231,,,,,,,,231,231',
',,,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,724,',
',,,,,,724,724,,,,724,724,724,724,724,724,724,724,724,724,724,724,610',
',,,,,,,610,610,,,,610,610,610,610,610,610,610,610,610,610,,,610,610',
'610,,610,,,,,,,,,,,,,,,,,885,885,885,885,885,885,885,885,,,,,,,,,,,',
',,,,,,,,,231,231,231,231,231,231,231,231,,,,,,,,,,,,,,,,,,,,,724,724',
'724,724,724,724,724,724,,,,,,,,,,,,,,,,,610,610,610,610,610,610,610',
'610,610,69,,,,,,,,69,69,,,,69,69,69,69,69,69,69,69,69,69,69,69,69,69',
'69,566,,,,,,,,566,566,,,,566,566,566,566,566,566,566,566,566,566,566',
'566,566,566,566,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,287,,,,69,69,69,69,69,69,69,69,,,,,,,,,,,,,,,,,,,,287',
'566,566,566,566,566,566,566,566,287,287,287,,287,,,,287,287,,,,287,',
'287,287,287,287,287,287,287,,,,,,287,287,287,287,287,287,287,,104,,',
'287,287,287,287,287,287,287,287,287,287,,287,287,,287,287,287,,,,,287',
',287,287,,287,287,104,,287,287,287,287,287,287,287,104,104,104,,104',
',,,104,104,287,,,104,,104,104,104,104,104,104,104,,,,,,104,104,104,104',
'104,104,104,,,,,104,104,104,104,104,104,104,104,104,104,90,104,104,',
'104,104,104,90,,,,104,,104,104,,104,104,,,104,104,104,104,104,104,104',
',,,,90,,,,,,104,,,90,90,90,,90,,,,90,90,,,,90,,90,90,90,90,90,90,90',
',,,,,90,90,90,90,90,90,90,,401,,,90,90,90,90,90,90,90,90,90,90,,90,90',
',90,90,90,,,,,90,,90,90,,90,90,401,,90,90,90,90,90,90,90,401,401,401',
',401,,,,401,401,,,,401,,401,401,401,401,401,401,401,,,,,,401,401,401',
'401,401,401,401,,109,,,401,401,401,401,401,401,401,401,401,401,,401',
'401,,401,401,401,,,,,401,,401,401,,401,401,109,,401,401,401,401,401',
'401,401,109,109,109,,109,,,,109,109,,,,109,,109,109,109,109,109,109',
'109,,,,,,109,109,109,109,109,109,109,,768,,,109,109,109,109,109,109',
'109,109,109,109,,109,109,,109,109,109,,,,,109,,109,109,,109,109,768',
',109,109,109,109,109,109,109,768,768,768,,768,,,,768,768,,,,768,,768',
'768,768,768,768,768,768,,,,,,768,768,768,768,768,768,768,,709,,,768',
'768,768,768,768,768,768,768,768,768,,768,768,,768,768,768,,,,,768,,768',
'768,,768,768,709,,768,768,768,768,768,768,768,709,709,709,,709,,,,709',
'709,,,,709,,709,709,709,709,709,709,709,,,,,,709,709,709,709,709,709',
'709,,80,,,709,709,709,709,709,709,709,709,709,709,,709,709,,709,709',
'709,,,,,709,,709,709,,709,709,80,,709,709,709,709,709,709,709,80,80',
'80,,80,,,,80,80,,,,80,,80,80,80,80,80,80,80,,,,,,80,80,80,80,80,80,80',
',,852,,80,80,80,80,80,80,80,80,80,80,,80,80,,80,80,80,,,,,80,,80,80',
',80,80,80,852,80,80,80,80,80,80,80,,852,852,852,,852,,,,852,852,,,,852',
',852,852,852,852,852,852,852,,,,,,852,852,852,852,852,852,852,,31,,',
'852,852,852,852,852,852,852,852,852,852,,852,852,,852,852,852,,,,,852',
',852,852,,852,852,31,,852,852,852,852,852,852,852,31,31,31,,31,,,,31',
'31,,,,31,,31,31,31,31,31,31,31,,,,,,31,31,31,31,31,31,31,,,506,,31,31',
'31,31,31,31,31,31,31,31,,31,31,,31,31,31,,,,,31,,31,31,,31,31,31,506',
'31,31,31,31,31,31,31,,506,506,506,,506,,,,506,506,,,,506,,506,506,506',
'506,506,506,506,,,,,,506,506,506,506,506,506,506,,622,,,506,506,506',
'506,506,506,506,506,506,506,,506,506,,506,506,506,,,,,506,,506,506,',
'506,506,622,,506,506,506,506,506,506,506,622,622,622,,622,,,,622,622',
',,,622,,622,622,622,622,622,622,622,,,,,,622,622,622,622,622,622,622',
',802,,,622,622,622,622,622,622,622,622,622,622,,622,622,,622,622,622',
',,,,622,,622,622,,622,622,802,,622,622,622,622,622,622,622,802,802,802',
',802,,,,802,802,,,,802,,802,802,802,802,802,802,802,,,,,,802,802,802',
'802,802,802,802,,,,,802,802,802,802,802,802,802,802,802,802,,802,802',
',802,802,802,,,,,802,,802,802,,802,802,,,802,802,802,802,802,802,802' ]
        racc_action_check = arr = Array.new(22077, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
   nil,    33,   nil,  7612,  1293,   nil,   nil,  1256,  3234,  1544,
  2751,   nil,   nil,  7145,   420,   840,   nil, 16177,   nil,   nil,
   nil,   -61, 15463,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   242, 21730, 14868,  5992,   nil, 14511,   nil,  1140,   nil,  1154,
  1134,   nil,   nil,   755,  1621,   nil, 13678, 13559, 12964,  1152,
 12131,   801,   nil,  1160,   nil, 11893, 11774,   244,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil, 11060,  1154, 20919,
  1097,   293,   518,  4092,   nil,  3962,  4199,   nil,     1,   nil,
 21579, 10703,   nil,   190,   nil,   379,   nil,   nil,   nil,   445,
 21204, 20580,  2302,   nil,   nil, 10465,  1196, 10108,   nil,   nil,
   778,  1711,  5869,   nil, 21116,  1241,   nil,  1193,   409, 21354,
   nil,  9751,   325,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   313,   234,   nil,   nil,   nil,   nil,   180,   nil,   nil,
   340,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   409,   nil,   nil,   nil,  9037,   133,   nil,   nil,
   450,   nil,   nil,  1553,   nil,   nil,   nil,   nil,   nil,   nil,
   342,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   388,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   138,   nil,   nil,   nil,  1138,   nil,   nil,   -63,  1137,
   nil,   nil,  1093,   nil,   nil,   nil,   nil,  1092,    38,   nil,
  1843,  1088,   nil,   nil,  2448,  1166,   nil,   974,  9513,  1059,
   608,  1051,   nil,   nil,  1072,   nil,   nil,   nil,   769, 10227,
  1083, 20731,   nil,     8,  4439,   nil,   -27,   nil,   nil,  1139,
  1117, 11179, 11298,  1014, 11536,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,  1070,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   769,   nil,  2936, 12012,  2644,   nil,   900,
   nil,  2328,   nil,   190,  1176, 12726,   171,   673,   655,  1002,
   691,   411,  1040,   961,  5279,   nil,   958, 21041,   947,   829,
  1587,   nil,   nil,   nil,   394,   nil,   nil,   754,   170,   775,
   957,   nil,   953,   398,  1037,  1036, 15582, 15701, 15820, 15939,
 16058,   nil,  8211,   410,  7022,    60, 16653, 16772,   nil,   nil,
   197,   218,   135,  1000, 17367, 17486, 17605, 17724, 17843, 17962,
 18081, 18200, 18319, 18438, 18557, 18676, 18795, 18914, 19033, 19152,
 19271, 19390, 19509, 19628, 19747, 19866, 19985,   997, 20223,   nil,
   888,   964,   867,   538,    65,   nil,    66,   nil,   879,   966,
 17248,   853,   nil,  1657,   851,    80,  7252,   572,   268,    -9,
   898,   917,   nil,   nil,   -35,  6555,  6222,   nil,   991,   nil,
   nil,    -6,    44,   940, 15225,   945,   838,   419,   nil,   314,
   nil, 15106,   843,   nil,   316,   862,   412,   nil,   907,   906,
   817, 21279,   nil,   nil, 14749, 14630,   531,  5749, 12021,   nil,
   nil,  5642,   nil,   -22,   546,  5399,  1809, 14035,   858,   nil,
  5159,   nil,  4919,   nil,   nil,   nil,  2391,   nil,  2383,   nil,
   857,   793,   833,   806,  1072,   842,  1640,   nil,   nil,   nil,
  2106,   768, 13083,  2487, 12845,  2589,   nil,   nil, 12488, 12369,
   nil, 12250, 11655,   764,   nil,   nil,   685,   972,   nil,  4679,
   nil,   nil,  4559, 10941,    67,   nil,   nil,   nil,   nil,  4319,
   582,   nil,   nil,   nil,   nil,   nil,    49,  2183,  2064,     0,
   nil,   nil,  1479,   763,    62,   nil,   nil,    11,   nil,  1360,
   nil,   nil,   nil,   nil,  4808,   nil,  1604,  9394,  1836,   nil,
   nil,   nil,   967,   749,   731,   744, 21806,  3038,  3855,  7735,
   nil,   nil,   nil,   nil,  8322,   817,   nil,   538,   nil,   nil,
   nil,   nil,   725,  8561,  8680,   nil,   nil,   nil,   nil,   nil,
   742,  8082,   nil,   nil,   nil,   nil,  7962,  7842,  8799,  8918,
  1117,  5288,  1940,  6791,   169,  7971,  8451,   437,  8689, 12259,
  9165,  9641,  9879,   529, 10355, 11307,   675, 11545,   918,  8927,
   783, 11783,   136,  9156,   767,  9275, 20947,  9632,   813,   777,
  6782,  6662,  6452,  1573,   658,   668,   nil,   nil,   650,   642,
  2432, 10584,  3093,   337, 10822,   nil,   nil,   nil,  3730,  3443,
  3336, 11417,  2881,   nil,   nil,   982,   508,  4799,   nil, 12607,
   -28,   nil,   nil,   nil, 13797,   nil, 14154,   652,   nil,   nil,
 20784,   nil, 14273,   nil,   nil,   nil,   627,   nil,   nil,   nil,
 14392,   696, 21881,   nil,   616,   nil,   591,   nil,   nil,   nil,
   -32,   665, 15344,  1776,   nil,   nil,   657,   556,   nil,   nil,
   562,   621,   539,   nil,   497,   nil,   494,   nil,   nil,  1582,
  1895,   481,   452,   nil,   460,   266,   nil,   836,   247,  1122,
  1945,   240,   246,    78,   178,   158,   nil, 16296,   nil,   nil,
   nil,    15,   nil,    61,    21,   -11,   -21,   nil,   -29,    12,
   -84,  4328,  7492,   353,   nil,   nil,   nil,   nil,   nil, 20342,
 17129,   nil,    49,   -45,   200, 16891, 16415,   nil,   nil,   nil,
   100,   565,   649,    97,    98,   651,   -20,   209,   nil, 21504,
   259,   nil,   694,   nil,   nil,   nil,   nil,   288,   119,   nil,
   478,   502,   531,  7381, 20759,   570,  3196,    17,   145,   nil,
   584,   587,   605,   nil,   nil,  1668,   -23,   107,   264,   561,
   134,   334,   283,   nil,   nil,   nil,   nil,   327,   nil,   696,
   609,   nil,   710,   532,  5519,   317,  9989,  9870,   691,   nil,
   nil,   721,   nil,   698,   nil,  6902,   789,   732, 21429,   nil,
   nil,  5048,  6329,   nil,   nil,   nil,   nil,   nil,  2840,   nil,
  1283,   nil,  2897,   470,   nil,   762,  1413,   nil,   nil,   nil,
  2546,   nil,   nil,   nil,   781,   nil, 13202,   597, 13321, 13440,
   nil,   nil, 21956,   809,   nil,  1402,   nil,  1783,   nil,  1000,
   nil,   nil,   nil,   828,   nil, 11069,   nil, 10831,   nil,   nil,
 14987, 10117,   nil,  9403,   nil,   nil,   484,   858, 16534,   938,
   nil,   939,   nil,   nil, 17010,   nil,  7372, 20104,   nil,   nil,
   nil,   218,  5039,   nil,   nil,   nil,   960,   nil,   888, 20461,
  4568,   nil, 21655,   294,   nil,   nil,  6099,   nil,   nil,  1005,
   928,   930,   937,  1294,   946,  2236,   950,   952,   955, 13916,
   453,  1018,   nil,   983,   987,   nil,   988,   992,   996,   nil,
 10593,   nil,   289,   nil,   nil, 20703,   542,   nil,  1118,   nil,
  1042,  1153,  1075,   306,  1088,   nil,  8442,   nil,   nil,   nil,
   nil,   nil,  2000,  1063,  2117,   nil,   nil,  3623,   nil,   nil,
  2225,   nil,  2832,   nil,   nil,  2605,   nil,  8202,   nil,   nil,
   nil,   nil,  1013, 10346,  3568,   969,  1207,  1128,  1129,  1119,
  1121,  1135,  1141,  1143,  1144,   763,   290,   602,  1134,   229,
   305,   nil,   nil,   nil,   nil,  1177,   nil,   nil,   nil,   144,
  1163,   nil ]

racc_action_default = [
    -2,  -539,    -1,  -538,  -539,  -447,  -437,  -539,  -539,  -476,
  -539,  -446,  -438,  -422,  -525,  -539,   -65,  -539,  -448,  -420,
  -311,  -286,  -539,  -449,  -422,  -404,    -5,  -455,  -422,  -309,
  -269,   -69,  -539,  -539,    -6,  -539,  -456,  -412,  -310,  -539,
  -418,  -312,   -79,  -539,    -9,  -400,  -301,  -539,  -539,  -539,
  -539,   -40,  -451,  -403,  -313,  -302,  -539,  -453,  -450,  -405,
  -314,  -303,  -261,  -452,  -315,  -304,  -262,  -539,  -539,   -46,
  -527,  -525,   -48,  -539,  -263,  -441,  -538,   -49,  -306,  -264,
  -539,  -539,  -265,  -515,  -443,   -53,  -266,  -442,  -401,  -268,
  -539,  -538,  -444,  -402,  -307,  -278,  -539,  -538,  -445,  -308,
  -233,  -281,  -538,   -41,   -77,  -384,    -3,  -539,  -527,  -539,
   952,  -539,  -176,  -126,  -171,  -161,  -118,  -127,  -152,  -160,
  -119,  -169,  -539,  -128,  -155,  -132,  -139,  -179,  -181,  -133,
  -164,  -120,  -185,  -134,  -141,  -151,  -121,  -186,  -136,  -138,
  -122,  -165,  -137,  -129,  -154,  -140,  -142,  -123,  -143,  -453,
  -168,  -145,  -146,  -124,  -144,  -156,  -539,  -147,  -167,  -172,
  -148,  -157,  -174,  -476,  -180,  -158,  -166,  -149,  -109,  -159,
  -106,  -173,  -110,  -130,  -108,  -163,  -131,  -505,  -150,  -183,
  -175,  -107,  -184,  -182,  -135,  -177,  -125,  -170,  -178,  -117,
  -493,  -482,  -288,  -481,  -499,  -498,  -496,  -479,  -539,  -539,
  -500,  -478,  -538,  -477,  -369,  -495,  -480,  -538,  -539,  -475,
  -539,  -538,  -487,  -485,  -476,  -539,  -285,  -539,  -539,  -538,
  -269,  -538,  -509,  -377,  -254,  -301,  -302,  -248,  -453,  -538,
  -539,  -234,  -244,  -538,  -538,  -306,  -538,  -249,  -278,  -539,
   -57,  -539,  -539,  -539,  -539,  -176,  -169,  -179,  -164,  -146,
  -147,  -148,  -432,  -539,  -106,  -434,  -433,  -107,  -435,  -431,
    -4,  -534,  -536,  -526,  -535,  -539,  -538,  -539,    -8,  -539,
  -287,  -223,   -45,  -539,  -539,  -539,  -539,  -539,   -92,   -70,
  -539,   -85,  -539,  -527,  -538,  -305,  -281,   -73,  -384,  -539,
  -208,  -111,   -17,  -113,  -539,  -112,  -114,   -47,  -539,  -539,
  -539,   -81,  -539,  -539,  -439,  -440,  -539,  -539,  -539,  -539,
  -539,   -51,  -224,  -209,  -538,  -539,  -539,  -539,  -406,   -52,
  -539,  -539,  -275,  -539,  -539,  -539,  -539,  -539,  -539,  -539,
  -539,  -539,  -539,  -539,  -539,  -539,  -539,  -539,  -539,  -539,
  -539,  -539,  -539,  -539,  -539,  -539,  -539,  -539,  -539,  -528,
  -539,  -539,  -526,  -525,  -538,  -374,  -538,  -115,   -22,   -67,
  -539,  -527,   -13,   -14,  -539,  -525,  -538,  -539,  -269,  -453,
  -539,  -539,  -326,  -327,  -527,  -539,  -539,  -267,  -539,  -269,
  -104,  -539,  -539,  -101,  -539,  -102,  -539,  -531,  -235,  -531,
   -50,  -539,  -539,  -507,  -531,  -539,  -527,   -64,  -539,  -538,
   -75,  -539,  -383,   -63,  -539,  -539,  -527,  -538,  -189,   -31,
  -524,  -539,  -523,  -527,  -539,  -538,  -476,  -539,  -539,  -497,
  -538,  -367,  -538,  -501,  -504,  -468,  -539,  -473,  -539,  -484,
  -539,  -527,  -482,  -332,  -339,  -539,  -539,  -330,  -328,  -471,
  -539,  -538,  -539,  -539,  -538,  -539,  -253,  -245,  -252,  -539,
  -246,  -252,  -539,  -527,  -242,  -243,  -275,  -538,  -356,  -538,
  -359,  -357,  -538,  -539,  -538,   -58,  -255,  -512,  -250,  -538,
  -539,  -436,  -423,  -424,    -7,  -537,  -516,  -521,  -522,  -517,
  -382,  -380,  -539,  -527,  -516,  -518,  -519,  -517,  -381,  -538,
  -407,  -421,  -408,  -409,  -197,   -36,  -539,  -538,  -539,   -82,
  -439,  -440,   -91,  -539,  -527,   -71,  -539,  -539,  -539,  -539,
   -21,   -20,   -19,  -318,  -538,  -317,  -411,  -539,  -414,  -410,
  -416,  -417,  -539,  -539,  -539,   -27,   -23,   -24,   -25,   -26,
  -539,  -538,   -43,   -42,  -320,  -321,  -538,  -538,  -539,  -539,
  -213,  -210,  -218,  -211,  -225,  -219,  -212,  -226,  -220,  -200,
  -221,  -201,  -222,  -205,  -202,  -203,  -214,  -204,  -215,  -198,
  -216,  -199,  -227,  -539,  -217,  -539,  -231,  -539,  -539,  -539,
  -538,  -538,  -539,   -16,  -539,   -66,  -273,   -12,  -526,  -527,
  -539,  -538,  -539,  -275,  -539,  -272,  -516,  -517,  -538,  -538,
  -539,  -538,  -539,  -101,  -103,  -102,  -539,  -538,  -457,  -539,
  -539,  -276,  -236,  -532,  -533,  -238,  -533,  -539,   -37,  -254,
  -187,   -29,  -539,  -277,  -508,  -280,  -527,  -271,  -316,  -392,
  -538,  -538,  -539,   -83,   -78,   -39,   -38,   -30,   -44,  -284,
  -527,  -539,  -539,  -476,  -506,  -461,  -539,  -527,  -489,  -483,
  -539,  -539,  -538,  -503,  -538,  -488,  -538,  -502,  -486,  -539,
  -539,  -337,  -527,  -494,  -538,  -538,  -361,  -539,  -527,  -520,
  -274,  -527,  -516,  -517,  -538,  -256,  -251,  -539,  -510,  -511,
  -239,  -482,  -491,  -538,  -538,  -538,  -538,  -355,  -539,  -539,
  -539,  -187,  -538,  -539,  -427,  -428,  -429,  -425,  -430,  -539,
  -539,  -379,   -61,  -539,  -385,  -539,  -539,  -240,  -241,  -378,
   -59,   -88,   -90,  -539,  -527,  -516,  -517,  -538,   -80,  -539,
   -74,   -18,  -538,  -319,  -413,  -415,  -419,  -206,  -207,   -28,
  -538,  -539,  -539,  -196,  -230,  -539,  -228,  -527,  -539,  -294,
  -539,  -539,  -539,  -116,  -529,   -15,   -68,  -520,  -274,  -527,
  -516,  -517,  -539,  -376,   -55,  -375,   -54,  -101,  -105,  -102,
  -527,  -459,  -539,  -539,  -538,  -531,  -539,  -539,  -260,  -279,
  -395,  -538,  -394,  -393,  -324,  -538,  -538,   -76,  -539,  -283,
  -298,  -190,  -538,  -299,  -460,  -370,  -371,  -466,  -539,  -464,
  -539,  -474,  -539,  -335,  -331,  -340,  -539,  -329,  -472,  -469,
  -539,  -365,  -363,  -366,  -362,  -368,  -539,  -385,  -539,  -539,
  -247,  -257,  -539,  -539,  -348,  -346,  -351,  -539,  -353,  -539,
  -358,  -387,  -386,  -539,  -426,  -194,   -35,  -195,   -62,  -530,
  -539,  -192,   -33,  -193,   -34,   -60,   -86,   -72,  -539,  -539,
  -322,  -539,  -291,  -292,  -539,  -282,  -538,  -539,  -293,  -373,
  -372,  -385,  -538,  -385,  -296,  -458,  -539,  -237,  -258,  -539,
  -188,  -397,  -539,  -539,  -325,  -399,  -538,   -11,   -84,  -539,
  -538,  -538,  -538,  -539,  -333,  -539,  -338,  -538,  -539,  -539,
  -490,  -539,  -360,  -538,  -538,  -492,  -538,  -538,  -538,   -56,
  -191,   -32,  -539,  -289,  -290,  -232,  -538,  -256,  -539,  -297,
  -259,  -539,  -100,  -453,  -539,  -396,  -538,  -398,  -300,  -467,
  -465,  -462,  -539,  -336,  -539,  -470,  -364,  -539,  -275,  -343,
  -539,  -345,  -539,  -352,  -349,  -539,  -354,  -538,  -388,  -389,
  -390,  -295,  -539,  -538,  -539,   -99,  -538,  -538,  -334,  -520,
  -274,  -538,  -538,  -538,  -538,  -538,  -520,   -98,  -527,  -516,
  -517,  -391,  -463,  -344,  -341,  -539,  -347,  -350,  -323,  -385,
  -538,  -342 ]

clist = [
'26,168,209,514,415,296,168,447,311,450,298,272,263,621,44,260,387,319',
'279,465,531,453,568,398,163,315,168,395,44,252,350,320,204,240,389,482',
'694,489,536,537,394,645,321,361,675,296,353,602,766,605,653,295,624',
'223,614,658,285,390,483,292,34,792,431,784,608,400,168,232,405,359,668',
'678,351,829,268,459,491,625,462,875,793,355,382,642,785,594,666,421',
'388,666,597,295,177,253,393,743,745,655,377,357,409,407,673,232,273',
'285,518,270,274,411,386,122,232,509,676,285,373,794,358,857,198,392',
'14,918,397,761,853,318,403,285,269,192,299,517,285,3,303,687,259,644',
'106,2,371,430,1,588,589,831,402,297,,,232,,,,209,710,232,,,,232,,297',
',,,,,297,466,467,,468,,,,,,,297,875,,438,297,,,,,,455,,,,374,570,,571',
'424,,,,15,424,,,209,424,,217,,,482,797,489,446,15,446,,866,,217,,,668',
'454,,455,,458,277,,458,,217,661,441,,,730,,262,503,,,217,,505,,217,504',
',,,217,217,826,478,,,,,454,495,,,217,707,,413,217,906,767,44,,15,359',
'707,784,367,217,526,527,528,529,232,803,652,704,378,793,841,762,748',
'217,948,903,,262,,217,15,843,277,217,682,,,378,488,217,285,919,,,607',
'525,,223,474,609,,232,715,,,,631,607,,402,,579,626,,636,,928,,,,,,,',
',638,,,,458,707,458,569,,217,,616,359,827,,707,578,,,577,,,,,573,,739',
',,,,665,,611,395,669,750,,,,,623,,653,664,873,627,,,619,645,,,,,,,168',
',455,,651,209,438,,,,,847,,,,,645,297,297,297,297,,285,633,,217,532',
'533,,836,15,,478,862,656,637,,454,,693,,,,,,,677,,800,232,656,,,,,455',
'842,458,874,15,877,,217,,,,,818,,,772,217,,,,825,,296,,,15,,697,277',
'488,478,,949,728,623,454,,,609,600,,478,232,168,,,692,15,217,217,217',
'217,,700,,15,,217,217,752,628,630,,725,,,691,,295,,,,285,698,,665,711',
'395,,,232,941,488,758,455,296,607,232,755,534,534,763,488,,455,232,',
',920,896,742,15,,,,,168,15,932,,,,,,478,753,,,,454,,,262,,478,217,697',
'697,917,454,735,295,217,,262,,,217,801,733,,,277,,,217,217,217,15,,623',
'598,744,746,,,15,,760,764,,15,693,15,438,438,488,209,,,,,698,698,,,488',
',,232,424,,424,635,424,217,232,232,285,232,,,424,424,57,,,,,149,15,',
'446,15,,693,,,57,617,15,656,424,424,424,,846,,,816,727,,281,217,,822',
'824,848,,,217,,,,859,707,,623,217,297,693,,,,,697,,277,,,764,693,,,297',
'15,938,646,764,,,,,,,,,57,,654,,369,15,,,285,,15,15,,,149,,,,,674,691',
',,,698,,57,,281,858,,864,851,149,438,,,855,,217,,887,,,15,15,,,,,,,15',
'890,7,217,,,217,,,,217,217,,217,,285,7,,,15,,217,,,,882,,,,,,881,,,',
',,,,,,,,,277,,751,,,285,754,,,,,,,,,438,729,438,,,,,,,,,,,,,,7,,,,424',
'424,424,,,,,424,,,,,,424,424,,424,424,424,,285,438,7,96,,15,764,57,455',
',,,217,,,,,96,217,217,,693,,478,770,,,,,773,,,277,,,,57,,478,,,,,454',
',,619,424,,,,424,424,424,424,764,,57,,,281,,,,,297,,,,,424,,,,,,96,15',
',57,372,,,,,575,,57,15,,488,277,,534,,15,,,585,,,,96,232,845,,,,,,,',
',,832,833,,,,,615,,,838,,870,,,,,629,,,57,7,,,634,,57,,,,217,,844,,',
',,,217,,,,648,,,,15,,,,7,,15,,,,,,,,,281,891,,670,,15,57,,,,7,,,,57',
'860,,861,,57,,57,,,,,,867,,,,,7,,,,,,,,7,364,,,876,15,878,,883,,884',
',,,708,,,,57,,96,57,,,,889,15,,57,,,,217,,,,,,898,,,,,,,,7,,,96,,,7',
',,,,,,,,,,,,281,,921,,,96,425,,57,,,427,,,,439,,,,,,,,,736,57,,96,7',
',57,57,,,927,96,7,,,,,7,931,7,933,,,934,,,,,,,,,,,,,,759,,,57,57,,,',
',,,57,,,769,,950,30,,7,96,774,7,,,,96,,,7,57,30,,364,,,787,,,,,,795',
',,278,,,,,,,,,,281,,,,,,,,,,,,96,,,,,,,7,96,,,,,96,,96,364,,,,,,,30',
'7,,,368,,7,7,,,,,,,379,,,,,,,835,,530,,57,30,,278,96,,,96,379,,,,,,96',
'7,7,,,,,,,7,,,,281,,,,,,,,,,,,,,,7,,,,,,,,364,,,,,,,,,96,,,,,,,,,,,',
',57,,,,96,,,,,96,96,57,,,281,,,,57,,,,,,,,,,,,,,640,,641,,,,,,,,,96',
'96,,,,149,,,96,,,,7,,,,,,30,,,,,,,,,96,679,,,680,,,,,,,683,57,,,,,,57',
',30,,,,,,,,893,,,,57,,,,,,,,,30,,,278,,,,,,,,,,,,712,7,,,,,,30,,,,,7',
',,30,57,720,,7,,,721,722,,,,,,96,,,,,,,,57,,,,,,,,,,,,,,,,,,,731,732',
',,,30,,,,,,30,,,,,777,,779,,781,,,,,,,7,788,789,,,,7,,,,,,,,,,,,96,278',
'7,804,806,808,,30,,,,96,231,,,30,,,96,,30,,30,,271,,,,,,,,,,290,,,,',
',,,7,,,,,,231,312,313,,,,,,,231,,30,,,30,7,,,,813,,30,688,,,,,,,,,,',
',96,,,,,,96,,,,,231,,,,231,895,231,,,96,231,,,278,231,,,,,,408,30,,',
',,,,,,,,,,,,,,30,,,,,30,30,,,,,96,,,,,,,,854,,,,,,,,,,,,,96,,,,,,,30',
'30,,,,,,,30,,,,,,,,,,,899,900,901,,,,,905,30,,,,,909,911,,913,914,916',
',,,,,,,,,,,,271,886,278,,,,,888,,,,231,,,,,,,,,,897,,231,231,,231,,',
',,,,,,,942,,,,943,944,946,947,,,,,231,,,,,,,,,494,,951,,926,30,,,,,',
',,,,,,,,,,,,,,935,,,,,,,278,,,,,,,,,,,,,,,,,540,541,542,543,544,545',
'546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562',
',564,,566,,30,,,,,,,,,,,30,,,278,,,,30,,,,,,,,,,,,,,,,,,,,,610,,,,,231',
',,,379,,,,231,,276,276,,,,,,,,,,231,,,,,276,276,,,,,,,,,,,30,,,,,,30',
',408,,231,,,,231,494,892,231,231,,30,276,,,,,,,,681,,276,276,,,,,,276',
',,,,,,276,,,231,,276,,,,,231,,,,,30,,,231,,,,,,,,,,,,,,,,,,30,,,,,,',
',717,718,,,,,,,,,,,,,,723,724,,,,,,,,,,,,,,,,,,,,,,,,726,,,,231,,,,',
',,,,,,,,,231,,,,,,,231,231,,231,,276,,,,,,,,,,,231,,231,,,,,,231,,,',
'276,276,,276,231,,,,,,,,,,,,771,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,276,,,',
',231,,,,,,,,,,,,,,,,,,,,,,815,817,,,,,821,823,,,276,276,276,276,276',
'276,276,276,276,276,276,276,276,276,276,276,276,276,276,276,276,276',
'276,,276,,276,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,231,850,,,,,,,,,,,,,,,,',
',,276,,,,,,,,,,,,,,,,276,,,,815,,821,823,,,,,,,,,,,,,,,,,,276,,,880',
',,276,276,,276,276,,,,,,,885,,,231,276,,,,,,,,,,,231,,,,,,,,,,,,,,,',
',,,,880,,,,,,,,,,,,276,,,,,,,,,,,,,,,,,276,276,,,,,,,,,,,,,,276,276',
',,,,,,,,231,,,,,,,,,,,,,,,276,,,,276,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,276,,276,,,,,,276,,,,,,,,276,,276,,,,,,,,,,276,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,276,,,,,,,,,,,,,,,,,,,,,,,276,,,,,,,,,,,,,,,,,,,276',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,276,276,,,,,,,,,,,276',
',,,,,,,,,,,,,,,,,,,,,,,,,,,276,,276,276,,,276,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,276,,,276,,,,,,,,,,,,276,,,276,,,,,,,,,,,,,,,,,276' ]
        racc_goto_table = arr = Array.new(2878, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'7,54,112,85,100,58,54,68,36,68,19,21,9,13,10,6,63,36,47,40,85,25,92',
'11,53,19,54,29,10,53,32,19,120,39,65,38,26,38,89,89,65,137,19,44,109',
'58,19,64,14,64,138,57,49,66,64,114,59,36,25,17,8,116,105,103,28,48,54',
'34,32,43,142,114,6,86,8,41,132,28,41,139,117,77,52,110,106,51,69,119',
'7,69,96,57,76,129,7,67,67,110,77,17,21,52,107,34,129,59,132,81,129,102',
'62,101,34,31,110,59,22,115,18,15,118,80,5,122,39,123,124,127,39,59,128',
'83,130,131,59,4,133,134,135,136,3,2,94,141,1,38,38,14,66,30,,,34,,,',
'112,49,34,,,,34,,30,,,,,,30,29,29,,29,,,,,,,30,139,,104,30,,,,,,36,',
',,30,41,,41,7,,,,24,7,,,112,7,,24,,,38,26,38,7,24,7,,106,,24,,,142,7',
',36,,7,24,,7,,24,25,120,,,92,,97,32,,,24,,48,,24,44,,,,24,24,26,54,',
',,,7,21,,,24,38,,30,24,116,49,10,,24,43,38,103,24,24,19,19,19,19,34',
'114,105,25,24,117,26,28,51,24,86,106,,97,,24,24,26,24,24,41,,,24,66',
'24,59,14,,,63,10,,66,8,29,,34,132,,,,11,63,,66,,44,29,,11,,106,,,,,',
',,,29,,,,7,38,7,6,,24,,36,43,49,,38,9,,,6,,,,,10,,25,,,,,29,,21,29,29',
'25,,,,,47,,138,65,109,21,,,7,137,,,,,,,54,,36,,104,112,104,,,,,64,,',
',,137,30,30,30,30,,59,53,,24,30,30,,85,24,,54,110,7,120,,7,,32,,,,,',
',112,,68,34,7,,,,,36,89,7,110,24,110,,24,,,,,40,,,100,24,,,,40,,58,',
',24,,7,24,66,54,,26,63,47,7,,,29,30,,54,34,54,,,39,24,24,24,24,24,,39',
',24,,24,24,11,30,30,,32,,,66,,57,,,,59,66,,29,17,29,,,34,13,66,29,36',
'58,63,34,65,97,97,29,66,,36,34,,,92,85,19,24,,,,,54,24,110,,,,,,54,19',
',,,7,,,97,,54,24,7,7,85,7,10,57,24,,97,,,24,29,17,,,24,,,24,24,24,24',
',47,97,39,39,,,24,,7,7,,24,32,24,104,104,66,112,,,,,66,66,,,66,,,34',
'7,,7,97,7,24,34,34,59,34,,,7,7,50,,,,,50,24,,7,24,,32,,,50,79,24,7,7',
'7,7,,11,,,21,30,,50,24,,21,21,29,,,24,,,,11,38,,47,24,30,32,,,,,7,,24',
',,7,32,,,30,24,25,108,7,,,,,,,,,50,,108,,50,24,,,59,,24,24,,,50,,,,',
'108,66,,,,66,,50,,50,47,,104,7,50,104,,,7,,24,,29,,,24,24,,,,,,,24,29',
'23,24,,,24,,,,24,24,,24,,59,23,,,24,,24,,,,19,,,,,,21,,,,,,,,,,,,,24',
',97,,,59,97,,,,,,,,,104,79,104,,,,,,,,,,,,,,23,,,,7,7,7,,,,,7,,,,,,7',
'7,,7,7,7,,59,104,23,20,,24,7,50,36,,,,24,,,,,20,24,24,,32,,54,79,,,',
',79,,,24,,,,50,,54,,,,,7,,,7,7,,,,7,7,7,7,7,,50,,,50,,,,,30,,,,,7,,',
',,,20,24,,50,20,,,,,45,,50,24,,66,24,,97,,24,,,45,,,,20,34,97,,,,,,',
',,,79,79,,,,,45,,,79,,24,,,,,45,,,50,23,,,45,,50,,,,24,,79,,,,,,24,',
',,45,,,,24,,,,23,,24,,,,,,,,,50,24,,45,,24,50,,,,23,,,,50,108,,108,',
'50,,50,,,,,,108,,,,,23,,,,,,,,23,12,,,108,24,108,,79,,79,,,,45,,,,50',
',20,50,,,,79,24,,50,,,,24,,,,,,79,,,,,,,,23,,,20,,,23,,,,,,,,,,,,,50',
',79,,,20,111,,50,,,111,,,,111,,,,,,,,,45,50,,20,23,,50,50,,,108,20,23',
',,,,23,108,23,108,,,108,,,,,,,,,,,,,,45,,,50,50,,,,,,,50,,,45,,108,27',
',23,20,45,23,,,,20,,,23,50,27,,12,,,45,,,,,,45,,,27,,,,,,,,,,50,,,,',
',,,,,,,20,,,,,,,23,20,,,,,20,,20,12,,,,,,,27,23,,,27,,23,23,,,,,,,27',
',,,,,,45,,12,,50,27,,27,20,,,20,27,,,,,,20,23,23,,,,,,,23,,,,50,,,,',
',,,,,,,,,,23,,,,,,,,12,,,,,,,,,20,,,,,,,,,,,,,50,,,,20,,,,,20,20,50',
',,50,,,,50,,,,,,,,,,,,,,12,,12,,,,,,,,,20,20,,,,50,,,20,,,,23,,,,,,27',
',,,,,,,,20,12,,,12,,,,,,,12,50,,,,,,50,,27,,,,,,,,50,,,,50,,,,,,,,,27',
',,27,,,,,,,,,,,,12,23,,,,,,27,,,,,23,,,27,50,12,,23,,,12,12,,,,,,20',
',,,,,,,50,,,,,,,,,,,,,,,,,,,12,12,,,,27,,,,,,27,,,,,111,,111,,111,,',
',,,,23,111,111,,,,23,,,,,,,,,,,,20,27,23,111,111,111,,27,,,,20,33,,',
'27,,,20,,27,,27,,33,,,,,,,,,,33,,,,,,,,23,,,,,,33,33,33,,,,,,,33,,27',
',,27,23,,,,12,,27,27,,,,,,,,,,,,20,,,,,,20,,,,,33,,,,33,20,33,,,20,33',
',,27,33,,,,,,33,27,,,,,,,,,,,,,,,,,27,,,,,27,27,,,,,20,,,,,,,,12,,,',
',,,,,,,,,20,,,,,,,27,27,,,,,,,27,,,,,,,,,,,111,111,111,,,,,111,27,,',
',,111,111,,111,111,111,,,,,,,,,,,,,33,12,27,,,,,12,,,,33,,,,,,,,,,12',
',33,33,,33,,,,,,,,,,111,,,,111,111,111,111,,,,,33,,,,,,,,,33,,111,,12',
'27,,,,,,,,,,,,,,,,,,,,12,,,,,,,27,,,,,,,,,,,,,,,,,33,33,33,33,33,33',
'33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,,33,,33,,27,,,,,',
',,,,,27,,,27,,,,27,,,,,,,,,,,,,,,,,,,,,33,,,,,33,,,,27,,,,33,,42,42',
',,,,,,,,,33,,,,,42,42,,,,,,,,,,,27,,,,,,27,,33,,33,,,,33,33,27,33,33',
',27,42,,,,,,,,33,,42,42,,,,,,42,,,,,,,42,,,33,,42,,,,,33,,,,,27,,,33',
',,,,,,,,,,,,,,,,,27,,,,,,,,33,33,,,,,,,,,,,,,,33,33,,,,,,,,,,,,,,,,',
',,,,,,,33,,,,33,,,,,,,,,,,,,,33,,,,,,,33,33,,33,,42,,,,,,,,,,,33,,33',
',,,,,33,,,,42,42,,42,33,,,,,,,,,,,,33,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,42',
',,,,33,,,,,,,,,,,,,,,,,,,,,,33,33,,,,,33,33,,,42,42,42,42,42,42,42,42',
'42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,,42,,42,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,33,33,,,,,,,,,,,,,,,,,,,42,,,,,,,,,,,,,,,,42,,,,33,,33',
'33,,,,,,,,,,,,,,,,,,42,,,33,,,42,42,,42,42,,,,,,,33,,,33,42,,,,,,,,',
',,33,,,,,,,,,,,,,,,,,,,,33,,,,,,,,,,,,42,,,,,,,,,,,,,,,,,42,42,,,,,',
',,,,,,,,42,42,,,,,,,,,33,,,,,,,,,,,,,,,42,,,,42,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,42,,42,,,,,,42,,,,,,,,42,,42,,,,,,,,,,42,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,42,,,,,,,,,,,,,,,,,,,,,,,42,,,,,,,,,,,,,,,,,',
',42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,42,42,,,,,,,,,,,42',
',,,,,,,,,,,,,,,,,,,,,,,,,,,42,,42,42,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,42,,,42,,,,,,,,,,,,42,,,42,,,,,,,,,,,,,,,,,42' ]
        racc_goto_check = arr = Array.new(2878, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_goto_pointer = [
   nil,   144,   141,   137,   135,   119,     1,    -3,    57,    -2,
    11,   -79,  1016,  -386,  -573,  -647,   nil,    26,    45,   -25,
   877,   -11,    36,   777,   200,  -208,  -447,  1231,  -327,   -70,
   114,  -179,   -40,  1633,    57,   nil,   -38,   nil,  -230,    23,
  -221,  -158,  2008,    -7,   -33,   601,   nil,   -13,   -39,  -349,
   650,  -296,    -8,    16,    -7,   nil,   nil,    18,   -28,    25,
   nil,   nil,    19,   -75,  -340,   -57,    43,  -493,  -212,  -362,
   nil,   nil,   nil,   nil,   nil,   nil,    84,     9,   nil,   270,
    24,    86,   nil,   122,   nil,  -295,  -639,   nil,   nil,  -282,
   nil,   nil,  -329,   nil,    62,   nil,  -292,   228,   nil,   nil,
  -159,   103,   -13,  -586,   -26,  -148,  -566,  -355,   288,  -413,
  -343,   960,    -7,   nil,  -386,  -540,  -596,  -577,   111,  -111,
    23,   nil,  -763,  -495,  -635,   nil,   nil,    74,   111,    80,
    95,  -166,  -193,    96,  -333,   125,  -287,  -385,  -390,  -728,
   nil,   -65,  -381 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   362,   nil,   352,
   363,   nil,   399,   nil,   830,   nil,   365,   nil,   nil,   nil,
   239,   103,   107,   215,   289,   nil,   nil,   220,   nil,   224,
    51,   nil,   574,    69,    72,    77,   237,    85,   703,   nil,
   nil,   nil,    10,    16,   nil,   nil,    31,    39,    42,   nil,
   228,   380,   nil,   291,   486,   172,   293,    88,    93,   100,
   347,   323,   nil,   219,   nil,   221,   480,   699,   nil,   227,
    62,    66,    74,    79,    82,    86,    89,   nil,   102,   nil,
   nil,   216,    21,   nil,    35,   nil,   nil,    50,    56,   nil,
    67,    71,   nil,    80,   nil,    90,   nil,   515,   109,     8,
   nil,   nil,   nil,   437,   213,   nil,   433,   nil,   202,   nil,
   207,   nil,   643,   461,   nil,   nil,   nil,   193,   nil,   nil,
   414,   481,   nil,   nil,   nil,    45,    53,    59,   nil,   nil,
   nil,   nil,   472,   nil,   nil,   nil,   211,   212,   190,   672,
   195,   199,   222 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 149, :_reduce_1,
  0, 152, :_reduce_2,
  2, 150, :_reduce_3,
  2, 151, :_reduce_4,
  1, 153, :_reduce_5,
  1, 153, :_reduce_6,
  3, 153, :_reduce_7,
  2, 153, :_reduce_8,
  1, 156, :_reduce_9,
  1, 156, :_reduce_none,
  4, 159, :_reduce_11,
  2, 160, :_reduce_12,
  1, 164, :_reduce_13,
  1, 164, :_reduce_14,
  3, 164, :_reduce_15,
  2, 164, :_reduce_none,
  0, 179, :_reduce_17,
  4, 158, :_reduce_18,
  3, 158, :_reduce_none,
  3, 158, :_reduce_none,
  3, 158, :_reduce_none,
  2, 158, :_reduce_none,
  3, 158, :_reduce_23,
  3, 158, :_reduce_24,
  3, 158, :_reduce_none,
  3, 158, :_reduce_none,
  3, 158, :_reduce_none,
  4, 158, :_reduce_none,
  3, 158, :_reduce_29,
  3, 158, :_reduce_none,
  3, 158, :_reduce_none,
  6, 158, :_reduce_none,
  5, 158, :_reduce_none,
  5, 158, :_reduce_none,
  5, 158, :_reduce_none,
  3, 158, :_reduce_none,
  3, 158, :_reduce_none,
  3, 158, :_reduce_none,
  3, 158, :_reduce_none,
  1, 158, :_reduce_none,
  1, 178, :_reduce_none,
  3, 178, :_reduce_none,
  3, 178, :_reduce_none,
  3, 178, :_reduce_44,
  2, 178, :_reduce_none,
  1, 178, :_reduce_none,
  1, 167, :_reduce_none,
  1, 169, :_reduce_none,
  1, 169, :_reduce_none,
  2, 169, :_reduce_50,
  2, 169, :_reduce_none,
  2, 169, :_reduce_none,
  1, 183, :_reduce_none,
  4, 183, :_reduce_none,
  4, 183, :_reduce_none,
  4, 188, :_reduce_none,
  2, 182, :_reduce_57,
  3, 182, :_reduce_none,
  4, 182, :_reduce_59,
  5, 182, :_reduce_none,
  4, 182, :_reduce_none,
  5, 182, :_reduce_none,
  2, 182, :_reduce_63,
  2, 182, :_reduce_64,
  1, 170, :_reduce_none,
  3, 170, :_reduce_none,
  1, 192, :_reduce_none,
  3, 192, :_reduce_none,
  1, 191, :_reduce_none,
  2, 191, :_reduce_none,
  3, 191, :_reduce_none,
  5, 191, :_reduce_none,
  2, 191, :_reduce_none,
  4, 191, :_reduce_none,
  2, 191, :_reduce_none,
  4, 191, :_reduce_none,
  1, 191, :_reduce_none,
  3, 191, :_reduce_none,
  1, 195, :_reduce_none,
  3, 195, :_reduce_none,
  2, 194, :_reduce_none,
  3, 194, :_reduce_none,
  1, 197, :_reduce_none,
  3, 197, :_reduce_none,
  1, 196, :_reduce_none,
  4, 196, :_reduce_none,
  3, 196, :_reduce_none,
  3, 196, :_reduce_none,
  3, 196, :_reduce_none,
  3, 196, :_reduce_none,
  2, 196, :_reduce_none,
  1, 196, :_reduce_none,
  1, 168, :_reduce_none,
  4, 168, :_reduce_94,
  3, 168, :_reduce_95,
  3, 168, :_reduce_none,
  3, 168, :_reduce_none,
  3, 168, :_reduce_none,
  2, 168, :_reduce_none,
  1, 168, :_reduce_none,
  1, 199, :_reduce_101,
  1, 199, :_reduce_102,
  2, 200, :_reduce_103,
  1, 200, :_reduce_104,
  3, 200, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_109,
  1, 201, :_reduce_110,
  1, 204, :_reduce_none,
  1, 204, :_reduce_none,
  1, 165, :_reduce_none,
  1, 165, :_reduce_none,
  1, 166, :_reduce_none,
  3, 166, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  3, 181, :_reduce_187,
  5, 181, :_reduce_none,
  3, 181, :_reduce_189,
  5, 181, :_reduce_none,
  6, 181, :_reduce_none,
  5, 181, :_reduce_192,
  5, 181, :_reduce_none,
  5, 181, :_reduce_none,
  5, 181, :_reduce_none,
  4, 181, :_reduce_none,
  3, 181, :_reduce_none,
  3, 181, :_reduce_198,
  3, 181, :_reduce_199,
  3, 181, :_reduce_200,
  3, 181, :_reduce_201,
  3, 181, :_reduce_202,
  3, 181, :_reduce_203,
  3, 181, :_reduce_204,
  3, 181, :_reduce_205,
  4, 181, :_reduce_none,
  4, 181, :_reduce_none,
  2, 181, :_reduce_none,
  2, 181, :_reduce_209,
  3, 181, :_reduce_210,
  3, 181, :_reduce_211,
  3, 181, :_reduce_212,
  3, 181, :_reduce_213,
  3, 181, :_reduce_214,
  3, 181, :_reduce_215,
  3, 181, :_reduce_216,
  3, 181, :_reduce_217,
  3, 181, :_reduce_218,
  3, 181, :_reduce_219,
  3, 181, :_reduce_220,
  3, 181, :_reduce_221,
  3, 181, :_reduce_222,
  2, 181, :_reduce_223,
  2, 181, :_reduce_224,
  3, 181, :_reduce_225,
  3, 181, :_reduce_226,
  0, 208, :_reduce_227,
  4, 181, :_reduce_228,
  0, 209, :_reduce_229,
  4, 181, :_reduce_230,
  3, 181, :_reduce_none,
  6, 181, :_reduce_232,
  1, 181, :_reduce_none,
  1, 177, :_reduce_none,
  1, 210, :_reduce_none,
  2, 210, :_reduce_none,
  4, 210, :_reduce_none,
  2, 210, :_reduce_none,
  3, 214, :_reduce_239,
  1, 215, :_reduce_240,
  1, 215, :_reduce_none,
  1, 173, :_reduce_242,
  1, 173, :_reduce_none,
  1, 184, :_reduce_244,
  2, 184, :_reduce_245,
  2, 184, :_reduce_246,
  4, 184, :_reduce_247,
  1, 184, :_reduce_248,
  1, 187, :_reduce_none,
  2, 217, :_reduce_250,
  2, 216, :_reduce_251,
  1, 216, :_reduce_none,
  1, 216, :_reduce_none,
  1, 211, :_reduce_254,
  2, 211, :_reduce_255,
  3, 211, :_reduce_256,
  4, 211, :_reduce_257,
  3, 176, :_reduce_none,
  4, 176, :_reduce_none,
  2, 176, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  2, 207, :_reduce_267,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  3, 207, :_reduce_none,
  3, 207, :_reduce_none,
  3, 207, :_reduce_273,
  3, 207, :_reduce_274,
  2, 207, :_reduce_275,
  3, 207, :_reduce_276,
  3, 207, :_reduce_277,
  1, 207, :_reduce_278,
  4, 207, :_reduce_279,
  3, 207, :_reduce_280,
  1, 207, :_reduce_281,
  5, 207, :_reduce_none,
  4, 207, :_reduce_none,
  3, 207, :_reduce_none,
  2, 207, :_reduce_none,
  1, 207, :_reduce_286,
  2, 207, :_reduce_287,
  2, 207, :_reduce_none,
  6, 207, :_reduce_289,
  6, 207, :_reduce_290,
  5, 207, :_reduce_none,
  5, 207, :_reduce_none,
  5, 207, :_reduce_293,
  4, 207, :_reduce_294,
  7, 207, :_reduce_none,
  5, 207, :_reduce_296,
  6, 207, :_reduce_297,
  4, 207, :_reduce_298,
  5, 207, :_reduce_299,
  7, 207, :_reduce_300,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 172, :_reduce_none,
  1, 226, :_reduce_none,
  1, 232, :_reduce_none,
  1, 235, :_reduce_none,
  1, 236, :_reduce_none,
  1, 238, :_reduce_none,
  1, 239, :_reduce_none,
  1, 241, :_reduce_none,
  1, 243, :_reduce_none,
  1, 246, :_reduce_none,
  1, 247, :_reduce_none,
  1, 227, :_reduce_none,
  1, 233, :_reduce_none,
  1, 233, :_reduce_none,
  2, 233, :_reduce_none,
  1, 237, :_reduce_none,
  1, 237, :_reduce_none,
  1, 234, :_reduce_322,
  5, 234, :_reduce_323,
  1, 162, :_reduce_324,
  2, 162, :_reduce_325,
  1, 242, :_reduce_none,
  1, 242, :_reduce_none,
  1, 251, :_reduce_none,
  3, 251, :_reduce_none,
  1, 254, :_reduce_none,
  3, 254, :_reduce_none,
  1, 253, :_reduce_none,
  4, 253, :_reduce_none,
  6, 253, :_reduce_none,
  3, 253, :_reduce_none,
  5, 253, :_reduce_none,
  2, 253, :_reduce_none,
  4, 253, :_reduce_none,
  1, 253, :_reduce_none,
  3, 253, :_reduce_none,
  6, 255, :_reduce_none,
  8, 255, :_reduce_none,
  4, 255, :_reduce_none,
  6, 255, :_reduce_none,
  4, 255, :_reduce_none,
  2, 255, :_reduce_none,
  6, 255, :_reduce_none,
  2, 255, :_reduce_none,
  4, 255, :_reduce_none,
  6, 255, :_reduce_none,
  2, 255, :_reduce_none,
  4, 255, :_reduce_none,
  2, 255, :_reduce_none,
  4, 255, :_reduce_none,
  1, 255, :_reduce_none,
  1, 189, :_reduce_356,
  1, 189, :_reduce_none,
  3, 261, :_reduce_none,
  1, 261, :_reduce_none,
  4, 261, :_reduce_360,
  1, 262, :_reduce_none,
  2, 262, :_reduce_none,
  1, 263, :_reduce_none,
  3, 263, :_reduce_none,
  1, 264, :_reduce_none,
  1, 264, :_reduce_none,
  2, 231, :_reduce_none,
  4, 266, :_reduce_none,
  1, 266, :_reduce_none,
  3, 267, :_reduce_none,
  3, 267, :_reduce_none,
  4, 225, :_reduce_none,
  4, 225, :_reduce_373,
  2, 185, :_reduce_374,
  4, 185, :_reduce_none,
  4, 185, :_reduce_none,
  2, 230, :_reduce_377,
  4, 230, :_reduce_378,
  4, 230, :_reduce_379,
  3, 230, :_reduce_380,
  3, 230, :_reduce_none,
  3, 230, :_reduce_none,
  2, 230, :_reduce_383,
  1, 230, :_reduce_384,
  4, 230, :_reduce_385,
  4, 229, :_reduce_386,
  4, 229, :_reduce_387,
  5, 240, :_reduce_388,
  1, 270, :_reduce_389,
  1, 270, :_reduce_none,
  6, 161, :_reduce_none,
  1, 161, :_reduce_none,
  1, 271, :_reduce_none,
  1, 271, :_reduce_none,
  1, 271, :_reduce_none,
  2, 272, :_reduce_none,
  1, 272, :_reduce_none,
  2, 163, :_reduce_none,
  1, 163, :_reduce_none,
  1, 218, :_reduce_none,
  1, 218, :_reduce_none,
  1, 218, :_reduce_none,
  1, 219, :_reduce_none,
  1, 274, :_reduce_none,
  1, 274, :_reduce_none,
  2, 274, :_reduce_none,
  3, 275, :_reduce_407,
  3, 220, :_reduce_408,
  3, 221, :_reduce_none,
  3, 222, :_reduce_none,
  3, 222, :_reduce_none,
  0, 278, :_reduce_none,
  3, 278, :_reduce_none,
  1, 279, :_reduce_none,
  2, 279, :_reduce_none,
  3, 223, :_reduce_none,
  3, 223, :_reduce_none,
  0, 281, :_reduce_418,
  3, 281, :_reduce_none,
  0, 276, :_reduce_420,
  2, 276, :_reduce_421,
  0, 277, :_reduce_422,
  2, 277, :_reduce_423,
  1, 280, :_reduce_424,
  2, 280, :_reduce_425,
  3, 280, :_reduce_426,
  1, 282, :_reduce_none,
  1, 282, :_reduce_none,
  1, 282, :_reduce_none,
  1, 282, :_reduce_none,
  2, 205, :_reduce_431,
  1, 283, :_reduce_none,
  1, 283, :_reduce_none,
  1, 283, :_reduce_none,
  1, 283, :_reduce_none,
  3, 206, :_reduce_436,
  1, 273, :_reduce_437,
  1, 273, :_reduce_438,
  2, 273, :_reduce_none,
  2, 273, :_reduce_none,
  1, 198, :_reduce_441,
  1, 198, :_reduce_442,
  1, 198, :_reduce_443,
  1, 198, :_reduce_444,
  1, 198, :_reduce_445,
  1, 198, :_reduce_446,
  1, 198, :_reduce_447,
  1, 198, :_reduce_448,
  1, 198, :_reduce_449,
  1, 198, :_reduce_450,
  1, 198, :_reduce_451,
  1, 198, :_reduce_452,
  1, 224, :_reduce_none,
  1, 171, :_reduce_none,
  1, 175, :_reduce_none,
  1, 175, :_reduce_none,
  1, 244, :_reduce_457,
  3, 244, :_reduce_458,
  2, 244, :_reduce_459,
  3, 248, :_reduce_460,
  2, 248, :_reduce_461,
  6, 268, :_reduce_462,
  8, 268, :_reduce_463,
  4, 268, :_reduce_464,
  6, 268, :_reduce_465,
  4, 268, :_reduce_466,
  6, 268, :_reduce_467,
  2, 268, :_reduce_468,
  4, 268, :_reduce_469,
  6, 268, :_reduce_470,
  2, 268, :_reduce_471,
  4, 268, :_reduce_472,
  2, 268, :_reduce_473,
  4, 268, :_reduce_474,
  1, 268, :_reduce_475,
  0, 268, :_reduce_476,
  1, 265, :_reduce_none,
  1, 265, :_reduce_none,
  1, 265, :_reduce_none,
  1, 265, :_reduce_none,
  1, 252, :_reduce_none,
  1, 252, :_reduce_482,
  3, 252, :_reduce_483,
  2, 252, :_reduce_484,
  1, 285, :_reduce_485,
  3, 285, :_reduce_none,
  1, 256, :_reduce_487,
  3, 256, :_reduce_488,
  3, 286, :_reduce_none,
  3, 287, :_reduce_none,
  1, 257, :_reduce_none,
  3, 257, :_reduce_none,
  1, 284, :_reduce_none,
  3, 284, :_reduce_none,
  1, 288, :_reduce_none,
  1, 288, :_reduce_none,
  2, 258, :_reduce_none,
  1, 258, :_reduce_none,
  1, 289, :_reduce_none,
  1, 289, :_reduce_none,
  2, 260, :_reduce_501,
  3, 260, :_reduce_502,
  2, 259, :_reduce_503,
  1, 259, :_reduce_none,
  1, 249, :_reduce_none,
  3, 249, :_reduce_none,
  1, 228, :_reduce_507,
  2, 228, :_reduce_508,
  1, 213, :_reduce_509,
  3, 213, :_reduce_510,
  3, 290, :_reduce_511,
  2, 290, :_reduce_512,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 186, :_reduce_516,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 269, :_reduce_520,
  1, 269, :_reduce_none,
  1, 269, :_reduce_none,
  1, 250, :_reduce_none,
  1, 250, :_reduce_none,
  0, 154, :_reduce_none,
  1, 154, :_reduce_none,
  0, 180, :_reduce_none,
  1, 180, :_reduce_none,
  2, 193, :_reduce_none,
  2, 174, :_reduce_none,
  0, 212, :_reduce_none,
  1, 212, :_reduce_none,
  1, 212, :_reduce_none,
  1, 245, :_reduce_none,
  1, 245, :_reduce_none,
  1, 157, :_reduce_none,
  2, 157, :_reduce_none,
  0, 155, :_reduce_none ]

racc_reduce_n = 539

racc_shift_n = 952

racc_token_table = {
  false => 0,
  :error => 1,
  "!" => 2,
  :tTILDE => 3,
  :tUPLUS => 4,
  :tPOW => 5,
  :tUMINUS_NUM => 6,
  :tUMINUS => 7,
  :tSTAR2 => 8,
  :tDIVIDE => 9,
  :tPERCENT => 10,
  :tPLUS => 11,
  :tMINUS => 12,
  :tLSHFT => 13,
  :tRSHFT => 14,
  :tAMPER2 => 15,
  :tPIPE => 16,
  :tCARET => 17,
  ">" => 18,
  :tGEQ => 19,
  "<" => 20,
  :tLEQ => 21,
  :tCMP => 22,
  :tEQ => 23,
  :tEQQ => 24,
  :tNEQ => 25,
  :tMATCH => 26,
  :tNMATCH => 27,
  :tANDOP => 28,
  :tOROP => 29,
  :tDOT2 => 30,
  :tDOT3 => 31,
  "?" => 32,
  ":" => 33,
  :kRESCUE_MOD => 34,
  "=" => 35,
  :tOP_ASGN => 36,
  :kNOT => 37,
  :kOR => 38,
  :kAND => 39,
  :kIF_MOD => 40,
  :kUNLESS_MOD => 41,
  :kWHILE_MOD => 42,
  :kUNTIL_MOD => 43,
  :tLBRACE_ARG => 44,
  :tLOWEST => 45,
  :kCLASS => 46,
  :kMODULE => 47,
  :kDEF => 48,
  :kUNDEF => 49,
  :kBEGIN => 50,
  :kRESCUE => 51,
  :kENSURE => 52,
  :kEND => 53,
  :kIF => 54,
  :kUNLESS => 55,
  :kTHEN => 56,
  :kELSIF => 57,
  :kELSE => 58,
  :kCASE => 59,
  :kWHEN => 60,
  :kWHILE => 61,
  :kUNTIL => 62,
  :kFOR => 63,
  :kBREAK => 64,
  :kNEXT => 65,
  :kREDO => 66,
  :kRETRY => 67,
  :kIN => 68,
  :kDO => 69,
  :kDO_COND => 70,
  :kDO_BLOCK => 71,
  :kDO_LAMBDA => 72,
  :kRETURN => 73,
  :kYIELD => 74,
  :kSUPER => 75,
  :kSELF => 76,
  :kNIL => 77,
  :kTRUE => 78,
  :kFALSE => 79,
  :kALIAS => 80,
  :kDEFINED => 81,
  :klBEGIN => 82,
  :klEND => 83,
  :k__LINE__ => 84,
  :k__FILE__ => 85,
  :k__ENCODING__ => 86,
  :kDEFined => 87,
  :tIDENTIFIER => 88,
  :tFID => 89,
  :tGVAR => 90,
  :tIVAR => 91,
  :tCONSTANT => 92,
  :tCVAR => 93,
  :tLABEL => 94,
  :tINTEGER => 95,
  :tFLOAT => 96,
  :tSTRING_CONTENT => 97,
  :tCHAR => 98,
  :tNTH_REF => 99,
  :tBACK_REF => 100,
  :tREGEXP_END => 101,
  :tAREF => 102,
  :tASET => 103,
  :tCOLON2 => 104,
  :tCOLON3 => 105,
  :tASSOC => 106,
  :tLPAREN => 107,
  :tLPAREN_ARG => 108,
  :tRPAREN => 109,
  :tLBRACK => 110,
  :tLBRACE => 111,
  :tSTAR => 112,
  :tAMPER => 113,
  :tLAMBDA => 114,
  :tSYMBEG => 115,
  :tSTRING_BEG => 116,
  :tXSTRING_BEG => 117,
  :tREGEXP_BEG => 118,
  :tWORDS_BEG => 119,
  :tQWORDS_BEG => 120,
  :tSTRING_DBEG => 121,
  :tSTRING_DVAR => 122,
  :tSTRING_END => 123,
  :tLAMBEG => 124,
  :tSTRING => 125,
  :tXSTRING_END => 126,
  "{" => 127,
  "}" => 128,
  "[" => 129,
  "." => 130,
  "," => 131,
  "|" => 132,
  "^" => 133,
  "&" => 134,
  "+" => 135,
  "-" => 136,
  "*" => 137,
  "/" => 138,
  "%" => 139,
  "~" => 140,
  "`" => 141,
  "(" => 142,
  ")" => 143,
  "]" => 144,
  ";" => 145,
  " " => 146,
  "\\n" => 147 }

racc_nt_base = 148

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\"!\"",
  "tTILDE",
  "tUPLUS",
  "tPOW",
  "tUMINUS_NUM",
  "tUMINUS",
  "tSTAR2",
  "tDIVIDE",
  "tPERCENT",
  "tPLUS",
  "tMINUS",
  "tLSHFT",
  "tRSHFT",
  "tAMPER2",
  "tPIPE",
  "tCARET",
  "\">\"",
  "tGEQ",
  "\"<\"",
  "tLEQ",
  "tCMP",
  "tEQ",
  "tEQQ",
  "tNEQ",
  "tMATCH",
  "tNMATCH",
  "tANDOP",
  "tOROP",
  "tDOT2",
  "tDOT3",
  "\"?\"",
  "\":\"",
  "kRESCUE_MOD",
  "\"=\"",
  "tOP_ASGN",
  "kNOT",
  "kOR",
  "kAND",
  "kIF_MOD",
  "kUNLESS_MOD",
  "kWHILE_MOD",
  "kUNTIL_MOD",
  "tLBRACE_ARG",
  "tLOWEST",
  "kCLASS",
  "kMODULE",
  "kDEF",
  "kUNDEF",
  "kBEGIN",
  "kRESCUE",
  "kENSURE",
  "kEND",
  "kIF",
  "kUNLESS",
  "kTHEN",
  "kELSIF",
  "kELSE",
  "kCASE",
  "kWHEN",
  "kWHILE",
  "kUNTIL",
  "kFOR",
  "kBREAK",
  "kNEXT",
  "kREDO",
  "kRETRY",
  "kIN",
  "kDO",
  "kDO_COND",
  "kDO_BLOCK",
  "kDO_LAMBDA",
  "kRETURN",
  "kYIELD",
  "kSUPER",
  "kSELF",
  "kNIL",
  "kTRUE",
  "kFALSE",
  "kALIAS",
  "kDEFINED",
  "klBEGIN",
  "klEND",
  "k__LINE__",
  "k__FILE__",
  "k__ENCODING__",
  "kDEFined",
  "tIDENTIFIER",
  "tFID",
  "tGVAR",
  "tIVAR",
  "tCONSTANT",
  "tCVAR",
  "tLABEL",
  "tINTEGER",
  "tFLOAT",
  "tSTRING_CONTENT",
  "tCHAR",
  "tNTH_REF",
  "tBACK_REF",
  "tREGEXP_END",
  "tAREF",
  "tASET",
  "tCOLON2",
  "tCOLON3",
  "tASSOC",
  "tLPAREN",
  "tLPAREN_ARG",
  "tRPAREN",
  "tLBRACK",
  "tLBRACE",
  "tSTAR",
  "tAMPER",
  "tLAMBDA",
  "tSYMBEG",
  "tSTRING_BEG",
  "tXSTRING_BEG",
  "tREGEXP_BEG",
  "tWORDS_BEG",
  "tQWORDS_BEG",
  "tSTRING_DBEG",
  "tSTRING_DVAR",
  "tSTRING_END",
  "tLAMBEG",
  "tSTRING",
  "tXSTRING_END",
  "\"{\"",
  "\"}\"",
  "\"[\"",
  "\".\"",
  "\",\"",
  "\"|\"",
  "\"^\"",
  "\"&\"",
  "\"+\"",
  "\"-\"",
  "\"*\"",
  "\"/\"",
  "\"%\"",
  "\"~\"",
  "\"`\"",
  "\"(\"",
  "\")\"",
  "\"]\"",
  "\";\"",
  "\" \"",
  "\"\\\\n\"",
  "$start",
  "target",
  "program",
  "top_compstmt",
  "@1",
  "top_stmts",
  "opt_terms",
  "none",
  "top_stmt",
  "terms",
  "stmt",
  "bodystmt",
  "compstmt",
  "opt_rescue",
  "opt_else",
  "opt_ensure",
  "stmts",
  "fitem",
  "undef_list",
  "expr_value",
  "lhs",
  "command_call",
  "mlhs",
  "var_lhs",
  "primary_value",
  "opt_call_args",
  "rbracket",
  "backref",
  "mrhs",
  "arg_value",
  "expr",
  "@2",
  "opt_nl",
  "arg",
  "command",
  "block_command",
  "call_args",
  "block_call",
  "operation2",
  "command_args",
  "cmd_brace_block",
  "opt_block_param",
  "operation",
  "mlhs_basic",
  "mlhs_inner",
  "rparen",
  "mlhs_head",
  "mlhs_item",
  "mlhs_node",
  "mlhs_post",
  "variable",
  "cname",
  "cpath",
  "fname",
  "op",
  "reswords",
  "fsym",
  "symbol",
  "dsym",
  "primary",
  "@3",
  "@4",
  "aref_args",
  "args",
  "trailer",
  "assocs",
  "paren_args",
  "opt_paren_args",
  "opt_block_arg",
  "block_arg",
  "literal",
  "strings",
  "xstring",
  "regexp",
  "words",
  "qwords",
  "var_ref",
  "do_block",
  "k_begin",
  "k_end",
  "assoc_list",
  "brace_block",
  "method_call",
  "lambda",
  "k_if",
  "then",
  "if_tail",
  "k_unless",
  "k_while",
  "do",
  "k_until",
  "k_case",
  "case_body",
  "k_for",
  "for_var",
  "k_class",
  "superclass",
  "term",
  "k_module",
  "k_def",
  "f_arglist",
  "singleton",
  "dot_or_colon",
  "f_marg",
  "f_norm_arg",
  "f_margs",
  "f_marg_list",
  "block_param",
  "f_arg",
  "f_block_optarg",
  "f_rest_arg",
  "opt_f_block_arg",
  "f_block_arg",
  "block_param_def",
  "opt_bv_decl",
  "bv_decls",
  "bvar",
  "f_bad_arg",
  "f_larglist",
  "lambda_body",
  "f_args",
  "operation3",
  "cases",
  "exc_list",
  "exc_var",
  "numeric",
  "string",
  "string1",
  "string_contents",
  "xstring_contents",
  "word_list",
  "word",
  "string_content",
  "qword_list",
  "string_dvar",
  "sym",
  "f_optarg",
  "f_arg_item",
  "f_opt",
  "f_block_opt",
  "restarg_mark",
  "blkarg_mark",
  "assoc" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 101)
  def _reduce_1(val, _values, result)
                        # puts 'well, we got here..'
                    # puts val[0]
                    @parser_result = val[0]
                    result = val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 109)
  def _reduce_2(val, _values, result)
                        self.lex_state = :EXPR_BEG
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 113)
  def _reduce_3(val, _values, result)
                        # puts 'program'
                    # puts val[1]
                    result = val[1]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 120)
  def _reduce_4(val, _values, result)
                        # puts 'top_compstmt'
                    # puts val[0]
                    # puts val[1]
                    result = val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 128)
  def _reduce_5(val, _values, result)
                        result = []
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 132)
  def _reduce_6(val, _values, result)
                        result = [val[0]]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 136)
  def _reduce_7(val, _values, result)
                        result = val[0] + [val[2]]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 140)
  def _reduce_8(val, _values, result)
                        result = val[1]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 145)
  def _reduce_9(val, _values, result)
                        result = val[0]
                  
    result
  end
.,.,

# reduce 10 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 151)
  def _reduce_11(val, _values, result)
                        result = val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 156)
  def _reduce_12(val, _values, result)
                        result = val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 161)
  def _reduce_13(val, _values, result)
                        result = []
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 165)
  def _reduce_14(val, _values, result)
                        result = [val[0]]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 169)
  def _reduce_15(val, _values, result)
                        result = val[0] + [val[2]]
		              
    result
  end
.,.,

# reduce 16 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 175)
  def _reduce_17(val, _values, result)
                        self.lex_state = :EXPR_FNAME
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 180)
  def _reduce_18(val, _values, result)
                      
    result
  end
.,.,

# reduce 19 omitted

# reduce 20 omitted

# reduce 21 omitted

# reduce 22 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 187)
  def _reduce_23(val, _values, result)
                		    result = node :if_mod, :stmt => val[0], :expr => val[2]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 191)
  def _reduce_24(val, _values, result)
                		    result = node :unless_mod, :stmt => val[0], :expr => val[2]
            		  
    result
  end
.,.,

# reduce 25 omitted

# reduce 26 omitted

# reduce 27 omitted

# reduce 28 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 199)
  def _reduce_29(val, _values, result)
                		    result = node :assign, :lhs => val[0], :rhs => val[2]
            		  
    result
  end
.,.,

# reduce 30 omitted

# reduce 31 omitted

# reduce 32 omitted

# reduce 33 omitted

# reduce 34 omitted

# reduce 35 omitted

# reduce 36 omitted

# reduce 37 omitted

# reduce 38 omitted

# reduce 39 omitted

# reduce 40 omitted

# reduce 41 omitted

# reduce 42 omitted

# reduce 43 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 218)
  def _reduce_44(val, _values, result)
                  	    result = node :not, :expr => val[2]
              	  
    result
  end
.,.,

# reduce 45 omitted

# reduce 46 omitted

# reduce 47 omitted

# reduce 48 omitted

# reduce 49 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 229)
  def _reduce_50(val, _values, result)
                  	    result = node :return, :call_args => val[1]
              	  
    result
  end
.,.,

# reduce 51 omitted

# reduce 52 omitted

# reduce 53 omitted

# reduce 54 omitted

# reduce 55 omitted

# reduce 56 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 242)
  def _reduce_57(val, _values, result)
                        # command call - no brackets/recv
          		      result = node :call, :recv => nil, :meth => val[0], :call_args => val[1]
                  
    result
  end
.,.,

# reduce 58 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 248)
  def _reduce_59(val, _values, result)
              		      result = node :call, :recv => val[0], :meth => val[2], :call_args => val[3]
                  
    result
  end
.,.,

# reduce 60 omitted

# reduce 61 omitted

# reduce 62 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 255)
  def _reduce_63(val, _values, result)
          		          result = node :super, :call_args => val[1]
      		        
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 259)
  def _reduce_64(val, _values, result)
            	          result = node :yield, :call_args => val[1]
        	        
    result
  end
.,.,

# reduce 65 omitted

# reduce 66 omitted

# reduce 67 omitted

# reduce 68 omitted

# reduce 69 omitted

# reduce 70 omitted

# reduce 71 omitted

# reduce 72 omitted

# reduce 73 omitted

# reduce 74 omitted

# reduce 75 omitted

# reduce 76 omitted

# reduce 77 omitted

# reduce 78 omitted

# reduce 79 omitted

# reduce 80 omitted

# reduce 81 omitted

# reduce 82 omitted

# reduce 83 omitted

# reduce 84 omitted

# reduce 85 omitted

# reduce 86 omitted

# reduce 87 omitted

# reduce 88 omitted

# reduce 89 omitted

# reduce 90 omitted

# reduce 91 omitted

# reduce 92 omitted

# reduce 93 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 300)
  def _reduce_94(val, _values, result)
    		                result = node :call, :recv => val[0], :meth => '[]', :args => val[2]
		              
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 304)
  def _reduce_95(val, _values, result)
              		      result = node :call, :recv => val[0], :meth => val[2]
                  
    result
  end
.,.,

# reduce 96 omitted

# reduce 97 omitted

# reduce 98 omitted

# reduce 99 omitted

# reduce 100 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 314)
  def _reduce_101(val, _values, result)
                        puts 'ERROR: cant use identifier for class/mod name'
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 318)
  def _reduce_102(val, _values, result)
                		    result = val[0]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 324)
  def _reduce_103(val, _values, result)
                      
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 327)
  def _reduce_104(val, _values, result)
      	                result = node :path, :cname => val[0]
  	              
    result
  end
.,.,

# reduce 105 omitted

# reduce 106 omitted

# reduce 107 omitted

# reduce 108 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 336)
  def _reduce_109(val, _values, result)
    		                self.lex_state = :EXPR_END
		                result = val[0]
		              
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 341)
  def _reduce_110(val, _values, result)
    		                self.lex_state = :EXPR_END
		                result = val[0]
		              
    result
  end
.,.,

# reduce 111 omitted

# reduce 112 omitted

# reduce 113 omitted

# reduce 114 omitted

# reduce 115 omitted

# reduce 116 omitted

# reduce 117 omitted

# reduce 118 omitted

# reduce 119 omitted

# reduce 120 omitted

# reduce 121 omitted

# reduce 122 omitted

# reduce 123 omitted

# reduce 124 omitted

# reduce 125 omitted

# reduce 126 omitted

# reduce 127 omitted

# reduce 128 omitted

# reduce 129 omitted

# reduce 130 omitted

# reduce 131 omitted

# reduce 132 omitted

# reduce 133 omitted

# reduce 134 omitted

# reduce 135 omitted

# reduce 136 omitted

# reduce 137 omitted

# reduce 138 omitted

# reduce 139 omitted

# reduce 140 omitted

# reduce 141 omitted

# reduce 142 omitted

# reduce 143 omitted

# reduce 144 omitted

# reduce 145 omitted

# reduce 146 omitted

# reduce 147 omitted

# reduce 148 omitted

# reduce 149 omitted

# reduce 150 omitted

# reduce 151 omitted

# reduce 152 omitted

# reduce 153 omitted

# reduce 154 omitted

# reduce 155 omitted

# reduce 156 omitted

# reduce 157 omitted

# reduce 158 omitted

# reduce 159 omitted

# reduce 160 omitted

# reduce 161 omitted

# reduce 162 omitted

# reduce 163 omitted

# reduce 164 omitted

# reduce 165 omitted

# reduce 166 omitted

# reduce 167 omitted

# reduce 168 omitted

# reduce 169 omitted

# reduce 170 omitted

# reduce 171 omitted

# reduce 172 omitted

# reduce 173 omitted

# reduce 174 omitted

# reduce 175 omitted

# reduce 176 omitted

# reduce 177 omitted

# reduce 178 omitted

# reduce 179 omitted

# reduce 180 omitted

# reduce 181 omitted

# reduce 182 omitted

# reduce 183 omitted

# reduce 184 omitted

# reduce 185 omitted

# reduce 186 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 377)
  def _reduce_187(val, _values, result)
                        result = node :assign, :lhs => val[0], :rhs => val[2]
                  
    result
  end
.,.,

# reduce 188 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 382)
  def _reduce_189(val, _values, result)
                		    result = node :op_asgn, :lhs => val[0], :op => val[1], :rhs => val[2]
            		  
    result
  end
.,.,

# reduce 190 omitted

# reduce 191 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 388)
  def _reduce_192(val, _values, result)
                		    result = node :op_asgn, :lhs => node(:call, :recv => val[0], :meth => val[2]), :op => val[3], :rhs => val[4]
                    # result = node :dot_identifier_op_asgn, :lhs => node(:call, :recv => val[0], :meth => val[2]), :op => val[3], :rhs => val[4]
            		  
    result
  end
.,.,

# reduce 193 omitted

# reduce 194 omitted

# reduce 195 omitted

# reduce 196 omitted

# reduce 197 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 398)
  def _reduce_198(val, _values, result)
                		    result = node :dot2, :start => val[0], :ending => val[2]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 402)
  def _reduce_199(val, _values, result)
                		    result = node :dot3, :start => val[0], :ending => val[2]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 406)
  def _reduce_200(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '+', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 410)
  def _reduce_201(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '-', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 414)
  def _reduce_202(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '*', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 418)
  def _reduce_203(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '/', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 422)
  def _reduce_204(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '%', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 426)
  def _reduce_205(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '**', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

# reduce 206 omitted

# reduce 207 omitted

# reduce 208 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 433)
  def _reduce_209(val, _values, result)
                		    result = node :call, :recv => val[1], :meth => '-@', :call_args => { :args => []}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 437)
  def _reduce_210(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '|', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 441)
  def _reduce_211(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '^', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 445)
  def _reduce_212(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '&', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 449)
  def _reduce_213(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '<=>', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 453)
  def _reduce_214(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '>', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 457)
  def _reduce_215(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '>=', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 461)
  def _reduce_216(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '<', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 465)
  def _reduce_217(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '<=', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 469)
  def _reduce_218(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '==', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 473)
  def _reduce_219(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '===', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 477)
  def _reduce_220(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '!=', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 481)
  def _reduce_221(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '=~', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 485)
  def _reduce_222(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '!~', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 489)
  def _reduce_223(val, _values, result)
                  	    result = node :not, :expr => val[1]
              	  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 493)
  def _reduce_224(val, _values, result)
                		    result = node :call, :recv => val[1], :meth => '~', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 497)
  def _reduce_225(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '<<', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 501)
  def _reduce_226(val, _values, result)
                		    result = node :call, :recv => val[0], :meth => '>>', :call_args => { :args => [val[2]]}
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 505)
  def _reduce_227(val, _values, result)
                          # weird? unless break here, it throws an error? hmm...
                      # we must use val[3] then as this counts as one match....
              		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 511)
  def _reduce_228(val, _values, result)
                		    result = node :andop, :lhs => val[0], :rhs => val[3]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 515)
  def _reduce_229(val, _values, result)
                        # weird? unless break here, it throws an error? hmm...
                    # we must use val[3] then as this counts as one match....
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 521)
  def _reduce_230(val, _values, result)
                		    result = node :orop, :lhs => val[0], :rhs => val[3]
            		  
    result
  end
.,.,

# reduce 231 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 526)
  def _reduce_232(val, _values, result)
                		    result = node :tertiary, :expr => val[0], :true => val[2], :false => val[5]
            		  
    result
  end
.,.,

# reduce 233 omitted

# reduce 234 omitted

# reduce 235 omitted

# reduce 236 omitted

# reduce 237 omitted

# reduce 238 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 539)
  def _reduce_239(val, _values, result)
                        result = val[1]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 544)
  def _reduce_240(val, _values, result)
                        result = node :call_args, :args => nil
                  
    result
  end
.,.,

# reduce 241 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 550)
  def _reduce_242(val, _values, result)
                        result = node :call_args, :args => nil
                  
    result
  end
.,.,

# reduce 243 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 556)
  def _reduce_244(val, _values, result)
                		    result = node :call_args, :args => [val[0]]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 560)
  def _reduce_245(val, _values, result)
                		    result = node :call_args, :args => val[0], :block_arg => val[1]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 564)
  def _reduce_246(val, _values, result)
                		    result = node :call_args, :assocs => val[0], :block_arg => val[1]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 568)
  def _reduce_247(val, _values, result)
                		    result = node :call_args, :args => val[0], :assocs => val[2], :block_arg => val[3]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 572)
  def _reduce_248(val, _values, result)
                		    result = node :call_args, :block_arg => val[0]
            		  
    result
  end
.,.,

# reduce 249 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 579)
  def _reduce_250(val, _values, result)
                        result = self.node :block_arg, :arg => val[1]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 584)
  def _reduce_251(val, _values, result)
                        resul = val[1]
                  
    result
  end
.,.,

# reduce 252 omitted

# reduce 253 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 591)
  def _reduce_254(val, _values, result)
                        result = [val[0]]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 595)
  def _reduce_255(val, _values, result)
    		                result = [val[1]]
		              
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 599)
  def _reduce_256(val, _values, result)
    		                result = val[0] + [val[2]]
		              
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 603)
  def _reduce_257(val, _values, result)
    		                result = val[0] + [val[3]]
		              
    result
  end
.,.,

# reduce 258 omitted

# reduce 259 omitted

# reduce 260 omitted

# reduce 261 omitted

# reduce 262 omitted

# reduce 263 omitted

# reduce 264 omitted

# reduce 265 omitted

# reduce 266 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 618)
  def _reduce_267(val, _values, result)
                        # HACK: this rule shouldnt even exist. But for now it must for "identifier do .. end"
  	                result = node :call, :recv => nil, :meth => val[0][:name], :brace_block => val[1]
  	              
    result
  end
.,.,

# reduce 268 omitted

# reduce 269 omitted

# reduce 270 omitted

# reduce 271 omitted

# reduce 272 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 628)
  def _reduce_273(val, _values, result)
                		    result = node :lparen, :stmt => val[1]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 632)
  def _reduce_274(val, _values, result)
                		    result = node :colon2, :lhs => val[0], :rhs => val[2]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 636)
  def _reduce_275(val, _values, result)
                		    result = node :colon3, :rhs => val[1]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 640)
  def _reduce_276(val, _values, result)
                		    result = node :array, :args => val[1]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 644)
  def _reduce_277(val, _values, result)
                		    result = node :assoc_list, :list => val[1]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 648)
  def _reduce_278(val, _values, result)
                		    result = node :return
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 652)
  def _reduce_279(val, _values, result)
            	          result = node :yield, :call_args => val[2]
        	        
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 656)
  def _reduce_280(val, _values, result)
            	          result = node :yield
        	        
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 660)
  def _reduce_281(val, _values, result)
            	          result = node :yield
        	        
    result
  end
.,.,

# reduce 282 omitted

# reduce 283 omitted

# reduce 284 omitted

# reduce 285 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 668)
  def _reduce_286(val, _values, result)
                		    # puts 2
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 672)
  def _reduce_287(val, _values, result)
                		    val[0][:brace_block] = val[1]
            		    result = val[0]
            		  
    result
  end
.,.,

# reduce 288 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 678)
  def _reduce_289(val, _values, result)
                		    result = self.node :if, :expr => val[1], :stmt => val[3], :tail => val[4]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 682)
  def _reduce_290(val, _values, result)
                		    result = self.node :unless, :expr => val[1], :stmt => val[3], :tail => val[4]
            		  
    result
  end
.,.,

# reduce 291 omitted

# reduce 292 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 688)
  def _reduce_293(val, _values, result)
                		    result = node :case, :expr => val[1], :body => val[3]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 692)
  def _reduce_294(val, _values, result)
                		    result = node :case, :expr => nil, :body => val[2]
            		  
    result
  end
.,.,

# reduce 295 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 697)
  def _reduce_296(val, _values, result)
                		    result = self.node_class(:cpath => val[1], :superclass => val[2], :bodystmt => val[3])
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 701)
  def _reduce_297(val, _values, result)
                		    result = node :class_shift, :expr => val[2], :bodystmt => val[4]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 705)
  def _reduce_298(val, _values, result)
                		    result = self.node_module(:cpath => val[1], :body => val[2])
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 709)
  def _reduce_299(val, _values, result)
                		    result = self.node :def, :fname => val[1], :arglist => val[2], :bodystmt => val[3]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 713)
  def _reduce_300(val, _values, result)
                		    result = self.node :def, :singleton => val[1], :fname => val[3], :arglist => val[4], :bodystmt => val[5]
            		  
    result
  end
.,.,

# reduce 301 omitted

# reduce 302 omitted

# reduce 303 omitted

# reduce 304 omitted

# reduce 305 omitted

# reduce 306 omitted

# reduce 307 omitted

# reduce 308 omitted

# reduce 309 omitted

# reduce 310 omitted

# reduce 311 omitted

# reduce 312 omitted

# reduce 313 omitted

# reduce 314 omitted

# reduce 315 omitted

# reduce 316 omitted

# reduce 317 omitted

# reduce 318 omitted

# reduce 319 omitted

# reduce 320 omitted

# reduce 321 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 753)
  def _reduce_322(val, _values, result)
                        result = val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 757)
  def _reduce_323(val, _values, result)
                  	    result = [self.node(:elsif, :expr => val[1], :stmt => val[3])] + val[4]
              	  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 762)
  def _reduce_324(val, _values, result)
                        result = []
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 766)
  def _reduce_325(val, _values, result)
                  	    result = [self.node(:else, :stmt => val[1])]
              	  
    result
  end
.,.,

# reduce 326 omitted

# reduce 327 omitted

# reduce 328 omitted

# reduce 329 omitted

# reduce 330 omitted

# reduce 331 omitted

# reduce 332 omitted

# reduce 333 omitted

# reduce 334 omitted

# reduce 335 omitted

# reduce 336 omitted

# reduce 337 omitted

# reduce 338 omitted

# reduce 339 omitted

# reduce 340 omitted

# reduce 341 omitted

# reduce 342 omitted

# reduce 343 omitted

# reduce 344 omitted

# reduce 345 omitted

# reduce 346 omitted

# reduce 347 omitted

# reduce 348 omitted

# reduce 349 omitted

# reduce 350 omitted

# reduce 351 omitted

# reduce 352 omitted

# reduce 353 omitted

# reduce 354 omitted

# reduce 355 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 806)
  def _reduce_356(val, _values, result)
                        result = nil
                  
    result
  end
.,.,

# reduce 357 omitted

# reduce 358 omitted

# reduce 359 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 814)
  def _reduce_360(val, _values, result)
                		    result = val[1]
            		  
    result
  end
.,.,

# reduce 361 omitted

# reduce 362 omitted

# reduce 363 omitted

# reduce 364 omitted

# reduce 365 omitted

# reduce 366 omitted

# reduce 367 omitted

# reduce 368 omitted

# reduce 369 omitted

# reduce 370 omitted

# reduce 371 omitted

# reduce 372 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 837)
  def _reduce_373(val, _values, result)
                        result = node :brace_block, :params => val[1], :stmt => val[2]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 842)
  def _reduce_374(val, _values, result)
                        val[0][:brace_block] = val[1]
                    result = val[0]
                  
    result
  end
.,.,

# reduce 375 omitted

# reduce 376 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 850)
  def _reduce_377(val, _values, result)
                        result = node :call, :recv => nil, :meth => val[0], :call_args => val[1]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 854)
  def _reduce_378(val, _values, result)
                        result = node :call, :recv => val[0], :meth => val[2], :call_args => val[3]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 858)
  def _reduce_379(val, _values, result)
                  	    result = node :tCOLON2call, :recv => val[0], :meth => val[2], :args => val[3]
              	    puts "tCOLON2call"
              	  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 863)
  def _reduce_380(val, _values, result)
                  	    result = node :tCOLON2call, :recv => val[0], :meth => val[2]
              	    puts "tCOLON2call.noargs."
              	  
    result
  end
.,.,

# reduce 381 omitted

# reduce 382 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 870)
  def _reduce_383(val, _values, result)
                		    result = node :super, :call_args => val[1]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 874)
  def _reduce_384(val, _values, result)
                		    result = node :super, :call_args => nil
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 878)
  def _reduce_385(val, _values, result)
                        result = node :call, :recv => val[0], :meth => '[]', :call_args => val[2]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 884)
  def _reduce_386(val, _values, result)
                		    result = node :brace_block, :params => val[1], :stmt => val[2]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 888)
  def _reduce_387(val, _values, result)
                		    result = node :brace_block, :params => val[1], :stmt => val[2]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 893)
  def _reduce_388(val, _values, result)
                        result = [node(:when, :args => val[1], :stmt => val[3])] + val[4]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 898)
  def _reduce_389(val, _values, result)
                        result = val[0]
                  
    result
  end
.,.,

# reduce 390 omitted

# reduce 391 omitted

# reduce 392 omitted

# reduce 393 omitted

# reduce 394 omitted

# reduce 395 omitted

# reduce 396 omitted

# reduce 397 omitted

# reduce 398 omitted

# reduce 399 omitted

# reduce 400 omitted

# reduce 401 omitted

# reduce 402 omitted

# reduce 403 omitted

# reduce 404 omitted

# reduce 405 omitted

# reduce 406 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 927)
  def _reduce_407(val, _values, result)
                        result = node :string, :value => val[1], :beg => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 932)
  def _reduce_408(val, _values, result)
                        result = node :xstring, :value => val[1]
                  
    result
  end
.,.,

# reduce 409 omitted

# reduce 410 omitted

# reduce 411 omitted

# reduce 412 omitted

# reduce 413 omitted

# reduce 414 omitted

# reduce 415 omitted

# reduce 416 omitted

# reduce 417 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 951)
  def _reduce_418(val, _values, result)
                        # none..
                    result = []
                  
    result
  end
.,.,

# reduce 419 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 958)
  def _reduce_420(val, _values, result)
                        # none..
                    result = []
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 963)
  def _reduce_421(val, _values, result)
                		    result = val[0] + [val[1]]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 968)
  def _reduce_422(val, _values, result)
                        # none..
                    result = []
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 973)
  def _reduce_423(val, _values, result)
                		    result = val[0] + [val[1]]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 978)
  def _reduce_424(val, _values, result)
                        result = node :string_content, :value => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 982)
  def _reduce_425(val, _values, result)
                        result = node :string_dvar, :value => val[1]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 986)
  def _reduce_426(val, _values, result)
                        result = node :string_dbeg, :value => val[1]
                  
    result
  end
.,.,

# reduce 427 omitted

# reduce 428 omitted

# reduce 429 omitted

# reduce 430 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 996)
  def _reduce_431(val, _values, result)
                        result = node :symbol, :name => val[1]
                  
    result
  end
.,.,

# reduce 432 omitted

# reduce 433 omitted

# reduce 434 omitted

# reduce 435 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1006)
  def _reduce_436(val, _values, result)
                        result = node :dsym, :contents => val[1]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1011)
  def _reduce_437(val, _values, result)
                        result = node :numeric, :value => val[0], :float => false
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1015)
  def _reduce_438(val, _values, result)
                        result = node :numeric, :value => val[0], :float => true
                  
    result
  end
.,.,

# reduce 439 omitted

# reduce 440 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1023)
  def _reduce_441(val, _values, result)
                        result = node :identifier, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1027)
  def _reduce_442(val, _values, result)
                        result = node :ivar, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1031)
  def _reduce_443(val, _values, result)
                        result = node :gvar, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1035)
  def _reduce_444(val, _values, result)
                        result = node :constant, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1039)
  def _reduce_445(val, _values, result)
                        result = node :cvar, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1043)
  def _reduce_446(val, _values, result)
                        result = node :nil, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1047)
  def _reduce_447(val, _values, result)
                        result = node :self, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1051)
  def _reduce_448(val, _values, result)
                        result = node :true, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1055)
  def _reduce_449(val, _values, result)
                        result = node :false, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1059)
  def _reduce_450(val, _values, result)
                        result = node :__FILE__, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1063)
  def _reduce_451(val, _values, result)
                        result = node :__LINE__, :name => val[0]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1067)
  def _reduce_452(val, _values, result)
                        result = node :__ENCODING__, :name => val[0]
                  
    result
  end
.,.,

# reduce 453 omitted

# reduce 454 omitted

# reduce 455 omitted

# reduce 456 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1079)
  def _reduce_457(val, _values, result)
                        result = nil
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1083)
  def _reduce_458(val, _values, result)
                		    result = node :superclass, :expr => val[1]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1085)
  def _reduce_459(val, _values, result)
     puts 'OMFG' 
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1089)
  def _reduce_460(val, _values, result)
                        result = val[1]
                    self.lex_state = :EXPR_BEG
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1094)
  def _reduce_461(val, _values, result)
                        result = val[0]
                    self.lex_state = :EXPR_BEG
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1100)
  def _reduce_462(val, _values, result)
                 		    result = node :arg, :arg => val[0], :optarg => val[2], :rest_arg => val[4], :opt_block_arg => val[5]
             		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1104)
  def _reduce_463(val, _values, result)
                 		    result = node :arg, :arg => val[0], :optarg => val[2], :rest_arg => val[4], :arg2 => val[6], :opt_block_arg => val[7]
             		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1108)
  def _reduce_464(val, _values, result)
                  	    result = node :arg, :arg => val[0], :optarg => val[2], :opt_block_arg => val[3]
              	  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1112)
  def _reduce_465(val, _values, result)
                  	    result = node :arg, :arg => val[0], :optarg => val[2], :arg2 => val[4], :opt_block_arg => val[5]
              	  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1116)
  def _reduce_466(val, _values, result)
                		    result = node :arg, :arg => val[0], :rest_arg => val[2], :opt_block_arg => val[3]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1120)
  def _reduce_467(val, _values, result)
                		    result = node :arg, :arg => val[0], :rest_arg => val[2], :arg2 => val[4], :opt_block_arg => val[5]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1124)
  def _reduce_468(val, _values, result)
                 		    result = node :arg, :arg => val[0], :opt_block_arg => val[1]
             		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1128)
  def _reduce_469(val, _values, result)
                		    result = node :optarg, :optarg => val[0], :rest_arg => val[2], :opt_block_arg => val[3]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1132)
  def _reduce_470(val, _values, result)
                		    result = node :optarg, :optarg => val[0], :rest_arg => val[2], :arg => val[4], :opt_block_arg => val[5]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1136)
  def _reduce_471(val, _values, result)
                 		    result = node :optarg, :optarg => val[0], :opt_block_arg => val[1]
             		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1140)
  def _reduce_472(val, _values, result)
                 		    result = node :optarg, :optarg => val[0], :arg => val[2], :opt_block_arg => val[3]
             		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1144)
  def _reduce_473(val, _values, result)
                 		    result = node :rest_arg, :rest_arg => val[0], :opt_block_arg => val[1]
             		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1148)
  def _reduce_474(val, _values, result)
                 		    result = node :rest_arg, :rest_arg => val[0], :arg => val[2], :opt_block_arg => val[3]
             		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1152)
  def _reduce_475(val, _values, result)
                 		    result = node :arg, :opt_block_arg => val[0]
             		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1156)
  def _reduce_476(val, _values, result)
                  	    # none...
              	    result = nil
              	  
    result
  end
.,.,

# reduce 477 omitted

# reduce 478 omitted

# reduce 479 omitted

# reduce 480 omitted

# reduce 481 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1168)
  def _reduce_482(val, _values, result)
                        # result = val[0]
              	    result = node :norm_arg, :value => val[0]
              	  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1174)
  def _reduce_483(val, _values, result)
                      
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1177)
  def _reduce_484(val, _values, result)
                        result = node :label_arg, :name => val[0], :value => val[1]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1182)
  def _reduce_485(val, _values, result)
                        result = val[0]
                  
    result
  end
.,.,

# reduce 486 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1188)
  def _reduce_487(val, _values, result)
                        result = [val[0]]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1192)
  def _reduce_488(val, _values, result)
                        # val[0] + val[2]
                    result = val[0] + [val[2]]
            		  
    result
  end
.,.,

# reduce 489 omitted

# reduce 490 omitted

# reduce 491 omitted

# reduce 492 omitted

# reduce 493 omitted

# reduce 494 omitted

# reduce 495 omitted

# reduce 496 omitted

# reduce 497 omitted

# reduce 498 omitted

# reduce 499 omitted

# reduce 500 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1217)
  def _reduce_501(val, _values, result)
                        result = val[1]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1221)
  def _reduce_502(val, _values, result)
                        result = node :label_arg, :name => val[0], :value => val[1]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1226)
  def _reduce_503(val, _values, result)
                        result = val[1]
                  
    result
  end
.,.,

# reduce 504 omitted

# reduce 505 omitted

# reduce 506 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1235)
  def _reduce_507(val, _values, result)
                        result = []
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1239)
  def _reduce_508(val, _values, result)
                  	    result = val[0]
              	  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1244)
  def _reduce_509(val, _values, result)
                        result = [val[0]]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1248)
  def _reduce_510(val, _values, result)
                		    result = val[0] + [val[2]]
            		  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1253)
  def _reduce_511(val, _values, result)
                        result = node :assoc, :key => val[0], :value => val[2]
                  
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1257)
  def _reduce_512(val, _values, result)
                        result = node :label_assoc, :key => val[0], :value => val[1]
                  
    result
  end
.,.,

# reduce 513 omitted

# reduce 514 omitted

# reduce 515 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1267)
  def _reduce_516(val, _values, result)
                      
    result
  end
.,.,

# reduce 517 omitted

# reduce 518 omitted

# reduce 519 omitted

module_eval(<<'.,.,', 'ruby_parser.rb.y', 1274)
  def _reduce_520(val, _values, result)
                        puts 4
                  
    result
  end
.,.,

# reduce 521 omitted

# reduce 522 omitted

# reduce 523 omitted

# reduce 524 omitted

# reduce 525 omitted

# reduce 526 omitted

# reduce 527 omitted

# reduce 528 omitted

# reduce 529 omitted

# reduce 530 omitted

# reduce 531 omitted

# reduce 532 omitted

# reduce 533 omitted

# reduce 534 omitted

# reduce 535 omitted

# reduce 536 omitted

# reduce 537 omitted

# reduce 538 omitted

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class RubyParser
  end   # module Vienna


