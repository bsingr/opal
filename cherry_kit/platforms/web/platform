/* 
 * platform.js
 * cherry_kit
 * 
 * Created by Adam Beynon.
 * Copyright 2010 Adam Beynon.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

// var ck_cPlatform = nil;
// 
// 
// /**
//   browser?
//   
//   Returns true to indicate that this platform is the browser.
// */
// function ck_platform_s_browser_p(cls) {
//   return true;
// };
// 
// /**
//   boot!
//   
//   Only call once! This is called to boot the current platform.
// */
// function ck_platform_s_boot_bang(cls) {
//   console.log("Booting platform!");
//   // if booted, don't do it again
//   if (rb_ivar_get(cls, '@booted') == true) return nil;
//   // else, boot:
//   rb_ivar_set(cls, '@booted', true);
//   ck_oSharedPlatformWindow = rb_funcall(ck_cPlatformWindow, "new", 0);
//   
//   return nil;
// };
// 
// // This will not be called by inits, so load it automatically ourself.
// (function Init_CKPlatform() {
//   // Get/create CherryKit module, then define Platform class underneath
//   var mCK = rb_define_module('CherryKit');
//   ck_cPlatform = rb_define_class_under(mCK, "Platform", rb_cObject);
//   
//   rb_define_singleton_method(ck_cPlatform, "browser?", ck_platform_s_browser_p, 0);
//   rb_define_singleton_method(ck_cPlatform, "boot!", ck_platform_s_boot_bang, 0);
//   
// })();
